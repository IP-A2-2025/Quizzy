***************Beginning Page***************
***************page number:1**************
(1. Groitor rr . Graph >\lgorithms (1. (1roirorrr . Graph >\lgorirhms (1. (1roirorrr . Graph .'\lgorirhms
(.1. (.‘roitorrr - Graph Algorirhrrrs il‘ (.1. (.1roirorrr - Graph Algor ithms (.1. (.1r0itor tr - Graph
Algorithms (1. (1roirorrr - Graph Algorithms ’ (11. (Yroitorrr . Graph Algorithms (1. (".roirorrr -
Graph Algorithrris “ (.1. (froitorrr - Graph \lgorirhrrrs' (.1. (.1roirorrr — Graph Algorithrris :1‘ (.1. (froitorrr
Graph >\lgorithms (1. (1roirorrr . Graph Algor irhms ‘ (1. Groiror rr . Graph >\lgorirhms (1. (1roirorrr
- Graph Algorithms (.1. (.1roitorrr - Graph Algorithrrrs sl‘ (.1. (.1roirorrr - Graph Algorithms (.1.
('Iroiroru - Graph Algorithms (1'. (1roirorrr . Graph .-\lgorithms (1. (1roitoru - Graph Algorithms‘ Z‘:
(.1. (.froitortr - Graph Algorithrris “ (.1. (.1roitorrr - Graph \lgorirhrrrs' (.1. (.froirorrr — Graph Algorithrris
(1. (1roitorrr - Graph Algorithms Z" (I. (,roirorrr - Graph Algorithms (1. (1roitorrr - Graph
Algorithms “ (.. (“rioirorrr . Graph (@oplrgpaéﬁﬁjﬂgir2gzéiraph \‘lgorithms (.. (“roirorrr . .
Graph Algorithms (i. (.rorrorrr - ( trap 1i gorrt rms “ (.. .rorrorrr - Graph Algorithms (i. (.rorrorrr
. Graph \lgor'ithms (1. ('Ir'oitorrr . Graph .\lgor irhms l (1. (1|oiror tr . Graph ‘\lgor ithms (1.
(froiroru ~ Graph Algorithms (.Q. (Qr'oiror'rr ~ Graph Algorithms (.1. (.froitoru ~ Graph Algorithms 2*
(1. ('Iroitor rr . Graph >\lgorithms (1. (1roirorrr . Graph Algor irhms (1. Groitor rr . Graph >\lgorithms
(.1. (froitor'rr - Graph Algoritlrrrrs *1 (.1. (.1roirorrr - Graph Algor ithms (.1. (.1r0itor tr - (.lraplr
>\lgorithms (1. (Iroirorrr - Graph .'\lgorirhms ’ (1. Groirorrr . Graph >\lgorithms (1. ("Iroirorrr -
Graph Algorithrris “ (.1. (.1roitorrr - Graph \lgrirrirhrrrs' (.1. (.Irririrorrr — Graph Algorithrrrs “ (.1. (froitorrr
. Graph Algorithms (1. (1roitorrr - Graph Algorithms Z" (I. (1roitorrr . Graph Algorithms
—

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
a Fluxuri in retele
o Preﬁuxuri
0 Schema generalé a unui algoritm de tip preﬁux
0 Algoritmul lui Ahuja & Orlin
o Aplica'gii combinatoriale
0 Cuplaje in grafuri bipartite
0 Recunoa§terea secventgelor digraﬁce
0 Conexiunea pe muchii
0 Conexiunea pe noduri
a Exercigii pentru seminarul din séptéména viitoare
—

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Un preﬂux in R : (G, s, t, c) este o func'gie :n : E(G) —> R astfel incét
(i) 0 § 1131]‘ § CZ'J', Vij E E;

(ii) W755, 61-: iji- 21121520.

ﬂGE QEE
ez- (pentru 'L' E V \ {s, t}) este numit excesul din nodul i. Dacé 'L' E
V \ {5, t} §i e1- > 0, atunci 1} este un nod activ. Dacﬁ ij G E, 1% va ﬁ
numit ﬂuxul de pe arcul ij.
Dacé in R nu existé noduri active, atunci preﬁuxul :r este un flux cu
11(12) : et.
Ideea algoritmilor de tip preﬁux: un preﬂux initial in R este transformat
prin modiﬁcarea ﬂuxurilor de pe arce intr-un ﬂux cu proprietatea cé nu
existé drumuri de cre§tere in R relativ 1a e1.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
G este reprezentat folosind liste de adiacengé. Vom presupune cé dacé
ij E E, atunci ji E E de asemeni (altfel, adéugém arcul jz' de capacitate
0). Astfel, G devine digraf simetric.
Dacé a: este un preﬂux in R §i ij G E, atunci capacitatea rezidualﬁ a lui
ij este
Tij I cij — 5%‘ + 9%
(reprezenténd ﬂuxul suplimentar care poate ﬁ trimis de 1a nodul i 1a
nodul j folosind arcele '1lj §i ji).
c, ,1” cud” +furw
1:87‘ SQUer:f0T7U+brl(‘kU‘ 7:0.
onal'c ij
§ 011,30” g § (2],.1], i back“: é
(a, P11 (a, i (1 ".7 + '1
—

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
in cele de urmeazé, a trimite ﬂux de 1a i 1a j inseamné cre§terea ﬂuxului
pe arcul ij sau scéderea ﬂuxului pe arcul ji.
Un A-drum in R relativ 1a preﬁuxul :23, este un drum in G avénd toate
arcele de capacitate rezidualé strict pozitivé.
O functie distanté in R relativ 1a preﬁuxul w este o func'gie d : V —> Z+
a. i.

(D1) d“) I 0,

(D2) Vij E E,n-j > 0 :> d(z) g d(j) + 1.

o Dacé P este un A-drum relativ la preﬂuxul w in R de 1a i 1a t, atunci
d(z') g length(P) (arcele lui P au capacitii'gi reziduale pozitive §i
apoi se aplicél (D2) in mod repetat). Urmeazé cé (T1- este lungimea
minimii a unui A-drum de 1a 2' 1a t): d(z') g Ti.

—

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Preﬂuxuri
Remarci

o Ca de obicei, notém cu AU) lista de adiacenté a nodului i. I

d<j>
01(5) d0) +1 do) *1 0
it
Deﬁnitie
Fie x un preﬂux in R §1' d o func§ie distanpi relativ 1a as. U11 arc ij E E
este numit admisibil dacé’ .
Algoritmica Grafurilor - Cursul 9 9 decembrie 2022 6/47

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Dacé R este o retea, considerém urmétoarea proceduré de initializare,
care construiegte in (9(m) un preﬂux ac §i o func'gie distan'géi d relativ 1a
:z:.
procedure initializationO;
for ('ij G E) do
if (2' : s) then
{Esj <- Csj
else
mij (— O;
d[s] P n; d[t] <— 0;
for (z' 6 V — \{s, t}) do
d['1,] k l;
—

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Se observi c5 dupé execu'gia acestei proceduri, avem rsj I O, Vsj G A(s).
Astfel conditia (D2) nu este not afectaté de d(s) : n.
Pentru toate arcele ij, (D2) este indeplinitﬁ:
d(s) : n d(j) : 1 d(t) : O
Tsj I j 7"]‘1; > 0
1 I am : d(t) + 1
s t
j
7:75 > 0
1 =d(.7') <n+1:d(s)+
—

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Alegerea d(s) I n are semniﬁca'gia: nu existé A-drumuri de 1a s 1a t
relativ 1a a: (altfel, dacé P este un astfel de drum, lungimea lui trebuie
sé ﬁe cel pu'gin d(s) : n, ceea ce este imposibil).
Dacé acesta va ﬁ un invariant a1 algoritmilor de tip preﬁux, atunci cénd
:1: va deveni un ﬂux, va ﬁ un ﬂux maxim.
Considerém urmétoarele doué proceduri:

procedure push(2'); // i este un nod diferit de s, t

alege un arc admisibil '1lj G AU);

"trimite" 6 : min{eZ-, 'r'Z-j} (uniti'gi de ﬂux) de 1a z' la j;
Dacé 6 : nj atunci avem o push/pompare saturatii, altfel avem o pom-
pare nesaturaté.

procedure relabel(i); // 1L este un nod diferit de s, t

d[z'] <— min{d[j] + 1 : ij E 14(1) §i nj > O};

—

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
initialization;
While (El noduri active in R) do
alege un nod activ 1L;
if (El arce admisibile in A(1,)) then
pushh');
else
relabel(i);
"d este functie distanta relativ 1a preﬁuxul :B" este un invariant a1 algo-
ritmului de mai sus. La ﬁecare apel relabel(i), d(z) cre§te.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Demonstratie. Am demonstrat deja c5 procedura de initializare constru-
ie§te un preﬁux a: §i 0 functie distan'gé d relativ 1a ac. Arétém c5 dacé
perechea (d, x) satisface (D1) §i (D2) inaintea unei iteragii While, atunci
dupé aceasté iteratie cele doué conditii sunt de asemeni satisfécute.
Avem douél cazuri, in funcgie de care dintre procedurile push sau relabel
este executatéi in itera'gia While curentéi:
este apelaté push(z'): singura pereche care poate viola (D2) este d(i) §i
d(j). Deoarece '1lj este admisibil, 1a apelul push(z') avem d(i) I d(j)+1.
Dupé executia push(z'), arcul ji poate avea rji > O (firé a ﬁ astfel
inaintea apelului), dar condi'gia d(j) é d(1.) + 1 este evident satisfécuté.
este apelaté relabel(i): actualizarea lui d(z) este astfel incét (D2) este
satisfécuté pentru ﬁecare arc ij cu Tij > O. Deoarece relabelﬁ) este
apelaté cénd d(z') < d(j) + 1, Wj cu n-j > 0, urmeazé c5, dupé apel,
d(z') cre§te (cu cel putin 1). U
—

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Pentru a aréta cé algoritmul se 0pre§te, este necesar s5 arétém c5 (in

timpul executiei) dacéi un nod 1L este activ atunci in lista lui de adiacen'gé,

A(z'), existé ce1 putin un arc z'j cu nj > O. Aceasta demonstreazé lema

urméitoare.

Dacé i0 este un m-nod activ in R, atunci existéi un 2'05 A-drum relativ

1a :13.

Demonstratie. Dacé a: este un preﬁux in R, atunci a: poate ﬁ descompus

in a: : x1 + m2 + - - - + mp, unde ﬁecare 32k are proprietatea c5 multimea

A _ {'Lj .1] G E,a:1~j qé O} este

(a) multimea arcelor unui drum de 1a s 1a t, sau

(b) multimea de arce ale unui drum de 1a s 1a un nod activ, sau

(c) multimea arcelor unui circuit.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Mai mult, in cazurile (a) §i (c), :ck este un ﬂux. (Demonstratia este
algoritmicé: construim mai intéi multimile de tipul (a), apoi pe cele de
tipul (c) §i (b); 1a ﬁecare pas, céutém inversul unui drum de tip (a)
sau (c) (sau (b)); preﬂuxul obtinut este scizut din cel curent; deoarece
excesele nodurilor sunt nenegative, constructia poate ﬁ realizaté, ori de
céte ori preﬁuxul curent este nenul; constructia este ﬁnitéi, deoarece
numérul de arce pe care ﬁuxul curent este 0, cre§te 1a ﬁecare pas.)
Deoarece 1'0 este un nod activ in R relativ la m, cazul (b) va aparea
pentru nodul 2'0 (cazurile (a) §i (c) nu afecteazé excesul din nodul 2'0).
Arcele inverse de pe acest drum au capacitatea rezidualé pozitivé (vezi
imaginea de mai jos), astfel ele formeazé A-drumul cerut. D
—

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
r > 0 1' > 0 r > 0 1' > 0

at > 0 z > 0 :v > 0 I > U
V1; E V, d(z') < 2n.
Demonstratgie. Tntr-adevér, dacé 1L nu a fost reetichetat, atunci d(z') :
1 < 2n. Altfel, inaintea apelului relabel(z'), z' este un nod activ, astfel
din Lema 2, existé un is-drum P cu length(P) g n — 1. Din (D2),
urmeazé c5, dupé reetichetare, d(z) é d(s) + n — l = 2n — l (d(s) = n
nu este modiﬁcat vreodaté). U

—

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Preﬂuxuri - Schema generalii a unui algoritm de tip preﬂux
Corolarul 2
relabel

Demonstratiev Tntr-adevér, existé n — 2 noduri care pot ﬁ reetichetate.
Fiecare dintre ele poate ﬁ reetichetat de cel mult 2n — 1 ori (din Lema
1, Corolarul de mai sus §i distanta initialé d). El
Corolarul 3 ‘
Demonstratie. Tntr-adevér, cénd un arc 'L'j devine saturat, avem d(z') :
d( j ) + 1. Dupé aceea, algoritmul nu va mai trimite ﬂux pe acest arc péné
cénd nu va trimite flux pe arcul ji, cénd vom avea d’(j) I d’('£) + 1 2
d(z') + 1 : d(j) + 2.

Algoritmica Grafurilor - Cursul 9 9 decembrie 2022 15/47

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Preﬂuxuri - Schema generalﬁ a unui algoritm de tip preﬂux

Demonstratie (continuare). Astfel o modiﬁcare a acestui ﬂux pe arcul ij

nu va apérea pénéi cénd d(j) nu va cre§te cu 2. Urmeazéi c5 un arc nu

poate deveni saturat de mai mult de n ori §i (deoarece numérul total de

arce este m), nu existéi mai mult de nm pompéiri saturate. l1

Lema 3

(Goldberg §i Tarjan, 1986). Numérul total de pompéri nesaturate nu

este mai mare decét 2n2m.

Demonstratie. Omisé. |

Lema 4

Algoritmul de tip preﬁux returneazi un ﬂux de valoare maximé in R. \
Algoritmica Grafurilor - Cursul 9 9 decembrie 2022 16/47

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Demonstragie. Din Lemele 1 §i 3 §i din Corolarul 3 a1 Lemei 2, algoritmul
se opre§te in cel mult 0(n2m) itera'gii While. Deoarece d(s) : n nu se
modiﬁcé niciodatél, urmeazél cé nu existé vreun drum de cre§tere relativ
1a ﬁuxul a: obtinut, astfel :1: este de valoare maximii: dacé P ar ﬁ un
drum de cregtere (in digraful suport a1 lui G), atunci inlocuind de-a
lungul lui P ﬁecare arc invers cu simetricul séu se obtine un A-drum de
lasla t, decin:d(s)< d(t)+n—1:n—1. U

in locul demonstratiei Lemei 3, vom prezenta Algoritmul lui Ahuja 82;
Orlin (1988) care utilizeazéi 0 metodé de scalare - scaling method pentru
a reduce numérul de pompéri nesaturate de 1a (9(n2m) (Goldberg 85
Tarjan algoritm) 1a (9(17,2 10g U).

—

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Si presupunem c5 cij € N §i U : magﬂl + cij). Fie K : [10g2 U].
116
Ideea algoritmului: Avem K + 1 etape. In ﬁecare etapé p, cu p luénd
succesiv valorile K, K — 1, . . . , 1, O, urméitoarele doué condi'gii sunt in-
deplinite:
(a) 1a inceputul etapei p, ei g 21”, Vi G V \ {5, t}.
(b) in timpul etapei p, procedurile push-relabel sunt folosite pentru a
elimina nodurile active, 2', cu ei G {2P_1 + 1,...2P}.
Din deﬁni'gia lui K , in prima etapé (p : K), conditia (a) este indeplinité,
§i dacé condi'gia (b) va ﬁ men§inut5 de-a lungul executiei algoritmului,
dupéi K + 1 etape, dacé se men'gine integralitatea exceselor de-a lungul
algoritmului, atunci urmeazé 05, dupii etapa K + 1, excesul ﬁecéirui nod
7L E V \ {5, t} este 0, deci avem un ﬂux de valoare maximé.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Pentru a mengine (b) de-a lungul execugiei algoritmului, schema generalé
a unui algoritm de tip preﬂux este adaptaté dupii cum urmeazé:

o ﬁecare etapé p incepe prin construirea listei L(p) a tuturor
nodurilorz'l, i2, . . . , 74(1)) cu excese ez- > 2P_1, ordonate crescﬁtor
dupé d (aceasta poate ﬁ fécuté cu hash-sorting in timpul 0(n),
deoarece d(i) E {1,2, . . . , 2n — 1}).

o nodul activ selectat pentru push-relabel in timpul etapei p va ﬁ
primul nod din L( p). Urmeazé (:5, dacé se face o pompare (push) pe
un arc admisibil ij, atunci e,- > 21”l §i ej g 23”1 (deoarece d(j) :
d(z') — 1 §i 1L este primul nod din L(p)). Dacé 6, ﬁuxul trimis de 1a 2'
laj de citre apelul push(z'), este limitat la 6 : min (ei, 127,21’ — ej),
atunci (deoarece 2P — ej Z 2P_1) urmeazé c5 o pompare nesaturaté
trimite cel pu'gin 21"_l unité'gi de ﬂux.

—

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Dupa apelul pushﬁ) excesul din nodul j (singurul pentru care ex-
cesul poate cre§te) va ﬁ ej +min (ei, rZ-j, 2p — ej) g ej+21n — ej g 2p,
deci conditia (b) ramane indeplinita.

0 etapa p este incheiata cand lista L(p) devine Vida.

Pentru a determina in mod eﬁcient un arc admisibil pentru o pompare
(push), sau pentru a inspecta toate arcele care parasesc un nod z' in
vederea reetichetarii (relabel), vom organiza listele de adiacen'ga 14(1)
dupé cum urmeaza:

a ﬁecare element din lista con'gine: nodul j, sci-j, rij, un pointer catre e1-
ementul corespunzator lui 1Q din lista de adiacenta A(j) §i un pointer
catre urmatorul element din lista AU).

0 lista are asociat un iterator pentru a-i inlesni parcurgerea.

Toate aceste liste sunt construite in O(m), inaintea apelului procedurii
initialization.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
initialization; K <— [10g2 U]; A <— 2K+1;
for (p : m) do
construie§te L(p); A <— A/2;
While (L(p) 75 Q) do
ﬁe 2' primul nod din L(p);
cautﬁ in 14(1) primul arc admisibil sau pénﬁ se ajunge 1a sférgit;
if (ij este arcul admisibil gﬁsit) then
6 <- min(e¢, rig-,A — ej);
61(- el-—5; ej<— ej+6;
"trimite" 6 unitéiti de ﬂux de 1a i 1a j;
if (ez- Q A/Z) then
§terge i din L(p);
if (ej > A/Z) then
adaugé j 1a inceputul listei L(p);
else
calculeazé d[z'] : min{d[j] + 1 : 'Lj E A(z) §i n]- > 0}
repozitioneazé z' in L(p);
seteazé pozitia curenté (a pointerului) 1a inceputul listei A(z');

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Complexitatea timp a algoritmului este dominaté de pompérile nesatu-
rate (ceea ce réméne este de complexitate @(nm)). I
Numérul pompérilor nesaturate este cel mult 8n2 in ﬁecare etapé a
scalérii, astfel numérul total este (9(n210g U).
Demonstratie. Fie
_ 61‘ - 61(1)
F(P) — _ Z —2p -
16 V,1,7és,t
ZP- 2
La inceputul etapei p, F(p) < Z ﬂ : 2112.
iev 2p
—

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Dacii, in etapa p, se executii relabelhl), atunci nu existii arce admis-

ibile ij, §i d(2') cre§te cu h 2 1 unité'gi. F(p) va cre§te cu cel mult

h. Deoarece, W, d(z') < 2n urmeazé 05 F(p) va cre§te (péné 1a ﬁnalul

etapei p) cel mult péné la 411,2.

Dacé, in etapa p, se executé push(z'), atunci aceasta trimite 6 2 2P_l

pe arcul admisibil ij cu ‘rij > O §i d(z) I d(j) + 1. Astfel, dupéi push,

F(p) va avea valoarea F'(p) : F(p) — 6.262(1) + 6.579) : F(p) — 2677 g

2P—1

F(P)—2ip:F(P)—1/2-

Aceastéi descregtere nu poate apérea de mai mult de 8n2 ori (deoarece

F(p) poate cre§te cel mult péné 1a 4112 §i F(p) este nenegativ). Evi-

dent, numérul pompﬁrilor nesaturate este dominat de acest numér de

descregteri ale lui F (p)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Tn concluzie: I

(Ahuja-Orlin, 1988) Algoritm de tip preﬁux cu scalarea exceselor are

complexitatea timp @(nm + n210g U).
—

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
A. Determinarea unui cuplaj de cardinal maxim §i a unei mul'gimi stabile
de cardinal maxim intr-un un graf bipartit.
Fie G : (V1, V2; E) un graf bipartit cu n noduri §i m muchii.
Consideram regeaua R : (G1, s, t, c), unde
o V(G1) : {5, t} U V1 U V2;
O E(G1) I E1 U E2 U E3, C11
E1 I {S'Ul I 'Ul E V1},E2 I {Uzi I '02 G V2},
E3 I {1/1112 I 'Ul G V1,112 E V2,’!11112 E E(G)},
o c : E(G1) —> N deﬁnita prin
{ 1, daca e GElLJEZ
6(6) I ~
oo, daca e G E3
—

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
+00
/A k‘
1 ‘A. 1
v1 v2
Dacé a: : (ml-j) este un ﬂux intreg in R, atunci mul'gimea {'L'j : 'L' E
V1, j G V2 §i mij : 1} coresponde unui cuplaj M m in graful bipartit G,
Reciproc, orice cuplaj M G M G corespunde unei mul'gimi de arce nea-
diacente din G1; dacé pe ﬁecare astfel de arc ij (i G V1, j G V2)
considerém wig/I : 1 §i my : m]? : 1, §i adéugém $M(e) : 0 pe restul
arcelor, atunci ﬁuxul intreg mM satisface 'u(xM) : ‘M \.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Astfel, daca rezolvam problema ﬂuxului maxim in R (incepand cu ﬂuxul
nul), atunci ob'ginem in 0(nm + n2 10g n) un cuplaj de cardinal maxim
in G . (Constanta care inlocuie§te in practicii +00 trebuie sé ﬁe mai mare
decat cardinalul oricarei taieturi in graful suport, de exemplu poate ﬁ
n2 + 1.)
Fie (S, T) secgiunea de capacitate minima (obtinuta in (9(m) dintr-un
ﬂux maxim determinat). Din Teorema de ﬂux maxim- sec'giune minima,
c(S, T) : I/(G).
Deoarece 1/(G)< oo,1uand Si : SO Vl- §i Tl- : TO Vi (z : m), avem
‘T1! + |Sgl : 1/(G) §i X : Sl LJ T2 este o multime stabila in G (pentru
a avea c(S, T) < oo). Mai mult, \X| : \Vl\ T1]+\V2\SQ\ : n—1/(G).
Urmeaza ca X este o mul'gime stabila de cardinal maxim, deoarece n —
I/(G) : a(G)) (din teorema lui Kénig).
—

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
B. Recunoa§terea secventelor digraﬁce
Considerém urmétoarea problemé:
Date “Did? §i (d;)i:ﬁ , existé un digraf G : ({l, . . . , n}, E) astfel
incét (1275(1) : d: §i dai) : df, Vi : Lin?
Conditii evident necesare pentru un réspuns aﬁrmativ sunt:
(#6ng df<n—1§i d;eN,0<d;<n-1,v¢=1,7;
77. 7'7.
Z dz“ I Z d; I m (unde m I |E|)
1:1 1:1
in aceste ipoteze considerém reteaua bipartité R : (G1, s, t, c).
—

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
G1 este ob'ginut din graful complet bipartit Km, cu bipar-
titia ({1,2,...,n},{1',2’,...,n’}), prin §tergerea mulgimii de muchii
{11’,22’,...,nn’} §i prin orientarea ﬁecérei muchii ij' (Vi 7i j G
{1,2,...,n}) de 1a z' 1a j’, §i prin adéugarea a doué noi noduri s, t,
§i a tuturor arcelor sz', i E {1,2, . . . , n} §i j’t, j E {1, 2, . . . , n}.

Func'gia de capacitate: c(sz') : dj, c(j’t) : df, c(z'j’) : 1, Vi,j : Lin.

d” ’ \ _
—

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Dacé in R existé un ﬂux intreg, x, de valoare maximé m, atunci din
ﬁecare nod 'L vor pleca exact d; arce, 'L'j’, pe care azij/ : 1, §i in ﬁecare
nod j’ vor intra exact d; arce, ij’, pe care wijl : 1.
Digraful dorit, G, este construit luénd V(G) : {1, 2, . . . , n} §i punénd
ij E E(G) dacé §i numai dacé mij/ : 1.
Reciproc, dacé G existé, atunci inversénd construc'gia anterioaré vom
obtine un ﬂux intreg in R de valoare m (deci de valoare maximé).
Urmeazé cé, recunoagterea secven§elor digraﬁce (gi construirea digra-
fului, in cazul unui réspuns aﬁrmativ) poate ﬁ fécuté In @(nm +
n21og n) = (9(n3).
—

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
C. Determinarea numéirului de conexiune pe muchii a unui graf
Fie G’ : (V, E) un graf. Pentru 5,75 G V, s 75 t, notém
o pe(s, t) : numérul maxim de drumuri disjuncte pe muchii de 1a s
1a t in G,
o ce(s, t) : cardinalul minim a1 unei multimi de muchii astfel incét
nu existii drum de 1a s 1a t in graful obtinut prin §tergerea ei din
G.
pe(s, t) : ce(s, t).
Demonstra'gie. Fie G1 digraful obtinut din G prin inlocuirea ﬁecérei
muchii printr-o pereche de arce simetrice. Fie c : E(G1) —> N o func'gie
de capacitate deﬁnité prin c(e) I 1, Ve 6 E(G1).
—

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Demonstratie (continuare). Fie m0 un flux intreg de valoare maximé in
R : (G1,s, t, c). Dacé existé un circuit C in G1 cu $3 : 1 pe toate
arcele lui C, atunci putem pune ﬂuxul 0 pe toate arcele lui C féré a
modiﬁca valoarea ﬂuxului 2:0. Astfel, putem presupune cé ﬂuxul $0 este
aciclic §i atunci :co poate ﬁ scris ca o sumé de v(:zo) ﬂuxuri intregi :ck
ﬁecare cu 12(037“) I 1.
Fiecare flux 32k corespunde unui drum de 1a s 1a t in G1 (considerénd
arcele pe care ﬂuxul nu este 0), care este un drum de la s 1a t §i in graful
G.
Urmeazél cé 11(m0) : pe(s, t), deoarece orice mul'gime de drumuri dis-
juncte pe muchii de 1a s 1a t In G genereazé un ﬂux 0 — l in R de
valoare egalé cu numérul acestor drumuri.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Demonstratie (continuare). Fie (S , T) o sec'giune de capacitate minimi
in R; avem c(S, T) : 11(xo), din Teorema ﬂux maxim-sectiune minimal
Pe de alté parte, C(S, T) este numérul de arce cu 0 extremitate in S
§i cealalté in T (deoarece toate capacitéiigile arcelor sunt 1). Aceasté
multime de arce genereazé in G o multime de muchii de ace1a§i cardinal
astfel incét nu existii vreun drum de 1a s 1a t in graful obginut prin
§tergerea ei din G.
Astfel am obginut o multime de c(S, T) : 11(230) : pe(s, t) muchii
in G care deconecteazé pe s de t prin §tergerea lor din G. Urmeazé
cé ce(s,t) g pe(s,t). Deoarece inegalitatea ce(s,t) 2 pe(s,t) este
evidenté, teorema este demonstraté. U
Dacé G este un graf conex, MG), valoarea maximéi alui p 6 N pentru
care G este p-muchie-conex, este
ME 513%,sit645”) (*)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Urmeaza ca, pentru a calcula A( G), este necesar sa rezolvam n(n — l) / 2

probleme de ﬂux maxim descrise mai sus. Acest numar poate ﬁ redus

dacae observam ca, pentru o pereche ﬁxata (s, t), daca (S, T) este o

sectiune de capacitate minima, atunci

V11 G S §i Vw E T ce('u,'w) g C(S, T) (**)

in particular, daca (s, t) este perechea pentru care minimul din (*) se

atinge, avem egalitate in (**).

Daca ﬁxam un nod so E V §i rezolvam cele n— 1 probleme de ﬂux maxim

luand to E V\{so} vom obtine o pereche (so, to) cu 0(50, to) = M G) (to

nu va ﬁ in aceea§i clasa a biparti'giei cu so in (S, T)).

Concluzie: MG) poate ﬁ gasit in (9(n - (nm + 7120)) : (9(n2m).
—

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
D. Determinarea numérului de conexiune pe noduri a unui graf.
Fie G : (V, E) un graf. C 5,75 € V, s 75 t, dacé notiim
o p(s, t) : numérul maxim de drumuri intern disjuncte (pe noduri)
delaslatin G,
0 C(S, t) : cardinalul minim a1 unei mu1§imi st-separatoare de noduri
din G,
atunci, din teorema lui Menger, avem
p(s, t) : c(s, t)(* * *)
in plus, numérul de conexiune pe noduri, k(G), a1 grafului G (valoarea
maximé a lui p € N pentru care G este p-conex) este
n — 1, dacé G : Kn
MG) :{ min c(s, t), dacé G 75 Kn (* * **)
5,136 V(G),s;ét,st§EE(G)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Aréitém c5 egalitatea (* * *) provine din Teorema ﬂux maxim-sectiune
minimé, aplicaté unei re'gele corespunzétoare.
Fie G1 : (V(G1), E(G1)) digraful construit pornind de 1a G astfel:
o V'u E V, adéugém a”, b1, G V(G1)§ia1,b1, € E(G1);
o Vv'w E E, adéugﬁm bvaw, bwav G E(G1).
b1 a;
1 t ‘{—‘ I”
5 2 rm Ava!‘
b2
S
—

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Mai deﬁnim c : E(G1) —> N prin
0(6) :{ 1, dacé e : avbv
oo, altfel

Considerﬁm reteaua R : (G1, b5, at, c).

Fie :co un ﬂux intreg in R de valoare maximé. in nodurile bv(v E V)
intré exact céte un arc de capacitate 1 §i din nodurile a1,(v E V) pleacé
exact céte un arc de capacitate l.

Urmeazé c5 (din legea de conservare a ﬂuxului) 05 (cg G {0,1} , Wj G
E(G1). Astfel $0 poate fi descompus in 'u(:no) ﬁuxuri wk, ﬁecare de
valoare 1, cu proprietatea cé arcele pe care wk este nenul corespond 1a
12(930) drumuri intern disjuncte din G.

Pe de alté parte, din orice multime de p st-drumuri intern disjuncte in
G, putem construi p b5 at-drumuri intern disjuncte in G1, pe care se
poate transporta o singuré unitate de ﬂux. Urmeazé cé 'u(a:0) : p(s, t).

—

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Fie (S, T) 0 sectiune de capacitate minimé in R astfel incét v(ac°) :

c(S, T). Deoarece 11(120) < oo, urmeazé c5 Vi G S, Vj G T cu ij 6

E(G'1); avem C(ij) < oo, deci C(Z'j) I 1, adicé ﬂu G V astfel incét

7L : au §i j : bu.

Astfel, sec'giunea (S, T) coresponde unei multimi de noduri A0 Q V

astfel incét c(S, T) : {A0| §i A0 este 0 multime st-separatoare.

Pe de alté parte, pentru orice multime st-separatoare, A, avem |A| 2

p(s, t) : v(:co). Deci

C(S, t) : |A0| : C(S, T) : 11(220) : p(s, t).

Demonstragia de mai sus aratﬁ cé, pentru a determina k( G) este suﬁcient

s5 determiném minimul in (* * **) rezolvénd |E(@)| probleme de ﬂux

maxim, unde 6 este complementul lui G.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Avem astfel un algoritm cu complexitatea timp

— 1

O ((77%) — m) (nm + nzlog 71)).

O observatie simplé ne oferé un algoritm mai eﬁcient. Evident,

l l 2m

< ' : i - ' < i : i.
'uEV
Dacii A0 este a multime separatoare in G cu |A0| : MG), atunci G\AO
nu este conex §i existé 0 partitie of V \ A0 (V', V”) astfel incét nu existé
muchii de 1a V’ 1a V” §i V1)’ E V’, V'u” E V” avem p(v’,'u”) : MG).
—

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Urmeazé 05 rezolvénd 0 probleméi de ﬂux maxim cu so E V’ §i to G V”
obtinem cé p(so, to) : valoarea ﬂuxului maxim : MG).
2
Putem determina o astfel de pereche dupé cum urmeazé: ﬁe l I [m1 +
n

1, alegem l noduri arbitrare din V(G), §i pentru ﬁecare astfel de nod, 'u,
rezolvéim toate problemele de ﬂux maxim p('u, 'w), cu 'u'w ¢ E. Numérul
acestor probleme este 0(nl) I O (n ((27m + 1)) I 0(m).

Astfel complexitatea timp a determinérii lui MG) este @(m(nm +
n210g n)).

—

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Exerci'giul 1. Arata'gi ca, utilizand un algoritm de ﬂux maxim (intr-o
anumita retea), se poate gasi, intr-o matrice O — 1, o multime de cardinal
maxim de elemente egale cu O, in care oricare doua elemente nu se afla
pe aceeagi linie sau pe aceea§i coloana.

Exerci'giul 2. Fie S §i T mul'gimi nevide, disjuncte §i ﬁnite. Se da
o functie a : S U T —> N. Si se decida daca exista un graf bipartit
G : (S, T; E) astfel incat dg(’U) : a(v), pentru orice 'u E S U T; daca
raspunsul este afirmativ trebuie returnate muchiile lui G (S §i T sunt
clasele biparti'giei lui G). Arata'gi ca aceasta problema poate ﬁ rezolvata
in timp polinomial ca o problema de ﬂux maxim intr-o anumita re'gea.

—

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Exerci'giul 3. Fiecare student dintr-o multime S de cardinal n > O sub-
scrie 1a o submultime de 4 cursuri optionale dintr-o multime C de car-
dinal k > 4. Descrieti un algoritm (de complexitate timp polinomiala)
care s5 determine (daca exista) o alocare a studentilor catre cursurile
optional din C astfel incat ﬁecare student s5 ﬁe asignat 1a exact 3 cur-
suri (din ce1e 4 1a care a subscris) §i ﬁecare curs s5 aiba asignati cel mult

[a - n/k] studenti (a Z 3).

Exercitiul 4.

(a) Adevarat sau fals? intr-o retea R : (G, s, t, c) cu capacitati dis-
tincte exista un singur flux maxim. De ce?

(b) Descrieti §i demonstrati corectitudinea unui algoritm de complexi-
tate (timp) polinomiala care s5 decida daca intr-o retea data exista
un singur ﬂux maxim.

—

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Exerci§1u1 5. O companie IT are n angaja'gi P1, P2, . . . , Pn care trebuie
$5 lucreze 1a m proiecte L1, L2, . . . , Lm. Pentru orice angajat P1- avem o
listé Li a proiectelor 1a care poate lucra §i sz- numérul de projecte din [,1
pe care 1e poate termina intr-o séptéméné (si g |£¢|). Fiecare proiect
va ﬁ alocat unui singur angajat.
Cum se poate determina numéirul minim de séptéméni necesare ter-
minérii tuturor proiectelor folosind ﬁuxuri in retele.
Exerci'giul 6. Planul de evacuare de urgen'gé a1 unei clédiri este descris
ca un grid n >< n; frontierele celulelor sunt rutele de eavcuare citre
exteriorul clédirii (grid-ului). O instan'gé a problemei evacuérii contine
dimensiunea n a grid-ului §i m puncte de plecare (col'gurile celulelor).
—

***************Ending Page***************


***************Beginning Page***************
***************page number:44**************
Exerci'giul 6 (continuare). Instan'ga prime§te un réspuns aﬁrmativ dacé

existii m drumuri disjuncte citre frontiera grid-ului plecénd din cele m

puncte de mai sus. Dacé drumurile acestea nu existé, atunci instanta

prime§te un réspun negativ.

Determinati o reprezentare a acestei problem a evacuérii ca o problemé

de ﬂux intr-o re'gea. Descrie'gi un algoritm eﬁcient pentru a recunoa§te

instan'gele pozitive ale problemei (care este complexitatea timp a algo-

ritmului?).

Exerci'giul 7. Fie G : (V, E) un graf cu n noduri {111,112,...,vn} §i

c : E —> 1R+ 0 funcgie de capacitate pe muchiile lui G. O téieturé in G

este o biparti'gie (S, T) a lui V. Capacitatea unei téieturi (S, T) este

c(S, T) : Z C(e).

eEE,\eﬁS|:1

—

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
Exerci'giul 7 (continuare). O téieturé minimé in G este o téieturéi
(SO, To) astfel incét
(S,T) tileturé in G
(a) Aréta'gi c5 se poate determina o téieturé minimé in timp polinomial
rezolvénd un numér polinomial de probleme de ﬂux maxim in anu-
mite retele.
(b) Pentru G : Cn (circuit indus de ordin n Z 3) cu toate capacité'gile
— 1
1, aréta§i c5 existé n(n2) tﬁieturi minime.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:46**************
Exerci'giul 8. Fie G : (V; E) un digraf §i w : V —> 1R astfel ca w( V)QR+
§i w(V) Q Rn 5i Q. O submul'gime A Q V se numegte izolatd in G
daca nu exista nici un arc care iese din A. Ponde'rea unei submul'gimi
A Q V este w(A) : Z 111(0). Descrieti un algoritrn de compexitate
polinomiala bazat pe uiAalgoritm de ﬂux maxim intr-o anumita retea
care sa determine o submu1§ime izolata de pondere maxima in G.
Exercitiul 9. La Departamentul de Informatica exista p studengi (S :
{$1, $2,...,Sp}) care doresc sa absolve cu o diploma de licen'ga §i k
profesori ('P I {P1, P2, . . . , Pk}). Lucrarile de licen'ga ale studentilor
sunt evaluate de echipe formate din Cate 1‘ profesori.

Pentru subiectul unei lucrari de licenta un profesor poate ﬁ specializat
sau nu; se cunoagte multimea, 79¢ g 'P ('Pi 75 Q), a profesorilor com-
petenti in a judeca lucrarea de licenta a studentului Si, pentru orice i.
Fiecare profesor Pl poate participa in cel mult n1 astfel de echipe de

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Exerci'giul 9 (cont) Fiecare student trebuie sé-gzi prezinte lucrarea unei
echipe de 11$ k) profesori, a(§ r) ﬁind specializati in proiectul respec-
tiv, iar (r — a) nu.

(a) Descrieti un model cu o retea de transport pentru a organiza ca
mai sus echipele de evaluate formate din profesori (ﬁecare profesor
trebuie asignat unei multimi de lucréri de licentﬁ).

(b) Caracterizati existenta unei solutii pentru aceasté problemé in
termenii existentei unui anumit ﬂux maxim in reteaua de mai sus.
(Caracterizarea trebuie demonstraté!)

(c) Care este complexitatea timp necesaré pentru a decide dacé existé
solutii?

—

***************Ending Page***************

