[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the adjacency matrix A of a graph G with V(G) = {v1, ..., vn}?
--InteriorSeparator--
A = (aij) where aij = 1 if vi and vj are adjacent, and aij = 0 otherwise.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are true regarding the adjacency matrix representation of a graph?
--InteriorSeparator--
(right) Requires O(n^2) time for initialization.
(wrong) Requires O(n) time for initialization.
(right) Has a space complexity of Θ(n^2).
(wrong) Allows determining adjacency of two nodes in O(n) time.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity to check if two nodes are adjacent using an adjacency matrix?
--InteriorSeparator--
Θ(1)
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the advantages of using adjacency lists over adjacency matrices for representing graphs?
--InteriorSeparator--
(right) More efficient for sparse graphs.
(wrong) Allows for O(1) adjacency checks.
(right) Requires Θ(n + e) space for digraphs.
(wrong) Initialization takes O(n) time.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of graph traversal algorithms?
--InteriorSeparator--
To systematically visit all reachable nodes from a given starting node.
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the properties of Breadth-First Search (BFS)?
--InteriorSeparator--
(right) It finds the shortest path from a source node to all other reachable nodes.
(right) It uses a queue data structure.
(wrong) It uses a stack data structure.
(wrong) It explores all possible paths before visiting neighbors.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What data structure is used in BFS algorithm?
--InteriorSeparator--
Queue
--InteriorSeparator--
easy
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the label(u) represent in BFS?
--InteriorSeparator--
The distance from the source node 's' to node 'u'.
--InteriorSeparator--
easy
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the key differences between BFS and DFS?
--InteriorSeparator--
(right) BFS uses a queue, while DFS uses a stack.
(wrong) BFS explores deeply, while DFS explores broadly.
(right) DFS may not find the shortest path, while BFS guarantees it.
(wrong) DFS is always faster than BFS.
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What data structure is used in DFS algorithm?
--InteriorSeparator--
Stack
--InteriorSeparator--
easy
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does DFS(s) compute efficiently?
--InteriorSeparator--
(right) The set of nodes reachable from node s.
(wrong) The shortest path to all nodes from node s.
(wrong) A minimum spanning tree.
(right) The order in which nodes are visited during the traversal.
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a directed graph with costs associated with each edge, what does a(e) represent?
--InteriorSeparator--
The cost, weight, or length of the edge 'e'.
--InteriorSeparator--
easy
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of shortest path algorithms, what does "oo" (infinity) typically represent?
--InteriorSeparator--
A very large number relative to the edge costs, indicating no path exists, or a failed access to the data structure representing the cost matrix.
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does Pij represent in the context of shortest paths?
--InteriorSeparator--
(right) The set of all paths from node i to node j in a graph.
(wrong) The shortest path from node i to node j in a graph.
(wrong) The cost of the path from i to j.
(right) All possible sequences of vertices and edges leading from node i to node j.
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the cost of a path Pii (from node i to itself)?
--InteriorSeparator--
0
--InteriorSeparator--
easy
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the main shortest path problems discussed in the text?
--InteriorSeparator--
(right) Finding the shortest path between two specific nodes.
(wrong) Finding a spanning tree.
(right) Finding the shortest paths from one node to all other nodes.
(right) Finding all shortest paths between all pairs of nodes.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In Communication Networks, if a(e) represents the probability of a connection functioning correctly, what do shortest path problems determine?
--InteriorSeparator--
The most reliable paths.
--InteriorSeparator--
medium
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How can the problem of finding the most reliable paths in a communication network be transformed into a shortest path problem?
--InteriorSeparator--
(wrong) By maximizing the sum of probabilities of edges in the path.
(right) By taking the negative logarithm of the edge probabilities and minimizing the sum.
(wrong) By squaring the edge probabilities and minimizing the sum.
(right) By using a'(e) = -log a(e), where a(e) is the probability of edge e functioning correctly.
--InteriorSeparator--
hard
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of PERT/CPM, what does "critical path" refer to?
--InteriorSeparator--
The path with the maximum cost, where any delay in activities on this path delays the entire project.
--InteriorSeparator--
medium
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is a directed acyclic graph constructed to solve the PERT/CPM problem?
--InteriorSeparator--
(right) Arcs are added between activities based on precedence relationships.
(wrong) Arcs are added randomly between activities.
(right) Dummy activities are added to represent dependencies between tasks.
(wrong) Arcs have weights equal to the activities' proﬁts.
--InteriorSeparator--
hard
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the goal in the 0-1 Knapsack problem?
--InteriorSeparator--
To maximize the total profit of items placed in a knapsack without exceeding its capacity.
--InteriorSeparator--
easy
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is the 0-1 knapsack problem modeled as a shortest path problem?
--InteriorSeparator--
(right) By constructing a digraph where paths correspond to subsets of items in the knapsack.
(wrong) By constructing a graph where nodes represent items and edges represent their dependencies.
(right) By assigning profits as edge costs and solving for a maximum cost path.
(wrong) By sorting items by profit and greedily selecting them until the knapsack is full.
--InteriorSeparator--
hard
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is condition (I) for solving the shortest path problem with Dijkstra?
--InteriorSeparator--
a(C) > 0, for all circuits C in G.
--InteriorSeparator--
hard
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is Bellman's principle of optimality?
--InteriorSeparator--
(right) If P is the shortest path from s to i, any subpath from s to j (where j is a vertex on P) is the shortest path from s to j.
(wrong) Any path from s to i must include the edge with the smallest cost.
(right) If Pij is the shortest path from i to j, then any subpath of Pij is also a shortest path.
(wrong) The shortest path can only contain vertices with positive weights.
--InteriorSeparator--
hard
--InteriorSeparator--
34
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If a(C) >= 0 for all circuits C in G, can the shortest path still be solved?
--InteriorSeparator--
Yes, the shortest path problem can still be solved by avoiding circuits of cost 0.
--InteriorSeparator--
hard
--InteriorSeparator--
39
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What should you do to use digraph shortest path algorithms on regular undirected graph G?
--InteriorSeparator--
(right) Replace each edge in G with a symmetric pair of arcs with the same cost.
(wrong) Choose one direction arbitrarily for each edge.
(wrong) Discard the undirected graph.
(right) The original graph G must have non-negative edge costs
--InteriorSeparator--
hard
--InteriorSeparator--
40
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What property must a digraph have to find the longest path by replacing edge costs aij with -aij?
--InteriorSeparator--
The digraph must not have any circuits with non-negative cost.
--InteriorSeparator--
hard
--InteriorSeparator--
41
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How can DFS be used to find an even cycle in a 3-regular graph?
--InteriorSeparator--
(wrong) DFS can't be used to find cycles.
(right) Because every vertex in 3-regular graph has odd degree, which ensures there exists a cycle.
(wrong) By using BFS instead of DFS.
(right) By analyzing back edges encountered during the search.
--InteriorSeparator--
hard
--InteriorSeparator--
49
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
For a bipartite graph with n nodes and m edges, what is the relationship between m and n?
--InteriorSeparator--
4m ≤ n^2
--InteriorSeparator--
hard
--InteriorSeparator--
49
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.23442772995783076}]