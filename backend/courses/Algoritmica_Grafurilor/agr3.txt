***************Beginning Page***************
***************page number:1**************
14 octombrie 2022
—

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
a Vocabularul teoriei grafurilor
o Matrici asociate
9 Structuri de date
a Probleme de drumuri in (di)grafuri
o Traversarea (di)grafurilor
o Drumuri de cost minim
a Exerci'gii pentru seminarul de séptéména viitoare
—

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Fie G un graf cu V(G) : {1/1, . . . , 'un}. Matricea de adiacen'gzi a lui
G este matricea A : (aij)1<ij<n G ManGO, 1}), unde
a” _ 1, dacéi 'ui §i 'sz adiacente
Z] _ O, altfel '
Un graf §i matricea sa de adiacen'gé.
U2 Us O 1 1 1 O
1 O O 1 O
1 1 O O 1
O O 1 1 O
—

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Fie G un graf cu V(G) : {01,...,vn} §i E(G) : {e1,...,em}.
Matricea de incidenté a lui G este matricea B : (bij)1<ij<n E
Mnxm({0, 1}), unde
b--— 1, dacé ej esteincidenté cu 'ui
”_ 0, altfel ‘
Un graf §i matricea sa de incidental
I 001001
0 1 O 1 1 0
0 0 O 0 1 1
—

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Valorile proprii, vectorii proprii §i polinomul caracteristic ale matricei de
adiacenté sunt numite valorile proprii, vectorii proprii, §i, respectiv,
polinomul caracteristic ale grafului corespunzétor. Acestea sunt

obiectele de studiu ale teoriei spectrale a grafurilor.
Pentru digrafuri, matrici similare pot ﬁ deﬁnite cu elemente din
{—1,0, 1} pentru a marca directia arcelor.
Fie G un digraf cu V(G) : {v1,...,'un} §i E(G) : {e1, . . . , em}. Ma-
tricea de incidengé nod-arc a lui G este matricea B : (bij)1<ij<n E
Mnxm({—1,0, 1}), unde

1, dacéi ej este incident dinspre 'ui

bij I —1, dacé 8]‘ este incident cétre vi .
0, altfel
—

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Fie G I (V, E) un (di)graf cu V : {1,2, . . .,n}.

o Dacé A : (aw-)1gingn este matricea de adiacenti a lui G atunci,
reprezenténd-o ca un tablou 2-dimensiona1, avem nevoie de 0(n2)
timp pentru initializare (in functie de limbajul de programare).

o Astfel, orice algoritm care reprezinté G cu matrice de adiacenté are
complexitatea timp (§i spa'giu) 9(n2)

o Testarea dacé doué noduri ﬁxate sunt adiacente se face in (9(1), dar
parcurgerea intregii multimi de vecini N g(u) (sau N g+(u)), pentru
un anume nod u G V, necesité {2(n) - prea mult pentru grafuri rare
de ordin mare.

—

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Fie G : (V,E) un (di)graf cu V : {1,2,...,n} §i IE‘ : e.
o Orice nod u E V are o listé, A(u), a vecinilor séi din G:
> cénd G este graf A(u) : Ng('lt);
> dacé G este digraf, atunci A(u) : Ng(u) I {'U E V : m) G E};

o Dacéi G este graf, atunci ﬁecare muchie u'u E E genereazé doué
elemente in listele de adiacen'gé: unul in A(u) §i unul inA('u); spatiul
necesar este @(n + 2e).

o Dacéi G este digraf, atunci spa'giul necesar este @(n + e).

o Listele de adiacen'géi pot ﬁ implementate folosind liste inlénguite
sau tablouri.

o Testarea dacﬁ un nod u este adiacent cu un altul 'u in G necesité
0(dg(u)) timp, dar parcurgerea intregii mul'gimi de vecini
NG(u) (sau N§(u)), pentru un nod u € V, se poate face in
Q(dG('u,)) (g1 nu in C’)(n) ca in cazul matricei de adiacen'gé).

—

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Traversarea (sistematica a) grafurilor (graph search, graph
traversal) este 0 paradigmé algoritmicé care speciﬁcé 0 metodé sis-
tematica de a parcurge multimea nodurilor care pot ﬁ accesate (atinse)
pe drumuri plecénd dintr-un nod ﬁxat a1 (di)grafu1ui.
Dat un (di)graf G : ({1, . . .,n}, E) §i s G V(G)
genereazﬁ "eﬁcient" multimea
S : {u E V(G) : existé un drum de 1a s 1a u in G}.
G va ﬁ reprezentat cu liste de adiacenta, deoarece, in timpul procesului
de traversare, trebuie manipulata in mod eﬁcient multimea de vecini a
nodului curent.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
for 'u G V d0
label(v) <— —1; parenﬂv) <— —1;
label(s) k O; parent(s) k O;
creazé o coadé Q con'ginénd s;
while Q 51$ Q d0
u <— p0p(Q);
for v G A(u) d0
if label('v) < 0 then
label('u) <- label(u) + 1;
parenﬂ'u) <— u; push(Q, v);
—

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Proprietéti ale BFS. Nu este diﬁcil de arétat céi:

o S : {u G V : label(u) 2 0};

o Vu € V, label(u) = dG(s, u) (distanta in G de 1a s 1a u);

o Variabila parent deﬁnegte arborele bfs asociat parcurgerii din s:
dacéi G este graf atunci arborele bfs este un arbore par'gial a1 com-
ponentei conexe continénd s; dacé G este digraf atunci arborele
bfs este o arborescenté (arbore cu rédéciné, orientat - arcele sunt
indreptate citre exteriorul rédécinii s).

o Complexitatea timp a BFS(s) este (9(ng + m5), uncle n5 : IS‘ g
\V] : n, §i m5 : \E([S]G)] g IE] (se observé c5 ﬁecare vecin din
lista de adiacenté a unui nod din S este accesat o singuré daté).

—

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Doué parcurgeri BFS ale unui aceluiagi digraf (incepénd din z §i din 'u):
1- 2(1) v(1)

AW) I [y]

y z AW) I [111v]
m) 11(3) A2)

Aw) = m

AW) I ®
u 1' AW) I [Z]

11(5)
(Am marcat in paranteze ordinea de vizitare.)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
for 'u E V d0
label(u) <— —1; parenﬂu) <— —1;
label(s) P 0; parent(s) P 0;
creazéi o stivé S con'ginémd s; n5 k O;
while S 5i Q d0
u <- top(S);
if ((11 P newt[A(u)]) 75 NULL) then
if label('u) < 0 then
n5 + +; label(v) <— n5;
parenﬂ'u) k u; push(S, v);
else
delete(S, u);
—

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Proprietﬁgi ale DFS. Nu este diﬁcil de arétat 05:

o {u E V : label(u) > 0} este exact mutimea S de noduri accesibile
pe drumuri din s;

o Vu E V, label(u) : momentul vizitérii 1ui u (s este vizitat 1a mo-
mentul O);

o Variabila parent deﬁne§te arborele dfs asociat parcurgerii din s

a Complexitatea timp a DFS(s) este @(ng + mg), unde n5 : |S| g
‘VI : n, §i mg : \E([S]G)I g [E] (se observé cé ﬁecare vecin din
lista de adiacenté a unui nod din S este accesat o singuré daté).

—

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Doué parcurgeri DFS ale unui aceluiagi digraf (incepénd din z §i din :13):
z 2(1) 1(1)

14(1) = [y]

y z A(y) = [1w]
11(2) 1(5) 14(2)
14(1) = [11,1]
A(u) = 0
u(3) 11(4) u(3) 11(4)
u v 14(1)) = [Z]
Z(5)
—

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Fie G I (V, E) un digraf, cu V : {1, . . .,'n,}.

0 Fiecare arc (muchie orientaté) e E E are asociat un cost a(e) G IR
(pondere, lungime etc).

o Dacé G este reprezentat cu liste de adiacenté, atunci a(ij) este un
cémp a1 elementului din lista de adiacen'gé a lui ‘I; (reprezenténd un
arc z'j).

o Pentru u§urin§a notatiei vom folosi reprezentarea lui G cu o matrice
de cost-adiacen'géi A : (aij)1<¢,j<n, unde

a-- _ a(z'j), dacé ij € E
Z] _ 00, altfel ‘
—

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
o Aici oo reprezinté un numér real foarte mare relativ 1a costurile
muchiilor(e.g., oo > n - gleagc a(z'j)) §i presupunem cé oo j: a : oo,
oo + oo : oo.

o Este de asemeni posibil s5 folosim oo ca un acces nereu§it 1a struc-
tura de date utilizaté pentru reprezentarea matricei A.

o Pentru 2', j G V, mul'gimea tuturor drumurilor din G de 1a z' 1a j
este notatéi cu 7317':

73g : {P : P este un drum de 1a z' 1a j}.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
o Dacé Pij E PU, PZ'J- : (z :)v0,'uo'ul,v1,...,v,~i1,vTi1vT,1/T(: j),
atunci
V(PZ-j) : {110,111,. ..,'uT},E(PZ-j) : {v0v1,...,vT_1'u,~}.
o Costul lui P-L'j E 731]‘ este
(1(PZ'J') I 0 + Z aw.
UUEEUJij)
0 in particular a(Pii) : 0.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Drumul de cost minim intre doua noduri.
P1 Date G :(V,E) digraf; a: E —>]R;s,t E V,s 75 t.

Gasi'gi Pg} E 'Pst, a§a incat a(P;‘t) : min{a(Pst) : Pst G Pst}.
Drumurile de cost minim dintre un nod §i toate celelalte noduri
P2 Date G :(V,E) digraf; a: E —> Rs 6 V.

Gasiti P; G 7351',V'L' G V, a. i. a(P;‘i) : min{a(Psi) : Psi E Psi}
Toate drumurile de cost minim.
P3 Date G I (V,E) digraf; a : E —> R.

Gasiti P; G Pipvm E V, a. i. a(PZ’-;-) : min{a(PZ-j) : Pij G 73¢]-

—

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Principalele probleme de drum de cost minim
Remarci 1

o Reprezentarea cu matrice de cost-adiacen'gé a perechii (G, a) im-
plicé 7% 5i Q, W,j 6 V(G): dacé (1(Pij) < oo, atunci Pij este un
drum real in G, iar dacé a(PZ-j) : oo, atunci P/L'j nu este un drum
in G dar este un drum in digraful complet simetric obtinut din G
prin adéugarea tuturor arcelor lipséi (cu costuri oo).

o Urmeazé c5 toate multimile din care se determiné un element
(drum) de cost minim in problemele P1 - P3 sunt nevide §i ﬁnite
§i .

o Algoritmii pentru rezolvarea problemei P1 se pot obtine din cei
pentru rezolvarea problemei P2 prin adéiugarea unei condi'gii (evi-
dente) de oprire.

o Problema P3 poate ﬁ rezolvaté prin iterarea oricérui algoritm pen-
tru problema P2. Vom vedea cé sunt §i solu'gii mai eﬁciente.

Algoritmica Grafurilor — Cursul 3 14 octombrie 2022 19 / 51

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
1. Retele de comunicare (Communication Networks). Digraful
G : (V, E) reprezinté o retea de comunicatii intre nodurile din V, iar
E modeleazé multimea legéturilor orientate dintre noduri.

o Dacé a(e) Z O (Ve € E) reprezintéi lungimea conexiunii directe
dintre extremité'gile lui e, atunci problemele P1 - P3 sunt probleme
de drumuri de cost minim naturale.

o Dacé a(e) Z O (Ve G E) reprezintéi timpul necesar pentru parcurg-
erea conexiunii directe dintre extremité'gile lui e, atunci problemele
P1 - P3 probleme pentru determinarea drumurilor celor mai rapide.

o Dacé a(e) € (0,1] (Ve G E) reprezinté probabilitatea functionérii
corecte a conexiunii directe dintre extremiti'gile lui e §i dacéi pre-
supunem c5 muchiile functioneazé independent una de cealalté,
atunci problemele P1 - P3 sunt probleme pentru determinarea dru-
murilor celor mai sigure:

—

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Dacé Pij E 'sz pentru o pereche z', j E V, atunci probabilitatea ca acest
drum s5 functioneze corect este (datorité independentei)
PTOb(P-;j) : H a(e).
8€E(Pij)
Luénd a’(e) : —1og a(e),
10g Pr0b(P¢]~) :10g( H (1(6)) : — Z a'(e).

8€E(Pij) 6615(5)‘)
Funcigia log ﬁind monotoné, problemele P1 - P3 cu costurile a’, oferé
drumurile cele mai ﬁabile in retele de comunicare.

—

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
2. Retele PERT - Metoda drumului critic (Critical path method
- CPM). PERT (Path Evaluation and Review Technique) este o
metoda de a analiza (indeosebi) indeplinirea ﬁecarei sarcini dintr-un
proiect mai complex.

o Fie P : {A1, A2, . . . , An} activitatile atomice ale unui mare proiect
P (n este foarte mare). (P, <) este o multime partial ordonata,
unde A1 < Aj daca z' 75j §i activitatea Aj poate incepe doar dupa
ce activitatea AZ' s-a terminat.

o Pentru ﬁecare activitate Ai, timpul necesar ﬁnalizarii t1- este cunos-
cut (sau doar estimat).

Gasiti 0 planiﬁcare a activitatilor acestui proiect care s5 mini-
mizeze durata totala pana la ﬁnalizare.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Asociem acestei problem un digraf aciclic astfel:

o pentru ﬁecare activitate AP (p 6 {1, . . . , n}) adéugﬁm un arc 1ij
de cost a(1§pjp) : tp;

o nodul ip coresponde startului activitétii Ap iar nodul jp este asociat
ﬁnalizérii ei;

o dacé activitatea Ak poate porni doar dupé activitatea AP adéugém
arcul jpz'k (0 activitate ﬁctivé - dummy activity).

—

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
o Constructia digrafului este incheiaté dupé adéugarea unui nod s
corespunzénd momentului initial a1 proiectului, legat prin arce sip
pentru ﬁecare activitate AP in care nu intré vreun arc §i a unui nod
t corespunzénd ﬁnalizérii proiectului, legat prin arce jpt pentru
ﬁecare activitate AP din care nu iese vreun arc.

o in digraful obtinut costul maxim a1 unui drum de la s la t
este egal cu timpul minim necesar indeplinirii in intregime
a proiectului.

o Un drum de cost maxim este numit a drum critic deoarece orice
intérziere a unei activitéi'gi de pe acest drum implicé o intérziere a
intregului proiect.

—

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
A1 1 t1 A81t8 0
u 0
0
A6 1 t6 0
° ~ °
A3 : t3 O ‘¢
0 ‘710:1:10
1472157

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
3. Problema rucsacului (O — 1). Avem un rucsac de dimensiune
b E N, §i n obiecte de dimensiuni a1, . . . , an E N. Se cunoagte §i proﬁtul
pi 6 N a1 adéugérii obiectului 2' (2' 6 {1, . . . , n}) in rucsac. Se cere s51 se
géseascéi o completare a rucsacului care $5 maximizeze proﬁtul total.
Fie xi, pentru z' E {1, . . . , n}, o variabilé booleané cu semniﬁcatia sci : 1
dacé §i numai dacé obiectul z' este pus in rucsac. Problema rucsacului
poate ﬁ descrisé astfel

Tl Tl

max {Zpizni : Z aimi g b, xi G {0, 1},Vz' : Ln}
1:1 1:1
—

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
o Fie G = (V,E) un digrafcu V = {s}U V1 U...U Vn U{t}, unde
Vi : {10, £1, . . . , z'b} este asociat obiectului i, i : 1,—n.
o Arcele lui G §i costurile sunt:
> s1O §i $1“1 cu a(slo) = O, a(sl“1) = p1 (obiectul 1 este adéugat ruc-
sacului cu proﬁtul p1 §i nivelul de umplere a1 , sau nu este adéugat,
cu proﬁtul §i nivelul de umplere O).
> (i — 1)jz'j cu a(('i — 1)jz'j) = 0, Vi : 2,—n,Vj = 0,—b (obiectul i nu
este adéugat rucsacului: dupé competarea cu primele z' — 1 obiecte
§i nivelul de umplere j se trece 1a umplerea cu primele i objecte,
fé'ré obiectul 2'; nivelul de umplere réméne neschimbat j iar proﬁtul
adéugat este 0).
> Dac5j—ai 2 O, atunciavem§iarcu1(i—1)j_“*ij cu a((z'—1)j_aiz'j) :
p1- (se poate ajunge 1a nivelul de umplere j prin adéugarea obiectului
i 1a o umplere cu primele i — 1 obiecte, cu nivelul de umplere j — a1).
—

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
> njt cu a(njt) :0, Vj :07.

o Fiecare drum de 1a s 1a t in G corespunde unei submultimi de
obiecte cu nivelul de umplere g b §i cu proﬁtul total egal cu costul
drumului. Deoarece, reciproc, ﬁecéirei umpleri a rucsacului ii core-
spunde un drum dela s 1a t in G, urmeazé c5 problema rucsacului
poate ﬁ rezolvaté prin determinarea unui drum de cost maxim in
digraful aciclic G.

o Descrierea staticé daté mai sus pentru G poate ﬁ transformaté intr-
una proceduralé, folosind programarea dinamicé. Problema aceasta
este NP-hard (ordinul lui G poate ﬁ exponential in dimensiunea
problemei).

—

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
[J 1:0 O 2:0 HIU
111 '2 2:1 11:1
U
. . O
P1 : 0
I U 22(l2 I
1:0,1
E 2;'a1+a2 5
E P2 I
I 0 I
15b .—u.—>
2:!» nzb

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
P2 Dat G :(V,E) digraf; a: E —>R;s G V.
Gésiti P; G PmW 6 V, a. i. a(P;“Z-) : min{a(PSZ-) : Psi G 735i}
Fie G un digraf, s 6 V(G):{l,...,n}§i a: E(G)—> 1R, 51.1”.
(I) a(C) > O, pentru toate circuitele C’ din G.
Atunci (ul, . . . , un) este o s01u§ie a sistemului de ecuayii
us : 0
(B) ui z minWj + aji) dacéi §1' numai dacé’
#1
V16 V(G), ZIP;~ € Psi a. f. ui : a(P;‘i) : min{a(P) : P € Psi}.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Proof:
"<:“. Fie P; o solu'gie optimé a problemei P2 §i ui : a(P;~).
Ipoteza (I) implicé us : O, i.e., prima ecua'gie a sistemului (B) este
satisfécuté. Pentru i 5i s, drumul P; are penultimul nod j. Dacé st
este drumul de 1a s 1a j determinat pe P;- de j, avem

w I 11(PZ1) I a(st) + aji 2 a(PZ}-) + aji I “1' + aﬁ-
Arétém c5 ui : uj~ + ajl'. Presupunem cé ui > uj —|- aJ-i, i. e., a(P5]-) >
a(P;‘j-).

—

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Cazul 1. i Q V(P;*j). Atunci P1 : P;- o (j,ji,z') 6 7731' §i a(P1) :
a(P;‘j-) + aJ-Z- < a(PSJ-) + aji : a(P;‘i), contradictie (P; este un drum de
cost minim).
Pa]
—

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Cazul 2. z' E V(P:j). Fie P2} : Psi o Pij, cele douéi drumuri determi-
nate de nodul 2' on P2}. Atunci costul circuitului C : Pij o (j,jz', z) este
a(C') : a(PiJ-) + a]; : a(Ps*j) — a(Psi) + a]; : Uj + aji — a(PSZ-) care
este este g 'U/j + aJ-Z- — a(P;*Z-) : uj + aJ-Z- — ul- < 0, contradictie (ipoteza
(I) este incéilcatéi).
—

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Astfel partea "<:" este demonstratﬁ. |
Am demonstrat mai sus cé dacé j este nodul dinaintea lui z' pe un drum
de cost minim de 1a s 1a 2', atunci drumul de 1a s 1a j determinat de j
de pe acest drum este un drum de cost minim de 1a s 1a j. Inductiv,
urmeazé:
Principiul de optimalitate a1 lui Bellman: Dacé P; este un drum
de cost minim de la s la i, atunci Vj 6 V(P:Z-), dacﬁ P;- : stoni,
atunci PSJ- (respectiv Pji) este un drum de cost minim de la s
laj (respectiv de laj la 2').
—

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
":>". Arétém cé dacé (ul, . . . , un) este o solutie a sistemului (B), atunci
(a) EIPSZ- 6 P51- a§a incét ul- : a(PSZ-), Vi E V.
(b) Vi E V, ui : min{a(P) : P G P$¢}(: a(Psi)).
(a) Dacé 2' : s, atunci us : O §i drumul P35 satisface a(Pss) : O : us.
Dacéi 2' 75 s, considerém urmétorul algoritm
v <- z'; k <- 0;
while 'u 9i s do
ﬁnd W a. i. uv : uw + am; // El'w deoarece uv satisface (B)
z'kkv;lc++;'u+w;
Algoritmul determiné drumul P : (s :)z'k+1,z'k+1z'k,ik,...,z'1,1;1'£0,z'0(:
z') cu P E 735i §i
—

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
01(13): a('5k+1’1;k) + ' ' ' + (‘(1110):
(uik — Ulla-+1) + (“116-1 _ uik) + ' ‘ ‘ + (uio _ uil) z
W0 — Wk“ I 'U'i — us I ui,
in ﬁecare iteratie while w ¢ {15, . . . , ik_1} (altfel obtinem un circuit de
cost O, in contradictie cu ipoteza (1))
Cu nota'giile din algoritmul de mai sus avem ui I “i1 + am.
(b) Fie ﬂi = a(P;~), V1; E V. Din demonstratia anterioaré, ﬁi, 'L' = Lin
satisface sistemul (B).
Presupunem 05 u : (u1,...,un) 75 (U1,...,Un) : U.
Deoarece us : ES : 0, urmeazé cé existé un 1L 75 s a§a incét uZ- 3i E‘
§i Vj G V(Ps,). j 75 2', uj : ﬂj, unde Psi este drumul construit 1a (a)
pentru ﬁi.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Atunci ui > m : ﬂu + am : 11111 + am- 2 ui (prima inegalitate are loc
datorité modului de alegere a lui 2', a doua inegalitate are 10c deoarece
ui satisface (B)).
Contradictia gﬁsité araté cé u : E, i. e., elementele lui u sunt costuri
minime.
D
—

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
o Din demonstratia de mai sus urmeazéi c5 pentru a rezolva P2 este
suﬁcient $5 se géseascé o solu'gie a sistemului de ecua'gii (B) Dru-
murile de cost minim corespunzéitoare pot ﬁ ob'ginute ca 1a (a) din
demonstratia de mai sus: dacé avem ui : uk + am‘ atunci k este
nodul dinaintea 1ui i pe drumul de cost minim de 1a s 1a z' (de
cost uz- ) in algoritmul care rezolva sistemul (B) mentinem un
tablou before[l..n] cu elemente din V U {O} cu semniﬁca'gia ﬁnalé
beforeﬁ] : nodul dinaintea 1ui 2' pe un drum de cost minim de 1a
s 1a 2'. Nodurile de pe acest drum pot ﬁ determinate in (9(n) prin
constructia secventei i, beforeﬁ], before[bef0re[z']], . . . , s.

—

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
o Dacé algoritmii care rezolva sistemul de ecuatii (B) ocolesc (prin
intretinerea tabloului before) circuitele de cost 0, atunci problema
P2 este rezolvatéi, chiar dacéi se pierde unicitatea solu'giei. Astfel,
ace§ti algoritmi vor rezolva P2 in ipoteza
(1’) a(C') 2 O, pentru toate circuitele C‘ din G.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
a Dacéi, in problemele P1 - P3, G este un graf §i nu un digraf, putem
folosi algoritmii pentru digrafuri inlocuind ﬁecare muchie a lui G
cu 0 pereche simetricé de arce, ﬁecare cu ace1a§i cost ca muchia.
Aceasté abordare functioneazé doar pentru muchii de cost nenegativ
(dacéi o muchie are cost negativ, atunci 2-circuitu1 corespunzéitor
format cu cele doué arce simetrice are cost negativ, deci ipoteza (1’)
este incélcatéi).

—

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
o Deoarece multimile 7313- sunt ﬁnite (g1 nevide), putem considera
probleme similare cu P1 - P3 inlocuind mm cu mam.

o Rela'gia evidenté maxzeA ac : —min$€A(—a:), prin inlocuirea cos-
turilor aij cu —a1'j, se poate folosi doar in digrafuri in care, pentru
ﬁecare circuit C’, avem a(C') g 0 (in particular, aceasté abordare
merge pentru digrafuri féiréi circuite). Daci digraful are circuite,
problema celui mai lung drum este, in general, NP - hard.

—

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Exercitiul 1.

Spunem 05 un graf G : (V,E) este rar dacé m g an/logn (n :

|V|,m : |E|) Motivul este acela c5 putem reprezenta matricea de

adiacen'géi A a lui G folosind doar (9(n2/ 10g n) spatiu de memorie a§a

incét réspunsul 1a intrebarea "a(7,',j) = 1?" s5 poaté ﬁ dat in (9(1).

Descrieti 0 astfel de reprezentare.

Exercitiul 2.

Aréta'gi (:5 nu existé o ordonare e1, e2, . . . , e10 a muchiilor unui graf K5,

a§a incét: e10 §i e1 nu sunt adiacente §i ei §i e¢+1 nu sunt adiacente

pentru orice 1 g i g 9.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Exercigiul 3. Fie G : (V, E) un graf de ordin n §i dimensiune m cu
matricea de adiacen'gé A. Din multimea celor 2m orientéri posibile ale
tuturor muchiilor sale alegem una §i considerém matricea de incidenté
nod-arc Q E Mnxm({—1,0, 1}).
—1, dacé 'u este extremitatea ini'gialéi a arcului e
qve : 1, dacé 'u este extremitatea ﬁnalé a arcului e
0, dacé e nu este incident cu v.
Arétati cé A + QQT este matrice diagonalé §i aflati interpretarea com-
binatorialﬁ a elementelor sale diagonale.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Exercitiul 4. Fie D = (V,E) un digraf cu V : {U1,’Ug,...,'Un} §i
E : {e1,e2,...,em}. Fie B : (bij) E MnXm({—l,0, 1}) matricea de
incidenté a 1ui D, unde

1, dacé ej este incident dinspre 'ui

bij I —1, dacé ej este incident citre 'uZ- .

O, altfel
Arﬁtati c5 det(M) G {—1,0, 1} pentru orice submatrice pitraticﬁ, M, a
lui B (i. e., B este o matrice total unimodularéi).

—

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Exercitiul 5. Fie G : (S, T; E) un graf bipartit cu V : S U T :
{v1,v2,...,'un} §i E : {e1, e2,...,em}. Fie B : (bl-j) E Mnxm({0, 1})
matricea de incidenté a lui G, unde

b~ _ 1, dacé ej este incidenté cu 'ul-

Z] — 0, altfel '

Aréitati c5 det(M) € {-1,0, 1} pentru orice submatrice pétraticéi a lui

B (i. e., B este o matrice total unimodularé).

Exercigiul 6. Fie G un graf cu n noduri §i m muchii.

(a) Aréta'gi (:5 G este bipartit dacé §i numai dacé G nu contine circuite
(induse) impare.

(b) Descrie'gi un algoritm de complexitate timp O(n+m) care $5 decidé
dacé un graf dat este bipartit. (Un algoritm pentru recunoa§terea
grafurilor bipartite.)

—

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Exercigiul 7. Fie M G matricea de inciden'gé muchie-nod a unui graf
dat G I (V, E), adicé MG : (mijhgigm, unde
léJ <11
V :{111,112,...,vn},E : {81,62,...,€m}.
1 dacé el- este incidenté cu 'uj
mij :
0 altfel
(a) Arita'gi 05 dacéi T este un arbore, atunci prin indepértarea din M T
a unei coloane corespunzétoare unui nod dat se ob'gine o matrice
pétraticé nesingularé.
(b) Aréta'gi (:5 dacéi C este un circuit, atunci M 0 este matrice nesingu-
laré dacé §i numai dacé C’ este impar.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Exercitiul 8. Fie G : (V, E) un graf cu n noduri §i m > 1 muchii.
Consideréim urméitorul algoritm:
G’ <- G;
while (Elu 6 V(G’) a. i. dG/(u) < m/n) do
G’ P G’ — u;
return G’;
(a) Determina'gi complexitatea timp a unei implementéri eﬁciente a
acestui algoritm.
(b) Arétati céi graful returnat, G’, este nenul (are §i noduri, dar 5i
muchii).
(c) Arétati 05 orice graf contine un drum de lungime cel putin m / n.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Exercigiul 9. Diametrul unui graf G este cea mai mare distanta dintre
orice doua noduri din G. Doua noduri formeaza 0 pereche de noduri
diametral opuse daca distan'ga dintre ele este cat diametrul. Arata'gi ca
urmatorul algoritm determina pereche de noduri diametral opuse intr-un
arbore dat T:
0 plecand dintr-un nod a1 lui T, parcurge bfs (Breadth First Search)
arborele T; ﬁe u ultimul nod vizitat.
9 mai parcurge o data bfs arborele T plecand din nodul u; ﬁe v
ultimul nod vizitat.
G) returneaza perechea (u, 'u).
—

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
Exercigiul 10. Arétati ci 0 parcurgere DFS poate ﬁ utilizaté pentru a

determina un circuit par intr-un graf 3-regu1at in (9(n).

Exercitiul 11.

(a) Aréta'gi 05 pentru un graf bipartit cu n noduri §i m muchii avem
4m g n2.

(b) Descrie'gi un algoritm de complexitate timp O(n+m) care $5 decidéi
dacéi un graf dat (cu n noduri §i m muchii) este complementul unui
graf bipartit.

—

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Exercigiul 12. Demonstrati cé un graf G este bipartit dacé §i numai

dacéi orice subgraf indus H a1 lui G satisface inegalitatea: 2a(H) 2 |H |

Exercitiul 13. Fie G : (S, T;E) un graf bipartit §i X 6 {5, T}.

G se numegte X -1an’g dacﬁ nodurile lui X pot ﬁ ordonate: $1,132, . . . azk

(|X| : k) astfel ca

NG($1) 2 NG($2) Q Q NG($I<:)

(a) Arétati cé G este S-lant dacé §i numai dacé este T-1an’g.

(b) Si presupunem céi G (care este bipartit) are ordinul n, dimensiunea
m §i este reprezentat folosind liste de adiacenté. Descrie'gi un algo-
ritm de recunoagtere a unui S-lan’g de complexitate timp (9(n+ m).

—

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
Exercigiul 14. Fie G un graf; notéim cu b(G) graful ob'ginut din G
prin inserarea simultané a céte unui nou nod pe ﬁecare muchie a lui G.
a) Arétati cé b(G) este graf bipartit.
b) Demonstra'gi cé G 2 H dacéi §i numai dacéi b(G) 2 b(H). De
aici deduce'gi cé testarea izomorﬁsmului intre doué grafuri poate
ﬁ redusé in timp polinomial 1a testarea izomorﬁsmului intre doué
grafuri bipartite.
Exercigiul 15. Fie G un graf bipartit; arétati cé G este conex dacé §i
numai dacé admite o singuré bipartitie cu multimi stabile.
—

***************Ending Page***************





