[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What are closures also known as?
--InteriorSeparator--
Lambda functions
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following characteristics apply to Rust closures?
--InteriorSeparator--
(right) Can capture local parameters.
(wrong) Must always specify parameter types.
(right) Can be used for sorting.
(wrong) Are identical to templates.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What keyword is used to move captured elements into a closure?
--InteriorSeparator--
move
--InteriorSeparator--
easy
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which traits can a closure implement?
--InteriorSeparator--
(right) FnOnce
(right) FnMut
(wrong) FnStatic
(right) Fn
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What keyword is used to define a pointer/reference to a function?
--InteriorSeparator--
fn
--InteriorSeparator--
easy
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of 'impl' keyword when returning a closure?
--InteriorSeparator--
(right) It allows the compiler to infer the return type.
(wrong) It creates a trait object on the stack.
(right) Enables static linkage of the closure.
(wrong) Guarantees dynamic dispatch.
--InteriorSeparator--
hard
--InteriorSeparator--
37
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the effect of boxing a closure?
--InteriorSeparator--
It allocates the closure on the heap, allowing for dynamic dispatch.
--InteriorSeparator--
hard
--InteriorSeparator--
39
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which trait is defined for all collections that implement iterators?
--InteriorSeparator--
Iterator
--InteriorSeparator--
easy
--InteriorSeparator--
42
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following iterator methods consumes the iterator?
--InteriorSeparator--
(right) count()
(wrong) next()
(right) last()
(wrong) nth()
--InteriorSeparator--
medium
--InteriorSeparator--
49
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following iterator adaptors are commonly used in 'for' loops?
--InteriorSeparator--
(right) iter()
(right) iter_mut()
(right) into_iter()
(wrong) step_by()
--InteriorSeparator--
medium
--InteriorSeparator--
51
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens when you use 'into_iter()' on a collection of types that don't implement the 'Copy' trait?
--InteriorSeparator--
The elements of the collection are moved, and the original collection can no longer be used.
--InteriorSeparator--
hard
--InteriorSeparator--
54
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following iterator adaptors allow you to skip or take a certain number of elements?
--InteriorSeparator--
(right) skip()
(right) take()
(wrong) map()
(wrong) filter()
--InteriorSeparator--
easy
--InteriorSeparator--
59
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the 'inspect()' iterator adaptor?
--InteriorSeparator--
It runs a function for each element, useful for debugging.
--InteriorSeparator--
easy
--InteriorSeparator--
59
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary use case for the 'collect()' iterator adaptor?
--InteriorSeparator--
To transform an iterator into a collection (e.g., a Vec).
--InteriorSeparator--
easy
--InteriorSeparator--
65
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of the `partition` iterator?
--InteriorSeparator--
(right) split an existing collection into two partitions
(wrong) Sort elements
(right) Elements where it returns true will be added to the first partition, and the rest of them to the second partition
(wrong) Return only unique elements
--InteriorSeparator--
medium
--InteriorSeparator--
68
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the Peekable adaptor do?
--InteriorSeparator--
Allows one to read the next value without moving to the next position.
--InteriorSeparator--
medium
--InteriorSeparator--
74
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the 'enumerate()' iterator adaptor?
--InteriorSeparator--
It provides the index of each element during iteration.
--InteriorSeparator--
easy
--InteriorSeparator--
76
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does cycle() iterator method do?
--InteriorSeparator--
Creates an iterator that loops infinitely through the collection.
--InteriorSeparator--
medium
--InteriorSeparator--
77
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which collection types use iterators?
--InteriorSeparator--
(right) Vectors
(right) Maps
(wrong) Structs
(right) Sets
--InteriorSeparator--
easy
--InteriorSeparator--
42
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What methods does the DoubleEndedIterator trait expose?
--InteriorSeparator--
(wrong) nth_back
(right) next_back
(wrong) back
(wrong) peek_back
--InteriorSeparator--
medium
--InteriorSeparator--
78
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of ExactSizelterator trait?
--InteriorSeparator--
Provides a function (len) that returns the number of steps until the end of the iteration.
--InteriorSeparator--
medium
--InteriorSeparator--
81
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are valid ways to create a vector in Rust?
--InteriorSeparator--
(right) Vec::new()
(wrong) Vec()
(right) vec![]
(right) Vec::from([])
(wrong) new Vec()
--InteriorSeparator--
easy
--InteriorSeparator--
83
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens when you insert an element at an index outside the bounds of a vector?
--InteriorSeparator--
The code will panic
--InteriorSeparator--
easy
--InteriorSeparator--
85
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the two methods to remove an element from a specific position in a Vector?
--InteriorSeparator--
(right) remove(...)
(wrong) delete(...)
(right) swap_remove(...)
(wrong) pop(...)
--InteriorSeparator--
medium
--InteriorSeparator--
87
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the key difference between `remove()` and `swap_remove()` methods in Vectors?
--InteriorSeparator--
`swap_remove()` does not preserve element order and has O(1) complexity.
--InteriorSeparator--
hard
--InteriorSeparator--
93
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which vector method reduces the capacity of the vector to match the exact number of elements?
--InteriorSeparator--
shrink_to_fit()
--InteriorSeparator--
medium
--InteriorSeparator--
94
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What can using a variable into a vector imply?
--InteriorSeparator--
Change of ownership
--InteriorSeparator--
medium
--InteriorSeparator--
97
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens when you try to access an element in a vector using an index that is out of range?
--InteriorSeparator--
The code will panic.
--InteriorSeparator--
easy
--InteriorSeparator--
109
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the `retain` function do to a Vector?
--InteriorSeparator--
It keeps only the elements that have a specific characteristics.
--InteriorSeparator--
easy
--InteriorSeparator--
113
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How can you convert a vector into a slice?
--InteriorSeparator--
(right) Using the range operator `..`
(right) Using `as_slice()`
(wrong) Using `as_array()`
(wrong) Using `to_slice()`
--InteriorSeparator--
medium
--InteriorSeparator--
114
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens to the capacity of the first vector when you split a vector using `split_off()`?
--InteriorSeparator--
The capacity remains untouched.
--InteriorSeparator--
medium
--InteriorSeparator--
115
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If one obtains a Drain iterator for a vector, can the existing vector be modified?
--InteriorSeparator--
No.
--InteriorSeparator--
hard
--InteriorSeparator--
118
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What factors does Rust consider when selecting sorting algorithms?
--InteriorSeparator--
(right) Is the sort stable or not
(right) Worst case complexity
(right) Memory consumption
(wrong) Compiler version
--InteriorSeparator--
easy
--InteriorSeparator--
120
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which sorting algorithm is best for nearly sorted sequences?
--InteriorSeparator--
sort
--InteriorSeparator--
medium
--InteriorSeparator--
122
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Under what conditions should you use an unstable sort?
--InteriorSeparator--
When the order of equal elements is not important.
--InteriorSeparator--
medium
--InteriorSeparator--
123
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the difference between `sort_by` and `sort_by_key`?
--InteriorSeparator--
`sort_by` uses a comparison function, while `sort_by_key` extracts a key for comparison.
--InteriorSeparator--
hard
--InteriorSeparator--
127
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the function  `retain(odd)`  do?
--InteriorSeparator--
It saves all odd values into the specified vector.
--InteriorSeparator--
easy
--InteriorSeparator--
113
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity for quick find an item?
--InteriorSeparator--
O(log(n))
--InteriorSeparator--
medium
--InteriorSeparator--
139
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Does BinarySearch have implicit convertion?
--InteriorSeparator--
No.
--InteriorSeparator--
hard
--InteriorSeparator--
140
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How can a map be created?
--InteriorSeparator--
(right) let mut a: HashlVlap<key,value> = HashMap::new()
(right) let mut a = HashMap::<key,va|ue>::new()
(right) let mut a: HashlVlap<key,value> = HashMap::from([(key,vector);count])
(wrong) let mut a: HashlVlap<key,value> = HashMap::from({{key,vector};count})
--InteriorSeparator--
easy
--InteriorSeparator--
143
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In Hashmaps, do consecutive executions of the same code results in a different order of elements in memory?
--InteriorSeparator--
Yes, it is because the hashing algorithm use rely on a randomized seed.
--InteriorSeparator--
medium
--InteriorSeparator--
145
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the most used method for hash maps?
--InteriorSeparator--
entry()
--InteriorSeparator--
medium
--InteriorSeparator--
148
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If key is not present, has .and_modify(..) effect?
--InteriorSeparator--
(right) No
(wrong) Yes
--InteriorSeparator--
easy
--InteriorSeparator--
149
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the default value returned by the method .or_insert(...)?
--InteriorSeparator--
mutable reference
--InteriorSeparator--
hard
--InteriorSeparator--
151
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the .or_insert_with_key(...) function do?
--InteriorSeparator--
Uses a function that receives the key name and returns a value
--InteriorSeparator--
medium
--InteriorSeparator--
153
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In an object, is the key/value pair moved or is it returned a reference when iterating a Hash Map?
--InteriorSeparator--
It is moved instead of returning a reference
--InteriorSeparator--
medium
--InteriorSeparator--
156
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is the HashSet type implemented in Rust?
--InteriorSeparator--
(wrong) Using a BTreeSet with a value of ZST type
(right) Using a HashIVIap with a value of ZST type
(right) Making sure that there is no extra memory allocated for values
(wrong) Using Hashmaps
--InteriorSeparator--
hard
--InteriorSeparator--
163
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does get (& , VI & ) -> <81 > get?
--InteriorSeparator--
(right) Get a reference to a value if exists in the set
(wrong) Insert a value in a set
--InteriorSeparator--
easy
--InteriorSeparator--
165
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.2185330223865004}]