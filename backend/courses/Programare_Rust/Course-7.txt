***************Beginning Page***************
***************page number:1**************
Rust programming
Course — 7
Gavnm Dragos

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
®; Agenda for today
1. Generics
2‘ Match

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
7
Generics
L

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
g; Generlcs
Generics are a way of describing how methods, structs, enums and traits can be
built based on a template where the type(s) that is(are) being used in those
constructs is/are unknown and will be replace by the compiler at built time‘
Generics are very similarto C++ concept (C++20) or somehow similar cu C++
templates, but there are a couple of exceptions (for example, a generic in Rust has
the semantic ability to describe some limitations).

Keep in mind that generic work by build code based on a template (this means that
using multiple generics will increase the size of your final binary).

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
g; Generlcs
Generics can be applied for methods/functions or structures/enum and traits. The
general format is:

1. Functions
name <Type,: ,Tvpez: vim/pen; > (my r>
or
name <Type,,T\/pe1,.,.Typen>(...)r> RetumTypE
Type]: ,...Type": 'r---r
2, Struct Enum Traits
name <Tvpe,; ,Typel: WType": > (7..) r>
or
name <Tvpe,, Type: ,..,T\/pen>1 ..) Type): pun/pen; (.1,
oss; -are a cambrnatran ultra/ts and Wet/me rules that exp/am some requrrementsfvra r e
used in a template.

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
. Generlcs
Generics can be applied for methods/functions or structures/enum and traits. The
general format is:

3. Template/Generic methods within the implementation of a type
TypeName
(
name <Tvpe,:Baundx, TypegBolmds,..4Type“:Bounds> (...) (m)
l
or
TypeName
l
name <rvpe,, Typel,...Type"> (...] -> RelumType
Type,:Buund5 ,...Type“:Bnunds
(---)
l

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
g; Generlcs
Generics can be applied for methods/functions or structures/enum and traits. The
general format is:

4. Traits
TraitName <Typer' ,Typez: ,...Tvpe“: >
(
method, (...);
method, 1...);
"mmsthcdn 1...);
)

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
1. Generic functions
RMA'!
\ x v WW >1‘; imam", "mg .; w Mam ,y “Mm
x
mim ‘v 1. Z W m’ my “WWW m {hr- WW MW 'wmirrirwrm W mm“
p7’1HLI 1: w 16); hula Mm,‘ “mm-‘g W ,MW Y
pry“: I‘ :<,1.5 ‘i 1 1 p. ,mm smurmnmeburiv: n 1
punt: : 1& ,< "Hello" ; ; \

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
géégééiii}
1.6eneﬂcfuncﬂons
Rust
E wv-w-[EBUT] Y aubvwr mphwwr mm:

7' srt\ma,n r5 A 1,
x
a‘ NIMVJ‘;I‘NH
\ Y~mmvm;mmwwuﬂ“ {w mmmuhﬂwmw
x mumw\nww
x
1m“ MVFNWUHW w m‘»mvw pm“ wmﬂjwim Unmwny
hu,,dr, ,Hn “1(h '1 w‘ ,n »_ v(‘a . ‘hr mnr, xn¢\\
mm mmmwvunhﬂmvmummwva
x
\ .................

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
® Generlcs
1. Generic functions
Rust Rust M
use stdiiﬁvvt: :Devurl; Hie Stdzzfmt: :[Ie-hug; 10
m prJHL'T: Debugwh T,» { m w urn-1mm: T‘ H H
V I“, W ~. HQHO
pmntlnu wry .v), Hwy»:
I T: Debug.
10 g
m mim'» 1. 1_5 pr‘intlHH_ ‘;-",‘>“, w‘);
primndibuau; “Hello” ,\
pr-mt: :‘+51:<1.5‘\; m mam» ;:
pr‘int::i&:tr"(“H "my: wimuuazwle);
1' w-mr::<+sz:\11.5j\;
,v-mt: : :&:tw=11“+ '1 H ,A;
|‘

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
® Generlcs
In reath, Rust actuaHy builds 3 functions (one for each type T [i32,f32 and &str] used)
Rust mm equivalent code
use std::ﬁnt::[lebug; m prlntiiilimi 1m -;
{u pvinh'T: Debugvlﬁt m -{ } 10
pnnclnu‘ ,:'_1‘,v‘\; +n pr'wnfifillw: my,‘ { 15
) pr'intln.‘ < “1 ; Wmn- "HeHu"
M y
+11 \m\n\_'} { +11 pr'infiqv'h‘: any’; 4
pI'lHL: :‘uz. \19); println.‘ < “1 \;
pI'IHCIIZFiLH'145); 1
pl‘lHCII~S5tFIV_ ‘W11 M,- ﬁx Mimi §
1' punt 13LL18);
;-.winrj>._1\j145'>;
ijHL ‘gm-(“willy u

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Generic are identical to using impl <trait> (for example turbofish can not be used)‘
RMA'! RIIS!
5m: :fmt:: ; 5m: mm: ;
w m‘ 1 j» { UFUYLMI j] {
pmntln! \1“ "my; pnnrlnu“ “,w»;
1 1.
mim'» 1. \nmm'} {
pruxtiil “11211; w-mn- 7-(191;
[Ir-mnn :<,1.5‘\; prlmzz: ~15};
print: : 1& '1'"Hello";; prim; ;=& \ ("Hellu"\;
" 0mm "
10 11 \ 8'1???" Hwy-w.
"Hem," \ mm" I pm mum

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
Generic are identical to using impl <trait> (for example turbofish can not be used)‘
RMA'! RUE!
5m: :ﬁvitzz ; 5m: :ﬁut:: ;
pririi' : j» i w'wtiii 11 i
pmnnn! i1“ " , iii; — prlnrln 1 i " “ , i;
1 Output j
10
Haim ‘v i. 1'5 mini’) {
prim: 1: “11211; HEW’ iii-mu 1m;
Di'liitil‘ :<,1.5‘i; Dv'li'iﬁiLS);
print: : 1& (ii'HelloU; pi‘lﬂti_"HEllD");
Outside of turbofish usage, the behavior is similar (using impl <trait> works like a
syntatictic sugar).

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
1. Generic functions (a more complex example)
Rust Urn-“W, Wm“ mu;
5m: :Upsii ; \
1W rm’ ‘ mm m L “V n
, . \ V m; mp: [WW V NW
\i'JvanAte SLHHL : 4n; , vi: y 7:» \ v [HHW
Pew,” U + ‘(2; 1 mum W1 ‘W
I
minm y
‘1 : \lilnlmte su'v::~ *\16.5,\;
r.‘ : rmwpuTPimntl' .»¢1e.5,5.5,\:
pm'ntlnH" ‘1 , 1:");
I
50 what happens in this case .>

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
G en erlcs
1. Generic functions (a more complex example)
Rust
_
We have speciﬁed mm Tmust Suppﬂlf the Add mm as we knuw mm we will add v1 with v2

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
G en erlcs
1. Generic functions (a more complex example)
Rust
Rust (from 11mm”)
7n‘ , , ‘,7 \ 7- = ‘
We have speciﬁed mm Tmust Suppﬂlf the Add mm as we knuw mm we will add v1 with v2

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
1. Generic functions (a more complex example)
Rust
iisi' etdzzopinndd; M
i 1». 1;
'1
Fi-i minim ‘v i’
19L r1 : ulii pLALE 5L1H11<j3271l1@,5);
1H pg Z v'myvliTCiSHWZI'ff721'118.5,545_1;
println' i “ ir1 i, HZ‘ “1i;
'1
Notice that m order w pruperly exp/0m how the temp/ate shuuld work, We need to specify that the
resu/t afthe addition wii/ be uftype Tus well i We do this by adding "IE <Output17> m the
speciﬁcations of Add trait,

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
E; Generlcs
But what if we want to add more restrictions (e. .we want a specific type to
implement multiple traits). The actual format th allows this:

Format
Where a trait can be defined in one of the following ways:

~ With its name: —

- With its name deﬁned as a template:

- With its name and one or more inner types defined: : <Output=...>
OBS: Keep in mind that - does not necessarily have to be a template type (it
cauld also be an exlstin type that re uires a bound related to the current temp/at .
far example: d means that“ must implement

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Let's consider a slightly more complex function (a function that adds two numbers
of potentially dlfferent types and return a value of a potentially different type.
Rust
r152 scd::ops::Ann; M
nr Lurrlpute surnaTl, r2, fawn: n, ul: TU ,7 r3 5 55

r2: ArldzUutuut , r3) + Fruw'fl; + Fr'urudb,
1
r

T3: :meprn + T3: :FrWHH mil,‘

l
m minml l

1,1 r1 LmeuteiLurlliliBZ, 1:2, 554x16. 5);

1e: r2 : [vautEiE-Wlti-lSZ, n‘, lS-Jtllaﬁ, 51;

pr‘intln|l_“<l|‘1lnf7‘1 “1r;
l

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
I
Generlcs
Let's consider a slightly more complex function (a function that adds two numbers
of potentially dlfferent types and return a value of a potentially different type.
Rust
_.:_

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
I
Generlcs
Let's consider a slightly more complex function (a function that adds two numbers
of potentially dlfferent types and return a value of a potentially different type.
Rust
— _
l

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
I
Generlcs
Let's consider a slightly more complex function (a function that adds two numbers
of potentially dlfferent types and return a value of a potentially different type.
Rust
n _
l

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
Let's anal 1e another exam-Ie:
use <h1,‘+mf" ;
use Stdvmpsi: ;
m < , , >01; , v2: ) r> Output
where 1 ‘ 10+5=15
v + 105+5:155
; < Z > + < > + < > + , 15,155
(
let result : ‘1 (1,) 1 ;; (1;);
println‘(“()1{)r()“, \1) 11, result);
"Mm result;
}
F" O (
let r1 : ;;< , , >(16, 5);
121 r2 1 ;;< 1 , >(12I1, s),
printlnl{“{r1}.{r2} );
}

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Let's anal 1e another exam-Ie:

Output
10+5=15
10 56:15 5
15,155

, H H Display trait is needed for primlni

ii V i ‘7 .
prlntln i n n () , ,1, , result), mam

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
Let's anal 1e another exam ele:
Output
10+5=15
m 56:15 5
15,155
‘ < f) The ownership of“v1" is transferred
when T3::frum(...) is called. As such,
printing v1 is no longer possible,
except inr the case where ~v1"
Implements the Copy tralt.

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
g; Generlcs
Bounds have another advantage. While in C++, its not that easy to enforce a
specific type/list of types for a template variable, in Rust this can be easily obtained
with a combination of bounds and traits,
Let's analyze the following problem: we want to create a generic/template where
one of the parameters can only be selected from a specific set of types. In C++, we
would have to use static_assert to achieve this, and even in this case we would still
be limited by the fact that everything is written in a header and as such it can be
easily modified.
In Rust, we will use a combination of traits and bounds to achieve the same result. i

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Let's consider the following snippet and assume that we would like to make sure
that type T is just some signed integer (one of i8, i32 or i128).
Rust
use stdzzfmtnDlsplay: M
m wmnquw: Tu
“MEI L‘ _ V
T: DlSplay,
printlnHWl‘ , vialue);
l
F” maimj) ‘I
[n 1nt::~151>(-5“/:
print::liﬁ.»(188};
i‘

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
The solution is to create a special trait (that does not have to do anything),
implement it for i8, i32 or i128, and finally add a bound for type T.
Hj'l :m::+'m::m;p11;,: '5
ll Mm» l 100
win :lLMLIHlﬂL'HP g, li7‘l7l111',\2_'>l75i|
mm li.1‘li‘t~g-ei"- a» w, ll w\n~'-1‘.>.i'1881;
w-‘i 1i.;t1v'tig~=v‘i l 11g H l
mm listlitegei'; 1m; M
m w ill‘l;l,aliiv1ll
“l'i-Ai'v
*: [utplay + 'llJTIthégfrrf.
l
pvuvitlnli ~11 , we‘.
l

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
®
Generlcs
The solution is to create a s ecial trait (that does not have to do anything),
implement it for I, I or i and finally add a bound for type T.
'5
v 100
‘ i
n

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
g Generlcs
The solution is to create a s ecial trait (that does not have to do anything),
implement it for I, I or i and finally add a bound for type T.
—
£rruriiu1711 ‘he ‘F.1i “ulna “,1 Juiilni£gtr> A) Hui >.ii>‘i$d
WW r5 u m
a i “hPrP
u l i mm‘ i

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
® Generlcs
2. Structures
Rust
mum PulnttT> ,'
X: T,
y: w Pomt(x:l.Z‘y 2.3)
|‘
m Hmm» 1,
1m p1 7 PmlntntiBZJ x:l, y:Z 1»;
l-Jt p2 : F'\Irl!‘\ti:<(jl>{X114Z,y1243‘y;
println'ﬂ w; 1v ,pl‘);
prjntlv\!(“"|"‘,‘“.p2',¥;
l
In this example we have create twu ub/ects: p1 mm has "x" and "y" oflypE 1'32, and p2 where bath
“x” and "y" are ofrypef32.

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
® Generlcs
In reatity, Rust will construct two completely different structures:
Rust Rust (nppmximutiun)
L1C71L ) dul'lVC'L 1
stvuct mum-T, I1 5mm Polntiljl -1 x: 151, y: 151 1
x: T, dwﬁunt 1
y: T 5mm Puinnjaz -1 x: {32, y: {32 1
+11deth 1 {v “dim; 1
let p1 : Folntxqui le, y:2 1; let p1 : Pillntilili le, y:2 1:
11+ p2 : Pnim;;¢+'23.»1 £142, y:2,3 1; 1w p2 : wimjau 121.2, y;2.3 1;
printlnHW .1‘ ,p11; printlnw 1 .."~“,p11;
Dr‘)ntln.‘k_“v‘ : ‘1‘ 1;:21; pmntlnmj 1- 3",;12‘);
'1 ‘1

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
If we want to implement a method for a eneric structure or enum use the
following format: impl<T,, T.,... Th> gfr'tht/HfNU!N("<T,, T ‘,M. TH>{ 7.}
Rust
MAE‘: w
,, t, Pom\(x.1.v.2)
‘ Y: T Pmm(x:1.2,y:23)
1
nuyl-Ti Punt-T‘ Q
m Hv‘.~|\_ 1 T, ‘,1T',\'>'1~tr"i’unty'>:: .y:‘,,‘> z
w‘ ‘Hm-m .;
1m p1 7 pmntwdel»::w-nlm;
1m p2 : rump: <31-.:m~.t1.2,2.2‘>;
;vr'1rvtln‘\'“l 4'1‘;
mmmw: ' ‘D21;

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
g Generlcs
Types can be inferred from the parameters used‘ For example, in this case, p1 is of
type —because "x" is 1 (an 132) and "y" is Z (an 132).

< l

“mt < > < Output

Xi 1 Pom\(x.1,y.2)
} y‘ ‘ Po\r\t(x:1.Z,y:23)
impl< > < > (

m (/. ,y: >V> Self ‘g

k X‘ X1 y= v )

}
}
‘n U (

1m p1 1 1: (1, Z),

let p27 ~ (1,1J 1,2);

primlm<“<:>) , p1);

prlntln.‘(“(:>) , p2);
)

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
g Generlcs
If parameters do not match the template, the compiler will throw an error.
—
C~~u~r slag] mismat<hcd ‘yum;
> >vtrm4r" '5 11 15
l
let p1: I. (l, 2-5)‘

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
a Generlcs
You can atso use I (underline) as a template parameter to ask Rust to infer the
type:

Rust
*
“my-t t .;
- : r'; a , st;
pruvvllvﬂk J‘
In this case, we did not provide the type "T", but we've asked Rust to infer the type.

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
I
Generlcs
Rust does not support specialized templates (like C++ does).
RAISt
‘in-M, \
.1 , l ._ v
I , ’ , _. vi ‘MW. W, Mir-cw;
. . i .................... ,,,.. ..~.. ..;,..¢.iu lip "L.
Will-Y . - l » 1
l .1 -, y: i l
l .1 - ‘ -, y: \ ' i l

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
However, certain functions can be implemented speciﬁcaHy for a type:
struct < > ( X. , y , )
impl< > < > -;

m <1; , v- ) V> 5&1; < Output

1 ‘X' "WU Pom\(x.1,y.4)
‘ A Pmnt(x:1.Z,y:23)
impl < > k

m <1; ,\,: )'> 5&1‘ 4

<><.X~X,y:y~>}

} A
m <> <

let P] 7 I'< >: {1, i);

let p2 , ::< >: (1'2, 2.3);

pmum m)“, pl);

Printan (-‘) 7 P2),

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
However, certain functions can be implemented specificaily for a type:
trvuv[EES§5] nu :in(!iun av a§§u(1attd iltm “amid “tirigl :uinu int 51ri<1
pu1ni<¢31> A" ‘it turrtni >tup$
Vq‘NWEn~15m
i
A i Sum! vovmn i
i :u»(tiu» av a§§u(iatcd itcm "(wrigl nut :uinu int this
mp1 < > i 15 i M p1 r pm, (-11, mu 1,1 a),
i »»»»»»» ‘un,ivnn up a<<n,,aiPﬂ ,‘Pm ﬁn‘ ‘nunﬂ in
m <1; J ,; ) r> Self 4 i vomH'UA)
. , ~ 1 ; \ ~ i
‘y ‘ X x ' y / ’ ) V "m the :mtm ur anuualsd “m wa) Wm "ur
A V pn,ni(,;1, VVVVVVVVVVVVVVVVVVVVVVV nihg- agiini-in" an
i "PM
__< > _ ,1 Z 2 3), newiiZZ exisrsonlyfurtemplatesufPuintwhere
" ' \ ' ’ ' ' T : .32. As such, this line can notcompile.

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
g Generlcs
3. Generic methods implemented in a structure/enum
StFLICC { fn (J (
><: , let mut p : (x: s, y119);
y: , p4 ;;< >(1a);
) PPintln!(‘F'1:“LUMP-hwy);
p. ::< >(5);
i'wl ( PPthlﬂ!(‘P w ({},(}““,P-><,P-y);
H1 < >(&mut self, value: ) }
where
; < >,
{ Output
selﬂx +: :: (value); _
may +: ;; (mm); P's (151°)
} P|s(ZU,25|
}

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
g Generlcs
3. Generic methods implemented in a structure/enum
Fn < >(&mut self, velue: )
where
; < >,
3 “add” is a generic method within the
( implementation for structure Point
selﬁx +: :: (value);
selfvy +e ;; (Wm);
}

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
3. Generic methods implemented in a structure/enum
where . . . .
_ < > Slnce we need m convert a value oftype T mm an Iaz, then Iaz
, ' ’ must implement From<T>.

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
3. Generic methods implemented in a structure/enum
where
: < >. Since we call i32::from twice, and (he value's ownership is
; transferred the ﬁrst time, T must implement Copy so that the
second i32::from could be valid.

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
3. Generic methods implemented in a structure/enum
ivy“, £82711 ‘he \,.‘\ haund ‘12 F,um<n>\,> ‘5 nu‘ >.\‘>(‘ed
">vnmmr‘n1
\
1r \ n add Mgmn' zest )>
‘ AM ‘
\
Z neln In, ‘allnh\~g \m"\.m.nlat\nn‘ h.r. Vanna
<u¢ﬂrmmmwvﬂv»
unaswwmwh>
(@ZJSFWW‘M»
<QZ.>HM<¢»
am1>m~ﬂ
"0‘! rzqu\rzd my a hound ‘n »Q\"‘ add
77>5wwm,nv§~ p
x
5 \ {"anum\ﬁu,vnw n
\ ,ﬂ "Gmrm w anmmn\nym‘
,\ “MN
a \ u: new!»
x "MMMvmmmdw\msdem‘Mm\nm

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
®/ Generlcs
4. Generic traits
trait < > ( ,—‘
w (self) r> : 0mm
} 515,2“
impl < > for (
{n (self) r> 4 (591‘ as > * 2)
)
1'le < > for <
H‘ (591;) ,> 4 (self as >/ 2-9)
)
fn (l (
let x: : 123 . O;
let y; : 121 . <);
println!(“(><)vfy}‘)§
}

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
/ Generlcs
4. Generic traits
impl < > for (
fr‘ (521?) r> 4 (self as ) * 2 )
12mm < > for < This behaviurisverysimilartua
H“ (591;) ,> 4 (self as > / 2.9 > speclallzedtemplatefmm c++.
)

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
4. Generic traits
Output
51 5,2A6
let X: Z 113 ~ O; Anothersimilarwaycfwritingthe samethingis:
lot x 7 ::< >:; (12218},

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
g Generlcs
At the same time, default implementation for a trait can be used as weil.
trait < >
where Output
SelF: , 123,123
; <SelF>
i
m (sen) > (
Y; (591;)
i
i
impl < > for‘ (1»
impl < > m- {y
tn <> i
let X , ;< >:: (12213);
let y: : 122m (J;
Priﬂtln-‘(WXMii/YJJ
i

***************Ending Page***************

***************Beginning Page***************
***************page number:49**************
It is also possible to overwrite the original implementation:
tun < »
Mme Output
Self: ,
z :ssln 1 2345,12;
m Mm V> < mm)
)
impl < > For (
F" ‘ 4MP» - ~I This behavior is very similarto a
) 1 ‘ "1" specialiled template from C++v

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
®
Generlcs
It is also possible to overwrite the original implementation:
Rust
III

***************Ending Page***************

***************Beginning Page***************
***************page number:51**************
It is also possible to overwrite the original implementation:
Output
\"dn t
tr “new, 12345
impl Fae J
tr t1» its/n,»
l
tmt < \ where Sized
‘ H ,Wm ,, < ~ method cunven w receivesa reference
‘ y, - default implementation of convert to does not require
) any ownership transfer (assignments or From methods
impl 1 > For t» “"edl
H i, 1
Jet x : < 7 ‘5111,81‘,
pnntlni; (x) i,
l

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
g; Generlcs
When usin enerics (methods, functions, structures, etc) we might need to use
i notation to refer to a specific implementation of a generic‘

In many cases, Rust is able to infer the type (based on parameters) but sometimes
(if several matches for the same generic exists) you might be required to use either
this notation or other forms.

As a generic observation, it is preferred NOT TO use turbofish notation (except for
cases where there is no other way around).

Let's see some scenarios where this notation can be used.

***************Ending Page***************


***************Beginning Page***************
***************page number:53**************
Case 1:

Rust One case where “"le can be used l5 lnhe structure

is a temptate/generic and upon creation you need m
“la: ‘ explain w Rust the genenc parameleﬂs)
1 m this pzmcuhr case, we need m explaln Wm is.
7‘ u ‘v ‘ _, when inmahzing a — object.
“ Mm, ‘ ‘ Alternatives:

OBS: Notice that ”x.set(123)” dues not need to use turbaf/‘sh notation as WE already
know

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Case 2:
m m5 case, method setfrum the Implementatlon of
MyNumber is genenc and as such type "T" must be
Mu: speciﬁed or mferred m possible)
_ _ . Alternatives:
‘ ' wilusilu v
- \ Yum ». ‘ ,
'v"\H\ H‘ . Mm , /

***************Ending Page***************

***************Beginning Page***************
***************page number:55**************
Case 3:
Rust Nance that we md not use turbnﬂsh notatmn Thxs ‘5
vq mm M 1 because method set is not generic/template and as
le 111‘ such usmgsomelhlngllkese! <i8>z 1 Ms notevalld
J W W‘ rm‘ ‘ semmcexpreswn
MU Wiqzﬁatiir m '\,..1\L2v 1
MW ;
“we v4 r' H .\.
M H. W 1
w , 11-, MM @1115“
J my 1: .XMMM

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
Case 4:

Rust m m5 case, we need lurboflsh w Spwfy the temphte
for MyNumber. Type "v" Wm be mferred by Rust from

‘ “1W v the argument va\ue of set method

1; ‘ l 1 Alternatives:
=
unhu WU ‘_
'v"\vv\ H‘ H Mm.“

***************Ending Page***************

***************Beginning Page***************
***************page number:57**************
Case 5:
Rust m m5 case, we need w speufy the type of MvNumber
Blue and we need m make sure that we spemficaHy explam
1 ‘* ~““ ‘ ‘1 the parameter type oi (he method set.
4 ,_ ’ Keep m mind that \5 not vzhd as method
set is not genenc
H I (value: ‘ 2+" my‘ ;
; ‘ m
1 ‘u ,1“ \ A ‘ \ 1
w-m H‘ H mluw‘

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
Case 6:
Rust m m5 case, both "v" and "T" template parameters
must be deducted. For "T" we can use turbofish
‘ “1”? ' notanon, “V” WM be obtained from the parameter of
‘ ; set method
‘ ' Alternatives:
utﬂur Wu t.
'v"\vv\ Ht H .11th

***************Ending Page***************

***************Beginning Page***************
***************page number:59**************
I
Generlcs
Finally, let's discuss a little bit What is the advantage of requiring a strict list of traits
within the definition of a Generic‘ Let's analyze the following two cases (Rust and C++)
Rust C44
M ...,-_ . . & ‘ V ‘ brill?» revenue >
‘ WW l*,.
“‘ "‘ i: ‘ >1 m} .‘ei “mi
V “H 'illijih r~ i, l

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
. Generlcs
Now 9 let's look at how errors are presented in both cases (notice that structure Test
has no add operator in both cases, and as such “v1+v2” where v1,v2 is T is not possible.
Rust C44
i

5 i W‘ n t v1‘
i > n

***************Ending Page***************

***************Beginning Page***************
***************page number:61**************
'
Generlcs
Rust also support constants as a generic parameter (similar to the ones from C++l. A
constant parameter must de defined in the template declaration with the keyword
const followed by the generic parameter name and its type (const N: tmey Type I can
be one ofthe following: u8, u16, u32, u64, u128, i8, i16, i32, i64, i128, usize , isize, char
and booL
Rust
win-writ» i . i FixArraylelemE-nts [0 0, 0, 0, 0].‘
. M‘ ‘ y Fix/Amylelemems:['AX'AX'A“‘A2'AQ'A'QA'QA',‘A'])
' r: 7 lelerrienti BI: r
l ,=- a Jelementi: Mun iv

***************Ending Page***************

***************Beginning Page***************
***************page number:62**************
g Generlcs
Let's see a more com Ilex examle:
a mph , mm N > , , 7
WW 4 ‘ 1W N > We
whcrc 5m HF; ,
k ( -'n ', ‘V “ﬂew:
clmcms ~ h \ , ‘ §
WW,“ A
inﬂux /‘ > {:n?
M W ‘PM,
W , ‘ mt X eleventi 1
‘1 mp,
Aemv A m
§

***************Ending Page***************

***************Beginning Page***************
***************page number:63**************
Let's see a more com Ilex examle:
m 1) 1
let a: < , 3> V I UH
let h: < , ‘> V II (4PM
mem >1‘, a),
pmum ( >1 , hf‘
1
ompm
F1xArray(e\emems:[l,1,1,1,1] )
FmArrchMmcnts’[10,11,1Z,13,1A,15,16]}

***************Ending Page***************

***************Beginning Page***************
***************page number:64**************
Rust ,enerics can conditionall im-Iement some traits usin_ the where ke word:
Stmt < » < 0mm“
_ data , X IS odd ? :> true
tmt <
t" {M917} V> t
imp) For (
Frv (my: > < (‘selF z 2) W 11
mm > rm < >
We" Thistells the compiler to implement the tmit
( ' OddNumher over MyShuckT> only ii T also
tn (my; ,> \' mt dam :1 > implements trait.
‘m t1 a
let x x 7 V ( data 3 H
printlnh~ t U . x. (*7,

***************Ending Page***************

***************Beginning Page***************
***************page number:65**************
Rust enerics can conditionall im-Iement some traits usin_ the where ke word:
mm < > < Output
_ am , X IS odd ? :> true
van <

m {M917} V> v
1mg) For (

m (my: > < 1-591; z 2) W 11
lwm > m < >
where

, Since implements OddNumbensowill

( , ‘ implement OddNumber as well.
> ‘" "Ml" '> \ "1‘ “m ~‘ > Asaresult,we :ancallx.is_odd()‘
‘m n a

let x x 7 V ( data 3 H

printlnlx~ \ n . x. (‘m

***************Ending Page***************

***************Beginning Page***************
***************page number:66**************
Rust ,enerics can conditionall im-Iement some traits usin_ the where ke word:
strut < > ( tvvuv [E2399
mm < 1 1 Stun '4ys!rn(!<¥>\'
h, {MPH} V> v 1‘
T \ mam; w nzz rm Inprz Inr nw Hurt
1mg) For v’ \ rocsv z Sulsw'y nyszmzuun DrrNLmbU‘
m (my: > < 1-591; z 2) W 1r
.7 11‘ puvuv ‘(x A: nu ’ > i)‘, x MBLLUVV
mm > n» < > ‘
where \
(
m (my; V> \, m; dam :1 >
‘m n a
12¢ X k 7 V ( am 3 M mm; case,weci|| m call Li5_ﬂdd() as the trait
_ wintlnu ~ \ n - x- (11, wasnoumplememed overMyStruct<u32>due
' tothe m: that does not implement .

***************Ending Page***************

***************Beginning Page***************
***************page number:67**************
Rust ,enerics can conditionall im-lement some traits usin_ the where ke word:
mm < > l ompu:
ma . 5
mm <
l" {Ru-ll} V> ,
imp) For l
M (my: > l vim z 7) W l a
mm \ rm < >
where
‘ m {Mm V> ; m; dam :1 >
‘m ll l Notice thatthis code compiles correctly‘ This is because
leg x V k 7 e l am 2 l is only implemented for MyStruct<T> ifonlv ifT
.7 Wm” ‘l 'X'mal' implements ‘Othenuise, the trait is is not
implemented and if lsiudd method is nut called the code compiles.

***************Ending Page***************

***************Beginning Page***************
***************page number:68**************
This conditional implementation oftraits for generics allows Rust to add a specific
behavior whenever - is being used over a generic. Let's analyze the following
case:
RUSK )7qu
pr'l'itln‘\l'x 7 it,’ r v l‘ Dniilnlil'x 7 .1 r v 1‘
>< : Somelll, y : Some-[1) WW," a 3
l
i “iii ‘Lille iLLiHEL , ii; y,‘t W‘,iin4>yring. , will»
; i 1,. , Z .
.ii mum“ .HJMH,»
l Y um WW.“ W after mm

***************Ending Page***************

***************Beginning Page***************
***************page number:69**************
a Generlcs
So why the case with — works, but the case with Opti0n<String> does
not ?

Let's see how Option is defined
Rust (optianvls)
Z ‘W
mtg‘ Z ‘ 7‘ Z 7 H ‘

***************Ending Page***************

***************Beginning Page***************
***************page number:70**************
®
G en erlcs

So why the case with — works, but the case with does
not ?
Let's see how O
Rust (Option/5)

L i32 Option<i32> Slrmg

Optlnn<SlHng>

***************Ending Page***************

***************Beginning Page***************
***************page number:71**************
7
Match
L

***************Ending Page***************

***************Beginning Page***************
***************page number:72**************
Rust has a specific keyword (-) designed for complex and efficient value
matching against various patterns‘ This is similar to the - keyword from C++,
however it is more complex and can perform more complex matches.
The general format for a match is:
match value (
rulej, , pattern :> code
ruler where -_ has a pattern :>(code)
the followmg a panam if condltlun => code " " is
> rule", format: a pattern it condition => t cork) also called a match guard
A rule in a match is often called ah irm of the pattern matching l

***************Ending Page***************

***************Beginning Page***************
***************page number:73**************
g; Match
There are a couple of constraints that need to be followed for a - to be
correct:

1. At least one rule must be provided to a match construct

2. All gossible values must be covered by the existing rules provided to a match
construct

3. No overlagging rules‘ There can not be two rules in the same match construct
that match the same value.

Character underline (‘I’) used as a pattern has a special meaning : everything else.

It is similar to the usage of - keyword in a C++ switch statement.

***************Ending Page***************

***************Beginning Page***************
***************page number:74**************
®; Match
The pattern used in a match constructs also has multiple forms:
1. A single constant value leg‘ a number, a string, etc)
2t Multiple constant values, separated by ‘I’ operator 9 (etg. 1 | 2 | 3)
3t A range 9(e.gt1..:5)
4, An enum
5, An array
6. Aslice
7. Atuple
8. Astruct
9. A pointer or a reference

***************Ending Page***************

***************Beginning Page***************
***************page number:75**************
Let's see a very simple example:
W‘ ‘ 1 one
m m 1. 1Y1 1
WU‘ two
1 7. wwnw “nrvfy three
A , wwmwwww four
3 = mum‘ “nuﬂ'v.
4 7 J )utln‘ “F0\Av"\, ﬁve
V J')ntln““¥1me"\, Anothernumher
,, ﬂ'vnﬂn‘ “l'mmhcr' me ‘ Ancthernumber
‘ ‘ Another number
1 ‘ Anuthernumber

***************Ending Page***************

***************Beginning Page***************
***************page number:76**************
Let's see a very simple example:
Rust
1 r J'irillui “Wm ,1 l Wm. , _;
s ~ Viv-.iilinwmw l “Hm as m... U: .vl [7111“ as w wi MM
Z 'v'uiilliil “WM-w. l
4 7 Mum‘ “mil-i,
5 7- :i )iitml “raven,
Notice that we have removed the arm/rule ” :> println! ("Another number") '.
As a result, not all possible cases are covered, and a compile error is thrown. The
error also provides a list of values that were missed (values from i32::M|N to 0 and
values from 6 to i32::l\/|AX)

***************Ending Page***************

***************Beginning Page***************
***************page number:77**************
Let's see a very simple example:
\ \ = "my.
um“ 7 . \ r 1.
"U|r‘ee‘ ‘ =
"mm" 7 1 > 7 4,
,‘ﬂ- nlhm“m]u~ Z m‘ H,
Notice that we can also match strings.

***************Ending Page***************


***************Beginning Page***************
***************page number:78**************
As a generai rule, in case of strings, you have to check every one of them i so the
usual complexity is O(n). However, in some cases, Rust can make some
optimization:
Rust (1 73.0’uptimfzed)
"mo" ,t, z‘
mm“ a‘
7 7 n. , c
i , v

***************Ending Page***************

***************Beginning Page***************
***************page number:79**************
Match
As a generai rule, in case of strings, you have to check every one of them i so the
usual complexity is O(n). However, in some cases, Rust can make some
optimization:
Rust (1 73.0’uptimized) j f“
“Her ~ 25, ' it hisw-HJ

***************Ending Page***************

***************Beginning Page***************
***************page number:80**************
You can initialize any kind of variable in a match construct:
1w rzm r. 12:‘ y 12:1 [1:83,
r p r in‘
test 1
‘l - n r "uniti::1.v 1i‘
V I. V “mm 1», 1r‘
‘n ‘r p’ Vim-y. M 3},
in ~ p r >,r'r-i'4r;‘14i.
i Z p Z which M m,
limb-n ll l \,p.‘\, {Lyn
In this we initialize variable "p" that is of type Point.

***************Ending Page***************

***************Beginning Page***************
***************page number:81**************
When initializing a variable through a match construct, that variable MUST be
initialized in all rules/match arms!
Rust
"mm-m “m will"; v 15 pussztllwvrnrnnzhzed
r V bmdlm‘. MW hm M M mmmhm
a ml W r
l:l l my r A r r mm» 1, m
r VVVVVVVVVVVVVVVVVVV b,nr,ng ,n,t,1|,,ar "ara ,n rpma innr,t,nnr
11 i [minim v 1mm “will.
l 7" .».t- vita More but 1t 15 Passihly'uninitiuliztn
l
Notice that the default case ‘I’ does not initialize variable "I"

***************Ending Page***************

***************Beginning Page***************
***************page number:82**************
a Match
Let's see a match construct that uses the boo! type‘
Notice that there is no need for the rule/arm "l’ (the default case) if all possible
cases are already covered ! (in case of a bool variable this means the case of value
true and the case of value false).

***************Ending Page***************

***************Beginning Page***************
***************page number:83**************
However, it is important to know that using the default case "i" when all possible
cases are already covered will not trigger an error but a warning.
M mm-
Hm
V iv-mlr-wwralue 1; mew
' i'vnrlnl “value i5 False“ r
7 ,v-mrw “'mmvlhrrrg mu Warning
‘ l rurrurig. Wilmer ‘rm-H
l
l rink! ¥lurriluriwnlinLle “Henryl w L, “mun

***************Ending Page***************

***************Beginning Page***************
***************page number:84**************
® Match
Another particular case are floating point values. While right now they are allowed
in a match construct, they are going to be forbidden in future releases due to high
complexity around comparing floating point values (eg. including NaN values)‘
- 7 1.1V
1.1;. wry-aw‘ l if l , Warning
0.>’1~[\r1'rlni\ l‘ if“ l, ~>wmw-w
w ,rmu r who“ w w‘ =l t > “MMW t
Iniminnn i i if i i
M, 1r. “in MW, 1 W t n 1 an“, ‘,1,
More info on this topic on:

***************Ending Page***************

***************Beginning Page***************
***************page number:85**************
To match multiple values, use the I operator like in the following example:
M” m!-
z , Pi- ntli‘li“ﬂn mid WW, nimbwrw
will 7 ,H- mi iiwum- "imam-4. umlrr 18"‘.
11i11i1‘ 1a Z prom, ‘Winnie rminberi may 1t
7- w Lntlr‘ l l “Mother \.'alue"i
The same logic where every possible value has to be matched by one ofthe rules
has to be present in this case as well (this is why we need the final ’_’ (default)
rule).

***************Ending Page***************

***************Beginning Page***************
***************page number:86**************
a Match
However, it is possible to duplicate a value when using the OR (‘I’) operator. The
code will compile and will use the match rule that first uses that values At the same
time, a warning will be thrown to explain that the second value is unreachable.

'M' ME-
Warning
l
l "Ll! *lvuvntmueatmu! “Hermit Lil L,‘ Hermit
In this case, the second 19 value is considered an unreachable pattern. Notice that
the output now is “Prime numbers under 10" as the match is done for the rule that
first uses 19 (rule with 3|5l7|19)

***************Ending Page***************

***************Beginning Page***************
***************page number:87**************
a Match
It is also possible to match entire intervals [by using the operator s). However,
keep in mind that matching an entire interval [or several of them) is not always a
simple job (if you want to improve matching performance).
M mm-
grade -:
As such, it is preferred to use inclusive intervals (a..=b) rather than exclusive ones.

***************Ending Page***************

***************Beginning Page***************
***************page number:88**************
a Match
Partial lntervals can be used (notice the 5“ usage ln the next code).
M" mm-
Keep in mind that default value ”_" has to be used in this case to cover all possible
cases (for example value O or negative values).

***************Ending Page***************

***************Beginning Page***************
***************page number:89**************
M atch
Overlapping intervals are also possible!
m‘ l
a .718 7 uvlvltln‘l“£lass paSSEdl'l‘
_ 7- .melwlmalm grade“ l,
OBS: Keep in mind that intervals are hard to optimize and that the goal afa
matcher /'s to obtain an 0(1) access/check time‘

***************Ending Page***************

***************Beginning Page***************
***************page number:90**************
For range/intervaI-based rules only numerical and char values and patterns can be
used. As such constructs like the next one that attempt to match intervals based on
strings are not possible !
Rust
ll") l l '
l ll‘ V “l'rnrﬁ'l
Mm l l l
"any." .4211" ,muml-‘nlwws1 Mm
" " . rhea" V w 1 itsnl “Interval ti-m" ll
r Lmr'tlnl l "Mother inter val“ ll
Mums]: W, m, m Wm W; m 3mm .n wt Wm;
"7» WNW,“
l m, ., of \vuc WM m M .l Mm be Em N MW

***************Ending Page***************

***************Beginning Page***************
***************page number:91**************
Match constructs are often used wlth enums. Notice that since an enum has a
finite set of possible values, the default "I' case is not needed.
RuSl‘
El U.‘
will
l 7 ml
Mm‘ z
1M :>pr)ntl'l‘\"ﬂ=n“l.
.svw ~ prmtl wusvwnw
:FlH-E V tr‘)ntl'l‘\“E.1ue" >
Md,- 7' FVYYlll'lll'lFilﬂfkllM

***************Ending Page***************

***************Beginning Page***************
***************page number:92**************
If a speciﬁc case from an enum is not covered, the Rust compiler can also provide
insights into what is missing and what needs to be added‘
RMSF
i iiiniiiqiqtl nnnri.~augrv.i parriing ‘mini “ya . in? n.iiin
at,» i
Mm i i
MJ :vpvm!i'v‘i"ﬁed“i. y
a in,” “NKUiﬁ Via? a‘, untt,~iﬁ Rant Rip hﬁ,nz handing h, and,nz a
1 ii‘ h ‘ii Nit“ i “11d ‘in p‘((.iu U‘ ‘H .‘pii it p‘((.iu ‘V VMUMH
i

***************Ending Page***************

***************Beginning Page***************
***************page number:93**************
g; Match
Let's discuss another case that involves a match construct and an enum.
Let's consider library "A" that exports an enum with a list of possible errors defined
like in the following way:
Let's also consider application "B" that uses library "A" as a dependency and has a
code that matches the errors from library (crate) "A":
—

'"r'Tl cur: 7 l i‘

***************Ending Page***************

***************Beginning Page***************
***************page number:94**************
What happens if library "A" decides to add a new value in the error list ?
The immediate result will be that application "B" will not compile anymore:
‘J; ‘ ‘ f j j‘ Rustwill show an error hecausethis match construcﬂrom
i; V“ ; j 1 :‘,j application "a" does not match all possible values uf Error.
So what are the solutions in this case ? /

***************Ending Page***************

***************Beginning Page***************
***************page number:95**************
g; Match

So what are the solutions in this case ?

1. Application "B" has to refactor its code to match the new constraints from
library “A”. This is possible, but if library “A” changes its enum often, this might
be an issue for the developers of application “A”

2. Library "A" uses the non-exhaustive attribute for their enum:
This flag will force the compiler to explicitly request that application “A” adds
the default case (I) on every match even if all cases are already treated. This
will however make sure that if newer versions of library "A" adds new variants
to the enum, they will be treated application "B'l

***************Ending Page***************

***************Beginning Page***************
***************page number:96**************
g; Match
So what are the solutions in this case ?
2. Library "A" uses the non-exhaustive attribute for their enum:
This flag will force the compiler to explicitly request that application “A” adds
the default case (I) on every match even if all cases are already treated.
As such the code from a lication "B" will be chan_ed into somethln_ like this:
‘>1 * l ll

***************Ending Page***************

***************Beginning Page***************
***************page number:97**************
Let's try a more complex enum (one that contains specific values as well)‘ You will
notice that this code does not compile as it requires as to specify the value as well.
RuSl‘
tvvuv £9521] tiJEL3td ill: Vevltel ill: ,1,l1‘¢ U, LU‘ tile‘ lulld elslt ,1,l1‘¢ “laziltt lit‘
‘Y 2 i (“time 1m n mm“ [mu-me is H m l,
Z Wm“
mm l

I!"Ill 7- .H )ntlr‘li“D)5tan:e )5 1n inch“ 1‘

Wu V rr‘1ntl'i‘\“[>i5tarvce is 1n can‘

.rl'Y[llYill'ilinrH~fD"F('1~IVY mu

***************Ending Page***************

***************Beginning Page***************
***************page number:98**************
In this context, the underline character Ll means to match any value as long as the
variant type is the one specified. While this code is correct, We might want to get
the actual value as well (e.g. in out case value 100)
M m5-
ll mm l
. n , m'wml Wm‘
u l

1U all» 1mm 1- ,mlllllll ll l ll l l ll.

mall, cw; , ‘Until-‘ll ll’ l ll a cl cl l‘

31:'all:>: will; a w-mll-lll ll r ll l l l,

***************Ending Page***************

***************Beginning Page***************
***************page number:99**************
The general format to ,et the actual value associated with an enum variant is:
:: (variableiname) :>{ l
Rust
1w‘ M Distance lS 100 km
I la) w l l
r , Imam‘
Win‘ r
rm,‘ ii‘ r a pviiitlrrli'UlStJHl'lZ 1:. imh". H r,
w H r V. w,Hrwiwlmw 1'. mm r r‘
W ‘w piniLJvili"[/15taru:e 1; mm r h

***************Ending Page***************

***************Beginning Page***************
***************page number:100**************
M atch
We can also match an exact value associated with a variant (in this case for variant
Km we have two rules/match-arms:
~ Km(90] that WIH match cases where D\stance type IS I and Its value \s I
- Km(value) that will match the rest ofthe cases where Distance type is I
Rqu
w H t e. ,H W 1m t mum‘ e 1'. my t q

***************Ending Page***************

***************Beginning Page***************
***************page number:101**************
Match constructs are often used with Option<...> and Resu|t<..,> enums to match
the two cases those two enums can provide,
Rust
t WUMJWJH,“: JILMULUUH 1:4 1
vii z “ Z ‘7 v3 t
‘ ‘.un» lhls \san odd number 11
q z
‘.m'n: putlvm u‘ t h ‘m t t,
tr‘)r‘tlr'\‘\ t t t t t :1 J‘;

***************Ending Page***************

***************Beginning Page***************
***************page number:102**************
g; Match
Similarto how enums matching works, a structure and its value can be matched in
a match construct. In this case , the underline character 1L" has a special meaning
(it implies that a specific field from a structure can have whatever value we want,
and we don't need to know its value).

Let's consider that we have a 2-dimensional screen of size 100 x 100 where points
can be written.
Each point is represented by a structure with two coordonates (X and V) and we are
interested in knowing if a point is:

- The origin (0,0)

- On one ofthe margins (X = 0 or X = 100 orV = 0 orY = 100)

- The centerlSDjO)

***************Ending Page***************

***************Beginning Page***************
***************page number:103**************
Let's see how we can use a match construct to build this rules:
m mm-
m» 1
mums V. vnmw "UFiglnHM
'lz:5€\w,‘:501 " Dr'l'x'ln‘\"€ervter“h
;, w , V yw\'\'\vv‘\"8ntfnm WW“ ,
;. 1w.» 1 1 mew-mp mrgmw
w: A» Z pv-me-Lm Maw‘,
n: mm): V. pnmwv'wigm may-gin“,
" DV'11'1H““UCYYEV‘ pmntn

***************Ending Page***************


***************Beginning Page***************
***************page number:104**************
®
Match
Let's see how we can use a match construct to build this rules:
m mm
——

***************Ending Page***************

***************Beginning Page***************
***************page number:105**************
It is also possible to associate the name ofthe field to its value b NOT specifying
the expected value (esg instead of “x:<value>" or "x:_” just use ” ")
_> ‘ ‘ BoltummarginlOJBl
Wat) l
meme 7 pm‘uniﬁcmgmwi
l~.:58i',‘:5€'l 7- wwlnw-cenw-w
;, w; 7v w ‘Vi-\"w-nmm WW m‘ i", i‘
;, mm l : ,mew-rup WW»
l/ziiwzih Z w will "Left ilargwm
ix: ,mee.‘ a unwinwmgm margin-w,
V, [W'l'l'lrlli "Other pmnt"i

***************Ending Page***************

***************Beginning Page***************
***************page number:106**************
®
Match
It is also possible to associate the name ofthe field to its value b NOT specifying
the expected value (esg instead of “x:<value>" or "x:_” just use 'i')
M’ ED
‘Z “MILL/13M

***************Ending Page***************

***************Beginning Page***************
***************page number:107**************
Match
It is also possible to associate the name ofthe field to its value b NOT specifying
the expected value (ecg instead of “x:<value>" or "x:_” just use 'i')
M" ED
i: Way/11:,

***************Ending Page***************

***************Beginning Page***************
***************page number:108**************
If a structure has multiple parameters and you are interested in matching only one
of them, you can use to specify that the rest of them should be ignored.
t . Some pomt with x : 5
‘/ r
,
mm- , 1
=_ ‘my w‘; mm 5a; 7v w ‘Yr-w "(LnN'r-“H
,t s. .r Z wmrnw-m» pumt Mu‘ -:S"r,
7 Z Wmnw-Dmr- pmlrt"r

***************Ending Page***************

***************Beginning Page***************
***************page number:109**************
®
If a structure has multiple parameters and you are interested in matching only one
of them, you can use to specify that the rest of them should be ignored.
M’ ED
{x:5,y:i,z:i,tzi,‘> :> pr‘irrt1rvl("Snme point with x=5"‘r‘
{x;5,y,z,t;> := phintln'USome point with X:5"r,

***************Ending Page***************

***************Beginning Page***************
***************page number:110**************
A similar \ogic to what happens in case of a structure can be applied any tuple. Let's
consider the previous example with PoinMD defined as a tup\e:
‘mt’? 1
‘Mam 7 prerM“ﬂr\gm“\_
a A 1 w mhuwdu. ,4. e
‘11. .‘ = Wm, n ‘1-: ans 15 o and » ans 15
\ ‘ . JIM 7- qutlr“\“T axis i: 19W‘
\D‘ . ‘ 1 7 wantlr“\“& )5 B, ‘I : ‘ z : ‘ r )5 lunm'ed“, , 1‘
w‘ ‘M 7 pr ~wa \> w ‘Y m1 v an‘ lgwm, v 15 w u
Z w th“quer MW
\

***************Ending Page***************

***************Beginning Page***************
***************page number:111**************
®
Match
A similar iogic to what happens in case of a structure can be applied any tuple. Let's
consider the previous example with PoinMD defined as a tupie:
M" m-
-

***************Ending Page***************

***************Beginning Page***************
***************page number:112**************
Match
A similar iogic to what happens in case of a structure can be applied any tuple. Let's
consider the previous example with PoinMD defined as a tupie:
M“ ED
I

***************Ending Page***************

***************Beginning Page***************
***************page number:113**************
Match
Keep in mind that the order of the rules matters. If two rules match the same case,
the first one (in terms of the definition order) will be used‘ In our case, -
matches both - and -. However, the result will be the first one that its
belng matched 9 (0,“)

***************Ending Page***************

***************Beginning Page***************
***************page number:114**************
Just like in the case of tuples, a similar logic can be applied for array as well. Lets
consider the following example:
“"‘ l '7 nan], Avectur with second element z and last one 4
imam 7 pi‘ minim-i \iLrh-n- ‘.uth mm.“ r
a, ,l I Wm, ‘WA yum rim, mm AWN‘ 1mm
.,5] Z prim, M ‘A vettm rim rm element 5‘ =.
23 7- Lr,ritlr"i“A veritm‘ wlth first element Z am‘ lazt one 3“ r
r1. r41 V warmly-‘WA WW m» :ewnd 8mm 2 and 1m m 4w
OBS: lust like in the previous cases, Icon be used to match multiple consecutive
elements.

***************Ending Page***************

***************Beginning Page***************
***************page number:115**************
Match

You can also capture the value of an element from the array, and/0r combine this
method with the usage ofland I to ignore one or multiple values.
‘M’ mm-

[tmaaai a prlrtln‘ "a \IEYZCUV‘ “mi Zems'i,

[9, r ﬁl ~pn'i:1w "a vector‘ “mi [0, , , 1“, , ,7‘,

l.v‘i,5l ' [ir'l'i‘lnl "D wetter’ with lait elements and 5". iv
OBS: Notice that we don't need the final rule/matchaarm for the default value (I).
This is because [_,m,..] will match everything else and will provide the value of the
second parameter in variable “I'

***************Ending Page***************

***************Beginning Page***************
***************page number:116**************
Keep in mind that in case of arrays, the number of elements described in each rule
must match the number of elements in the array, In this next example, the second
rule/match-arm has 3 elements instead of 4 (the number of elements from “I”)
Rust
'1 rl Hmww‘ u'vrtnr Mm re, r l l.
I
l ,,,,,,, F,pa’lac 4 element’

***************Ending Page***************

***************Beginning Page***************
***************page number:117**************
®
While in case of arrays, the number of elements must be matched by all patterns,
in case of slices, there is no such rule. Let's analyze the next example:
m5:
Jet Quiver’: M 1r ;
pr'l'rtln‘\"Te5t1ng “,rwr r;
W,»- n r r
l» ,Vmww mm‘ a ~11‘? Wu, W PM?“ "r,
Mt] 1 Wtcnw r-mrh: mu elements my“ 1; ‘r . last 1; a r.
w] 7~> r J mum“ Hatch: mu elements l_ V and t m, r,
1, ,ll 7- 5 Ulrtl'rlr“ Hatch three elements: ﬁrst 1 , last: l' lv
1, H5 '1 l pr-rntlnll" Hatch: Start: \uth l and ends \uth 5"‘v l'
'1 ; Wm Hr» l-lahlr 0m." (Mt. r
, - ED
warn ' Teslrng [10,51
v c mmwl, Maldr tlrveeelemenl, llr>l1,la>15
‘hm n r, Tesnng r11
My’ 17,”, MUN Matrh ailrrewlthrrlvéelemam
ChiliiJrrias [.1] r; “We l1'"1
1 a Mm maelsmenu-[Frr>t|>1,la:-\r§m

***************Ending Page***************

***************Beginning Page***************
***************page number:118**************
®
While in case of arrays, the number of elements must be matched by all patterns,
in case of slices, there is no such rule. Let's analyze the next example:
m5:
'r, ,ll 7- 5 EV‘)V‘tl'lll“ Hatch three elements: ﬁrst‘ 'r , last: l' "r; l,
1, H5 '1 l prrntlnll" Match: Etar'ts with 1 and ends with 5W, 1'
—

***************Ending Page***************

***************Beginning Page***************
***************page number:119**************
. Match
It is also possible to capture a slice from the array by using the sigil character (I) to
bind a part ofthe array into a new slice that can be used in the rule/arm code
In case of arrays, the general format for this type of binding is:

Keep in mind that —(to bind a variable name to a single
position) is also possible but unnecessary as you can use the variable name directly.
m:
"W j PJ'M'” Firstthree elements: [0, 1,21
m, ll 1 1i 1 a pi- iiHr-li“'iuridle “r m: WW 151 ll‘ i‘
Z ‘11711111 ‘ammonia gist-w

***************Ending Page***************

***************Beginning Page***************
***************page number:120**************
a Match
However, binding a value with a sigil character (@) is useful for cases where that
value is not stored in a local variable (but it is the result of an expression). Let's
consider the following case:

Rust

10v} 7 J Jilterill e t‘ l‘

i V when ll l it l
Notice that the result of get_a_random_value[) function is not stored in function
main. As such if we want to use the actual value in one of the match construct
arms, we can't.

***************Ending Page***************

***************Beginning Page***************
***************page number:121**************
a Match
However, binding a value with a sigil character (@) is useful for cases where that
value is not stored in a local variable (but it is the result of an expression). Let's
consider the following case:

Rust Output (possible)
nglsra..=01= threw t ll it lil l l ll ,Hl.

Notice that the result of get_a_random_value[) function is not stored in function

main. As such if we want to use the actual value in one of the match construct

arms, we can't.

***************Ending Page***************

***************Beginning Page***************
***************page number:122**************
You can also bind with enums variants values. Let's change the previous example to
use an -instead of an u8 value.
Rust
| Output (possible)
7 Yuml u.“ ll‘ > ‘ Beuevman halfwlth valu2157
n luluk" l Lunel 1 l :1»: l Hun!

‘m m 7. ,H Hm \szer

Sunvl l ‘f 1.,:J£<: = Wm, ‘mu. my‘ nan mt» w“! m ,

Salve‘ l l; ED. J19‘ 7- uv,rltlr‘ll“[letter than n31; mm value: “.l l,

Snrvsl Wm ,~ [\\“l‘tly'll“l€\5“ H

[Hm-l 7 pr‘ mm-wnmr raswsm

=er 7. ,H Hllvll“H1gh~—v n.“ m “new

***************Ending Page***************

***************Beginning Page***************
***************page number:123**************
®
You can also bind with enums variants values. Let's change the previous example to
use an -instead of an u8 value.
R r
“S Output (possible)
Better than half with value: 57

***************Ending Page***************

***************Beginning Page***************
***************page number:124**************
Rust also support guards for a rule/match»armt This allows using a more complex
checks than the one than the ones allowed by the pattern rule/matching arm.
R
u“ l ‘ Output (possible)
5-3;; EH15‘ t l ‘t 1mg; Betterthan halfwlthvalue 95
n :1 >1 1 ‘Mn, ‘Winn! t.
n - 49 7- wsrltlr‘ll“b35; than halt with ualub .
1t 3‘? 7 WJVZJFllHBECCEV‘ than half mth value: n
w , ~ m r pflltl7‘llll1ilﬁlll‘
7. ,H- vvtlrll“lmy1ﬁw'~lhh‘unlur'n
OBS: Keep in mind that guards might have a performance impact (use them
carefully!)

***************Ending Page***************

***************Beginning Page***************
***************page number:125**************
Let's consider an even more complex example where we use the match guard to
filter out prime numbers.
{n p, > \ Outputllwssihle)
r "3"“ { ‘<7 2”“ Aprlmenumber:5
M (m A” ) '> l
1r ,al E < z r railrr False, r
1r 11, ,, 2 r mm true-ll
w 1 r / 7r [MM/M
lllvrl,l%1l"ldlvrluv MW‘;
lawn true;
l'rr a) r
H- n w, <
v lv::ﬂ :>pr!ntlnl{ ‘r >r
v 7+ lv‘, 7> Printlnll ~ were ‘r (Mr/1,
v V> printlﬁll 'l‘ ‘ Yr" U ,vr
‘I

***************Ending Page***************

***************Beginning Page***************
***************page number:126**************
®; Match (C++ vs Rust)
—m:-—
Match numerical value lag. integers) v55 v55
Match strings cunstams (literals) —) ” YES -
Match enums (classical) VES v55
Match enums (variant swle) VES -
Match structs YES -
Match tuples v55 r
Match arrays YES -
Match multiple values v55 YES
Match intervals v55 -
Guards v55 r
Variable binding VES -
Continue w next rule/match arm _ v55
%

***************Ending Page***************

***************Beginning Page***************
***************page number:127**************
g; Match
Keep in mind that a match construct is desired to be fast (-with -access time),
but these optimization will not always be possible‘ Some of the limitations of C++ are
because the can not obtain a better performance with a switch for some cases (other
than a Mane).

Examples where using a match should provide best performance:
- Constant numbers lideally consecutive numbers: 0,1,2, t...)
~ Enum values (but not variants]
Examples where using a match will probably translate into a chained if...e|se construct
- Strings -) it is more efflcient to use an automata
~ Multiple numeric intervals (especially if they have gaps)
- Guards

***************Ending Page***************

 