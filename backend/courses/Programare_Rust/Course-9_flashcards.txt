[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
In Rust, what is the general rule regarding visibility within a module?
--InteriorSeparator--
Everything declared in that module is visible for every code in that module.
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What keyword is used to make a function/object accessible outside its module in Rust?
--InteriorSeparator--
pub
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are valid formats for the `pub` keyword?
--InteriorSeparator--
(right) pub
(wrong) public
(right) pub (super)
(wrong) private
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If a struct is declared public, but its members are not, can the members be accessed from other modules?
--InteriorSeparator--
No
--InteriorSeparator--
medium
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
According to the provided text, what are the two exceptions to the rule that everything declared within a module is considered private?
--InteriorSeparator--
(right) If a trait is declared public, its associated items are public as well.
(wrong) If a constant is declared, it is public.
(right) If an enum is declared public, its variants are public as well.
(wrong) If a module is private, all items in it are private.
--InteriorSeparator--
medium
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What keyword is used to import modules in Rust to avoid fully qualified names?
--InteriorSeparator--
use
--InteriorSeparator--
easy
--InteriorSeparator--
41
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What two items should be public for accessing a function in nested modules, from outside the parent module?
--InteriorSeparator--
Both the function and the modules they are in.
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What two things does Rust consider that each module is formed out of?
--InteriorSeparator--
A file with the name module_name.rs, and an optional folder with the name module_name.
--InteriorSeparator--
medium
--InteriorSeparator--
46
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What command is used to create a new library crate in Rust?
--InteriorSeparator--
cargo new --lib <library_name>
--InteriorSeparator--
easy
--InteriorSeparator--
64
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are three ways you can use a local crate in another Rust project?
--InteriorSeparator--
(right) Publish it to crates.io and use it as a dependency.
(wrong) Convert it to a different programming language.
(right) Link it from a Git repository.
(right) Link it directly from its local folder.
--InteriorSeparator--
medium
--InteriorSeparator--
69
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What section in `cargo.toml` is used to specify dependencies for a project?
--InteriorSeparator--
[dependencies]
--InteriorSeparator--
easy
--InteriorSeparator--
67
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What attribute is required when exporting functions from a dynamic library in Rust so that other applications can use them?
--InteriorSeparator--
extern "C"
--InteriorSeparator--
hard
--InteriorSeparator--
80
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does conditional compilation allow in Rust?
--InteriorSeparator--
Building different branches of code based on some condition (features) that can be activated or not.
--InteriorSeparator--
easy
--InteriorSeparator--
84
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
According to the text, what are the two ways to use features in conditional compilation?
--InteriorSeparator--
(right) #[cfg(...)] proc macro attribute
(right) cfg! macro
(wrong) #define preprocessor directive
(wrong) Use environment variables
--InteriorSeparator--
easy
--InteriorSeparator--
84
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In order to be used with cargo command line, where MUST all features be defined?
--InteriorSeparator--
cargo.toml
--InteriorSeparator--
medium
--InteriorSeparator--
85
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How can you enable a feature directly in `cargo.toml`?
--InteriorSeparator--
Via the `default` key.
--InteriorSeparator--
medium
--InteriorSeparator--
85
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What parameter do you use with cargo command line to enable one or multiple features?
--InteriorSeparator--
--features <name1, name2, namen>
--InteriorSeparator--
medium
--InteriorSeparator--
85
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What attribute can be used to negate a cfg attribute in Rust?
--InteriorSeparator--
#[cfg(not(...))]
--InteriorSeparator--
hard
--InteriorSeparator--
92
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What do the `any` and `all` keywords do when used with the `cfg` attribute?
--InteriorSeparator--
(right) `any` checks if at least one of the specified features is enabled.
(right) `all` checks if all of the specified features are enabled.
(wrong) `any` checks if none of the specified features are enabled.
(wrong) `all` checks if none of the specified features are enabled.
--InteriorSeparator--
hard
--InteriorSeparator--
93
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does ZST stand for?
--InteriorSeparator--
Zero Sized Type
--InteriorSeparator--
hard
--InteriorSeparator--
34
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What macro from `std::marker` allows adding various data members within a structure that will not be public but have a size 0?
--InteriorSeparator--
PhantomData
--InteriorSeparator--
hard
--InteriorSeparator--
35
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of using modules to simulate a static data member for a structure?
--InteriorSeparator--
(right) To associate data with the type rather than an instance.
(wrong) To avoid copying data.
(wrong) To make data globally accessible.
(wrong) To control memory layout.
--InteriorSeparator--
hard
--InteriorSeparator--
40
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the equivalent with target_family = "unix"?
--InteriorSeparator--
unix
--InteriorSeparator--
hard
--InteriorSeparator--
106
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What keyword is used to indicate that a module is used for unit testing?
--InteriorSeparator--
test
--InteriorSeparator--
hard
--InteriorSeparator--
106
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What attribute can be added to a conditional compilation to specify some compiling attributes?
--InteriorSeparator--
cfg
--InteriorSeparator--
hard
--InteriorSeparator--
140
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are two types of documentation usually needed for every project?
--InteriorSeparator--
(right) Function/Module documentation
(wrong) User Manual documentation
(right) Project documentation
(wrong) API documentation
--InteriorSeparator--
medium
--InteriorSeparator--
125
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the filename extension for the source file that holds the main function of a library?
--InteriorSeparator--
lib.rs
--InteriorSeparator--
medium
--InteriorSeparator--
116
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How can you view documentation locally in Rust?
--InteriorSeparator--
cargo doc --open
--InteriorSeparator--
medium
--InteriorSeparator--
129
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are two attributes that can be added to documentation?
--InteriorSeparator--
(right) Load the documentation from an external document
(wrong) Open documentation at a certain page.
(right) Set the favicon for the documentation
(wrong) Add a bookmark to documentation
--InteriorSeparator--
hard
--InteriorSeparator--
132
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What two items are built in order to build a book in Rust?
--InteriorSeparator--
book.toml and SUMMARY.md
--InteriorSeparator--
medium
--InteriorSeparator--
141
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In Rust, what are workspaces used for?
--InteriorSeparator--
Organizing larger projects with multiple smaller projects (libraries, utilities, examples, etc.)
--InteriorSeparator--
easy
--InteriorSeparator--
147
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.21761768842598356}]