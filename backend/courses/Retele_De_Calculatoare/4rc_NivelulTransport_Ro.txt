***************Beginning Page***************
***************page number:1**************
Lenuta Alboaie
adria@info.uaic.ro
Retele de calculatoare — http://www.info.uaic.ro/~computernetworks

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cuprins
Nivelul Transport
' Preliminarii
' UDP (User Datagram Protocol)
' TCP (Transmission Control Protocol)
' TCP versus UDP
—

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
N' ||t t|P I" "
Layer Mama {If uni:
exchanged
I" ------------i"‘PP'l'iaPPi‘Pf9'??‘3'-----------h AFDIJ
Inter-[am I
Ut|l|zatoare de E. --___________FFF§€*11§‘FFIEIFEQ°_°1__________.. FFDU
servicii de I
Transport
~ , Cummunicat'iun subnst bnundary
lute-ma sum-B1 prbliO-GUI
Furnlzoare de I I
serv|c|| de I . @
transport 1-+ ---
Host A nglgr Hauler Hus! E!
Nehvum layer hast-mule: prnluml [conform Computer
Data Iinh layer hast-minim protum1 Networks, 2010 —
Physical layer hust-mutar plum-ml Andrew S,
, Tanenbaum, et.a|.]
Flgura. Modelul OSI

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
' Relatia (logica) intre nivele: retea-transport-aplicatie
Hos! 1 HostE
Appligal'mn adresa lP: port Appllgalm
{or session} Appllsaﬁonttransnmt {or sessioni
‘El-‘far Tmnspnﬂ il'ltﬂl'lﬂﬂﬂ l-ﬂ'fﬂl
r’ addreas 1/ l
Eﬁﬁth' Transport Bﬂﬁf'f
—Btwolk I H
addlﬁg TransporIInBM-u-rk
Hemm layer Interlace Hen-mil: layer
Entltattlaa de tlratlnepotrt. utllllfeaza TPDU (Transport Protocol Data Unit) —
servrcn e.n|ve u.u| re ea SI O era unitatea de date pentru transport
seerCll anEIUIUI superlor [conform Computer Networks, 2010
— Andrew S. Tanenbaum, et.a|.]

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Nivelul Transport
' Ofera servicii mult mai fiabile decat cele de Ia nivelul retea (e.g.
pachetele pierdute/incorecte de Ia nivelul retea pot fi
detectate/corectate la nivelul transport)
' Calitatea serviciilor — Q05 (Quality of Service)
— lntarzierea Ia stabilirea conexiunii
— Productivitatea sau rata de transfer
— lntirzierea Ia transfer
— Rata reziduala a erorilor
— Protectia
— Prioritatea
— Rezilienta
—

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Nivelul Transport
' Asigura comunicarea logica dintre procese rulind pe host-uri
diferite (comunicare end-to-end)
' (Curs anterior!) Nivelul retea asigura comunicarea logica
intre host-uri
° PORT
' Adauga 0 noua dimensiune adreselor IP de la nivelul retea
' Se asociaza unei aplicatii (serviciu) si nu unei gazde
' Un proces poate oferi mai multe servicii => poate utiliza mai
multe porturi
' Un serviciu poate corespunde mai multor procese
—

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
N ivelul Transport
' PORT
— Este un numar pe 16 biti si poate avea valori intre 0 — 65535
— 1-1024 — valori rezervate (well-known), 1-512 servicii de sistem
(IANA — Internet Assigned Number Authority: RFC 1700)
Exemple:
/etc/services : sunt precizate porturile asociate serviciilor
sistem
HTTP — 80; SIVITP — 25; telnet — 23; SSH - 22
etMr-Iankm-w _ ___*__ _ _ J __ mg}
—

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Primitive generale
— Permit utilizatorilor nivelului transport (e.g. programe de
aplicatie) sa acceseze serviciile
Primitiva Unitatea de date trimisa Explicatie
(TPDU)

LISTEN (nimic) Se blocheaza pana cand un proces
incearca sa se conecteze

CONNECT CONNECTION REQUEST lncearca sa stabileasca conexiunea

SEND DATA Transmite informatie

RECEIVE (nimic) Se blocheaza pana cand se
primeste date trimise

DISCONNECT DISCONNECTION REQ. Trimisa de partea care vrea sa se
deconecteze

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Nivelul Transport

Cele mai importante protocoale la nivelul
transport:

I TCP (Transmission Control Protocol) —
protocol de transport orientat
conexiune; RFC 793 (1122), 1323

I UDP (User Datagram Protocol) —
protocol de transport neorientat
conexiune; RFC 768

—

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
UDP
' Protocol de transport neorientat conexiune,
nesigur, minimal
' Nu ofera nici o calitate suplimentara serviciilor
' Nu recurge Ia negocieri sau Ia confirmari ale
primirii datelor
—

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
' Analogie: UDP — similar postei terestre
>Trimiterea unei scrisori Iii I g‘ ii
>Nu se garanteaza ﬁt

ordinea receptionarii
> Mesajul se poate L $
pierde E
[conform Retele de calculatoare — curs
2007-2008, Sabin Buraga]

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
U D P
' Utilizeaza IP
' Pentru a oferii servicii de comunicare intre
procese foloseste porturi
' UDP transmite pachete: antet (8 bytes) +
continut
i—32 Eils—-
—

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
U D P
_ Figura: Antet UDP
' Source port 5| 3m
Destination port WWW
p0int”-uri|e de pe
masinile sursa si . UDP length =
destinatie 8 bytes +
dimensiunea ' UDP
continutului checksum
nu este
obligatoriu
—

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
' Exemple de utilizari:
— DNS (Domain Name System)
Use-case: A are nevoie de IP-ul host-ului cu numele
www.info.uaic.ro
Pas 1. A trimite un pachet UDP continind numele
host-ului :www.info.uaic.ro
Pas 2. Serverul de DNS trimite un pachet UDP de
raspuns continind adresa IP a host-ului : 85.122.23.146
— RPC (Remote Procedure Call) — mecanism de apel a|
procedurilor la distanta
— DHCP foloseste un model de servicii fara conexiune,
User Datagram Protocol (UDP)

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
DHCP (Dynamic Host Configuration
P roto col )
' ...cursu| anterior-> RARP, BOOTP
' Serverul DHCP poate gestiona setarile IP pentru dispozitivele din CiiEHt SEWEF
reteaua locala, prin atribuirea de adrese IP acelor dispozitive
automat si dynamic DISCCWER
' DHCP opereaza sub modelul client-server
— Serverul foloseste portul UDP 67
_ Clientul foloseste portul UDP 68 OFFER g‘
— Operatii (DORA): server discovery, IP lease offer, IP lease HE m
request, si IP lease acknowledgement QUEST
' Mecanismul: l
— Operatia DHCPDISCOVER : clientul face un broadcast cu o M
cerere
Ethernet: eouree=eendeﬂe MAC; deetineti0n=FF;FF:FF:FE'FF:FF
IP: eouree=0.0.t10; destination =255. 255. 255. 255
UDP: eeuree port=ﬁB; destination pert=6T
n.5,“ n ﬁne.‘ .i new ., Mi .,
—

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
DHCP (Dynamic Host Configuration
P rotocol )
Mechanism:
— Serverul DHCP rezerva o adresa IP address si trimite un mesaj
DHCPOFFER clientului ¢> (Client lD (MAC address), IP Address, client sewer
subnet mask, lease duration, DHCP Server IP) DISCOVER
— clientul replica clientului, prin broadcast, cu un mesaj
DHCPREQUEST, prin care cere adresa oferita OFFER g
' Un client poate primi oferte DHCP de la server multipli, si va REQUEST m
accepta doar una WEDGE i
' lnainte de a cere adresa lP, clientul va face o cerere ARP w’;
(broadcast), pentru a identifica daca exista alt host present
care are acea adresa lP
' Cand serverele DHCP servers primesc acest mesaj, vor
retrage ofertele care le-au facut clientului, si fac din nou
disponibile acele adrese lP
— Faza Acknowledgement implica trimiterea unui pachet DHCPACK
clientului si procesul de alocare este complet

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
DHCP (Dynamic Host Configuration
P rotocol )

Tipuri de alocare:

Alocare dinamica:

— Un administrator rezerva un set de adrese IP pentru DHCP, si clientii DHCP din LAN sunt
configurati sa ceara o adresa IP de la serverul DHCP la intrarea in retea

— Procesul de request-and-grant utilizeaza conceptul de lease pentru o perioada controlata de
timp, permitand serverului DHCP realocarea adreselor IP daca nu sunt reinoite

Alocare automata:

— serverul DHCP atribuie permanent o adresa IP unui client solicitant dintr-un interval definit
de un administrator

— este similar cu alocarea dinamica, dar serverul DHCP pastreaza un tabel cu alocari anterioare
de adrese IP, astfel incat sa poata atribui preferential unui client aceeasi adresa IP pe care
clientul o avea anterior

Alocare manuala:

— numita si static DHCP allocation sau fixed address allocation

— un administrator mapeaza adresa MAC la o adresa IP, care este oferita clientului solicitant

—

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
BUOTP DHCP

BUOTP stands for Bootstrap Protocol. While DHCP stands for Dynamic host configuration protocol.
BUOTP does not provide temporary lP While DHCP provides temporary IP addressing for only
addressing. limited amount of time.

BUOTP does not support DHCP clients. While it support BOUTP clients.

In BOUTP, manual-configuration takes While in DHEP, auto-configuration takes place.

place.

BUOTP does not support mobile machines. Whereas DHCP supports mobile machines.

BDOTP can have errors due to manual- Whereas in DHCP errors do not occur mostly due to auto-
configuration. configuration.

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
° Ce nu ofera?

— Controlul fluxului

— Controlul erorilor

— Retransmisia la receptionarea unui pachet eronat

' Ce ofera?

— Folosind port-uri extinde protocolul IP pentru comunicarea
intre procese aflate pe host-uri diferite si nu numai intre
host-uri

Datagrama IP
4. Datagrama UDP .3
Antet IP Antet UDP Date UDP
2° WEE B “as §?0"§Zr<§“0§e§§lﬁ$35222?”‘e“m

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
TCP - Transm|55|on Control Protocol
' Protocol de transport
orientat conexiune,
fara pierdere de
'“fmmaw I-I I-I
' Vizeaza oferirea commune TCP
calitatii maxime a
servici ilor conexiune TCP
' lntegreaza mecanisme
. . . h tA
de stablllre 5| de OS “08m
eliberare a conexiunii
° Controleaza fluxul de date (stream-oriented)
° Utilizat de multe protocoale de aplicatii: HTTP, SIVITP,
[conform IBM —TCP/IP Tutorial
and Technical Overview‘ 2006]

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
' Analogie: TCP-similartelefoniei l
RH“ Flt-H3 ‘If
H”. HIHI] "a
>ln|t|erea unel ,- E
convorbiri
- - - ‘QM £9‘
>D|a|0gu| dlntre partl U L’
“a I I
ff [LEE ‘a
> Te rm l n a rea CO nvo rbl rl l [conform Retele de calculatoare-curs
2007-2008, Sabin Buraga]

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
TCP

' Utilizeaza conexiuni, nu porturi ca abstractiuni fundamentale

' Ambele parti (expeditorul, destinatarul) trebuie sa participe Ia
realizarea conexiunii

' Conexiunile se identifica prin perechi reprezentate de
adresa lePORT (soc/u - socket)

— Exemplu:
(85.122.23.146: 12345, 85.122.23.146: 22)

' Una din parti ofera 0 deschidere pasiva - asteapta aparitia unei
cereri de conectare a partenerului de comunicare care
realizeaza 0 deschidere activa

' Un soc/u poate fi partajat de conexiuni multiple de pe aceeasi
masma

—

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
TC P
° Conexiunile TCP sunt full-duplex
' O conexiune TCP este un flux de octeti si nu un flux de mesaje
Exemplu:
- Emitatorul trimite 4 fragmente de 512 octeti
- Receptorul poate primi:
- 1. doua fragmente de 1024 de octeti
- 2. un fragment de 1 octet si unul de 2047 de octeti
- 3. (orice alta combinatie)

I/ I’ I!’ 4;, \
Alli min lilil Hui: _|
Patru segmente de 512 octeti Livrarea celor 2048

trimise ca datagrame IP separate octeti catre aplicatzige
—

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
TC P Automatul finit TCP
IModeleaza comportamentul protocolului
IStarile sunt utilizate la managementul conexiunii
[5mm
CUNNEIGTFSTH {5min 1 nl the 3-way- harlﬂﬁhakﬁl
_ cLosEr-
Ll$TENJ-: I ‘BLUEB-
svwsrmmrr
[snapaI,¢h}_tI1é_§-§a¥ﬁi5&§ﬂ§€e_an Legenda'
|—'~- Fas'rr- '~ slammrw . .
51m - aw — Ghent
“GE'L. srrursrm + nor {slmultanQ-ous tip-an] BEL‘
i \ -------—--------- Server
: {Data transfer 5TBIB:I
‘~_ acw- 5m + ACWA'CK
"""'"'"“"'" ESTABLISHED [Stepﬂoﬂheﬂwayhandzihalnall -Fieca re Iinie este
GLUEEIFIH 1' . h h
cmmm L‘ me etlc etata cu o perec e
mmm}wasmm1 even/ment/act/une
i FINIACK i i _i_ i Exemplu: ACK/-
i FIH CLOSING : g CLOSE :
i WAIT‘! m i T JAE“ i
' now- acrcr- I’ i {:Losarmi
i WAITE W wm'r i :r Ml“ i
[ﬁmanutﬂJ 1
-__________-§§_i'¢fj_________f [conform Computer
Networks, 2010 — Andrew
(‘3° mack m 513"] S. Tanenbaum, et.al.]

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Antet u l TC P
.———- 32 Bits ————-
|_|_;1_1_1_|_;L1_|_;1__1_1_1_L_1_1_'_1_1_1_L_1_1_1_L_1_1_1_1_1
Adcnowledgement number
TCP R S
header S Y Wm size
length T N
Options (0 or more 32-bit words) [conform
Computer
_ Networks, 2010
Data (optnonal) - Andrew s.
l—l Tanenbaum,
et.a|.]

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
TC P
Antetul TCP m
Cimpu rile Source Port si Destination
Port |.der.1.t|f|ca punctele flnale ale $=—Ellllﬂ—
coneXIunll
Flaguri de control Tm—T
— URG (URGence) (1 bit) — daca este setat, campul Urgent
Pointer este folosit
— ACK (ACKnowledgment)
I daca este setat campul Acknowledge Number este folosit;
I este setat in toate pachetele de confirmare
—

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
TCP
Antetul TCP
' Flaguri de control
— PSH (PuSH)— datele vor fi
transmise imediat aplicatiei 1—1°"“°"“;:p:m’
destinatare T—T
— RST (ReSeT) — semnalizeaza erori in conexiune (e.g.
deschiderea unei conexiuni este refuzata)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Antew' TCP
' Flaguri de control
—SYN<SYNChmmze>
' folosit pentru stabilirea 1*1
conexiunii %mm
(Cererea de conexiune: SYN=1,
ACK=0; Raspunsul Ia cerere:
SYN=1, ACK=1;)
- indica cererea de conexiune si conexiune
acceptata
— FIN (FINish)- indica inchiderea conexiunii

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
TCP

Antetul TCP

Campul Sequence Number
(SEQ) IEIIIIE—

- Daca flagul SYN este setat 5-1
=> SEQ are valoarea initiala T°*—T
a numarului de ordine;

- Daca flagul SYN este nesetat => SEQ are ca valoare
numarul de ordine a primului octet trimis in acest
pachet

—

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Antetul TCP W-‘ﬂwo m " ' n '
- Daca flagul ACK este setat -||||—-EE
=> are valoarea numarului —Mm—m m p -
de ordine al urmatorului “WW
octet care se asteapta a fi
receptionat;
Campul Window size — numarul de octeti pe care
receptorul doreste sa ii receptioneze (controlul
fluxului)

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
TCP

Amew' TCP
Campul Checksum — folosit
pentru verificarea sumei de “I'll-EH
control al pachetului TCP
(a ntet si data) mm
Campul Urgent Pointe — aca agu URG este setat,

indica deplasamentul fata de numarul curent de

ordine la care se gaseste informatia urgenta

—

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Admlnlstrarea coneXIunll TCP
CONNECT Hus! 1 Hnsl 2 LISTEN
SW EECII=11
Sta bilirea
conexiunii m F m
E arms-am? AG“ t
Th ree-way J
handsha king
E5 _-_
EU r+i.ﬂ|r;pr;=?+ U
I I [conform Computer
Networks, 2010-Andrew
S. Tanenbaum, et.al.]

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Controlul fluxulul
lVIecanism general:
' Protocol de comunicare simplu: se trimite un pachet si
apoi se asteapta confirmarea de primire de la Fiabi'itatea
destinatar inainte de a trimite pachetul urmator. Comunicarii
. . . . . rel'ab'l't
' Daca conflrmarea (ACK) nu este prlmlta Intr-un Interval ( I I’ Y)
de timp prestabilit, pachetul este trimis din nou
Primeste pachetul 1;
<— confirma (ACK) primirea
Primeste pachetul 2;
<— confirma (ACK) primirea
Problema: mecanismul asigura siguranta comunicarii dar
determina folosirea doar a unei parti din banda disponibila a
retelei

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Admlnlstrarea coneXIunll TCP
Fereastra glisanta — COHtEXtZ

— TCP asigura un flux de octeti => numerele de secventa sunt
atribuite fiecarui octet din stream

— TCP imparte fluxul de octeti in segmente TCP; segmentele trimise
si confirmarile vor transporta numere de secventa (vezi slide 19)

— Dimensiunea ferestrei este exprimata in octeti si nu in numar de
pachete

— Dimensiunea ferestrei este determinata de catre receptor cind
conexiunea este stabilita si este variabila in timpul transferului de
date; Fiecare mesaj ACK va include dimensiunea ferestrei pe care
receptorul este apt sa opereze in momentul respectiv al
comunicarii

—

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Controlul fluxului
' Protocol de comunicare cu fereastra glisanta :
— emitatorul grupeaza pachetele intr-un buffer
— emitatorul poate transmite pachetele din fereastra fara sa receptioneze o confirmare (ACK),
dar porneste cate un cronometru (care va semnaliza depasirea unui interval de timp
prestabilit) pentru fiecare dintre pachete
- receptorul trebuie sa confirme fiecare pachet primit, indicand numarul de secventa al
ultimului octet receptionat corect
— in urma confirmarilor primite emitatorul deplaseaza fereastra (o gliseaza)
IIEBHHBBHI
Trimite pachetul 1 —>
Fereastra . .
Trlmlte pachetul 2 —)
Trimite pachetul 3 —>
I I Trimite pachetul 4 —> Primeste pachetul 1;
‘mug. Am <_ conﬁrm (ACK 1, primirea
I Fereastra I Trimite pachetul 5 —>
— — — — — —> Poate trimite pachetul 6
Directia de deplasare a ferestrei I I I

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Administrarea conexiunii TCP
Controlul fluxului folosind fereastra glisanta — situatii
' Pachetul 2 s-a pierdut
— emitatorul nu receptioneaza ACK 2, deci fereastra ramine pe pozitia 1
— receptorul nu primeste pachetul 2, si nu va confirma inca pachetele 3,4,5
— cronometrul emitatorului va semnaliza timpul de asteptare a confirmarii
si pachetul este retransmis
— receptorul primeste pachetul 2 si va emite confirmarea ACK 5 (secventa
de pachete 2-5 au fost receptionate cu succes) => fereastra glisanta se
deplaseaza cu patru pozitii dupa receptionarea ACK 5
' Pachetul 2 a ajuns la destinatie dar confirmarea s-a pierdut
— Emitatorul nu primeste ACK 2, dar primeste ACK 3 (toate pachetele pina
la 3 au ajuns cu succes) => emitentul deplaseaza fereastra glisanta la
pachetul 4
—

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Administrarea conexiunii TCP
Ferastra glisanta asigura:

— Transmisie sigura

— Folosirea mai buna a latimii de banda => o mai
mare viteza de transmisie

— Controlul transmisiei (receptorul poate intarzia
confirmarea datelor, cunoscind memoria libera de
care dispune si dimensiunea ferestrei de
comunicare)

—

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Admlnlstrarea coneXIunll TCP
_ _ Earrd'm Hacawar Hecaiuar'a
AppllC-Eltlﬂﬂ buﬂer
dﬂ-ESBE'H —- D #H
“m
. “""'-—-_._
Exemplu. wk
Politica TCP de H‘-
transmISIe a . .
ﬁﬁtéﬁ" —
datelor si Wm W
managmentul E
Sander is = 1] Applicalicln
fe rest rei hm“ W "— m5 2H:
4-H W
TCP ,AEEW’
5mm” Ff E
35nd up to 2H —-|-
-_.___________
[conform Computer m
Networks, 2010 — k
Andrew S. Tanenbaum, "“-—--.
et.a|.]

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Admlnlstra rea coneXIunll TCP
' Detectia erorilor & retransmiterea datelor

— Fiecare segment trimis contine un numar de secventa
(Sequence Number) indicind pozitia octetilor transmisi in cadrul
fluxului de date

— Gazda destinatar verifica numarul de secventa pentru fiecare
segment (se testeaza daca anumite segmente se pierd, sunt
duplicate sau nu sunt in ordine) si trimite inapoi pentru fiecare
segment un numar de conﬁrmare (Acknowledgment Number),
specificind numarul de secventa al urmatorului octet care se
astepta a fi receptionat

— Segmentele pierdute sunt detectate folosindu-se un timer de
retransmisie a datelor

— Pentru detectarea erorilor se utilizeaza si checksum-uri

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Administra rea conexiunii TCP
' Resetarea conexiunii

— Uneori conditii anormale forteaza aplicatiile sau
software-ul de retea sa distruga conexiunea

— Pentru resetarea conexiunii, 0 parte a comunicarii
initiaza terminarea, trimitind un segment cu bitul
RST setat

— Cealalta parte abandoneaza conexiunea, fara a se
mai transmite eventuale date ramase netransmise

— Transferul in ambele directii este oprit, buffer-ele
sunt golite

—

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Admlnlstra rea coneXIunll TCP
' Fortarea transmiterii datelor

— TCP poate divide fluxul de date in segmente de
dimensiuni diferite de pachetele vehiculate de aplicatii
=> eficienta transmisiei

— Uneori intervine situatia de a transmite datele fara a
se mai astepta umplerea buffer-elor (e.g., aplicatii
interactive)

— Fortarea transmiterii se realizeaza prin push: se
seteaza bitul PSH si se forteaza transmiterea
segmentelor, indiferent de starea de umplere a buffer-
elor

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Administrarea conexiunii TCP
' Inchiderea conexiunii
— Conexiunile TCP fiind full-duplex, cand 0 aplicatie
semnaleaza ca nu mai exista date de trimis, TCP va
inchide conexiunea doar intr-o directie
' Partenerul de comunicatie poate expedia un
segment TCP cu bitul FIN setat; confirmarea
semnifica ca sensul respectiv de comunicare
este efectiv oprit
— Conexiunea este desfiintata cand ambele directii
au fost oprite
—

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
' Automatul f|n|t TCP
— IVIodeleaza comportamentul protocolului
— Starile sunt utilizate Ia managementul conexiunii
State Desertptten
CLOSED Nd eenneetidn is aeti-u'e er pending
LISTEN The server is waiting fer an ineeming eall
SYN FIE-‘till! A eenneetien request has arrived: 1l'lrail ter AGH Figura Starile
SYN SENT The anglieatien has slatted le enen a eenn eelien utilizate in
ESTABLISHED The nerrnal data transfer state automatul CU stari
FIN WAIT 1 The aeelieatien has said it is Iinished finite pentru
FIN WAIT E The ether side has agreed te release controlul
TIMEIJ lII'IIAIT Wait fer all paeltels te die elt conexiunii TCP
GLDSING Beth sides have tried te elese sitinLilianedlisljlr
CLOSE WAIT The ether aide has initiated a release
LAST ass Wait fer all peel-tetra te die elt iNcgpngirpscgoqujegndrew
S. Tanenbaum, et.al.]

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
[Star-l1
GDNHEBT-I'E'm {map 1 cl the 3-way harm-hate]
TC P Automatul
CLUBH-
usmm-g t ﬁmser- flnlt TCP
S?MS"|"H+ADH
[SIB-p2 {Erma 3-way handshahei
l
S?“ HSTI- BEHDJE?N |- SYN
HEUD EYNJEH'W + AGH'. {slmuhaneuus cap-an] BENT
i Dala trans-far stale
:1 ACM- { ll arm acumen J Legenda: Cl' t
~-__________________ + — len
[Eta-p El er IhB away handshake}
ELUEEI'FIN E ________________. Server
CLOSE-‘FIN 1k‘ FINIAGH Eve n i m e n te
[Amine clues} Farrah-311m} _ _
{“"““' “"“'““""“'“"““"““'“““‘. :"'““'“T““"““: mal putln
l FINIACK l ; i . .
: FIN cLoeme : 5 ELDSE : Oblsnwte
i WAIT‘! i ; me i
: acm- acm- g : : ELDBF-IFIH: -F|ecare Ilnle este
: : r f : .
- FIN + ACWACK - i -
: FIN : : : etlchetata cu opereche
i WAITE PM“ wmr i E , i even/ment/actlune
J WJ Exemplu:ACK/-
[ﬁmauuw 3
acm- I
GLDEED ....---------------------'
[conform Computer
[Go hack: tn man] Networks, 2010 — Andrew
S. Tanenbaum, et.al.]

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
TC P
' Automatul finit TCP
— Stabilirea conexiunii:
- CLOSED — din aceasta stare se poate cere o deschidere activa (se
trece in SYN_SENT) sau pasiva (SYN_RCVD)
- LISTEN — se poate trimite 0 cerere de conexiune activa (se trece in
SYN_SENT) ori pasiva (SYN_RCVD)
— Conexiune stabilita:
' ESTABLISHED — poate incepe transmisia de date (din aceasta stare
se poate trece in CLOSE_WAIT sau F|N_WA|T_1)
— Deconectarea initiata de procesul partener
- CLOSE_WA|T, LAST_ACK, CLOSE
— Stari ce intervin in procesul de deconectare
- FIN_WA|T_1, F|N_WAIT_2, CLOSING, TI|\/IE_WA|T
—

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
=v-iv-__-_1F,-.-.._ ,-,.-~ -,-_-lﬁr V 4.3,“, “I”: r,-‘--_,-T_- _.
j:.-v - ;_,_,_.."‘ “,..> ;_ *- ' j_ _'-;~~...-.. r- _..~ -- _' 4;~1...' - f> .-,.
.--._ .._-‘ _ _A.._. _ __-_.4.. .._..J‘_>_ .__A_:_.. .x.._“4__ __Aw__
--'~ —‘ A --_,_r __V.—_ v__.,..-r -:~ -~~ ".14 >~:.:::".1 ".~.-\~ 3:“-
'“k > _ -..>_-.-..4.-._-_‘>_..__.._..-1‘ -_'_.-.:-.¢.C.‘.-._‘_-- . >-.‘ _‘~<>-
_ _ ‘ . . . ‘>_.. ~\_v.-.-‘...~r

__r v__‘_, r_,1,_., __:A ,_~___.‘__ __ __. _, ,1-
—-r -'—‘- 4r.— »---~~.»-_» -_- -_;-‘,-,~-,-, ‘F -_._'_-_' '._'_""_"_"_:'."
1.. _ ‘ c‘, v. A . . ~ ~‘->. T‘ “I' f" "ﬁ-T' "'" '_4‘.'".""“""'_
_-r_ _ > _.._‘-_..L_->1‘.4‘_-__l_.._2__ _‘nl>__|_ |‘_~_-_‘.>~ _‘__‘\_._-_...__‘_
-_.~ ~ ' ‘»,-~- _,r~ .‘_.._ v-.,.‘,-.- :,._v‘.. .._.-... ..>‘._ .rf'." ~~~_|;~ '-~--—
__;_ -‘ _ -.._"_‘.L_‘..HA_.-_._..._E ~-<..---.-.A>_.4;‘-.“:_‘c _‘..._ :'\:1--
-,_,_ 1 ' _,__v ‘._;_ ,_>__ v._..-,_, _,, .r;_ ,.J__ v_.;-<:; :;'"‘:":‘::'
-..:. . _ _..v-.“.. ,.v.\_'-‘... ._.. .Pf.’ _-_.‘..>,._|V.“.. 7.».v.“ ~_.J~JI-.._->--._‘
~--. >'.~-. ,,,._ .;_». .--,.;' L .__-_.» . v--.- ; -- u"'l_"v)r '..'.“"'__"_f'.;‘._"'
.-_\ . . .v..._.‘U.L_._-V.A,.‘_..7’... ._4.‘.~--‘..._. .V._\,.‘,.<‘,‘. ‘_\“n'.<.\.\.‘
.l-§< _ _ ‘__,.-_._.__-_' _- .. -___3‘.____.__}._.‘.,4 -‘..._. Hr.--
...v~ — i ~'-.-¢ ...c_ . *--""-'*~'-.-' ~-_ - ~ ,1‘ .- _ ,.,<.f<-~, T?"_‘"‘_""Tf’;"
__,_ _ _ _.._-.-..-_...‘-_.__._._2___. _ -_.‘ _,..-_...-..._-_ ~_-.._._->.._-
-_,_ - * >-__r .V.;_ .7,._ r_..__,_;, _-_.:_>_ --* -.-.:_ H,.':'f;::_-"_~_:":1:':"
‘q. . _ _..,‘._...>_.v._-4.-,.:le-‘ -...7 V -_ .-_....q‘.-~r. -..V-..‘-.->,...-
-‘r VF-v -.;_ ‘>.-. ‘__. , ._~_> _Y>_._-_._.r ~ 'W~
- ., ‘ -',-.- <.~' _-.. _ .--.v4-v-'-q -»v-_-__;4 ,,.,- _-,.;"_;'_, :_":-"*'_v"_';:'._’1~
.., ~ 1.1‘. v.1 . - ~.,._,.___- -.,_.4-._., ..::-:* :~‘t-‘-':'-:<_'.::.'r‘
-'—l- _ _ _.A___-_..A_>.,"_4-_.__-‘.._1,__ A _.__._‘,.-'_‘_'__..._--__-__L _>-:\__-_..A_L
-_,_ < " -‘_.~~‘>»..-.~t*r". ‘v_- “;--..-.'*"* -'\.":‘.""
-_~_ _ _ ‘__._4‘..___.-_____- ____'_.._~_-_.>k_ -_.‘._. t|:<_--
-V_.r 1 ‘ _',‘_._ ..‘.'_ .>-._ .-_.»-_>_,-., ._:_ u "4 ~,_.'-. ..---" ::_-:"-;->;:r
_<:_ - 7 _v.>...-<.L>.v.'i->..~.‘.-‘._k.__ _..-" >. _.._..._.__l-.-;.'_'. ..-.'-:1_v-.->...__
w, ‘ '_.-.-\_ _._¢_ ..___._ ‘._.--.-_>.-: <v->'-_-\_:‘ ‘_._ _..--;'; L‘:“':>";-'_";"
-\_ 4;, ‘s- :._-_' .- .\. '_ ‘km-‘"2’ '_"..".."
...Y * ~ -.... ..v _ ....v.2v, ..'._.»;3 ..| .4.::._V,r '..'I”‘“Z."~".JL”
_-_;V _ , _..___-_..‘__-_\_..._'__..;‘_;__‘_ -..‘_ _ __-_..‘_-‘-,-.__._'_ ._>-:\___\_...__
. .7 * ~ .-,.Y ..v‘7, ‘ 4 .77.... , _ ~4 r- ~r- i‘ ._-_..-"~' tr‘*‘"'-"::::’
___:_ n _ _--__I‘.-‘_l_\—‘_l__I‘-->Al>_ __ ~__ __IJ__‘I_'_- ,_ ~_..__.__._._h..._~
i2: _ > -J-.-'_'1.‘__'..I2_‘.'.:.' EZIIC:-'.-. L'_;--.~.-.._‘_:;::__v
-_,_ - ' _r-“- <.-;‘ .>:._ ~--._,.>_ v-a-v. ._,.__ ‘--.1‘_;:g '::“‘:";"._'£"r

: . v .., .._..‘>. .1‘ .. ._.,. I ,‘l.... ¢.. -13.. . .. ~ t ‘....J.M..._.....
—--.- ‘----‘ ».-v- >-.> - ---- .,-_-» _ ~ ».-~.-_-_ ~r..'_' "_':"';_' ‘4;:2'
V 2 ‘. ...-.. .-"...... ...‘ -!." h‘) 11 . h...‘ . H- " ..'.r\...4....
. ., > -'. . ,.' _. . . . .1“, .' ___*~' ... ,\.-:-_; :_‘q""'.~":;:'.:t
__;_ _ . _.._.-_..‘_.‘.,.‘_.__.._.-..§,._ ‘..A> _ _--..__-_‘_--.-_'.. .4..-:\_._-p..._~
.v., 1 4 .'.4_..V ...‘V __.. .....,.'. ._ ‘..rv ‘_. . v V._;‘r_;~ :~.-:_7"r7',7'_"‘
__\_ _ _ _..__._..L_..._-_.__.__.. ‘_..-..__._-_.‘_.__..__._ __‘..__‘_.._._
~v~r ~ _‘»** ~.-¢- -~--_ ‘-_-. -_ "1 " '-- ,..._-::.,- rt~‘:"r:::"»
__L _ __c __.__._..;_._.¥:‘_.._._v_.'-.. _ -.-._ ..- ___.-_._._:_.. ._._-‘.~-.__-.-._..__‘_
-~.< ‘ - --.-‘- ‘.-.= -___,-_ ‘--.__-=,_, ~3 ~w-- _--__, ~“.132': ::-,~~:'—:::'
»\ >.»-» \fv~ -,\\ .-_.'-».-. ’__‘ __; _' '_ -_-, \"'_;V '..‘:"".."':‘_:'_"‘
.Vn- 1 >-. _ _. ' .V,. - .. . .,;‘. n V‘ -'.'. 1' ‘4 j.'_‘_‘_‘?v‘ z: ~~"';‘ ‘7-111."
._;. .. _ _‘.__,_._..A__._-,-___.__-‘. 1;’. __.‘.__.-_ .--\_-_-.__ ._-“r\___-...._\

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
TCP
' Exemple de utilizari ale TCP:
— Majoritatea protocoalelor de aplicatii:

° HTTP

° TELNET

° SMTP

' SSH

—

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
TCP versus UDP
' Ambele se bazeaza pe IP, utilizeaza porturi
' Unitatea de transmisie
— TCP -> Segment TCP
— UDP -> Pachet UDP
—

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
TCP versus UDP

' UDP ofera servicii minimale de transport (efort
minim de transmisie)

TCP ofera servicii orientate-conexiune, full-
duplex, sigure — pentru transportul fluxurilor
de octeti ( -> mecanism complex de transmisie)

' Utilizarea TCP sau UDP depinde de aplicatie:
e-mail, transfer de fisiere, operare in timp-real,
transmisii multimedia in timp real, chat,

—

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Rezumat
Nivelul Transport
' Preliminarii
' UDP (User Datagram Protocol)
' TCP (Transmission Control Protocol)
' TCP versus UDP
—

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
Bibliografie

' Andrew S. Tanenbaum, David J. Wetherall, Computer Networks (5th Edition), ISBN-
10: 0132126958 , Publication Date: October 7, 2010

' A. Tanenbaum, Computer Networks. 4th Edition. Prentice Hall. 2003

' James F. Kurose, Keith W. Ross; Computer Networking: A Top-Down Approach (5th
Edition), ISBN-10: 0136079679

' Lydia Parziale, David T. Britt, Chuck Davis, Jason Forrester, Wei Liu, Carolyn
Matthews, Nicolas Rosselot , IBM —TCP/|P Tutorial and Technical Overview, 2006

' https://www.geeksforgeeks.org/difference-between-bootp-and-dhcp/

' Tamara Dean, Network +Guide to Networks (Editia 5), ISBN-10: 1-423-90245-9, 2009

—

***************Ending Page***************



***************Beginning Page***************
***************page number:52**************
f’ - W\\'\
/' ' \\
k1 \
\

***************Ending Page***************



