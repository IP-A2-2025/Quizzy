***************Beginning Page***************
***************page number:1**************
Lenuta Alboaie (adria@info.uaic.ro)
Andrei Panu (andrei.panu@info.uaic.ro)
Reyele de calculatoare — hnps:llwww.inio.uaicJo/"computernetworks

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cupﬁns
' Domain Name System (DNS)
'Caracterizare
' Organizare
'Configurare
'Comenzi, Primitive
° IDN
—

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
DNS

- Adresele lP (de ex. 85.122.23.145,
2001:0db8:0001:0000:0000:Oab9:COA8:0102)
sunt diﬁcil de memorat

' Se utilizeaza un sistem al numelor de domenii
pentru a translata adresele lP in nume de
domenii si invers

' Numele de domenii se organizeaza in ierarhii

- RFC 1034, 1035, 1123, 2181

—

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
DNSI organizare

- Initial: letc/hosts — perechi (nume, IP)
— Probleme de scalabilitate

- Actual: DNS consta dintr-o schema ierarhica de
nume de domenii si dintr-un sistem de baze de
date distribuite ce implementeaza aceasta
schema de nume

—

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Pi Generic- i-I \~— ownme=—-
ml mm sdu glw m'H mg m p us m H
\ | /\ /\ /\
sun yale um Ieee ac no one w
.iu EA“? Wm ﬁlm "L L
/\. l \ ‘/\ .
a‘ llrldi cs CS‘ MS "qu
ML, “L4
Figura. O portiune a spatiului numelor de
domenii in Internet
—

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
DNSI Tipuri de domenii
- Primare (Top Level Domains — TLD)
— pentru Infrastructure Internet — un singur domeniu .arpa ARPA
(Address and Routing Parameter Area)
r “Changes to the .arpa zone must be coordinated manual/y with IANA”
— State (ccTLD) i coduri de state: tro, .fr, .jp,
— IDN ccTLD (lnternationulized Country Code Top-Level Domains)
httgzllﬂl¥ﬂlhi http://examp!e.test
i Generice: ‘biz, ‘com, ‘info, ,name, .net, ‘org, ,pro
— Sponsorizate: .aero, .edu, .gov, .int, .jobs, .mil, .tel
— Rezervate: ‘example, .invalid, .Iocalhost, ‘test
— Pseudoedomenii: .bitnet, .local, .root, ‘uucp etc.
https://wwwtiana.org/domains/root/db/ t
—

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
w A MWWW‘.mwwmmm g a
“Pm-"NW" Root Zone Database
MW m Wm mm “Wm m. mm" .1!“me “WM mm gm w a;
“mum-F...“ (om ammumvywdenm MM m A501 managevohheDNSvwlmmn-eavunpoww70v
MW mmmq m,“ mum m “(mum Wm m WWW
"111" ‘ > gm‘ WWMMMWW W
M mm W WM W»
.m WM mm WW W (myurvmnnmnmm N v
m Prxmes “Wu-v m. WW M ua
W ""1 ‘WW ‘WNW! m" WW Ahnm “Mm; 1m
mmbmm
mm Mm ‘mm
m gm.‘ msmy “pm, 1m
M gym mm
“de WM Mm ‘ Mm.“ (\va “mm
Mm WM Am mum Warns-m4 Invmmm (m
WWW‘. NM,‘ Wm.“ (mm [M mum" mm. um:
m Wm mm" mam»
mm Wm Wm“ u:
1

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
DNSI Tipuri de domenii

' Domeniu de nume

— Subarbore al arborelui de domenii

— Nu trebuie sa respecte topologia retelei fizice
' Sub-domenii:

— intreaga cale de nume nu depaseste 255 de

caractere
' Nume de calculatoare (gazde)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
DNS
' Exemplu:
___Li;_ﬁ
Elli utcluj \_
info |%helios
thor
fenrir
—

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
DNSI organizare
- Reguli de alocare a numelor de domenii:

— Fiecare domeniu controleaza cum sunt alocate
subdomeniile sale

— Pentru a crea un nou subdomeniu, se cere
permisiunea domeniului in care va fi inclus (un
domeniu de la un anumit nivel va avea o autoritate)

—Atribuirea de nume de domenii respecta granitele
organizationale, nu pe cele ale retelelor

—Un anumit nivel din ierarhia de niveluri poate ﬁ
controlat de mai multe servere ‘

—

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
DNSI organizare
~ Servere de nume (name servers)
— Teoretic, un singur server de nume poate contine
intreaga baza de date DNS si poate raspunde
tuturor cererilor
' Probleme: incarcarea si "single point offai/ure”
— Spatiul de nume DNS se divide in zone ne—
suprapuse
—

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
DNSI organizare
- Servere de nume (name servers)
Exemplu: O posibila impartire a spatiului de
nume DNS in zone
5T“ ali 3? a w mam;
‘Ty/Ci a"; helm T &
a. M =5 w
ML]. .'.,
—

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
DNSI organizare
- Servere de nume (name servers)

— Exista un server primar (primary/authoritative
name server) care deserveste un anumit domeniu
si, eventual, mai multe servere secundare
continand baze de date replicate

— TCP se utilizeaza pentru replicarea DNS

— UDP pentru interogari (Iookups)

—

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
DNSI organizare
- Client DNS
— Denumit resolver, trimite un pachet UDP serverului
DNS, care cauta numele si returneaza adresa lP
A licatie Sewer DNS uaic.ro
-.
uaic.ro P
- Lug]
Authoritative Replici
—

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
DNSI organizare

- Exemplu de implementari ale serverului de
nume: BIND (Berkeley Internet Name Domain),
MSDNS, PowerDNS etc.

- Ca resolver (client) interactiv, se poate folosi de
exemplu una dintre comenzile: nslookup, host
sau dig.

—

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
DNSI |nterogar|
- lnterogari:

i Recursiva — daca un server DNS nu cunoaste adresa
pentru numele solicitat, atunci va interoga alt
server DNS

—lncrementala — daca serverul DNS nu stie sa
raspunda, returneaza eroare si adresa altui server
DNS (numit si referral) care ar putea cunoaste
raspunsul la interogare

[hﬂp'l/techne\.m\crusoﬂ cum/en'us/\\brery/cc775637%28v=ws 10%29 aSDX]

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
DNSI interogari

' Fiecarui domeniu ii este asociata o multime de
inregistrari de resurse (resource record — RR)

' Mecanismul:
— Cererea: resolver-ul trimite un nume de domeniu
— Raspunsul: inregistrarile de resurse asociate acelui

nume (stocate in bazele de date DNS)
DNS realizeaza corespondenta dintre numele de
domenii si inregistrarile de resurse _
—

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
DNSI interogari
- Forma generala RR este:

Nume_domeniu Timp_de_viata Tip Clasa Valoare
Numeidomeniu (domain name) — precizeaza

domeniul caruia i se aplica aceasta inregistrare
Timp_de_viata (time-to-Iive) — da o indicatie despre

cat de stabila este inregistrarea

—

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
DNSI interogari
Tip - precizeaza tipul inregistrarii

— SOA (Sta/1.‘ 0f Authurity) 1 domeniul curent, adresa e-mail a
administratorului etc.

i A-adresa IP a gazdei

— MX (mail exchangers) — precizeaza numele domeniului
pregatit sa accepte posta electronica pentru domeniul
specificat

i CNAME (Canonical Name) — permite crearea pseudonimelor

— PTR (Pointer) — Pseudonim pentru adresa lP

i HINFO- permit aflarea tipului de masina si de sistem de
operare carora Ie corespunde domeniul

— TXT: text neinterpretat (comentarii) w

—

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
DNSI |nterogar|
Clasa: pentru Internet valoarea acestuia este IN
Valoare: acest camp poate fi un numar, un nume de
domeniu sau un sir ASCII; semantica depinde de
tipul de Inregistrare
WM MeanInu Valuv
Exemple de 5m smmmm ﬁrmwwmms
A Immwml :1wa
de CNAME CannmcaImmn WWW.
m N .r m» m,
resurse DNS NINFO “0:.”sz SLulr-aoémflscu
m m WWMCIM

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
DNSI configura re
' Exemplu de ﬁsier pentru speciﬁcarea unei zone
DNS
Regele de calculatuare — h“p5:llwww.info.uaic.ru/"cumputemetwnrks

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
DNSI cllentl, resolverl, servere
r _ _ _=_PP_"£"_“2"_ _ _ 1
v \
l ipplltil'inn l
‘l and: l
:fundinn I lulKIirm:
(All Mum
E (“do mm, _ 5mm
L_____ _____A
Ca fisier de configurare al
resolver-ului: /et|:/resolv.conf
WWW WW. R hm
B WA W, m
-7

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
DNSI configurare
' Exemplu de ﬁsier /etc/reso|v.c0nf
—

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
DNSI interogari inverse
' Problema:
— Data 0 adresa, care va fi numele ei simbolic?
(reverse DNS resolution sau reverse DNS lockup)
Example:
n
2) 2001:db8::567:89ab
bi.9>8.7.5.5D,D.D.D.0.0.U,D.0.0.0.0.U,0.0.0.0.8.b.d,0.1.0.0.2.ip6,arpa
—

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
DNSI optimizari

Proximitatea spatiala: serverele locale vor fi
interogate mai des decat cele la distanta

Proximitatea temporala: daca un set de domenii sunt
referentiate repetat atunci se apeleaza la caching
DNS

Fiecare intrare DNS va avea stabilita 0 valoare TTL
(time to live)

Se va utiliza si replicarea (sen/ere multiple, servere
root multiple) — se va interoga cel mai apropiat
(geografic) server

—

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
DNSI comenzi
Ca resolver interactiv 5e pot folosi comenzile:
— nslookup
—dig
— host
—whois
—

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
DNSI nslookup
Exemple de utilizari:
r nslookup www.info‘uaic,ro
r Returneaza RR de Up A fulosind serverul DNS \oca\
n n Z Hosmwkup
r nslookup SilZZZSJ
r Returneaza RR de tip PTR pentru 35122131 \n lel'arhla de domenn \n'addrarpa
~ nal::kup 55.1142.)
Lookup
l.::.ll£.i§.1n*3;;t.3rp3 mm : Lh:!:.1nf:.u'112.r-:.
[Mlp WWW zylvax com'booksrd/vsluw]
Rewle de calculatuare — hnp5:llwww.info.uaic.ru/"cumputemetwnrks

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
DNSI nslookup
Exemple de utilizari:
r nslookup www.axiologic.ro
r Returneaza RR de tip A folosind serverul DNS specificat
Hosuoomp
‘i man nslookup

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
DNSI dlg
dig — un instrument mai puternic decat nslookup
Exemplu de l - 1'
utilizare: '1 i; i; 111' 1' t 11,,,-1
r dig www.info.uaic.r0 A ‘,11 ‘1,‘fi 1,,1- 1: ,3 :1 11
Regele de calculatuare — hnp5:llwww.info.uaic.ru/"cumputemetwnrks

***************Ending Page***************


***************Beginning Page***************
***************page number:30**************
DNS | comenzi
host
Exemplu de utilizare:
—

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
DNS | whoi if: l],
whois ibm.com V -

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
DNSI primitive
' Nu trebuie scris un resolver pentru a afla adresa IP a
unei gazde
' Functii principale:
- gethostbynameO; getaddrinfoQ;
- gethostbyaddrﬂ ; getnameinfoﬂ;
' La unele sisteme de operare (eig., Solaris) va trebui la
compilare sa folosim biblioteca nsl (Name Server
Library): gcc -lnsl
—

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
DNSI primitive
Una din structurile folosite: hostent
struct hostent{
char *h_name; /* nume oficial (canonical) */
char **h_aliases; /* alias-uri */
int h_addrtype; /* AF_|NET */
int h_length; /* lungimea adresei: 4 sau 6 */
char **h_addr_list; /*pointeri la adresele IP */
i;
—

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
DNSI primitive
Structura hostent:
— m
m — m
-
m
—
—
-
Im-
—

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
DNSI gethostbyname()
#include <netdb.h>
struct hostent *gethostbyname
(const char *hostname);

' In termenii DNS, gethostbynameO realizeaza o

cerere pentru 0 inregistrare A
- Obs. gethostbyname() se foloseste in special

pentru IPv4

w

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
DNSI gethostbyname()
' Returneaza:
— In caz de succes returneaza un pointer la hostent, ce
contine adresa IP a host-ului
— In caz de eroare NULL, iar variabila h_errn0 indica
eroarea aparuta:
- HOSTiNOTiFOUND
' Constante definite in
- NOiRECOVERY netdb.h
—

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
DNS| gethostbyname()
- Exemplu de utilizare: completarea structurii sockaddrjn avand in
Ioc de adresa IP un nume simbolic:

struct sockaddr_in server;
struct hostent *hos;
if(!( hos = gethostbyname(”fenrir,info‘uaic.ro”))

(/*Er0are Ia rezolvarea adresei*/)
servensinjamily=AFilNET

/* adresa IP o luam din structura hos */
memcpy(&server.sin_addr.s_addr, hos»>h_addr_list[0],

sizeof(hos->h_addr_|ist));
servensin_port=htons(4321p;
—

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
DNSI gethostbyadd r()
#include <netdb.h>
struct hostent *gethostbyaddr(
const char *addr,
socklenit len,
int family);
- In termenii DNS, gethostbyaddrﬂ realizeaza o cerere la serverul
de nume pentru o inregistrare PTR in domeniul in-addr.arpa
- Returneaza: In caz de succes returneaza un pointer Ia hostent, ce
contine numele oficial al host-ului ; In caz de eroare NULL, iar
variabila hierrno indica eroarea aparuta
Obs‘ gethostbyaddd) se foloseste in special pentru IPv4
—

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
DNSI getservbyname()
#include <netdb,h>
struct servent *getservbyname (const char *servname, const char
*protoname);
- Returneaza: un pointer la struct servant in caz de sucess, NULL in
caz de eroare
struct servent{
char *s_name; /* nume\e oﬁcial a\ serviciului*/
char**s_aliases; /* aHas-uri */
int s-port; /* portm (networkibyte order) */
char *s_proto; /* protocoml */ );
Exemplu: struct servent *pserv;
pserv=getservbyname(”ftp”,”tcp"); /*FTP folosind TCP "/,O
—

***************Ending Page***************


***************Beginning Page***************
***************page number:40**************
DNS| getse rvbyport()

#include <netdb,h>

struct servent *getservbyport (int port, const char *protoname);

- Cauta un serviciu dupe un numar de port si dupa protocol
(optional)

~ Returneaza: un pointer Ia struct servent in caz de sucess, NULL in
caz de eroare

Obs‘ port este in network byte order

Exemplu:
struct servant *pserv;
pserv=getservbyport( htons(53), "udp"); /*DNS folos'md UDP */
pserv=getservbyport( htons(Zl),”tcp”); /*FTP folosind TCP */ 4F

—

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
DNSI getaddrinfo()

#include <netdb.h> J

int getaddrinfo ( :
const char *hostnafge, .2 —
const char *service,//
const struct addrinfo *hints,-____-[:
struct addrinfo Wresult );

- Obs. hostnume, service, hints i parametri de intrare

- Returneaza: 0 in caz de sucess, !=O in caz de eroare

- Se recomanda a fi folosita si pentru IPv4 si pentru IPv6

' Combina functionalitati ale: gethostbynameﬂ, getservbynameO,
getservbyportO

{M

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
DNSI getaddrinfo()
struct addrinfo(
int ai_flags; /* AliPASSIVE, AliCANONNAME */
int ai_family; /* AF_|NET, AF_|NET6, AF_UNSPEC */
int ai_socktype; /* SOCKiSTREAM sau SOCKiDGRAM */
int ai_protocol; /* 0 (auto) sau IPPROTO_TCP, IPPROTO_UDP */
socklen_t ai_addrlen; /* lungimea Iui aLaddr */
char *ai_canonname;/* numele canonic al host-ului */
struct sockaddr *ai_addr; /* adresa binara a socket'ului */
struct addrinfo *ai_next; /* pointer Ia urmatoarea structura din
lista */
);
A1
—

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
DNSI getaddrinfo()
Discutii:
' Daca functia returneaza cu succes result va pointa la lista de struct
addrinfo.
Cazuri cind se pot obtine structuri multiple:
— Exista mai multe adrese asociate cu numele hostului si cate o
structura este returnata pentru fiecare adresa
— Daca serviciul este furnizat pentru tipuri diferite de socket-uri,
atunci cate o structura este returnata pentru fiecare tip de sncket
' Informatia returnata de getaddrinfoO in structura struct addrinfo
“result poate fi utilizata astfel:
— Pentru socket() : ai_fami|y, ai_socktype, ai_protocol
— Pentru connect() sau bind(): ai_addr si ai_addrlen
~ freeaddrinfo()
I
—

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
DNSI getnamelnfo()
#include <netdb.h> _ Adresa socket-ului (rirmsa ca
_ . argument
mt getnamelnfo ( /
const struct sockaddr *sockéddr,
char *host,¢-""""_'
char *serv,=r""""'_"
NLNOFQDN r> host va conﬁne deer
$°°k|eni semen’ __'______. nume\e host'wui 5a nu intreg nume\e
int flags) ;'----"""""_ sl domeniulm
' lnlocuieste gethostbyaddrO si getservbyportO
' Returneaza: 0 in caz de sucess, !=0 in caz de eroare
M

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
DNS | IDN
' International Domain Names (IDN)
— Extensie care permite folosirea caracterelor Unicode
in numele de domenii, nu doar a celor ASCII
https://www.icannaorg/en/topics/idn/
16 Noiembrie 2009 - Inregistrarea de domenii cchN
sau IDN ccTLD
2010411 ICANN announces ma! Egym, lhe Russlan Federallon, Saudl
Naha, and me Unlled Nah Elllrales were Ille ﬁrst counlnes l0 have passed
lhe Fasl Track Slnng Evaluallon wmlm Ihe IDN ccTLD domaln appncanm
mess
— Pot fi exploatate pentru atacuri de tip phishing
(.u detalii intr-un curs viitor)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
DNSI administrare

' Radacina DNS este oficial administrata
de Internet Corporation for Assigned
Names and Numbers (ICANN)

' Exista si alte organizatii care ofera
radacini alternative (alt DNS roots),
precum OpeanC (Network Information
Center) sau New.Net

—

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
Rezumat
' Domain Name System (DNS)
'Caracterizare
' Organizare
'Configurare
'Comenzi, Primitive
° IDN
—

***************Ending Page***************

 