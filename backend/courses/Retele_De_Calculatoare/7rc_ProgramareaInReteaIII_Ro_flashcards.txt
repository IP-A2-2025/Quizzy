[{content={parts=[{text=```text
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `readv()` and `writev()` functions?
--InteriorSeparator--
To transmit data located in non-contiguous memory areas.
--InteriorSeparator--
Medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following functions can be replaced by `recvmsg`?
--InteriorSeparator--
(right) recv()
(right) recvfrom()
(wrong) send()
(wrong) write()
--InteriorSeparator--
Hard
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a major characteristic of most UDP servers?
--InteriorSeparator--
They are iterative.
--InteriorSeparator--
Easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In a concurrent UDP server exchanging multiple datagrams with a client, what is the solution to the problem of only one well-known port being available?
--InteriorSeparator--
(right) The server creates a new socket for each client.
(right) The server attaches the new socket to an ephemeral port.
(wrong) The client uses the well-known port for all requests.
(wrong) The server uses the same socket for all clients, multiplexing requests.
--InteriorSeparator--
Hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What port does TFTP use?
--InteriorSeparator--
69
--InteriorSeparator--
Easy
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which are characteristics of UDP?
--InteriorSeparator--
(right) Supports broadcasting.
(right) Does not need a connection establishment mechanism.
(wrong) Is connection-oriented.
(wrong) Guarantees data transmission order.
--InteriorSeparator--
Medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the minimum time needed for a UDP request-response transaction?
--InteriorSeparator--
RRT (Round Trip Time) + SPT (Server Processing Time)
--InteriorSeparator--
Medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the minimum time needed for a TCP request-response transaction if a new connection is created?
--InteriorSeparator--
2 * RRT (Round Trip Time) + SPT (Server Processing Time)
--InteriorSeparator--
Medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
For what applications should UDP be used?
--InteriorSeparator--
(right) Multicast applications
(right) Broadcast applications
(wrong) Bulk data transfer
(wrong) File transfer
--InteriorSeparator--
Medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
For what applications should TCP be used?
--InteriorSeparator--
(right) File transfer
(wrong) Streaming media
(right) HTTP (Web)
(wrong) Teleconferencing
--InteriorSeparator--
Medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What facility do some UNIX systems offer for system call tracing?
--InteriorSeparator--
strace
--InteriorSeparator--
Easy
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are tools for network analysis?
--InteriorSeparator--
(right) tcpdump
(right) lsof
(wrong) gcc
(wrong) gdb
--InteriorSeparator--
Easy
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are threads often called?
--InteriorSeparator--
Lightweight processes (LWP)
--InteriorSeparator--
Easy
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a key difference between processes and threads regarding address space?
--InteriorSeparator--
Threads do not have their own address space, while processes do.
--InteriorSeparator--
Medium
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What standard defines an API for creating and manipulating threads?
--InteriorSeparator--
Pthreads (POSIX Threads)
--InteriorSeparator--
Easy
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the `pthread_create` function return on success?
--InteriorSeparator--
0
--InteriorSeparator--
Easy
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `pthread_join` function?
--InteriorSeparator--
To wait for the termination of a specific thread.
--InteriorSeparator--
Medium
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does `pthread_self()` return?
--InteriorSeparator--
The ID of the thread that called the primitive.
--InteriorSeparator--
Easy
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the two states a thread can be in regarding resource management after termination?
--InteriorSeparator--
joinable and detached
--InteriorSeparator--
Medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens when a detached thread terminates?
--InteriorSeparator--
All its resources are released.
--InteriorSeparator--
Medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How can a thread terminate?
--InteriorSeparator--
(right) The function executed by the thread returns.
(right) The thread calls `pthread_exit()`.
(wrong) The process's main function calls `pthread_exit()`.
(wrong) Another thread calls exit().
--InteriorSeparator--
Medium
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a disadvantage of the usual TCP client model (stop-and-wait)?
--InteriorSeparator--
It does not sense network events while waiting for user input.
--InteriorSeparator--
Medium
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens when a TCP peer sends FIN when using `select()` in a TCP client?
--InteriorSeparator--
(right) The socket becomes "readable."
(right) `read()` returns 0.
(wrong) The socket becomes "writable".
(wrong) `read()` returns -1.
--InteriorSeparator--
Hard
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens when a TCP peer sends RST when using `select()` in a TCP client?
--InteriorSeparator--
(right) The socket becomes "readable."
(right) `read()` returns -1.
(wrong) The socket becomes "writable".
(wrong) `read()` returns 0.
--InteriorSeparator--
Hard
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a disadvantage of using non-blocking I/O with `select()` in a TCP client?
--InteriorSeparator--
Complex implementation.
--InteriorSeparator--
Medium
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a TCP client using fork(), how many processes are typically involved, and what is each responsible for?
--InteriorSeparator--
Two; one for client-to-server data management and one for server-to-client data management.
--InteriorSeparator--
Medium
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a TCP client using pthreads, what is each thread typically responsible for?
--InteriorSeparator--
One for client-to-server data management and one for server-to-client data management.
--InteriorSeparator--
Medium
--InteriorSeparator--
33
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a key characteristic of an iterative TCP server?
--InteriorSeparator--
It processes one client's request completely before serving the next client.
--InteriorSeparator--
Medium
--InteriorSeparator--
35
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a disadvantage of creating a new child process for each client in a TCP server?
--InteriorSeparator--
Creating a child process (fork()) for each client consumes significant CPU time.
--InteriorSeparator--
Medium
--InteriorSeparator--
36
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if the number of clients exceeds the number of pre-forked child processes in a TCP server?
--InteriorSeparator--
Clients will experience a degradation in response time.
--InteriorSeparator--
Hard
--InteriorSeparator--
37
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a pre-forking TCP server with blocking for accept() protection, what mechanism ensures only one process calls accept() at a time?
--InteriorSeparator--
A locking mechanism (e.g., fcntl()).
--InteriorSeparator--
Hard
--InteriorSeparator--
38
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a preforking TCP server with "transmitting" the connected socket, which process initially calls accept()?
--InteriorSeparator--
The parent process.
--InteriorSeparator--
Hard
--InteriorSeparator--
39
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a TCP server with one thread per client, what is the main thread blocked on?
--InteriorSeparator--
The accept() call.
--InteriorSeparator--
Hard
--InteriorSeparator--
40
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a pre-threaded TCP server with blocking for accept() protection, what mechanism ensures only one thread calls accept() at a time?
--InteriorSeparator--
A locking mechanism (e.g., mutex lock).
--InteriorSeparator--
Hard
--InteriorSeparator--
41
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a pre-threaded TCP server with "transmitting" the connected socket, what does "transmitting" the socket mean in practice?
--InteriorSeparator--
The target thread knows the descriptor number.
--InteriorSeparator--
Hard
--InteriorSeparator--
42
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which of the following is generally faster for applications, threads or processes?
--InteriorSeparator--
Threads
--InteriorSeparator--
Medium
--InteriorSeparator--
43
--FlashCardSeparator--
```}], role=model}, finishReason=STOP, avgLogprobs=-0.08191667389245173}]