[{content={parts=[{text=Here are 35 flashcards based on the provided material, with a mix of single and multiple choice questions, varying difficulty levels, and adhering to all specified constraints.

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the stages of compilation?
--InteriorSeparator--
Lexical Analysis, Syntactic Analysis, Semantic Analysis, Code Generation
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the input to the lexical analyzer?
--InteriorSeparator--
Source Code
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are components of the LR(0) automaton construction algorithm?
--InteriorSeparator--
(right) Closure operation
(wrong) FIRST set calculation
(right) Transition function calculation
(wrong) FOLLOW set calculation
--InteriorSeparator--
medium
--InteriorSeparator--
5,7,8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the initial configuration in LR(0) parsing?
--InteriorSeparator--
(t0, w#, s) where t0 is the initial state, w is the input string, and s is the parsing stack.
--InteriorSeparator--
medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
A state in an LR(0) automaton has a shift/reduce conflict if it contains:
--InteriorSeparator--
(right) An item of the form A -> α• and an item of the form B -> β•aγ
(wrong) Two distinct complete items
(wrong) No complete items
(right) An item with a terminal after the dot B -> β•aγ
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When does the LR(0) parsing algorithm report an error?
--InteriorSeparator--
When no transition can be applied to the current configuration.
--InteriorSeparator--
medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is included in the definition of FIRST(α)?
--InteriorSeparator--
(right) All terminals that can begin a string derived from α
(wrong) All non-terminals that can begin a string derived from α
(right) ε if α can derive the empty string
(wrong) All terminals that can end a string derived from α
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does FOLLOW(A) represent?
--InteriorSeparator--
The set of terminals that can appear immediately to the right of non-terminal A in some sentential form.
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are used in the construction of an SLR(1) parsing table?
--InteriorSeparator--
(right) LR(0) automaton
(right) FOLLOW sets
(wrong) FIRST sets
(wrong) Precedence relations
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the ACTION table in SLR(1) parsing?
--InteriorSeparator--
To determine whether the parser will perform a shift or reduce operation based on the current state and input symbol.
--InteriorSeparator--
medium
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What condition must be met for a grammar to be SLR(1) given a state 't' in the LR(0) automaton?
--InteriorSeparator--
(right) If A -> α• and B -> β• are in 't', then FOLLOW(A) ∩ FOLLOW(B) = ∅.
(wrong) If A -> α• and B -> β• are in 't', then FOLLOW(A) ∪ FOLLOW(B) = ∅.
(right) If A -> α• and B -> β•aγ are in 't', then a ∉ FOLLOW(A).
(wrong) If A -> α• and B -> β•aγ are in 't', then a ∈ FOLLOW(A).
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What action does the SLR(1) parser take when ACTION[t, a] = "Dt'"?
--InteriorSeparator--
Shift: push state t' onto the stack and advance the input pointer.
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If ACTION[t,a] = "R A -> β" in SLR(1) parsing, what steps are performed?
--InteriorSeparator--
(right) Pop |β| states from the stack
(right) Push GOTO[top_state, A] onto the stack, where top_state is the state now on top of the stack
(wrong) Push GOTO[t, a] onto the stack
(wrong) Push the current state onto the stack
--InteriorSeparator--
hard
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When does the SLR(1) parser accept the input?
--InteriorSeparator--
When ACTION[t, #] = "accept" where t is the state on top of the stack and # is the end-of-input marker.
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens when the SLR(1) parser encounters an error?
--InteriorSeparator--
(wrong) The parser attempts error recovery and continues parsing.
(right) The parser halts and reports an error.
(wrong) The parser ignores the error and continues.
(wrong) The parser shifts the error token onto the stack.
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of adding S' -> S to the grammar when constructing an LR(0) automaton?
--InteriorSeparator--
To mark the start and acceptance of the parsing process.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following concepts are related to bottom-up parsing?
--InteriorSeparator--
(right) LR parsing
(right) Shift-reduce parsing
(wrong) Recursive descent parsing
(wrong) Predictive parsing
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the significance of a consistent state in an LR(0) automaton?
--InteriorSeparator--
A consistent state indicates the absence of shift/reduce or reduce/reduce conflicts, making the grammar potentially LR(0).
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of the GOTO table in SLR(1) parsing?
--InteriorSeparator--
(right) To determine the next state to push onto the stack after a reduction.
(wrong) To determine whether to shift or reduce.
(wrong) To store the input string.
(wrong) To store the grammar rules.
--InteriorSeparator--
medium
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the use of the 'marked' flag in the LR(0) automaton construction algorithm?
--InteriorSeparator--
To keep track of which states have already been processed to prevent infinite loops.
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are true regarding LR(0) grammars?
--InteriorSeparator--
(right) They must have unambiguous grammars.
(right) The LR(0) automaton must have no inconsistent states.
(wrong) They can have shift/reduce conflicts.
(wrong) They can have reduce/reduce conflicts.
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the difference between LR(0) and SLR(1) parsing?
--InteriorSeparator--
SLR(1) uses FOLLOW sets to resolve shift/reduce and reduce/reduce conflicts, while LR(0) does not.
--InteriorSeparator--
hard
--InteriorSeparator--
24, 10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the notation A -> α• represent in LR parsing?
--InteriorSeparator--
(right) A production rule where α has been seen on the input.
(wrong) A production rule where A is a non-terminal and α is a terminal.
(wrong) The starting point of parsing.
(wrong) The end of the grammar.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the role of the 'inchidere' (closure) function in the LR(0) automaton construction?
--InteriorSeparator--
It adds all productions that can start from the non-terminal immediately after the dot.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What condition must be met to add ε to FIRST(A)?
--InteriorSeparator--
(right) A =>* ε
(wrong) A is a terminal.
(wrong) ε is already in FIRST(A).
(wrong) A is the start symbol.
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is FOLLOW(S) initialized, where S is the start symbol?
--InteriorSeparator--
FOLLOW(S) = {#}, where # is the end-of-input marker.
--InteriorSeparator--
medium
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the FOLLOW determination algorithm, if A -> αBβ and β derives ε, what is added to FOLLOW(B)?
--InteriorSeparator--
(wrong) FIRST(β) - {ε}
(right) FOLLOW(A)
(wrong) FIRST(A)
(wrong) β
--InteriorSeparator--
hard
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the main components of a compiler as mentioned?
--InteriorSeparator--
Lexical analysis, syntactic analysis, semantic analysis, code generation.
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of the while loop that contains the line FIRST(A)=FIRST (A) U(FIRST(X1)-{8}); in the FIRST algorithm?
--InteriorSeparator--
(right) To propagate the FIRST sets to other non-terminals
(wrong) To add terminal symbols
(wrong) To exit after the first terminal is found
(right) To construct the FIRST sets
--InteriorSeparator--
hard
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the expression `t’ = t’ U {B—>-y}` mean in the pseudo-code?
--InteriorSeparator--
Add production B->y to the state t'.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the action of the parser after the command `STIVA.push(g(top(STIVA), A));`?
--InteriorSeparator--
(wrong) The stack is popped
(right) A new state is pushed onto the stack
(right) The algorithm continues to process the input string
(wrong) The stack top is returned
--InteriorSeparator--
hard
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the main advantages of SLR(1) compared to LR(0)?
--InteriorSeparator--
It can resolve more conflicts in the grammar, so it will allow to parse more grammars.
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If FOLLOW(A)⊄FOLLOW(Xi), what instruction causes this branch to be skipped?
--InteriorSeparator--
(right) `if(FOLLOW(A) ¢ FOLLOW(X-l) )`
(wrong) `while(i>0 && XiEN){`
(right) `continue;`
(wrong) `else exit(“er0are”);`
--InteriorSeparator--
hard
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does `ACTIUNE(t,a)=“D g(t, a)”` represents
--InteriorSeparator--
It signals a shift operation, `a` goes to the stack and `g(t, a)` becomes the new state
--InteriorSeparator--
medium
--InteriorSeparator--
27
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.20929827565361758}]