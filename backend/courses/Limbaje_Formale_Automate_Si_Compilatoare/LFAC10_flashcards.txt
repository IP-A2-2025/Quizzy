[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What are the main phases in a compiler after the source code?
--InteriorSeparator--
Lexical analysis, syntax analysis, semantic analysis, intermediate code generation, code optimization, and code generation.
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are tasks performed during semantic analysis?
--InteriorSeparator--
(right) Type checking
(right) Checking if all identifiers are declared
(wrong) Token validation
(wrong) Syntax tree validation
--InteriorSeparator--
hard
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of lexical analysis?
--InteriorSeparator--
To validate tokens.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does syntax analysis validate?
--InteriorSeparator--
The syntax tree.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the final step of analysis in a compiler?
--InteriorSeparator--
Semantic analysis.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What information is transmitted using attributes associated with grammar elements in Syntax Directed Translation (SDT)?
--InteriorSeparator--
(right) Information for language translation
(wrong) Error codes
(wrong) Source code
(wrong) Memory addresses
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the two types of attributes in a syntax-directed definition?
--InteriorSeparator--
Synthesized and inherited attributes.
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
For a nonterminal A at node N, how are synthesized attributes defined?
--InteriorSeparator--
(right) Defined by a rule associated with the production at node N.
(wrong) Defined by the parent node of N.
(wrong) Inherited from sibling nodes.
(wrong) Randomly assigned.
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Where are inherited attributes defined for a nonterminal B at node N?
--InteriorSeparator--
(right) Defined by a rule associated with the production in the parent of node N.
(wrong) Defined by the production at node N.
(wrong) Inherited from child nodes.
(wrong) Synthesized within node N.
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the equation for L.val if L -> E n?
--InteriorSeparator--
L.val = E.val
--InteriorSeparator--
easy
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the production T -> F T', which attribute is inherited?
--InteriorSeparator--
T'.inh
--InteriorSeparator--
medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main use for a dependency graph in SDT?
--InteriorSeparator--
To describe the flow of information between attributes.
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does an edge from X.c to A.b in a dependency graph indicate?
--InteriorSeparator--
(right) The value of synthesized attribute A.b depends on X.c.
(wrong) A.b is inherited from X.c.
(wrong) X.c is a synthesized attribute of A.
(wrong) A.b and X.c are independent.
--InteriorSeparator--
hard
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does an edge from X.a to B.c in a dependency graph indicate?
--InteriorSeparator--
(right) The value of inherited attribute B.c depends on X.a.
(wrong) B.c is a synthesized attribute derived from X.a.
(wrong) B.c is independent from X.a.
(wrong) X.a is an inherited attribute of B.c.
--InteriorSeparator--
hard
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the complexity of determining the existence of parse trees without circuits in dependency graphs?
--InteriorSeparator--
Exponential.
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What must happen to a dependency graph before attribute evaluation?
--InteriorSeparator--
It must be topologically sorted.
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What characterizes S-attributed definitions?
--InteriorSeparator--
(right) All attributes are synthesized.
(wrong) All attributes are inherited.
(wrong) Both synthesized and inherited attributes must be present.
(wrong) No attributes are allowed.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What traversal order is used to evaluate attributes in S-attributed definitions?
--InteriorSeparator--
Postorder traversal.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In L-attributed definitions, from where can inherited attributes for Xi be derived in the production A -> X1 X2 ... Xi ... Xn?
--InteriorSeparator--
(right) From the parent A
(right) From a left sibling of Xi
(wrong) From a right sibling of Xi
(wrong) From any node in the parse tree.
--InteriorSeparator--
hard
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a common application for SDT, as shown in the material?
--InteriorSeparator--
Constructing syntax trees from mathematical expressions.
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does `S.next (inh)` represent in the context of intermediate code generation?
--InteriorSeparator--
The beginning of the code following the instruction S.
--InteriorSeparator--
medium
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What do `C.true (inh)` and `C.false (inh)` represent?
--InteriorSeparator--
The beginning of the code executed if C is true and false, respectively.
--InteriorSeparator--
medium
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are two considerations in type checking and translation?
--InteriorSeparator--
(right) Type compatibility
(right) Memory space required for a variable
(wrong) Code optimization techniques
(wrong) Register allocation strategies
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following can be represented by type expressions?
--InteriorSeparator--
(right) Basic types
(right) Named types
(wrong) Functions
(wrong) Operators
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If 's' and 't' are type expressions, what does 's -> t' signify?
--InteriorSeparator--
A function from type 's' to type 't'.
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How can type expressions be represented?
--InteriorSeparator--
(right) As a directed acyclic graph
(wrong) As a linked list
(wrong) As a hash table
(wrong) As a circular graph
--InteriorSeparator--
hard
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the example `int[2][3]`, how is the type interpreted?
--InteriorSeparator--
As an array of arrays of integers.
--InteriorSeparator--
easy
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
According to the text, what should happen if two expressions are equal during type equivalence calculation?
--InteriorSeparator--
(right) Return the type.
(wrong) Report an error.
(wrong) Return void.
(wrong) Return null.
--InteriorSeparator--
medium
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the case of representing types with directed acyclic graphs, when are two types structurally equivalent?
--InteriorSeparator--
(right) If they are the same basic type
(right) If they are obtained by applying the same constructor over structurally equivalent types
(wrong) If their names are the same
(wrong) If their addresses are the same
--InteriorSeparator--
hard
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of local storage allocation of types during compilation?
--InteriorSeparator--
(right) To associate each identifier with a relative address
(wrong) To optimize the generated code
(wrong) To perform type checking
(wrong) To resolve naming conflicts
--InteriorSeparator--
hard
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
For data types with variable size, how is memory allocated?
--InteriorSeparator--
A quantity of memory is allocated starting from an address.
--InteriorSeparator--
hard
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Given the declaration `C -> [num] C1`, what formula is used to calculate `C.width`?
--InteriorSeparator--
(right) `num.value * C1.width`
(wrong) `num.value + C1.width`
(wrong) `num.value / C1.width`
(wrong) `num.value - C1.width`
--InteriorSeparator--
hard
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If `type = array(2, array(3, integer))`, what is the calculated width, assuming integer width is 4?
--InteriorSeparator--
24
--InteriorSeparator--
hard
--InteriorSeparator--
33
--FlashCardSeparator--

}], role=model}, finishReason=STOP, citationMetadata={citationSources=[{startIndex=136, endIndex=264, uri=https://slideplayer.com/slide/14483434/}]}, avgLogprobs=-0.12250612013998663}]