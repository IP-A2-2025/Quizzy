[{content={parts=[{text=```text
--FlashCardSeparator--
Single
--InteriorSeparator--
What does L1 ∪ L2 represent in the context of regular languages?
--InteriorSeparator--
The union of two regular languages L1 and L2.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following operations, when applied to regular languages, result in another regular language?
--InteriorSeparator--
(right) Union
(right) Intersection
(wrong) Complement
(wrong) Division
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the key assumption made about N1 and N2 when constructing the grammar for L1 ∪ L2?
--InteriorSeparator--
N1 ∩ N2 = ∅ (The sets of non-terminals are disjoint).
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When constructing the grammar G for L1L2, which rules are included in P?
--InteriorSeparator--
(right) Rules of the form A -> uB from P1 (B ∈ N2)
(wrong) Only rules from P1
(right) All rules from P2
(wrong) Only rules from P2 that start with terminal symbols
--InteriorSeparator--
hard
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the example L = {uc^n, u ∈ {a, b}+, n >= 2}, how is L expressed in terms of L1 and L2?
--InteriorSeparator--
L = L1 * L2, where L1 = {a, b}+ and L2 = {c^n, n >= 2}.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the additional rule added to P to create P' when dealing with the closure under iteration for a language L generated by G?
--InteriorSeparator--
S -> ε (S produces epsilon)
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of adding the rule A -> uS to P' (where A -> u is a rule in P, u ∈ T*, different from S -> ε) when creating G' for iteration?
--InteriorSeparator--
(right) To allow the repetition of the original grammar's productions.
(wrong) To ensure the grammar is unambiguous.
(wrong) To allow the grammar to generate the empty string.
(wrong) To terminate the production sequence.
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the closure to intersection of regular languages, if S1 -> ε is in P1 and S2 -> ε is in P2, what production is added to P?
--InteriorSeparator--
(S1, S2) -> ε
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the intersection example, what does the grammar G generate, given L(G1) = {w ∈ {0,1}* | w contains at least one '0'} and L(G2) = {w ∈ {0,1}* | w ends with '1'}?
--InteriorSeparator--
(right) {w ∈ {0,1}* | w contains at least one '0' and ends with '1'}
(wrong) {w ∈ {0,1}* | w contains only '0's and ends with '1'}
(wrong) {w ∈ {0,1}* | w starts with '0' and ends with '1'}
(wrong) {w ∈ {0,1}* | w contains '0' or ends with '1'}
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the formal definition of a Deterministic Finite Automaton (DFA)?
--InteriorSeparator--
A DFA is a 5-tuple A = (Q, Σ, δ, q0, F), where Q is a finite set of states, Σ is the input alphabet, δ: Q x Σ -> Q is the transition function, q0 ∈ Q is the initial state, and F ⊆ Q is the set of final states.
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does δ(q, a) represent in a DFA?
--InteriorSeparator--
The state the automaton transitions to from state q upon reading input symbol a.
--InteriorSeparator--
easy
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is the initial state represented in a transition diagram?
--InteriorSeparator--
With an incoming arrow.
--InteriorSeparator--
easy
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In a transition matrix representation of a DFA, what do the rows and columns typically represent?
--InteriorSeparator--
(right) Rows represent the current state
(right) Columns represent the input symbol
(wrong) Rows represent the input symbol
(wrong) Columns represent the next state
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the extended transition function, δ*(q, w), designed to calculate?
--InteriorSeparator--
The state the DFA will be in after processing the input string w, starting from state q.
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Given a DFA A = (Q, Σ, δ, q0, F), what defines the language accepted by A, denoted as L(A)?
--InteriorSeparator--
(right) The set of all strings w in Σ* such that δ*(q0, w) is in F.
(wrong) The set of all strings w in Σ* such that δ(q0, w) is in Q.
(wrong) The set of all states in F.
(wrong) The set of all strings w in Σ.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does it mean for two DFAs, A and A', to be equivalent?
--InteriorSeparator--
L(A) = L(A'), meaning they accept the same language.
--InteriorSeparator--
easy
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a Non-deterministic Finite Automaton (NFA)?
--InteriorSeparator--
(right) A finite automaton where the transition function maps a state and an input symbol to a set of possible next states.
(wrong) A finite automaton that can only transition to one state on any input.
(wrong) A finite automaton with infinite states.
(wrong) A finite automaton with no final states.
--InteriorSeparator--
medium
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does the transition function, δ, differ between a DFA and an NFA?
--InteriorSeparator--
In a DFA, δ: Q x Σ -> Q, while in an NFA, δ: Q x Σ -> 2^Q (power set of Q).
--InteriorSeparator--
medium
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In an NFA, what does δ*(q, ε) represent?
--InteriorSeparator--
{q}, a set containing only q
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Given an NFA A = (Q, Σ, δ, q0, F), when is a string w accepted by A?
--InteriorSeparator--
(right) If δ*(q0, w) contains at least one state in F.
(wrong) If δ*(q0, w) contains all states in F.
(wrong) If δ*(q0, w) is empty.
(wrong) If δ*(q0, w) contains only the initial state.
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
According to the theorem on determinism and non-determinism, how can an equivalent DFA be constructed from an NFA?
--InteriorSeparator--
By constructing a DFA whose states are sets of states from the NFA.
--InteriorSeparator--
hard
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When converting an NFA to a DFA, what determines the set of final states (F') in the DFA?
--InteriorSeparator--
(right) Any state in the DFA (which is a set of NFA states) that contains at least one final state from the original NFA.
(wrong) Only the states in the DFA that exclusively contain final states from the original NFA.
(wrong) Only the initial state of the DFA.
(wrong) The empty set.
--InteriorSeparator--
hard
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the initial state (Q0) of the equivalent DFA (A') when converting an NFA (A) to a DFA?
--InteriorSeparator--
{q0}, the set containing only the initial state of the NFA.
--InteriorSeparator--
easy
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the `marcat(S) : false;` and `marcat(S) : true;` steps signify in the algorithm for converting an NFA to a DFA?
--InteriorSeparator--
(right) They indicate whether a particular state S in the DFA has been fully processed.
(wrong) They indicate whether a state is final or non-final
(wrong) They show the state has been removed
(wrong) They are for error handling
--InteriorSeparator--
hard
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is an epsilon-transition in an automaton?
--InteriorSeparator--
A transition between states that occurs without consuming any input symbol.
--InteriorSeparator--
medium
--InteriorSeparator--
36
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How does the transition function (δ) change in a finite automaton with epsilon-transitions?
--InteriorSeparator--
(right) δ: Q x (Σ ∪ {ε}) -> 2^Q, allowing transitions on the empty string
(wrong) δ: Q x Σ -> 2^(Q ∪ {ε}), extending states to include epsilon.
(wrong) δ: Q x Σ -> Q ∪ {ε}, adding epsilon to the possible output states
(wrong) δ: Q x Σ -> Q, no change
--InteriorSeparator--
medium
--InteriorSeparator--
37
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does Cl(q) represent in the context of epsilon-transitions?
--InteriorSeparator--
The set of states reachable from state q by following zero or more epsilon-transitions.
--InteriorSeparator--
hard
--InteriorSeparator--
39
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If S is a set of states, what does Cl(S) represent?
--InteriorSeparator--
(right) The union of the epsilon-closures of all states in S
(wrong) The intersection of the epsilon-closures of all states in S
(wrong) The set of all states that can reach a state in S using epsilon transitions.
(wrong) The set containing all states in S and epsilon
--InteriorSeparator--
hard
--InteriorSeparator--
40
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a finite automaton with epsilon-transitions, how is the extended transition function δ*(q, ε) defined?
--InteriorSeparator--
δ*(q, ε) = Cl(q), the epsilon closure of state q.
--InteriorSeparator--
hard
--InteriorSeparator--
42
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is the extended transition function, δ*(q, ua), defined for a finite automaton with ε-transitions?
--InteriorSeparator--
(right) Cl(δ*(δ*(q, u), a))
(wrong) δ*(Cl(δ*(q, u), a))
(wrong) δ*(δ*(Cl(q, u), a))
(wrong) δ*(δ*(q, u), Cl(a))
--InteriorSeparator--
hard
--InteriorSeparator--
43
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What defines the language accepted by a finite automaton with epsilon-transitions?
--InteriorSeparator--
The set of all strings w such that δ*(q0, w) ∩ F ≠ ∅, where q0 is the initial state and F is the set of final states.
--InteriorSeparator--
hard
--InteriorSeparator--
45
--FlashCardSeparator--
```}], role=model}, finishReason=STOP, avgLogprobs=-0.15457058714844998}]