***************Beginning Page***************
***************page number:1**************
Limbaje formale, automate §i
compilatoare
CursQ
0

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
y//i‘\
Recapitula re
¢ Gramatici LR(O)
0 Teorema de caracterizare LR(0)
0 Automatul LR(0)
I Pamerul LR(0)
¢ FIRST, FOLLOW
' Gramatici SLR(1)

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Parser ascendent general
I-I-u-
- -
Comm 1&th ‘k me
———

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Multimile FIRST $i FOLLOW
. FIRST(<1) : {aIa G T, a sl=>* au} U
if(a 513* s) then {s} else 0.
- FOLLOW(A) I {a\a E T U {a}, S 513* uAY.
a E FIRST (y) }

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Determinare FIRST
. 2.15M e TXFIRSTOUIDO else FIRSTYX):®;
- 10.1“(F1RSUXJ Q FIRS'HMH
~ 13.1/lend1f
- 15.1fH!‘IR5T(><Hy 3 FIRSNNH
~ W/endli
‘ V/endwmle

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
/i\
Determinare FIRST
- Intrare: Gramatica G:(N,T,S,P).
- Multimlle FIRST1X),XE 2,
- m:x,x2mxn, x); 2,1213‘.
- Iegim: FIRSTUIL
- 14FIRST(I1):FIRST(X,)*{SHiZlV
. 24while(1<n u x,='s>(
~ LYIRSTHUZFIRSTW)U(FIRST(XV,1)*(€U;
. 4.1:1+1,-
' )//endwhile
- 5‘1f1i=:n w X1=>’s)
~ 6.FIRST1a):FIRST(u) u (E):
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Determinarea FOLLOW

I s E FOLLOW(S).

0 Daci A —> aBBXY E P $i B 2+ s, amnci FIRST(X) -{5}
Q FOLLOW (B)
' S =* ulABl = (almBﬁXyB1 =* mlmBXyB1 si atunci rezultz'a

FIRST(X)-{e} g FOLLOW (By

. Dacia A ~> (xBﬁ E P atunci FIRST(ﬁ)»{s} Q FOLLOW
(B)-

' Dacia A —> (xBﬁ e P $i B 2* s, atunci FOLLOW(A) Q
FOLLOW(B),

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
fi\
Determinarea FOLLOW
- 1v form e 2)F0LL0W(A):®;
- 2.FOLLOW(S):(8);
- 3.fOI(A~>X1X2...Xn)(
- 4.i=l;
- 5.while(i<n){
- 6.while(X3€NJ-++1;
- 7.if(i<n)(
I ELFOLLOVHXi): FOLLOW(X,IU
(FIRST (x,‘,x,,,...X") #2));
~ 9.++i;
' )//endif
‘ ]//endwhile
' }//endfor
Q /

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
/i\
Determinarea FOLLOW
~ IU.FLAG:tzue;
~ 11.whlle(FLAG)(
- 12.FLAG:fBlSE;
. 13.fUI[A*VX1Xz..Xn)(
- 15.whlle(i>0 u x,em(
- 16.jf1FOLLOW1A) ¢ FOLLOW1X,H(
o 17.FOLLOW(X1):FOLLOW(X,) L/ FOLLOW(A)7
18,FLAG=tzue;
' l9‘)//end1f
. 20.1f1x)=‘21**17
- 22.)//endwhlle
- 23,)//endfor
' 24_)//endwhile
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Gramatici SLR(1)
- Deﬁnilie
I Fie G 0 gramaticé pentru care automatul LR(0) conﬁne
stéri inconsisteme (deci G nu este LR(O)). Gramatica G
este gramatici SLR(1) daci oricare ar ﬁ starea t a
automatului LR(0) sunt indeplinite conditiile:
0 *Daci A-va-, B —> [5- E t,
atunci FOLLOW(A)HFOLLOW(B) = (D;
' —Dac2'1 A~>ws B A» B-ay E t atunci a E FOLLOW(A).

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
K’ ‘\\
Constructia tabelei de parsare SLR(1)
' Intrare:
I Gramatica G = (N, T, S, P) augmentaté cu S’ —> S;
I Automatul M = (Q, E, g, to, Q);
- Multimile FOLLOW(A), AEN
I Iesire:
' Tabela de analizz'a SLR(1) compusé din doué pérti:
0 ACTIUNEQ, a),tE Q, a E T U {# },
0 GOT0(t, A), t E Q, A E N,

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Parsarea SLR(1)

- Deplasare: (m, au#,1()l-(clt’, u#,1()dacé ACTIU'NEU, MIDI’;

' Reducere: (610T, u#,1t)>—( all", u#, nr) ACTIUNEQ, a) = Rp uncle
P: A a l3» Is“ : W $i I": GOTOO, A);

- Acceptare: (tut, 11¢, 1!) dacé ACTIUNE(t,a) I “accepmre”; Analizorul
sc cprcsic cu accoptarca cuvémului dc analizat iar 1: csxc parsarca
acestuia (sirul de reguli care s-a aplicat, in ordine inverse}, in
derivarea extrem dreapté a lui w).

- Eroare: (rs t, auﬁ, 1r) l- eroare dacé ACTIUNE(l,a) I “eroare”;
Analizorul se opreste cu respingerea cuvémului de analiza‘.

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
K’ ‘\\
Exemplu
- 0.5 _> E,1.E -> E+T, 2.E -> T, 3.T -> T*F, 4,T _> F, n —>(E),
6.F —> a
II I 1 \ ‘
SQ-E SQE- TaF- Fag)
E ~> -E+T E a E-+T E ~> -E+T
EQ-T 5 E >-T
Tan? T9.T"F
F~>I(E) Fa-(E)
F~>-a Ea“ F >-a
TaT-‘F I
FAME.)
E >E-+T n
E~>E+-T Tar-F TQVF-
T >~T‘F F >~(E)
T~>IF F».a g
F~>I(E)
FQ-a EaE+T-

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Tabela de tranzitie a automatului LR(O)
-—---—II
unm-
II--------
--------
---------
------
—--------
II-----—
------
II----II---
--------
II--------
F--------

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Test SLR(1)
' G nu este LR(0) stérile l, 2, 9 contin conﬂict de
deplasare/reducere
' FOLLOW(S):{#}, FOLLOW(E):{#,+,)}
0 Gramatica este SLR(1) pentru cé:
0 in starea 1: + E FOLLOW(S);
I in starea 2: * E FOLLOW(E);
~ in starea 9: * E FOLLOW(E).

***************Ending Page***************


***************Beginning Page***************
***************page number:16**************
Tabela de analizé SLR(1)

.
"Um-
—-------
--------
II-------
------
ﬂ-ﬂl-I-HI-I-
—------
------
n--------
n-I-I-I-I-
II-I-I-I-I-
II-------

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
———-
———-
———-
———-
———-

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
M”
———-
———-
———-

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Gramat|0| LR(1)
- Deﬁniﬁe
- Fie G : (v, T, s, P) o grammicé redusi. u“ anicol LR(1) penlru
gramatica G esle o pereche (A -> ‘1-6, a), uncle A - all este u“ anicol
LR(O), iar a EFOLLOW(A) (se pune # in loc de 5).
- Deﬁniﬁe
- Arlicolul (A A» [1,-ng a) esle valid pemru preﬁxul viabil uﬁldacé are Ioc
derivarea
s dr=>*uAu = “Blazu
ma: l:u(a:#dacizu:e).
I Teorema
- O gramalicé G I (V, T, S, P) esle gramalicé LR(1) dacé $1 numai dacz'a
oricare ar ﬁ preﬁxul viabil q), nu exislé doué anicole distincte, valide
penn'u w. de forma(A 4r 01-, a), (B aﬁ'y, b) uncle a e FIRST(~/b).

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Gramatlm LR(1)

' Nu existé conﬂict dcplasarc/reduccrc. Un aslfel de conﬂict
insezunné douz'l anicole (A —» u-, a) §i (B —» [i-aIS’, b) valide
penLnl acela$i preﬁx.

' Nu exisié conﬂict reducere/reducere. Un astfel de conﬂict
inseamni doué anicole ccmplete(A A» av, a) 5i (B A» [33 a) valid:
penlm acelasi preﬁx

- Pentru a veriﬁca dacé c gramaticé esle LR( l) se construie$le
automatul LR(1) in mod aseménz'uor ca la LR(0):

- Amomalul are ca sléri mulgimi de anicole LR(1)

- Tranzigille se fac cu simboluri ce apar dupé puncl

- inchiderea unei mulzimi dc anicole se bazeazé pe faptul c5 dacé
anicolul (B A |3~A|3‘, b) este valid pentru un preﬁx viabil atunci
mm anicolele de forma (A _, ‘n, a), uncle a EFlRST(|3‘b) sunt
valide penlru acelasi preﬁx.

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
/ \
Procedura de Inchldere LR(1)
' flag: true;
I whlle( flag) (
. flag: false;
- for ( 1A‘ or'BB, a) E I) i
- for B a v E P)
- for1 b e FIRST1BaH<
om tB~‘v,b) E1) (
~ I : 1U((E~‘\/ , bl):
- flag: true;
o )//endif
- )//endforb
~ W/endforB
' )//enderA
' )//endwhi1e
' return I;
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
fi\
. LUAqulmr2Fy|rITS,R#7<%2\CU):marcat1tn71false;
- whlleﬁ ce-ru lmarcacmH // marcacm Z false
- £01: x e E) <
- c’ Z o;
- ton up a-XB ,5) E t»
- c’ Z c’ UHB- (XX'B ,a) \ (B B- or'XB,a) e c);
. in t’ Z on
O t' Z inchmerm c’ )r
U m c’ e1‘) l
- TZ T u( c’ h
- marcat< c’ > Z false;
~ )//end1f
O g1t, x) Z v:
' ) //Eﬂdlf
‘ \ //endfoz
- malcatl t > Z true;
Q‘ ) // endwhlle
\i/

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Automatul LR(1)
- Teorema

- Automalul M canslrun in algoritmul 2 esle delerminisl 5i L(M)
coincide cu mulgimca prcﬁxclor viabilc alc lui G. Mai mun, pcntru
once preﬁx viabil y. g(lo‘7) reprezinté mul\imea articolelor LR(1)
valide penlru y‘

- Automalul LR(1) penlnl 0 gramaticé G, se fulose$le penlru a
veriﬁca daci G este LR(1)

I Conﬂict reducers/reducers: D665 in T exist’?! 0 stare Ce conﬁne
amenle de fonna (A _» w, a), (B - |3-, a) atunci gramanca nu est:
LR(1);

I Conﬂict deplasare/reducere: Dacz'x in T exist?! 0 stare ce cunnne
articole de fonna (A A» (r, a) 5i (B A Byaﬁz, b), alunci G nu este
LR(I ).

- 0 gramatici este LR(1) dacé urice stare t ETesKe liberé de conﬂicts

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Exe m pl u
- 5% L:R|R,L~> *R\2,R~> L
I
<8‘ "W <L WWW
(s >~1.:R,#) (K >-|~(:,#))
(S~>~R,#) (LAI*R.( ,//;)
(Id-‘m PM) (H 1,1 #) a- » .2, (i. w
(L Q .=. PM) (R a I’, a) a. ~> PM)
019-1.»)
-

(5%“) ‘h ‘ ” ‘ ” gym)
(K~>~L,#) u (IQ-a "0
(L~>¢‘R1 #) ,
aw,» “ah-W»

9

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
Tabela de tranzitie
HIIIIIIEI

0 5 4 1 2 3

2
IIIIII
IIIIIIIII
I"..-

7
III-III
IIIIII
IIIIIII
IIIIII

G IIIIII ,

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
ri\
Constructla tabelel de anallza LR(1)
o f0r(t e T)
- for (a E T) ACTIUNE1t, a) : “eroare”;
I for (A E V) GOTO(t, A) = “eroare”;
0 fcr(t e TH
. foruAQa-aﬁ, L) E t)
- ACTIUNE1t,a):“D git, a)”;//deplasare ln git,
a)
- for1(E<y-, L) e c )<// acceptare sau reducere
~ form E L) (
' 15(5 :: '5') ACTIUNEH, #) : “acceptahe”;
' else ACTIUNE1t,c):“R BaY”;//IEdUC&IE cu Bay
~ )//endfor
' )// endfo:
I for (A E N) GOTO(t, A) : q(t, A);
' )//endfor
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
‘I - (mas, I:SA>1,:R,2:SA>R»3:I Amm 4m, s=1< A], 1
---—u
----—-
—-------
--m-u---
—-------
---IiI--II
—------
—----u
--u-u---
-------
----“---
------
II--m--un
------
6 ----u---

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
/i\
Exemplu
0 F ie cuvintele
. ***a
. a:**a
. *a:**a
I Analiza LR(1)?
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
/i\
Exemplu
0 Fie gramatica:
-E—>EE+\EE*|e
~ ache‘
Q /

***************Ending Page***************


***************Beginning Page***************
***************page number:30**************
G ra matici LALR( 1)
v Deﬁniﬁe
~ Pie to stare in autumatul LR(1) pentru G. Nucleul acestei
stéri este mullimea anicnlclcr LR(0) care apar ca prime
components in articolele LR(1) din t‘
. Defininiﬁe
0 Doué stiri t, §i t2 ale automatului LR(l) pentru gramatica
G sunt echivalente dacé au acela$i nucleu.

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
Gramatlm LALR(1)

. Ficcarc stare a automatului LR(l) cstc 0 mulﬁmc dc
articolc LR(1), Pornind dc la doué stéri tI 5i t2 putcm
vorbi de starea ll U 12‘

- Fie q: {(L -» *R., 1.:,# m»; {(L -> *R., m}, atunci
IIUIZItl pentm c5112 c I] v

- Deﬁniﬁe

0 Fic G gramaticé LR(l) §i M = (Q, Z, g,10, Q) automatul
LR(1) corcspunzétor. Spuncm 05 gramatica G cstc
LALR(1) ( Look Ahead LR(1)) dacé oricare a: ﬁ
perechea de stiri echivalente tl, t2 din automatul LR(1),
starea tl UtZ este liberé dc conﬂicte.

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
. v
Tabela de anallza LALR(1)
' lntrare: Gramatica G = (N, T, S, P) augmentaté cu S’ A» S;
' lesire: Tabela de analizé LALR(1) (ACIIUNE 5i GOTO )‘
° Algoritm:
' l. Se construie§te automatul LR(1), M = (Q, E, g, to, Q) Fie Q
I {10, tl,. . _, tn}. Dacé male stin'le din Q sunt libere de conﬂict,
urmeazé 2, altfel algoritmul se opreste deoarece gramatica nu
este LR(I).
I 2. Se delermini stirile echivalente din Q 5i, prin reuniunea
aceslora, se obgine 0 noué mullime de stéri Q’ I if‘), t’ |,. . _,
Fm}
- 3. Dacé in Q’ exist?! slz'n'i ce comin cunﬂicle, algorilmul se
opregte deoarece gramatica G nu este LALR(1).

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
Tabela de anallzé LALR(1)
~ 4. Se construie$te automat'ul M’ : (Q’, E, g’, t’0, Q’),
unde \1 FEQ’:
5. Daca 1' E Q atunci g'(t', X) = g0, X), VXEE;
6. Dacia t’ I tlutzum, I], tz,..vEQ, atunci
~ 7. g'(t', x) = g(tl, X)Ug(t2, x)u....
~ 8. Se aplicé algoritmul pentm construirea tabelei de
parsare LR(1) pornind de la automatul M’. Tabela
obyinuté se nume§te tabela LALR(l) pentru gramatica G.
\ ,/

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Exe m pl u
' Pentru gramatica discutatﬁ anterior avem 4UII : 4, 5U12
:5, 7UI3 :7, 8U10:8
GOTO
S'I'AR s
E
u—m—-- s
-——--
II——--
-—_E---
II——-u 7
R4 R4
D5 n4 9
7 R3
3 R5

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
y/Ki‘\
Exe m p I u
' Existi gramatici LR(1) care nu sum LALR(l).
~ s —>aAb | bAd \ aBd \ bBb
o A —>e
I B —>e

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Bi bliografie

' A‘ V Aho, M, Si Lam, Rs Sethi, and J. D, Ullman,
Compilers: Principles, Techniques, and Tools, Second
Edition. Addison-Wesley, 2007

I Gs Grigoras, Constmcfia compilataarelar. Algoritmi
fundamentali, Editura Universitégii “Alexandru loan
Cuza”, 1215i, 2005

***************Ending Page***************

