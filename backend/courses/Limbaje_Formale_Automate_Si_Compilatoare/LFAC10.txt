***************Beginning Page***************
***************page number:1**************
Limbaje formale, automate $i
compilatoare
Curs 10
0

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Unititi Arbors
Caractere . . ,
lexlcale slnlacllc
Cod Analllm Anahzor Anahzor
sursé mm Samamc semantic
Arbore
sintactic
decorat
GENEVBIOY
Cod ma iné de cad cm‘
§ intermediar
Asammare \nterpremre

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
,/ /i‘ \\
Reca pitu Ia re
i Analiza lexicalz'l
I Valideazé tokeni
. Analiza sintactici
0 Valideazé arborele sinlaclic
0 Analiza semanticé
0 Detecteazé restul erorilor
~ Ultimul pas de analizé

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Com pl la re
Uniriyi Arbore
Camctere lexicale sintacti
cm Analllur Amnwr Anahzor
sursﬁ mm simacﬂc ‘ semantic
Arbore
sintactic
demrat
Generator
de cod
. Cod
cad mama intermediar
Asammare \merprewe

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
K’ ‘\\
Anal lza semantlca
i Veriﬁciri
I Toti identiﬁcatorii sunt declaragi
I Veriﬁcarea tipurilor
' Relagii dc mostenire
0 Structurile deﬁnite de utilizator unic declarate
0 Metode unic deﬁnite
0 Identiﬁcatorii rezervaﬁ corect folusigi
~ Etc‘

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
V/ Ki‘ \\
Anal iza semantica
i Cum asociem sens parsz'lrii sintactice?
. Sunt necesare elements sau structuri suplimentare?
. Sunt toate elementele semantice independents de
context?

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
,/ /i‘ \\
Traduceri directionate sintactic (TDS)
v Traduceri de limbaje folosind gralnatici de tip 2
I lnfon-nagia este transmisé folosind atribute asociate
elementelor gramaticii
E~>E|+Tg E.val I E\.val + 11m

***************Ending Page***************


***************Beginning Page***************
***************page number:8**************
' Deflmtn dlrecnonate smtactlc ‘
i O gramaticé de tip 2, cu atribute 5i reguli semantice
. Atributele sunt reprezentate de cimpuri de date
asociate nodurilor din arbori sintactici
I Atributele pot ﬁ:
' Sintetizate
Deﬁnite pentnl un neterminal A de la nodul N din arborele
sintactic printno regulé asociaté productiei de la nodul N
0 Mogtenite
Deﬁnite pentru un neterminal B dc la nodul N din arborele de
parsare prinlr-o regulz'l asocialé productiei din périnlele nodului N

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
ri\
Atrlbute smtetlzate
L~>En L.val : E.val
E~>E|+T E.val = Erva] + Tvval
E-vT E.val = T.val
TATI'F T.va] : T|.val ' F.val
T~>F T.val : F.val
F~>(E) Eval : Eva]
F-vdigit Eval = digitlexval
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
y/’i‘\
Atribute sintetizate
Lam! : 19
Tami’: 15 Foal! = 4
TAIEZ =3/ l \Eual = 5 digitJeL/al = 4
mi: a digitleL/al = 5
digiulmz = 3

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
y//i‘\
Atribute mo§tenite

T—>FT' T'.inh=F.Iml
Tmal : T'.syn

T' -n FTI' T1'.inh :T'.inh$F.val
T'.s = T'.s

T'—> e T'.5 : T'.inh

F —> cifm F. val = cifrumal

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Atribute mo§tenite
Twal: 15
/ \TV-mh : 3
Evai=3 T’,syn=l5\
// V . _
digitlezual = 3 * F'Mi = 5 11:32:21 i;
digitlezwal: 5 e

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
ri\
Ordinea de evaluare Tn DDS
. T 91ml
digit 1 lemma! >r ' F‘ 4 val in 6 T’ 7 syn
dig}: 216111411 e:
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Ordinea ole evaluare Tn DDS
' Este daté de un graf de dependengi (oriental) care
descrie ﬂuxul de infonnagie dintre atribute
~ Pentru ﬁecare nod din arborele sintactic, graful de
dependengé are un nod asociat ﬁecirui an'ibut
I Dacia valoarea atributului sintetizat A.b depinde de X.c,
atunci existé o muchie in graful de dependengi dc la X.c
la Ab
0 Dacé valoarea atributului mo$tenit B.c depinde de X.a,
atunci exist?! 0 muchie in graful de dependegé de la X11 la
B.c.

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
ri\
Ordinea de evaluare Tn DDS - circuite
A -+ B A.s : Bi;
Bi: A.s+1
@
. (J
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Ordinea ole evaluare Tn DDS
I Determinarea existenlei unor arbori de parsare pentru care
grafurile de dependegﬁ nu au circuite este dc complexilate
exponengiali
. Traducerile pot ﬁ implementate folosind clase de DDS
care garanteazz'i existenga unei ordini de evaluare

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
Ordonarea evaluérii atributelor

' Daci graful de dependegé are 0 muchie de la nodul M
la nodul N, atunci atribulul corespunzétor lui M trebuie
evaluat inaintea atributului din N

~ Graful de dependegé trebuie ordonat topologic (adus la
0 fonni liniari astfel incét toate muchiile sunt
indreptate dinspre primul atribut evaluat citre ultimul
atribut evaluat)

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Definitii S-Atribuite
i Toate alributele sunt sintelizate
. Ordinea corecli pentru evaluare esle dati de orice
parcurgere ascendenti a arborelui de parsare
0 Ex. Traversare postordine
0 Poate ﬁ realizaté in timpul parsérii ascendente (care
corespunde unei traverséri in postordine)

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Defi n itii L-Atri bu ite
i Muchiile grafului de dependenyé pot ﬁ orientate de 1a
stinga la dreapta, dar nu invers
. Atributele pot ﬁ:
0 Sintetizate
0 Atributele mostenite pentru X, (daté regula de producgie
A—>X1Xz...X|. . .Xn)
De la périmele A
De la un fraie de la sténga lui Xl
Atributele mosienite sau sintatizzte pentru x, care nu produc
circuits

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
y//i‘\
Definitii L-Atribuite : exempl u
v Declarayiile de variabile cu tip pot ﬁ interpretate
semantic folosind deﬁnigii L-atn'buite

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
Aplicatii pentru TDS

I Constructia de arbori sintactici din expresii matematice
v Un nod care reprezinti E1+E2 conﬁne trei cémpuri: unul

pentru operator 5i céte unul penlru ﬁecare operand

1) E ~> E1 + T Emmie I new Nade('+’,E1,nude,Tvnode)

2) E -’ E, - T Emode : new Nada/J, E1.nude‘T.node)

3) E —> T Eamde : T.nade

4) T ~> ( E ) Tmae = Emnde

5) T a id Tmude = new Lmﬂidjdvanml)

6) T ~> uum Tmade : new Leaf[num,num.ual)

***************Ending Page***************


***************Beginning Page***************
***************page number:22**************
r/ /i‘ \

1) E§TEU E.nod¢:E'.sy/n
E'J'nh = Tnmde

2) E’ a + T I?‘ Epnh : new Imam, E'Jnh, T mm)
Bum z E4...“

a) E’ A i T E; E( .inh 1 new Nude».("‘, Bum, Tmade]
E’ w" = E; ayﬂ

4) E’ -» € E'vlyn : E’ mh

a) T 4 ( E) dec 1 21mm

s] T -» id T WM: 1 new Lea/(id, idmnlvy)

1] T 4v num \ mm = new Lm/(nul'mnum 1141!]

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
Cool intermediar

' Snext (inh): inceputul codului care Lu'meazé instrucgiunii S

' Sande (syn): implementarea in cod intermediar pentru S;
sare la S.next dupé executie.

0 Cvtrue (inh): inceputul ccdului execulat dacé C este
adevz'u'at.

' Cfalse (inh): inceputul codului executat dacé C este fals.

' Geode (syn): implementarea in cod intermediar pentru
condiﬁa C; sate la C.true sau Cfalse.

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
fi\
Cod intermediar- DDS
. S —>while(C)Sl
'Ll = new();
ILZ = new();
‘51.next = Ll;
'C.false I S.next;
°C.true = L2;
'S.code = L1 H C.code H L2 H Sl.code
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
fi\
Generare de cod intermediar - TDS
'S—>while(
~{ L1 = new‘); L2 = new‘); Cvfalse =
S.next; C.true I L2;)
QC)
-{ Sl.next = Ll;}
'Sl
-{ S.code = label |‘ Ll “ C.code |‘
label I‘ L2 l‘ Sl .code;}
@i/

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Tlpurl §| declaratu (1)
- Veriﬁcéri $i lraduceri
I Veriﬁcarea are in vedere compatibilitatea de tipun'
I Traducerea are in vedere spatiul necesar pentru
memorarea unei variabile
' Expresii pentru tipuri.
I Un tip de bazé
~ Un nume de tip
~ O inregistrare este 0 structuré de date cu cémpuri cu
nume
0 Expresii pentru tipuri pot ﬁ fonnate cu constructorul
pentru functii. s~>t semniﬁcé 0 funciie de la tipul s la
tipul t

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
Tipuri §i declaratii (2)
' Expresii pentru tipuri
I Dacé s 5i t sunt expresii pentru tipuri, amnci sxt este
expresie pentru tip
~ Expresiile pentru tip pot contine variabile ale ciror valori
sunt expresii pentru tip
. Expresiile pentru tip pot ﬁ reprezentate ca un graf
aciclic orientat
~ Nodurile inteme sunt constructori
0 anzele sunt expresii de tip elementare

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
y/Ki‘\
Tipuri gi declaratii (3)
O Exemplu

' int[2][3]
' Este interpretatﬁ ca un tablou de tablouri dc int
0 Expresia pentru tip echivalenté este array(2, array(3,

integer»

army
/ \
2 /urraK
3 integer

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
,/ Ki‘ \\
Echivalenta de tipuri (l)
i Calculati cu reguli de potrivire
I Dacé doué expresii sun! egale, amnci retumeazé tipul,
altfel eroare
~ Pot s5 aparé ambiguitégi atunci cind tipurile sum
redenumite, iar redenumirile sunt folosite in expresii
pentm tip

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Echivalenta de tipuri (2)
i in cazul reprezentérii cu grafuri aciclice orientate, doué
tipuri sunt echivalente structural dacé gi numai daci
~ Sum acela§i tip de bazé
0 Sunt obtinute prin aplicarea aceluia§i constructor pests
tipuri echivalente structural
~ Unul este 0 redenumire a1 celuilalt

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
Stocarea localé de tipuri (1)
' $tiind tipul unui identiﬁcator, putem determina
cantitatea de memoﬂe necesari acelui identiﬁcator
~ La compilare sum folosile pentru a asocia ﬁecirui
identiﬁcator 0 adresé relativé (memorate in tabelul de
valori)
~ Pentru tipuri de date cu dimensiune variabilé (ex. string)
sau a céror dimensiune nu poate ﬁ cunoscuté piné la
runtime, este alocaté o cantitate de memorie pomind de
1a o adresé

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
y//i‘\
Stocarea Iocalé de tipuri (2)
T —> B {t:B‘type;w=B.width;}
C
B ~> int { B.type z integer, eridth z 4; }
B ~> ﬂoat { B.type : ﬂoat; B.width = 8; }
C —> 6 {atype : t; Owidth : 111;}
C —) [num] C1 { array(num.vulue, C1.type);
Gwz'dth : num.vulue >< C).width; }

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
r/Ki~\
Stocarea Iocalé de tipuri (3)
T lyxw I arm/(1, aims/(3, integm)
v ' ' ‘ width = ‘24
N Me z mm 2W6" , 0-, 10:21:? gram, mum, mew»
‘ mam = 4 _ \
int [ 2 1 C . >. wig; i 3mm, integer)
[ 3 ] C Wig: ; :1" egz'r
5
@i

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
y//i‘\
Bibliografie
~ O pane dintre exemple au fost preluate din A. V Aho, M‘
S‘ Lam, R‘ Sethi, and J‘ D. Ullman, Compilers:
Principles, Techniques, and Tools, Second Edition‘
Addison-Wesley, 2007

***************Ending Page***************

