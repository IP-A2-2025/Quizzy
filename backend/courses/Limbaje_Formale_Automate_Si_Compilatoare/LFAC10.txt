***************Beginning Page***************
***************page number:1**************
Limbaje formale, automate 5i
oompilatoare
Q

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Unitati Arbore
Caractere . . .
IeXIcaIe smtactlc
Cod Analizor Analizor Analizor
sursa lexical sintactic semantic
Arbore
sintactic
decorat
Generator
Cod ma ina de COd COd
S intermediar
Asamblare lnterpretare

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Reca pitu Ia re
¢ Analiza lexicalé
¢ Valideazé tokeni
¢ Analiza sintacticé
¢ Valideazé arborela sintactic
¢ Analiza s6manticé
' Detecteazé restul erorilor
' Ultimul pas d6 analizé
6

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Unitati Arbore
Caractere . . .
IeXIcaIe smtactl
Cod Analizor Analizor Analizor
sursa lexical sintactic ‘ semantic
Arbore
sintactic
decorat
Generator
Cod ma ina de COd COd
5 intermediar
Asamblare lnterpretare

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Analiza semanticé

. Veriﬁcéri
¢ Toti identiﬁcatorii sunt daclaragi
¢ Veriﬁcarea tipurilor
' Relagii de m0§tenire
¢ Structurila daﬁnite de utilizator unic declarate
¢ Met0d€ unic deﬁnita
' Identiﬁcatorii rezervagi corect folosiyi
¢ Etc.

6

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Analiza semantica

. Cum asociem sens parsérii sintactice‘?

¢ Sunt necesare elémente sau structuri suplimentare?

¢ Sunt toate elementele semantice independente d6
context?

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Trad uceri d i rectionate sintactic (TDS)
. Traduceri de limbaje folosind gramatici d6 tip 2
¢ Informagia este transmisé folosind atribute asociate
elementelor gramaticii
E—>E1+T; E.val = E1.val + T.val

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Deflnltu dlreetlonate smtaetle
. O graniatieé de tip 2, cu atribute §i reguli semantiee
¢ Atributele sunt reprezentate de eénipuri de date
asoeiate nodurilor din arbori sintaetiei
¢ Atributele pot ﬁ:
¢ Sintetizate
Deﬁnite pentru un neterniinal A de 1a nodul N din arborele
sintactie printr-o regulé asociatﬁ productiei de 1a nodul N
~ Mogtenite
Deﬁnite pentru un neterniinal B de la nodul N din arborele de
parsare printr-o regulé asoeiaté productiei din périntele nodului N

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Atri b ute si nteti zate

L—>En L.val = E.val
E—>E1+T E.val = E1.val + T.val
E—>T E.val = T.val
T—>T1*F T.va1 I T1.val * F.va1
T—>F T.val = F.val

F—>(E) F.va1 = E.val
F—>digit F.val I digitlexval

Q

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Atri bute si ntetizate
Lmal = 19
E.ml’:19\ n
Tm): 15 Final = 4
T. w! =3/ l \Fval = 5 digitlei'vval = 4
Em! = 3 digitlejn'val = 5
l
digitiewval = 3
¢

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Atribute mogtenite
T—>FT' T'.inh=F.val
T.val = T'.sy'n
T’ —>* FTIIr Tl'inh = T’. inh =1= F. val
T'.syn = T'.syn
Tisyn = T'inh
F-vﬂl = CUM-val

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Atribute mogtenite
Tmal z 15
/ \Tﬂmh = 3
F'wi *- 3 T’.syn z 15
. . _ /__/ hm = 15
dlgltlexml - 3 =|< Emmi -- 5 T{.syn z 15
digitlezwal z 5 e

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Ordlnea ole evaluare In DDS
‘ T ‘9W\
digit 1 larval =|= _. 17:466.. T’r 7 syn
digit 2 leas'ual e

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Ordinea de evaluare Tn DDS
¢ Este daté de un graf de dependangé (orientat) care
descrie ﬂuxul de informagie dintre atribute
¢ Pantru ﬁecare nod din arborele sintactic, graful de
dependengi are un nod asociat ﬁecérui atribut
¢ Dac'Zl valoarea atributului sintetizat A.b depinde: de X.c,
atunci existé 0 muchie in graful de dependengé de la X.c
la A.b
' D2105 valoama atributului mogtenit B.c depinde de X.a,
atunci existé 0 muchie in graful de dependeﬁi de la X.a la
B.c.
¢

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Ordinea ole evaluare Tn DDS - circuite
A—+ B A.s=B.1I;
BiIA§+1
® A.s

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Ordinea ole evaluare Tn DDS
¢ Detarminarea existangei unor arbori de parsare p6ntru cam
grafurile de depandegé nu au circuite este de complexitate
exponengialé
0 Traducerile pot ﬁ implﬁméntate folosind clase de DDS
cam garanteazé existenga unai ordini de evaluare
$

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Ordonarea evaluérii atri butelor

. Dacé graful de dependegé are 0 muchie de 1a nodul M
1a nodul N, atunci atributul corespunzétor lui M trebuie
evaluat inaintea atributului din N

¢ Graful de dependegé trebuie ordonat topologic (adus 1a
0 forméi liniaréi astfel incét toate muchiile sunt
indreptate dinspre primul atribut evaluat cétre ultimul
atribut evaluat)

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Defi n itii S-Atri bu ite

. Toate atributele sunt sintetizate

¢ Ordinea corecté pentru evaluate este daté de orice
parcurgere ascendenté a arborelui de parsare
¢ EX. Travarsare postordine
¢ Poate ﬁ realizaté in timpul parsérii ascendante (cam

corespunde unei traverséri in postordine)
¢

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Defi n itii L-Atri bu ite
¢ Muchiile grafului de depandengi pot ﬁ orientate de 1a
sténga 1a draapta, dar nu invers
¢ Atributele pot ﬁ:
¢ Sintestizate:
¢ Atributele Ino§tenite pentru Xi (daté regula de producgie
A—>X1X2. . .Xi. . .Xn)
D6 1a périntele A
De la un frate de 1a sténga lui Xi
Atributele mogtenite sau sintetizate pentru Xi care nu produc
circuite
Q

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Defi n itii L-Atri bu ite : exempl u
¢ Declaragiile d6 variabile cu tip pot ﬁ interpretate
semantic folosind deﬁnigii L-atribuite

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Apl Icatll pentru TDS
¢ Construcgia de arbori sintactici din expresii matematice
0 Un nod care reprezinté E1+E2 conﬁne trei cémpuri: unul
pentru operator gi céte unul pentru ﬁecare operand
1) E —% E1 + T Bends ; new N0de(’+'-, E1.n0de, T.n0de)
2) E -—> E1 - T Eﬁode : new N0de("—’, El.n0de, T110116)
3.) E —> T Enode = T.n0de .
4) T ——‘7~ ( E) T.n0de I Emode
5) T —> id Tmode = new Leaﬂid, id.entry)
6) T —> num T.n0de I new Leaﬂnum, nummal)

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Apllcatu pentru TDS

1) E —} T E’ Emode : E’.syn
Fin}: = Tmode

2) EI —i> + T Bi Eiinh = new Nade('+"1 E'.inh,T.n0de)
.E'.syn I Eijgn

3) E’ —> — T E1 Eiinh I new N0de{’—‘, E’.1'nh,T.’nOde)
E'.syn = E; .syn

4) Er ~+ E E'.syn = Erinh

5) T —> ( E) Tussle I Emode

6) T —:- id T.n0de = new Leaﬂid, identry)

7) T —> num Tmode z new Leaf (1mm, nummaf)

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Cod intermediar

¢ Snext (inh): inceputul codului care: urmeazé instrucgiunii S

' S. code (syn): implenmntarea in cod int6rm6diar pentru S;
sare la S.n6xt dupé 6xecu§ie.

' C. true (inh): inc6putul codului ex6cutat dacé C este
adevérat.

' Cfalse (inh): inceputul codului executat dacé C este fals.

' C. code (syn): implementarea in cod intermediar p6ntru
condigia C; sare 1a C.true sau C.fa1s6.

Q

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Cod intermediar - DDS
- S—>while(C)Sl
‘L1 I new();
‘L2 = new();
'Sl.next I L1;
'C.false I S.next;
'C.true = L2;
'S.code = L1 || C.code || L2 || Sl.code
¢

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Generare ole 00d intermediar - TDS
- S—>whi1e(
'{ Ll I new(); L2 I new(); C.false I
S.next; C.true I L2;}
'{ Sl.next I Ll;}
. Sl
'{ S.code I label || Ll || C.code ||
label || L2 || Sl .code;}

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Tlpurl §| declaratll (1)
¢ Veriﬁcéri 5i traduceri
' Veriﬁcarea are: in vedere compatibilitatea d6 tipuri
¢ Traducerea are in vedere spatiul newsar pentru
memorarea unei variabile
¢ Expresii pentru tipuri.
' Un tip de b21251
¢ Un numa d6 tip
' O inregistrare esta 0 structuré de dam cu cémpuri cu
nume
' Expmsii pentru tipuri pot f1 formate cu constructorul
pentru funcgii. s—>t s6mniﬁcé 0 funcgie de la tipul s la
tipul t
@

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Ti pu ri 5i declaratii (2)
¢ Exprasii pentru tipuri
¢ Dacé s §i t sunt expresii pantru tipuri, atunci sxt estﬁ:
expresie pentru tip
¢ Expresiila pantru tip pot contine variabile ale c'eror valori
sunt axpresii pentru tip
¢ Expresiile pantru tip pot ﬁ reprazentatp ca un graf
aciclic orientat
¢ Nodurile interne sunt constructori
¢ Frunzale sunt expresii de tip elempntara
Q

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Ti pu ri §i declaratii (3)
¢ Examplu

¢ int[2][3]
¢ Este interpretaté ca un tablou de tablouri de int
' Expresia pentru tip echivalémtéi este array(2, array(3,

integer»

/f.I-TT[1'-y\
2 )TTGK
3 integer

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Echivalenta de tipuri (1)
. Calculaté cu reguli de potrivire
¢ Dacé doué 6Xpl'65ii sunt egala, atunci returneazé tipul,
altfel aroare
¢ Pot $51 aparé ambiguitégi atunci cind tipurile sunt
redenumite, iar redenumirile sunt folosita in axpresii
pentru tip
Q

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Echivalenta ole tipu ri (2)

¢ in cazul reprezentérii cu grafuri aciclice orientate, doué
tipuri sunt echivalente structural dacé si numai dacé
¢ Sunt acelasi tip de bazé
¢ Sunt obtinute prin aplicarea aceluiasi constructor peste

tipuri echivalente structural
' Unul este o redenumire a1 celuilalt
¢

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Stocarea localé ole tipuri (1)
¢ $tiind tipul unui identiﬁcator, putem determina
cantitatea de memorie necesaré acelui identiﬁcator
¢ La compilare sunt folosite pantru a asocia ﬁecérui
identiﬁcator 0 adrasé relativé (memorate in tabﬁlul de
valori)
¢ Pantru tipuri de date cu dimensiune variabil51(6x. string)
sau a céror dimensiune nu poate ﬁ cunoscuté péné la
runtinm, aste alocaté 0 cantitate de memoria pornind de
la o adresé
9

***************Ending Page***************


***************Beginning Page***************
***************page number:32**************
Stooarea locala ole tipuri (2)
C
B —> ﬂoat { Biggie = ﬂoat; Bluz'dth I 8; }
0 __> 6 { Ciype =1‘; C'JUidth = TL’; }
C ——> [1111111] C1 { armﬂnum-mlﬂﬁj C1.typﬁ);
Gwa'dth : 1111111.value >< Cl.width; }

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Stooarea locala ole tlpurl (3)
T type : emy(2, ew'ey(3, integer»
width=24

.- + =eneger‘~- _ type=erra Zara" 3, 't
Nwiﬁzfimﬁgﬁr 111:4 U width=24 y em m eyeﬂ)
. t ‘ ype : army ,e'nteger
111 [2] 0 widthzﬂ

' '- type : integer
[3] G width-:4
e

***************Ending Page***************


***************Beginning Page***************
***************page number:34**************
Bi bliografie
¢ O parte dintre oxemple au fost preluate din A. V. Aho, M.
S. Lam, R. Sethi, and J. D. Ullman, Compilers:
Principles, Techniques, and Tools, Second Edition.
Addison-Wesley, 2007

***************Ending Page***************


