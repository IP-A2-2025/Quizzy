***************Beginning Page***************
***************page number:1**************
Limbaje formale, automate §i
compilatoare
Curs8
0

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
,/ Ki‘ \\
Recapitula re
¢ Pasii compilin'i
0 Analiza lexicalé
I Descn'ere lexical?!
I lnterpretare
' lnterpretare drept-oriematé
0 Descriere lexicalé bine formaté

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
y/Ki‘\
Cu pri ns
¢ Analiza sintacticé ascendenté
0 Parser ascendent general
0 Analizé LR
- LR(0)
¢ FIRST
0 FOLLOW

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
ummi Arbors
Caractere . . ,
lexlcale lVllaCllC
Cod Analllm l Anahzor i Anahzor
sursé mm ‘ Samamc I semantic
Arbore
sintactic
decorat
GENEVBIOY
Cod ma iné dam cm‘
§ intermediar
Asammare \nterpremre

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
y//i‘\
Automatul LR(O)
i Algoritmul 1(procedura inchidere(t))
. lntrare:
~ Gramatica G = (V, T, S, P);
0 Mulyimea t de anicole din gramatica G;
. le5ire: t’:inchidere( t):{qEQ\3pEl, q65(p,s)} : 50,2)

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
K’ ‘\\
Automatul LR(O)
I &‘:t;ﬂag:&rue;

- while(ﬂag){
- ﬂag I false;
- farm-map e v) {
for (Bﬁy e P)
- if(B—'-y§t‘){
- t'=t'U{B—>'y};
- ﬂag =true;
- Mendif
}//endforB
- )//Endf0rA
- }//endwhile
- return a‘;

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
y/Ki‘\
Automatul LR(O)
i Algoritmul 2 (automatul LR(O))
I lntrare: Gramatica G = (N, T, S, P) la care s—a adéugat
s’ a 5;
~ Iesire: Automatul determinist M I (T, E, g, to, T)
echivalent cu M‘

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
/ \
' - 10=inch|dcm(5‘ w s); T:U,,>;mam\(\ﬂ)=fa|sc, \
. wmlee IE T 1w lmamamn g // marczlﬂ) Z false
. fur(XE2)(//2:NUT
- ":0;
- fnﬂA-vu‘X[§€l)
- v:ru (BAmX-MAANYXB a);
. mum):
u \‘Iinchldere( r 1,
n "(rum
- Pun‘),
- mama“ 04315:;
K, 7mm
' 3(1»X):\’1
- >//e"d1f
~ H/cndfcl
~ Wendfor
. mnrcz|(\):lrue1
. )//endwhile

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Exemplu
I S'ﬁSSaFSEAFjTTAWHFATTAa
II 1
“'5 5“
Y 5MB S
i W i
A‘ ‘ EQ-Y 2
ME,
T M, M s ,8
T >42)
M,
a $
' E *
n
7 ,
) ‘(+45) 1
IE M
g

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Test LR(O)
v Deﬁniﬁe Fic G o gramaticé 5i M automatul LR(O) ata$at lui
G,
- Spunem cé 0_ stare a lui M are un conﬂicl_ rgducere/reducere
dacé ca conunc doué arucolc complclc dlSllnclc Aﬁu'. 8443-.
' Spuncm 05 0 slam a lui M are un conﬂict deplasare/reducere
dacé ea conﬁne un anicol complet A—>u- $i un anicol cu
terminal dupé puncl (ls formal BaB-ay.
' Spunem 05 o stale este consistenti dacé ea nu conﬁne
conﬂicte 5i este inconsistenti in caz contrar.
' Teorema F is G 0 gramaticé 5i M automatul séu LR(O)‘
Gramatica G este LR(0) daci 5i numai dacé automatul M
nu contine stéri inconsistente

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
Algoritmul ole analizé LR(O)
- Tabela de parsare coincide cu automatul LR(0), M,
' Conﬁguratie: (o, u#, 1r) unde 0 E Q*, u E T*, 1r E Pf
. Conﬁguragia inilialﬁ este (In, W#, a),
. Tranziﬁile:
0 Deplasare: (at, au#, 1r) Halt’, u#, n) dacé g(t, a) I t’,
0 Reducere: (stdf, u#, 1:) H ctt", u#, nr) dacé A H B-Et‘,
FAﬁBJGWIWW t":g(LA)-
~ Acceptare: (loll, #, 1t) este conﬁguralia de acceptare dacé
S7 —> S" E tl, 7t este parsarea acestuia.
0 Eroare: 0 conﬁguragie céreia nu i se poate aplica nici o
tranziyie

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Algoritmul de analizé LR(O)
. STIVA.pushy£0); // se mkualxzeaza suva cu LU
_ whileruQ) ‘ // SQ :eysta pan-a 15 “MES Sm exuare
' g : STIVA.:0PH;
- a Z pSU] // a esté szmbolu) curent m“ )ntraxs
~ 1H ‘Flt, 31w k //dsplasaze
- )
v stvA.pu:th4wP4STIvM, NH
' ) Henchi
a warmmm

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
Exem pl u

' S'ﬁSSﬁhSkﬁk~'l"l'~>(k)h4v 1 1 Ava
———--
———-
———-
———-
———-
———-
———-
———-

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Corectitudinea parserului LR(O)

. Lema l, 2 Fie G : (N, T, S, P) o gramaticé LR(0), too,
tor drumuri in automatul LR(0) etichetate cu (p
respectiv y 5i u, v E T*. Atunci, dacé in parserul LR(0)
are loo (too, uv#, s) !—*(tnr, v#, 7r), atunci in G are loo
derivaraa (p 4,21!“ 5i reciproc.

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Corectitudinea parserului LR(O)
~ Teoremﬁ Dacé G este gramatici LR(0) atunci, oricare
ar ﬁ cuvéntul de intrare w E T*, parseru] LR(0)
ajunge la conﬁguragia dc acceptare pentru w, adicé
(too, uv#, s) P001, v#, 1t) dacé $i numai daci (p dr=>nu

***************Ending Page***************


***************Beginning Page***************
***************page number:16**************
Multimile FIRST $i FOLLOW
0 FIRST(<1) : {aIa G T, a sl=>* au} U
if(a 513* s) then {s} else 0.
- FOLLOW(A) I {a\a E T U {a}, S 513* uAY.
a E FIRST (y) }

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
Determinare FIRST
. 2.15M e TXFIRSTOUIDO else FIRSTYX):®;
- 10.1“(F1R5Ux1v G FIRS'HNH
~ 13.1/lend1f
- 15.1fH!‘IR5T(><Hy 3 FIRSNNH
~ W/endli
‘ V/endwmle

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
/i\
Determinare FIRST
- Intrare: Gramatica G:(N,T,S,P).
- Multimlle FIRST1X),XE 2,
- m:x,x2mxn, x); 2,1213‘.
- Iegim: FIRSTUIL
- 14FIRST(I1):FIRST(X,)*{SHiZlV
. 24while(1<n u x,='s>(
~ LYIRSTHUZFIRSTW)U(FIRST(XV,1)*(€U;
. 4.1:1+1,-
' )//endwhile
- 5‘1f1i=:n w X1=>’s)
~ 6.FIRST1a):FIRST(u) u (E):
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
K’ ‘\\
Exe m p I u
Q Fie gramatica:
0 SAE \ B,E~>8,B4>a | beginSCend,C~>s | ;SC
- FIRST(S) : {a,begin, s} FIRST(E) : {a}
- FIRST(B) = {a,begin} FIRST(C) = {;, a}.
' FIRST(SEC) I {21, begin, ;, 1;} ,
' FIRST(SB)= {a,begin},
0 FIRST(;SC): {;}.

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Determinarea FOLLOW

I s E FOLLOW(S).

0 Daci A —> aBBXY E P $i B 2+ s, amnci FIRST(X) -{5}
Q FOLLOW (B)
' S =* ulABl = (almBﬁXyB1 =* mlmBXyB1 si atunci rezultz'a

FIRST(X)-{e} g FOLLOW (By

. Dacia A ~> (xBﬁ E P atunci FIRST(ﬁ)»{s} Q FOLLOW
(B)-

' Dacia A —> (xBﬁ e P $i B 2* s, atunci FOLLOW(A) Q
FOLLOW(B),

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
fi\
Determinarea FOLLOW
- 1v form e 2)F0LL0W(A):®;
- 2.FOLLOW(S):(8);
- 3.fOI(A~>X1X2...Xn)(
- 4.i=l;
- 5.while(i<n){
- 6.while(X3€NJ-++1;
- 7.if(i<n)(
I ELFOLLOVHXi): FOLLOW(X,IU
(FIRST (x,‘,x,,,...X") #2));
~ 9.++i;
' )//endif
‘ ]//endwhile
' }//endfor
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
/i\
Determinarea FOLLOW
~ IU.FLAG:tzue;
~ 11.whlle(FLAG)(
- 12.FLAG:fBlSE;
. 13.fUI[A*VX1Xz..Xn)(
- 15.whlle(i>0 u x,em(
- 16.jf1FOLLOW1A) ¢ FOLLOW1X,H(
o 17.FOLLOW(X1):FOLLOW(X,) L/ FOLLOW(A)7
18,FLAG=tzue;
' l9‘)//end1f
. 20.1f1x)=‘21**17
- 22.)//endwhlle
- 23,)//endfor
' 24_)//endwhile
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
y/Ki‘\
Exe m p I u
Q Fie gramatica:
‘SHE\B,E~>8,B4>a|beginSCend, CH8‘
; SC
I FOLLOW(S)=FOLLOW(E)=FOLLOW(B) ={s, ; , end}
I FOLLOW(C) = {and}.

***************Ending Page***************


***************Beginning Page***************
***************page number:24**************
Gramatici SLR(1)
- Deﬁnilie
I Fie G 0 gramaticé pentru care automatul LR(0) conﬁne
stéri inconsisteme (deci G nu este LR(O)). Gramatica G
este gramatici SLR(1) daci oricare ar ﬁ starea t a
automatului LR(0) sunt indeplinite conditiile:
0 *Daci A-va-, B —> [5- E t,
atunci FOLLOW(A)HFOLLOW(B) = (D;
' —Dac2'1 A~>ws B A» B-ay E t atunci a E FOLLOW(A).

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
Gramatici SLR(1)
' Analiza sintactici SLR(1) este similar?! cu cea LR(O);
tabela de analizi sintacticé are doui componente:
~ *Prima, numiti ACTIUNE, determini daci parserul va
face deplasare respectiv reducers, in funcgie de starea ce
se aﬂé in vérful stivei 5i de simbolul urmétor din intrare
~ —Cea de a doua, numiti GOTO, determine‘: starea ce se va
adéuga in stivé in unna unei reduceri.

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
K’ ‘\\
Constructia tabelei de parsare SLR(1)
' Intrare:
I Gramatica G = (N, T, S, P) augmentaté cu S’ —> S;
I Automatul M = (Q, E, g, to, Q);
- Multimile FOLLOW(A), AEN
I Iesire:
' Tabela de analizz'a SLR(1) compusé din doué pérti:
0 ACTIUNEQ, a),tE Q, a E T U {# },
0 GOT0(t, A), t E Q, A E N,

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
/ \
Constructla tabelel de parsare SLR(1)
v forh: e Q)
~ for (a e T) ACTIUNEUZ, at Z “eroare”;
- for (A e v) GOTO(t, A) : “eroare”;
0 for(t e QH
- formau'all e t)
- ACTIUNE1t,a):“D git, a)”;//deplasare ln qtt, a)
- fonmye t )(l/ acceptare sau reducere
- lf(B == ‘S’) Acnuumc, #0) = “acceptare”;
- else
- for(a e FOLLOW(B)) ACTIUNE(t,a):“R Bw”:
' )// endfor
- for (A e N) comm, A) I q1t, A);
' )l/endfor
Q /

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Parsarea SLR(1)

- Deplasare: (m, au#,1()l-(clt’, u#,1()dacé ACTIU'NEU, MIDI’;

' Reducere: (610T, u#,1t)>—( all", u#, nr) ACTIUNEQ, a) = Rp uncle
P: A a l3» Is“ : W $i I": GOTOO, A);

- Acceptare: (tut, 11¢, 1!) dacé ACTIUNE(t,a) I “accepmre”; Analizorul
sc cprcsic cu accoptarca cuvémului dc analizat iar 1: csxc parsarca
acestuia (sirul de reguli care s-a aplicat, in ordine inverse}, in
derivarea extrem dreapté a lui w).

- Eroare: (rs t, auﬁ, 1r) l- eroare dacé ACTIUNE(l,a) I “eroare”;
Analizorul se opreste cu respingerea cuvémului de analiza‘.

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
Pa rsarea SLR(1)
' lntrare:
~ Gramatica G = (.\I, T, S, P) care este SLR(1) ;
- Tabela dc parsare SLR(1) ( ACTIUNE, GOTO);
~ Cuvéntul de intrare w E T*‘
I lesire:
' Analiza simacticé (parsarea) ascendemz'a a lui w dacé
wEL(G);
0 eroare, in caz contrar.
° Se foloseste stiva St pentru a implementa tranziliile
deplasare/reducere

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
/i\
Parsarea SLR(1)
- a.“ MI : ma“, up: m: cuvanhll dc mtnrc \~
- mu : 0; // puma curcnli m <1“an at mlnrc
- SI Whoa), // w “mum-m mu cu no
- \vhllkiﬂruf) < // K Wm Pam h ww mu cmarr
- \:§!\0P0»
~ ifMCTIUNHLa) I: “a(ccp\arc") cxlﬁﬁwcpurc");
. .rmcnquw:“nmg
- s‘ pun-<1"),
- V/cmm
- DIM
~ \IMCTIUNE(:,:) 1:“RA—vX|X1 xmw
~ fol(!:ld$lm1**75!pop(y,
. 3! pMMGOTOASLmy, A7),
- w/mmr
- clsccm!(“c|mrn"),
. )l/unhlw
. }//cndwh|lc
Q /

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
K’ ‘\\
Exemplu
- 0.5 _> E,1.E -> E+T, 2.E -> T, 3.T -> T*F, 4,T _> F, n —>(E),
6.F —> a
II I 1 \ ‘
SQ-E SQE- TaF- Fag)
E ~> -E+T E a E-+T E ~> -E+T
EQ-T 5 E >-T
Tan? T9.T"F
F~>I(E) Fa-(E)
F~>-a Ea“ F >-a
TaT-‘F I
FAME.)
E >E-+T n
E~>E+-T Tar-F TQVF-
T >~T‘F F >~(E)
T~>IF F».a g
F~>I(E)
FQ-a EaE+T-

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Tabela de tranzitie a automatului LR(O)
-—---—II
unm-
II--------
--------
---------
------
—--------
II-----—
------
II----II---
--------
II--------
ll--------

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
Test SLR(1)
' G nu este LR(0) stérile l, 2, 9 contin conﬂict de
deplasare/reducere
' FOLLOW(S):{#}, FOLLOW(E):{#,+,)}
0 Gramatica este SLR(1) pentru cé:
0 in starea 1: + E FOLLOW(S);
I in starea 2: * E FOLLOW(E);
~ in starea 9: * E FOLLOW(E).

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Tabela de analizé SLR(1)

.
"Um-
—-------
--------
II-------
------
ﬂ-ﬂl-I-HI-I-
—------
------
n--------
n-I-I-I-I-
II-I-I-I-I-
II-------

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
———-
———-
———-
———-
———-

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
M”
———-
———-
———-

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
Bi bliografie

' A‘ V Aho, M, Si Lam, Rs Sethi, and J. D, Ullman,
Compilers: Principles, Techniques, and Tools, Second
Edition. Addison-Wesley, 2007

I Gs Grigoras, Constmcfia compilataarelar. Algoritmi
fundamentali, Editura Universitégii “Alexandru loan
Cuza”, 1215i, 2005

***************Ending Page***************

