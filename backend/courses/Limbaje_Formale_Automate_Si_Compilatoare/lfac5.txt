***************Beginning Page***************
***************page number:1**************
Limbaje Formale, Automate §i Compilatoare I
Curs 5
2022-23
ems 1/34

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Curs 5

a Gramatici ei limbaje independente de context

e Forma redusé pentru gramatici independente de context
a Eliminarea regulilor de etergere §i a redenumirilor

a Forma normalé Chomsky

a Problema recunoaeterii: algoritmul Cocke Younger Kasami

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Curs 5
a Gramatici §i Iimbaje independente de context

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Gramatici independente de context
0 Gramatici de tip 2 (independente de context): G : (N7 T, S, P)
a N §i T sunt multimi nevide, finite, disjuncte de neterminali
(variabile), respectiv terminali
o S e N este simbolul de start
o P : {x —> u|x e N, u e (N U T)*} este multimea regulilor
(productiilor).
o Un limbaj L este de tip 2 (independent de context: L e £2) dacé
existé o gramaticé G de tip 2 astfel incét L(G) : L

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Derivéri extrem sténgi/drepte
Fie G : (N, T7 S, P) si W e L(G)
0 derivare extrem sténgé pentru w: derivarea Tn care, Ia orice pas
se Tnlocuiegte cel mai din sténga neterminal din cuvéntul obginut
0 derivare extrem dreapté pentru w: derivarea Tn care, Ia orice pas
se Tnlocuie§te cel mai din dreapta neterminal din cuvéntul obginut

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Exemplu
G : ({E}, {a, b, +, *), (}, E, P) unde:
P: E —> E+ E\E* E|(E)yayb
Fie a+ (b* a)
0 Derivare extrem sténgé:
E :> E+E :> a+E :> a+(E) :> a+(E*E) :> a+(b*E) :> a+(b*a)
o Derivare extrem dreapté:
E:>E+E:>E+(E):>E+(E*E):>E+(E*a):>
E+(b*a) :>a+(b* a)
0 Existé derivéri care nu sunt nici extrem drepte nici extrem sténgi!

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Arbori sintactici
Definiﬁe 1
Un arbore sintactic (arbore de derivare, arbore de parsare) in
gramatica G este un arbore 0rd0nat, etichetat, cu urmétoare/e
proprieté;i:
0 réda'cina arborelui este etichetata" cu S ,-
0 fiecare frunzé este etichetaté cu un simbo/ din T sau cu 6 ;
0 fiecare nod interior este etichetat cu un neterminal;
0 dacé A eticheteazé un nod interior care are n succesori etichetaji
de la sténga la dreapta respect/v cu X1, X2,..., Xn, atunci
A —> X1X2 . . . Xn este o regu/é.
Dacé A are un succesor etichetat cu 6 (pentru regula A —> 6),
nodul etichetat cu A nu mai are alji succesori.

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Arbori sintactici
Definigie 2
0 Front/era unui arbore de derivare este cuvéntul w : a1a2 . . . an
unde a,-, 1 g i g n sum‘ etichetele nodurilor frunzé fn ordinea de la
sténga la dreapta.
0 Arbore de derivare pentru un cuvént w: arbore de derivare cu
front/era w.

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Exemplu
G: ({E},{a, b,+,*),(},E, P) unde: D Arbore de derivare pentru
P:E—>E+E|E*E|(E)|a|b a+(b*a)1
a+(b*a) e
0 Derivare extrem sténgé: e a e
E:>E+E:>a+E:>a+(E):>
a+(E*E):>a+(b*E):>a+(b*a) o o e o
0 Derivare extrem dreapté:
E:>E+E:>E+(E):>E+(E*E):> e ‘ e
E+(E*a):>E+(b*a):>a+(b*a) o 0

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Am biguitate
Definigie 3
O gramaticé G este ambigué dacé existé un cuvént w fn L(G) care are
2 arbori de derivare distincji.
a Echivalent: w are 2 derivéri extrem sténgi(drepte) distincte.

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Ambiguitate
Definigie 3
O gramaticé G este ambigué dacé existé un cuvént W fn L(G) care are
2 arbori de derivare distincji.

0 Echivalent: w are 2 derivéri extrem sténgi(drepte) distincte.
Gramatica precedenté este ambigué: cuvéntul a + b * a are 2 arbori de
derivare:

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Am biguitate
Definigie 3
O gramaticé G este ambigué dacé existé un cuvént W in L(G) care are
2 arbori de derivare distincji.
0 Echivalent: w are 2 derivéri extrem sténgi(drepte) distincte.
0 Problema ambiguitégii gramaticilor de tip 2 este nedecidabilé: nu
existé un algoritm care pentru o gramaticé oarecare G sé testeze
dacé G este sau nu ambigué

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Exemplu: o gramaticé echivalenté neambigué
0 Arbore de derivare pentru
a+b*a
G = ({E, T, F}, {8, b, +, *), (1» E, P) unde P: e
0 E —> E+ T
' H T 6 0 0
O T —> T>|< F
' H F 0 0 O 6
0 F —> (E)
a 0 o
CM 11/34

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Curs 5
a Forma redusé pentru gramatici independente de context

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Simboluri inutile
0 Un simbol X din N U T este accesibil dacé existé 0 derivare de
forma S :* aXﬂ
0 Un simbol A din N este productiv dacé existé o derivare de forma
A =>+ W, w e T*
0 Un simbol este inutil dacé este inaccesibil sau neproductiv

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Gramatici Tn formé redusé
Definitie 4
O gramaticé este in formé redusé, dacé nu conﬁne simboluri inutile. I
0 Orice limbaj independent de context poate fi generat de o
gramaticé Tn formé redusé.

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Eliminarea simbolurilor inutile
o Pentru orice gramaticé independenté de context G existé o
gramaticé G’ de acelagi tip Tn formé redusé echivalenté cu G.
0 Pentru eliminarea simbolurilor inutile §i obﬁnerea formei reduse:
o Se determiné §i apoi se eliminé simbolurile neproductive §i toate
regulile ce congin mécar unul dintre acestea.
o Se determiné apoi se eliminé simbolurile inaccesibile gi toate
regulile aferente.

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Eliminarea simbolurilor neproductive - algoritm
0 lntrare: G : (N, T, S, P)
0 le§ire: G’ : (N', T, S, P’), L(G’) : L(G), N’ conﬁne doar simboluri productive
N0 I (Z); i = 0;
do {
i: i+ 1;
N,- : N,-_1 U {A|A —> a e P704 e (N,-_1 U T)*};
} while N,- 71$ N,-_1;
N’ = M;
P’ : {A—> a e P|A e N',a e (N’ U T)*};
0 Un simbol A este productiv ddacé A e N’
O Consecingé: L(G) 5i Q) ddacé S e N’

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Exemplu
G : ({S, A, B, C}, {a, b, c}, S, P), unde P este:
0 S —> a|aA|bC
0 A —> aAB
o B —> bac
0 C —> aSb
Gramatica G’ cu toate simbolurile productive:
G’ : ({S, B, C}, {a, b, c}, S, P’), unde P’ este:
0 S —> aIbC
0 B —> bac
0 C —> aSb

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Eliminarea simbolurilor inaccesibile
0 Intrare: G : (N, T, S, P)
0 le§ire: G’ : (N', T’, S, P’), L(G’) : L(G), N’, T’ conIin doar simboluri accesibile
V0 = {S}; i: O;
do {
i : i+ 1;
v,- : \/,-_1u{X|x e NU T, E|A—> aXﬂ e P,A e(\/,-_1mv)};
} while Vi 7é Vi-1;
N’ : V; (‘I N;
T’: v,- n T;
P’ : {A —> a e P|A e N',a e (N’ U T’)*};
0 X accesibil ddacé X e V,-

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Exemplu
G : ({S,A, B, C}, {a, b, c}, S, P), unde P este:
o S —> a\aA\bC
o A —> aAB
o B —> bac
o C —> aSb
o Eliminarea simbolurilor neproductive duce la:
G’ : ({S, B, C}, {a7 b, c}, S, {S —> a|bC, B —> bac, C —> aSb})
o Eliminarea simbolurilor inaccesibile duce la:
G’ : ({S, C}, {a, b}, S, {S —> a\bC, C —> aSb})
o Ce se Tntémplé dacé se aplicé algoritmii Tn ordinea inversé?

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Curs 5
a Eliminarea regulilor de §tergere §i a redenumirilor

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Eliminarea regulilor de §tergere
0 Intrare: G : (N, T, S, P)
0 le§ire: G’ : (N, T, S, P’), L(G’) : L(G), P’ nu conﬁne reguli de §tergere
(reguli de forma A —> e)
No:{A|AeN, A—>eeP}; 1:0;
do {
i: i+ 1;
N,- I NH u{X|x€ N, ax_> a e P,a e N,-*_1};
} while N175 Nii1;
Ne I ,Vi;

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Eliminarea regulilor de §tergere
0 Intrare: G : (N7 T, S, P)
O le§ire: G’ : (N, T, S, P’), L(G’) : L(G), P’ nu conﬁne reguli de §tergere
(reguli de forma A —> 6)
No:{A|AeN, A—>E€P}; i:0;
do {
i: i+ 1;
N,- I NH U{X|Xe N, 3x_> a e P,a e N,-*_1};
} while N17é Ni_1;
Ne I ,Vi;
Are loc:
9 N0§~1~~~§M§Ni+1§~~~N€QN
0 A e NE <=> A§+6

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Eliminarea regulilor de §tergere
P’ se obgine din P astfel:
o Tn fiecare regulé A —> a e P se pun Tn evidengé simbolurile din NE
ce apar in a:
0 se Tnlocuie§te fiecare regulé de acest fel cu mullimea de reguli de
forma
A —> Q1Y1QQY2.. .anYnan+1unde Y,‘ : )(i SGU Y,‘ : 6
Tn toate modurile posibile (2”)
o se eliminé toate regulile de §tergere
o pentru a obline cuvéntul nul (dacé S este Tn NE) se adaugé S’
simbol de start nou §i regulile S’ —> S, S’ —> 6

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Exemplu
G : ({S, A, B, C}, {a, b, c}, S, P), unde P:
0 s _> aAbC|BC
O A —> aA|aB
0 B —> bB|C
O C —> CCIe
G’ : ({S’, S, A, B, C}, {a, b, c}, S’, P’) unde P’:
O S’ —> SIE
0 s _> aAbC|aAb|BC|B|C
0 A —> aAIaBIa
o B _> bB|b|C
0 C % cClc

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Eliminarea redenumirilor (A —> B, A, B e N)
0 Intrare: G : (N7 T, S, P)
O le§ire: G’ : (N, T, S, P’), L(G’) : L(G), P’ nu conﬁne redenumiri
for(AE N){
N0 z {A}; i: 0;
do{
i: i+ 1;
} while N,- 7'5 Ni-1;
}
P’:{X—>0¢€P|a¢N}
for(X€ N)
for(A€ NX && XyéA && A—>a1|a2|...|an€ P’)
P':P'U{X—>a1|a2|...|an}

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Exemplu
G : ({x,y, z}, {a, b, c},x, P), unde P:
0 x —> y|ax|a
a y —> z|byyb
0 z —> cz|c
NX : {vavz}7 Ny I {y,Z}, NZ I {Z}
Gramatica echivalenté féré redenumiri G’ : ({x, y, z}, {a, b, c}, x, P’)
unde P’:
o x —> ax|a|by|b|cz|c
0 y —> by\b|cz[c
0 z —> cz|c

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Curs 5
Gramatici ei Iimbaje independente de context
Forma redusé pentru gramatici independente de context
Eliminarea regulilor de etergere §i a redenumirilor
a Forma normalé Chomsky
Problema recunoaeterii: algoritmul Cocke Younger Kasami

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Forma normalé Chomsky

Definitie 5

O gramaticé este in formé normalé Chomsky dacé reguli/e sale au
forma:

A—> BC,A—> a(§ieventua/S—>e) (A,B,Ce Neiae T).

Teorema 1

Orice limbaj independent de context poate ﬁ generat de o gramaticé fn
formé norma/é Chomsky.

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Demonstraiie
a Se eliminé regulile de §tergere §i redenumirile

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Demonstraiie
0 Se eliminé regulile de §tergere §i redenumirile
0 Se eleminé regulile care nu sunt Tn formé normalé Chomsky:
Dacé A —> x1x2 . . .xn, n > 1 este o astfel de regulé atunci o
Tnlocuim cu A —> Y1Y2... Y” unde:
o Y,- : x,-, dacé x,- e N (neterminalii rémén Ia fel)
0 Y,- : xa dacé x,- : a e T (xa este neterminal nou) §i se adaugé
regula xa a a

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Demonstraiie
0 Se eliminé regulile de §tergere §i redenumirile
0 Se eleminé regulile care nu sunt Tn formé normalé Chomsky:
Dacé A —> x1x2 . . .xn, n > 1 este o astfel de regulé atunci o
Tnlocuim cu A —> Y1Y2... Y” unde:
o Y,- : x,-, dacé x,- e N (neterminalii rémén Ia fel)
o Y,- : xa dacé x,- : a e T (xa este neterminal nou) §i se adaugé
regula xa a a
0 O regulé de forma A —> Y1Y2... Yr, , dacé n > 2, o Tnlocuim cu:
Q A —> Y1Z1
O Z1 —> Y222
9 Zni3 —> Yni22ni2
9 Zni2 —> Yni1Ym
unde 21,22, . . . 7Z,,_2 sunt neterminali noi.

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Exemplu
G : ({S,A}, {a, b, c}, S, P), unde P:
0 S —> aSb|cAc
o A —> cAyc
Gramatica echivalenté Tn formé normalé Chomsky
G : ({S,A,X3,XD,Z1,ZQ}, {a, b, c}, S7 P’), unde P’:
o S —> va1|chg
o Z1 —> be
o 22 —> AxC
0 A —> xCA|c
0 xa —> a
0 xb —> b
o xc —> c
CM 29/34

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Curs 5
a Problema recunoa§terii: algoritmul Cooke Younger Kasami

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Algoritmul Cooke Younger Kasami (CYK)
0 Problema recunoagterii in gramatici Tn formé normalé Chomsky se
poate rezolva cu algoritmul CYK Tn timp 0(n3).
o Dacé w : a1a2 . . . an atunci se constuiesc mulgimile
Vi] I {AIA :>+ a,-a,+1 . . . a,-+]-_1}
inductiv pentru j : 1,...,n
weL(G)<:>Se V1,,

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Algoritmul Cooke Younger Kasami
a Pentruj : 1:
a \/,-1 = {A|A 2+ a1}: {ABA a a,- € P}
a Pentruj > 1, V,-/-:
o Dacé A 1+ a,a,-+1 ...a,+j_1:
A :> BC I>+ a,-a,-+1 . . . a,-+/-_1 §l
B :>+ aiai+1 ~~~ai+k—1 (B E Vik)
C :>+ ai+kai+k+1 ---ai+j—1 (C E Vi+kj—k)
unde1gign+1—j,1gkgj—1
9 Vi!‘ : U£;11{A|A —> BC E P, B E Vik’ C € Vi+k j—k}

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Algoritmul Cooke Younger Kasami
a Notagie:
{AIA —> BC G F’, B E Vik, C E Vi+kj—k} = Vik O Vi+kj—k
a Atunci:
pentru2§j§n,15i§n+1—ji
j—1
Vij I U(Viko Vi+kj—k)

k=1

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Algoritmul Cooke Younger Kasami
0 Intrare: G : (N, T, S, P) in formé normalé Chomsky, w : a1a2 . . . an
0 |e§irez w e L(G)?

for(i=l; i<=n; i++)

V,-1 : {A|E|A —> a,- e P};
for(j=2; j<=n; j++)
for (i=1; i<=n+l—j; i++){
Vij I (B;
for(k=1; k<=j-1; k++)
Vij I Vij U (Vik O Vi+k j-k);
}
if(S€ V1”) W G L(G) else w Q L(G)

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Exemplu
G : ({S, X, Y, Z}, {a, b, c}, S, P), unde P:
0 S —> XY
a X —> XY|a
o Y—> YZ|a|b
a Z —> c
W: abc

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Exemplu
G : ({S, X, Y, Z}, {a, b, c}, S, P), unde P:
0 S—> XY
a X —> XY\a
o Y—> YZ|a|b
o Z —> c
W: abc
v21:{Y} v22 :{Y} —
V31={Z} ——
S e V13 41> abc e L(G)

***************Ending Page***************





