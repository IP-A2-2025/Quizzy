[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
If L1 and L2 are type 3 languages, what is the result of their intersection?
--InteriorSeparator--
L1 ∩ L2 is also a type 3 language
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If L is a type 3 language, what is the result of taking the difference between Σ* and L?
--InteriorSeparator--
Σ* \ L is also a type 3 language
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the order of operator precedence in regular expressions?
--InteriorSeparator--
*, concatenation, |
--InteriorSeparator--
easy
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following regular expressions describe the language of all strings of a's and b's?
--InteriorSeparator--
(right) (a|b)*
(wrong) a*b*
(wrong) ab
(wrong) a|b
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What type of automaton is created from a regular expression using the algorithm described in the course material?
--InteriorSeparator--
A finite automaton with ε-transitions
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following properties hold true for regular expressions?
--InteriorSeparator--
(right) p|(q|r) ≡ (p|q)|r
(right) p • ε ≡ ε • p ≡ p
(wrong) p|p ≡ p*
(wrong) ε|p* ≡ p
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the algorithm for converting a regular expression to a finite automaton, what data structure is used to store the operators?
--InteriorSeparator--
A stack (STIVA1)
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the algorithm for converting a regular expression to a finite automaton, what data structure is used to store partially constructed trees?
--InteriorSeparator--
A stack (STIVA2)
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If 'N' is a node in the parse tree labeled with the concatenation operator, how are the initial and final states of the combined automaton (N.i, N.f) related to the initial and final states of its children (S.i, S.f, D.i, D.f)?
--InteriorSeparator--
N.i = S.i, N.f = D.f, δ(S.f, ε) = D.i
--InteriorSeparator--
hard
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If 'N' is a node in the parse tree labeled with the Kleene star operator, how are the initial and final states of the resulting automaton defined with respect to the child node 'S'?
--InteriorSeparator--
δ(N.i, ε) = {S.i, N.f}, δ(S.f, ε) = {S.i, N.f}
--InteriorSeparator--
hard
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a Context-Free Grammar (CFG), what is the restriction on the left-hand side of a production rule?
--InteriorSeparator--
It must be a single non-terminal symbol
--InteriorSeparator--
easy
--InteriorSeparator--
36
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the 'build_tree()' function in the regular expression to automaton conversion algorithm?
--InteriorSeparator--
It constructs a portion of the syntax tree based on operators and operands from the stacks.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is the initial state determined when converting regular expression to a finite automaton using the provided algorithm?
--InteriorSeparator--
The initial state of the equivalent automaton is N.i where N is the root node of the parse tree.
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is the final state determined when converting regular expression to a finite automaton using the provided algorithm?
--InteriorSeparator--
The final state of the equivalent automaton is N.f where N is the root node of the parse tree.
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If a node N in the syntax tree is labeled with '|' (union), what epsilon transitions are added to the automaton?
--InteriorSeparator--
(right) δ(N.i, ε) includes S.i and D.i
(right) δ(S.f, ε) includes N.f and δ(D.f, ε) includes N.f
(wrong) δ(N.i, ε) includes N.f
(wrong) δ(S.f, ε) includes D.i
--InteriorSeparator--
hard
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does L(E1)L(E2) represent in terms of regular expressions E1 and E2?
--InteriorSeparator--
The concatenation of the languages described by E1 and E2.
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does L(E)* represent in terms of regular expression E?
--InteriorSeparator--
The Kleene star of the language described by E, i.e., zero or more concatenations of strings from L(E).
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.1657980990110449}]