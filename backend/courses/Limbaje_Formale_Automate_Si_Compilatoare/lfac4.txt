***************Beginning Page***************
***************page number:1**************
Limbaje Formale, Automate §i Compilatoare I
Curs 4
2022-23
m4 1/29

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Curs 4
a Proprietéti de inchidere pentru clasa limbajelor de tip 3
a Expresii regulate
a Automatul echivalent cu o expresie regulaté
9 Algoritm
a Gramatici ei limbaje independente de context

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Curs 4
a Proprietégi de inchidere pentru clasa limbajelor de tip 3

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
lnchiderea Ia interseciie

O Dacé L1 , L2 € £3,31UﬁCi L1 n L2 G L3
Fie A1 I (011217511QO11 F1) §i A2 I (02,22,527 (31027 F2) automate
deterministe astfel Tncét L1 : L(A1) §i L2 : L(A2).
Automatul A (determinist) care recunoagte L1 m L2:

A I (Q1 >< 622,21“ 22,57 (£7017q02)7 F1 >< F2)

(m1, qz), a» z (qq, qg> ddacé

0 51(Q173): q;

O 62(QZ> a) I qé

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Tnchiderea Ia diferenié

o Dacé L e £3 atunci I : (2* \ L) e £3
Fie A : (Q, 2,5, qo, F) automat cu L(A) : L.
Automatul A’ care recunoagte Z : L(A):

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Tnchiderea Ia diferenié
0 Dacé L e £3 atunci I : (2* \ L) e £3
Fie A : (Q, 2,6, qo, F) automat cu L(A) : L.
Automatul A’ care recunoa§te Z : L(A):
D Dacé L1,L2 G £3 atunciL1\L2 € L3 I L1 \Lg I L1QL—2
our“ 5/29

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
lnchiderea Ia produs
° Fie A1 I (01,2,51,QO1,{f1}) §i A2 I (Q2, Z52, C7027 {f2})
automate cu 0 singuré stare finalé astfel Tncét L1 : L(A1) §i
L2 : L(A2).
Automatul A (cu e-tranziiii) care recunoagte L1 - L2:
A1 A2
A:

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Tnchiderea Ia reuniune
° Fie A1 I (01,21,51>(701,{f1}) §i A2 I (02,22,5217027U2D
automate cu 0 singuré stare finalé astfel Tncét L1 : L(A1) §i
L2 : L(A2).
Automatul A (cu e-tranziiii) care recunoagte L1 U L2:
A1
“We”
A2

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Tnchiderea Ia iteraiie
o Fie A : (Q, 2,6, q01, {f}) automat cu o singuré stare finalé astfel
Tncét L(A) : L.
Automatul A (cu e-tranzigii) care recunoagte L* (z L(A)*):
A
0 '00!‘
L J

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Curs 4

Proprietéti de Tnchiclere pentru clasa Iimbajelor ole tip 3
e Expresii regulate

Automatul echivalent cu 0 expresie regulaté

w Algoritm

Gramatici §i Iimbaje independente de context

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Expresii regulate - definijie
0 Reprezentarea limbajelor de tip 3 prin expresii algebrice
Definigie 1
Dacé Z este un alfabet atunci 0 expresie regulaté peste Z se defineete
inductiv astfel:
o Q), 6, a (a e Z) sunt expresii regulate ce descriu respectiv limbajele
V), {6}, {a}-
o Dacé E, E1, E2 sunt expresii regulate atunci:
o (E1|E2) este expresie regulate“: ce descrie Iimbajul L(E1) U L(E2)
o (E1 - E2) este expresie regulaté ce descrie Iimbaju/ L(E1)L(E2)
o (E *) este expresie regulaté ce descrie limbaju/ L(E)*

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Expresii regulate - definijie
0 Reprezentarea limbajelor de tip 3 prin expresii algebrice
Definigie 1
Dacé Z este un alfabet atunci 0 expresie regulaté peste Z se defineete
inductiv astfel:
o Q), 6, a (a e Z) sunt expresii regulate ce descriu respectiv limbajele
V), {6}, {a}-
o Dacé E, E1, E2 sunt expresii regulate atunci:
o (E1|E2) este expresie regulate“: ce descrie Iimbajul L(E1) U L(E2)
o (E1 - E2) este expresie regulaté ce descrie Iimbaju/ L(E1)L(E2)
o (E *) este expresie regulaté ce descrie limbaju/ L(E)*
o Ordinea de prioritate a operatorilor este *, ', |

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Exemple

' (alb)l(0|d) —> {8,19, c, d}

0 (0|1) - (0|1) —> {00,01,10,11}

0 a*b* —> {anbkm7 k Z 0}

0 (a!b)* —> {a,b}*

0 (a|b|c|...|z)(a|b|c|...|z|0|1|2...|9)* descrie mulgimea identificatorilor
Doué expresii regulate E1, E2 sunt echivalente, §i scriem E1 : E2 dacé
LUZ-1) I L(E2)

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Proprietéji
¢ (plq)lr I pl(Q|r)
¢ (pq)r I P(qr)
‘pWIMP
v p ' 6 I 6 ~ p I p
'pMIMPIp
a (Z) - p : p - (Z) I (Z)
¢ p(<1|r) I pqlpr
' (plq)r I prmr
° 6IPP* I P*
'dWPIW

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
De la o expresie regulaté Ia automatul ﬁnit
Teorema 1
Pentru orice expresie regulaté E peste Z exista' un automat ﬁnit (cu e -
tranzijii) A, astfel fncét L(A) : L(E).
Demonstratie: inducgie structuralé.
0 Dacé E e {0), e, a} (a e 2) atunci automatul corespunzétor este
respectiv:
G) H

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Demonstraiie

0 E z E1IE2

0 ‘m, m

m

D E : E1 E2

m
a E : ET

01mm‘

CW 14/29

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Reprezentarea expresiilor regulate sub formé de
arbore
0 lntrare: Expresia regulaté E I e091 ...en_1
Precedenla operatorilor:
prec(|) = 1, prec(-) = 2, prec(*) = 3 (prec(()= 0).
0 legire: Arborele asociat: t.
0 Metoda: Se consideré doué stive:
o STIVA1 stiva operatorilor
o STIVA2 stiva arborilor (care va conﬁne arborii parﬁali construigi)
o Metoda tree(r,tS,tD)

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Algoritm
i = O;
while(i < n) {
0::q;
switch(c) {
case K’: { STIVAl.push(c); break; }
case simbol (din alfabet): { STIVA2.push(tree(c,NULL,NULL))7 break; }
case operator: {
while (prec(STIVA1.top())>=prec(c))
build_tree();
STIVAl.push(c); break;
}
case U’: {
do { build_tree();} while(STIVAl.top()l= ’(’);
STIVAl.pop(); break;
}
}
i++;
}
while(STIVAl.not.empty()) build.tree();
t = STIVA2.pop();

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Algoritm
build_tree()
op = STIVA1.pop();
t1 = STIVA2.pop();
switch (op) {
case '*': {
t = tree(op, t1, NULL);
STIVA2.push(t); break;
}
case'v, '1: {
c2 = STIVA2.pop();
t = tree(op, t2, t1);
STIVA2.push(t); break;
}
}

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Exemplu
a* ~ (b|a) - b*
m4 18/29

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Curs 4
a Automatul echivalent cu o expresie regulaté
a Algoritm

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Automatul echivalent cu o expresie regulaté
® H
a ‘m, u

O E = E1|E2

m ‘Q
O E = E1 E2

@1'161'
m4 20/29

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Observatii

o pentru orice aparitie a unui simbol din Z, cét §i pentru 6, dacé
acesta apare explicit in E, este nevoie de 2 stéri in automatul
construit.

o fiecare din aparitiile operatorilor | §i * dintr-o expresie regulaté E
introduce doué noi stéri in automatul construit

o operatorul - nu introduce alte stéri

0 dacé n este numérul de simboluri din E iar m este numérul de
paranteze impreuné cu aparitiile simbolului - , atunci numérul
stérilor automatului echivalent cu E este p : 2(n — m).

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Algorltm
0 Intrare: Expresia regulaté E cu n simboluri dintre care m sunt paranteze §i aparilii ale
operatorului produs;
0 le§ire:Automatu| (cu p : 2(n — m) stéri) cu e - tranzi1ii echivalent cu E
0 Fie o metodé generateState() care genereazé o stare noué Ia ﬁecare apel (stérile: numere
crescatoare incepénd de la 1)
1 Se construie§te arborele ata§at expresiei E;
2 Se parcurge arborele Tn postordine
0 Pentru ﬁecare nod N, se vor genera (dacé este cazul) §i memora doué stéri , N1i,
N.f, care reprezinté starea initialé respectiv finalé a automatului AN echivalent cu
expresia EN corespunzétoare subarborelui cu rédécina N
0 Automatul AN va ﬁ construit pe baza automatelor construite Ia pa§ii anteriori,
utilizénd Teorema 1
3 Starea inigialé a automatului este N.i, starea ﬁnalé N.f, unde N este nodul rédéciné;

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Exemplu
E : a|b* - c
Cm 23/29

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
2. Se parcurge arborele obginut Tn postordine.
Dacé N este nodul curent iar S si D sunt fii sai, atunci, in funcjie de eticheta lui N, se
executé urmétoarele:

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
2. Se parcurge arborele oblinut Tn postordine.
Dacé N este nodul curent iar S si D sunt fii sai, atunci, in funcjie de eticheta lui N, se
executé urmétoarele:
O Dacé N este etichetat cu a (deci este frunza):
N.i : generateState(), N.f : generateStateO,
6(N./'7 a) : N.f
m4 24/29

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
2. Se parcurge arborele oblinut Tn postordine.
Dacé N este nodul curent iar S si D sunt fii sai, atunci, in funcjie de eticheta lui N, se
executé urmétoarele:
O Dacé N este etichetat cu a (deci este frunza):
N.i : generateState(), N.f : generateStateO,
6(N.i7 a) : N.f
0 Dacé N este etichetat cu |:
N.i : generateStafeO. N.f : generateState(),
6(N.i,e) I {S.i, DJ},
6(S.f,6) : N.f, 6(D.f,e) I NAf

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
2. Se parcurge arborele oblinut Tn postordine.
Dacé N este nodul curent iar S si D sunt fii sai, atunci, in funcjie de eticheta lui N, se
executé urmétoarele:
O Dacé N este etichetat cu a (deci este frunza):
N.i : generateStafeO. N.f : generateState(),
6(N.i7 a) : N.f
0 Dacé N este etichetat cu |:
N.i : generateStafeO. N.f : generateState(),
6(N.i,e) I {S.i, D.i}7
6(S.f,6) : N.f, 6(D.f,e) I NAf
0 Dacé N este etichetat cu - :
N.i : S.i, N.f : S.f,
6(S.f,e) : D.i

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
2. Se parcurge arborele obﬁnut Tn postordine.
Dacé N este nodul curent iar S si D sunt fii sai, atunci, in funcjie de eticheta lui N, se
executé urmétoarele:
O Dacé N este etichetat cu a (deci este frunza):
N.i : generateStafeO. N.f : generateState(),
6(N.i, a) : N.f
0 Dacé N este etichetat cu |:
N.i : generateStafeO. N.f : generateState(),
6(N.i,e) I {8.1, DJ},
6(S.f,6) : N.f, 6(D.f,e) I N4f
0 Dacé N este etichetat cu - :
N.i : S.i, N.f : S.f,
6(S.f,e) : D.i
0 Dacé N este etichetat cu * (D nu existé Tn acest caz):
N.i : generateState(), N.f : generateState(),
6(N.i,e) : {S.i, N.f},
6(S.f,e) : {S.i, N.f}

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
2. Se parcurge arborele obginut Tn postordine.
Dacé N este nodul curent iar S si D sunt fii sai, atunci, in funcjie de eticheta lui N, se
executé urmétoarele:
0 Dacé N este etichetat cu a (deci este frunza):
N.i : generateState(), N.f : generateStateQ,
6(N.i, a) : N.f
0 Dacé N este etichetat cu |:
N.i : generateState(), N.f : generateState(),
6(N.i,e) I {8.1, DJ},
6(S.f,6) : N.f, 6(D.f,e) I NAf
0 Dacé N este etichetat cu - :
N.i : SJ, N.f : S.f,
6(S.f,e) : D./'
0 Dacé N este etichetat cu * (D nu existé Tn acest caz):
N.f : generateState(), N.f : generateState(),
6(N.i,6) : {S.i, N.f},
6(S.f,e) : {S.i, N.f}
3. Starea inigialé a automatului este N.f, starea ﬁnalé N.f, unde N este nodul rédéciné;

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Exemplu
o [9;10;
.lfhs}
{5,51
:12: 0,4» ‘L8’
E : a|b* - c

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Exemplu

nun--
IIIEIII
Iquu
"nun
IIﬂﬂu
IIﬂuﬂ
III-I"
Iquu
“II-u
unnu-
IIqu

m4 26/29

***************Ending Page***************


***************Beginning Page***************
***************page number:34**************
Corectitudinea algoritmului
Teorema 2
Algoritmu/ descris este corect: automatu/ cu 6 - tranzijii obj/nut este
echivalent cu expresia regulaté E.
Demonstragie:
0 Tranzigiile care se definesc Tn algoritm urméresc construcﬁa din
teorema 1.
Automatul oblinut este echivalent cu expresia daté la intrare.

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Curs 4
a Gramatici §i limbaje independente de context

***************Ending Page***************


***************Beginning Page***************
***************page number:36**************
Gramatici independente de context
0 Gramatici de tip 2 (independente de context): G : (N7 T, S, P)
a N §i T sunt multimi nevide, finite, disjuncte de neterminali
(variabile), respectiv terminali
o S e N este simbolul de start
o P : {x —> u|x e N, u e (N U T)*} este multimea regulilor
(productiilor).
o Un limbaj L este de tip 2 (independent de context: L e £2) dacé
existé o gramaticé G de tip 2 astfel incét L(G) : L

***************Ending Page***************

