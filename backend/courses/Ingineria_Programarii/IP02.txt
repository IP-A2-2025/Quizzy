***************Beginning Page***************
***************page number:1**************
lngineria Programérii
Cursul 2 — 28 februarie,1 martie 2023
adiftene@info.uaic.ro

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cuprms

> Din Cursul 1...

> Prototipizare

> RUP

> V-Model

> Extreme Programming
> Agile, Scrum

> Lean, Kanban

> MDD, AMDD

> TDD

> lngineria ceringelor
> Diagrame Use-Case

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Din Cursul 1 —1
> lngineria programérii (Software engineering)
~ Se referi Ia metodologiile folosite Tn rezolvarea
proiectelor mari care sunt rezolvate de echipe de
camenl
a Folosirea principiilor inginere§ti Tn anal/'zarea,
dezva/rarea, punerea in funcﬂune, restarea,
fnrrep'nerea, rerragerea produselor software
~ Tot aici mai pot fi prinse: gestionarea resurse/or,
coordonarea echipe/or, p/aniﬁcare, buget
> Scop: oblginerea de programe sigure 5i care
functioneazé eficient pe ma§ini de calcul
OnCFEtE
‘ 1

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Din Cursul i — Etapele dezvoltirii

prog ramelor

> Analiza cerintelor (Requirements analisys)

> Proiectarea architecturalé (Arhitectural
design)

> Proiectarea detaliata (Detailed design)

> Scrierea codului (Implementation)

> lntegrarea componentelor (Integration)

> Validare (Validation)

> Verificare (Verification)

> intretinere (Maintenance)

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Prototlplzare (Prototypmg)
> Tipuri de prototipuri
D De aruncat (throw-away)
- Scop: clarificarea specificaigiilor
- Se dezvolti repede, orice altceva e secundar
(quick-and-dirty)
- Util in a rezolva “architecural/technology spikes“
- Programul “adevirat” este scris apoi de Ia 0
D Evolutionar
- Scop: construire incrementalé a produsului final
- Se construie$te un nucleu funqional la care se
adaugé apoi noi funcyionalitigi

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Prototipizare +-

> +: Se poate elimina lipsa de claritate a specificatviilor

> +: Clienﬁi pot schimba cerinyele (e ieftin de

gestionat)

> +: intreﬁnere ieftiné (verificare pe parcurs)

> +: Se poate facilita instruirea utilizatorilor

> —: Mediu artificial, problems ascunse

> —: Da' nu-I' apmape gata?! De ce ma/ dureaza' atét?

> —: Putem sé schimbém spec/ﬁcaﬂi/e? Pa/ a; vrea 5/...

> —: Ad/cai munca mea este aruncaté la gunoi?
‘ 5

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
RUP (Ratlonal Unlfled Process)
> Model iterativ folosit de IBM din 2003
Phases
Business Modeling ' l
Analysis a Design M
Deployment i .
mug-mm"
"WWW A
PNIeﬂ Management M
Envlronment ' ' i

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
RU P
> lngineria funcgionalitigii. Sunt sintetizate
necesitéyile functionale.
> Are la baza 4 etape:
~ Inception: pentru validarea costurilor 5i bugetului,
studiu de risc, ingelegerea ceringelor
Q Elaboration: analiza domeniului problemei,
arhitectura proiectului este stabilité
~ Construction: construcgia sistemului, se obgine
prima versiune a sistemului
~ Transition: tranzigia Ia sistemul din producyie
‘ “

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
> A fost utilizat in Germania gi SUA in anii '80
> Partea stingi , analiza ceringelor 5i crearea
specificagiilor sistemului
> Partea dreapti , integrarea pérgilor 5i validarea Ior
> V de Ia Verificare 5i Validare
cpemlan
C t f
03355503: Ver'Qggm M-intsii-ncn
P _ t Validation 5 t
r0 =t
Deﬁriition R'““'§:§‘="“ Verigcitriim
Artnltttture and Validation
lnreﬂrallom .
Detailed Test, and Project
Design Veriﬁcation Test and
Integration
Implementation
.—)
Tlme 9

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
V-Model — ObIectlve
> Minimizarea riscurilor
> lmbunétégirea 5i garantarea calitégii
> Reducerea costurilor
> imbunétégirea comunicérii
“mm; > m I SW WM.‘
2E £5’ “Wm,
.1.m:'§.::.t'm.m. m g; m WWW.“
s‘
“f
m W
_ m Dawn Muw-m-ms Mm
35:1 ZIZELTELZK'KJZ 2551 lifkﬁiflﬁiiﬁiﬁlw
m

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
V-Model + —

> +: utilizatorii V-model participa'l la dezvoltare 5i la
intreginere

> +: existé un grup ce controleazé modificérile din
specificagii. Acesta 5e intélne§te ndati pe an gi
hotéré$te ce modificéri sunt acceptate

> +: modelul asiguré Ia fiecare etapi asistengé $i
definegte explicit ce avem de ficut

> -: nu se asiguri intreﬁnerea

> —: e folosit Ia proiecte de dimensiuni relativ mici

‘ "

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Extreme Programmlng
> Why "Extreme"? Releaseplan
Q Extreme" mefins these .. months /,itergnon man
practices get turned up / A e t
to a much higher "volume" wfés “We S
than on traditional /,/ d s Stan up er/tipg
projects. “ Pair otiat'b/n
> What really matters? i h is ‘ \/
~ Listening,Testing, Coding, \ m'm'tes U kt
Designing \E Pei gramming
ode
‘ m

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
XP — Caracteristici

v XP este un model modern, u§or (lightweight),
de dezvoltare, inspirat din RUP

v Dezvoltarea programelor nu Tnseamni ierarhii,
responsabilitégi 5i termene limité, ci Tnseamné
colaborarea oamenilor din care este formaté
echipa

v Membrii echipei sunt ?ncuraja§i si-5i afirme
personalitatea, 55. ofere 5i 55. primeasci
cunoa§tere 5i si deviné programatori strilucigi

> XP consideri c5 dezvoltarea de programe
“ eamné ‘in primul rind scrierea de programe

erPoint nu se pot compila) U

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Idel majore |n XP
> Proiectul este Tn mintea tuturor programatorilor din
echipa, nu Tn documentagii, modele sau rapoarte
> La orice moment, un reprezentant al clientului este
disponibil pentru clarificarea ceringelor
> Codul se scrie cét mai simplu. Se scrie cod de test Tntéii
> Daca apare necesitatea reiscrierii sau aruncirii de cod,
aceasta se face féri mili
> Modificérile aduse codului sunt integrate continuu (de
citeva ori pe zi)
> Se programeazi Tn echipi (programare Tn perechi).
Echipele se schimbi la sszr§itul unei iteragii (1*2
séptéméni)
> Se lucreazi 40 de ore pe siptimini, firi lucru
imentar
k n

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
X P R u l e s
Planning Coding
'I‘ i chi stone» ma vmltcn '1‘ i The cmlomci 1» alway» available
'1' i Releme )Lmiunz creates the >chednle >1‘ i (‘ode 1mm be vnulten to agieed
-I- i Make liequenl small lCl€A<€s >l2thnltL<
-:‘ i The ijccl Velocity n meanlued -:‘ a Cod: ‘11¢ “int ten fin!
-:‘ iTlle pimecl n divided into itemnmn -:| s All plodllclmn code n mu )lovzmmmed
'I' i Itemtmn \Immmg xtmh each itemtmn >1‘ i (ml) une 1m“ ll\|€21ﬂ'€§ nude at a time
'I‘ i ane no 11s mound 'I- i liitsgate oﬁen
'I‘ i A stand-u v macmw stall» each day '1‘ i Um COUCCHVQ COLIC owncmlu v
'1' i FLY XP when it break> >1‘ i Leave o )tumzwnon ll.“ last
>I- 5N0 KYVCHHHC
Designing
Testing

'I‘ i Sim ghcitv
'I‘ i<‘1\00§£ it >\ stem mam )hOl 'I' i All code “\lht have \uut test;
‘2' s me wm' caulx rm dengn >e$>lnus >21 i All cmle mini pa» all \uut new befnie n
~l- i (Acute >pik: >olutiom to ixluc: link can be iclca>cd
'I‘ i No functionality IS added emlv '1‘ i \Vhen a bug Li found tests me ciented
'Z‘ i Reiiiclul \vheuevei mid \\Il¢l¢\6| ':' i Acne Nance |6\‘|,\‘ inn‘ mu vile“ illltl III:
pmnbie mm

n published ‘

,

***************Ending Page***************


***************Beginning Page***************
***************page number:16**************
Aglle

> Satisfacerea rapidé a clientului prin oferirea continué
de software util (séptéménal dacé e posibil)

> Progresul se misoaré Tn funcgie de partea
functionalé a proiectului

> Chiar 5i modificirile tirzii Tn ceringe sunt binevenite

> O cooperare foarte apropiati 'intre client 5i
programatori

> Discutiile faceitoiface constituie cea mai buné
formé de comunicare

> Adaptare continui la modificirile care apar

> Dezvoltarea unui spirit de evidengiere §i rezolvare a
problemelor, nu de ascundere sau 'neobservare' a Ior

‘ ‘5

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
Manifesto for Agile Software Development
We me “iiGOYﬂiilg118'i€1‘\\‘£\y< ofdeielopmg
snﬁwaie b) doing n and helping otlien do ii

Tlimiigh Yhis “wk “a lime cmiie m vnine
Indiﬂduals and interactions in =1 1110mm and mob
Working software 0Y8! cmnpiehemive documentation

Customer collaboration over coiilmbl negotiation
Responding to change ovei following a pin“
Tlifdl m. \\liile kiwi: is value ni lli: ileiiis Oil
[he llgilli we \ aliir: (lie nuns on llir: lei] moi:
[\ﬂll Beck Janie; (j'lclulllig Robcil i: BLAH!“
1\[ll\=‘ Beedl: .Tini Highsiiinli Stair: I\I:lloi
A1 ie van Beniielniiii Andiew Hunk Ken Sclnmbei
Alislan' (‘ockblii'ii Ron Ieiﬁim Ieﬁ' Siillieilaiid
\‘i'ai'd Cunningham Ion Keni Dave Tlionim
Mann] Fowler an Mariel; ‘ ’

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Aglle +-

> —I
a lmposibilitatea realizirii documentagiei necesare
a Se lucreazé doar cu dezvoltatori “senioklevel”
a lnsuficienté structurare a modelérii software
Q Poate duce la negocieri de contract dificile

r +2
Q Companiile care au adoptat metoda de lucru Toyota 5i-
au Tmbunitiﬁt cu 83% productivitatea, cu 93% timpul
de produqie, cu 91% calitatea produselor 5i au redus la
jumﬁtate overtime-ul , dupé cum araté un studiu
oficial U.S., realizat Tn urmi cu cégiva ani pe companii
din industria auto —

‘ \x

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Scru m (“g rémadi”) "4'43 i
k '4“ \ "x
> Clientul devine parte a echipei de dezvoltare
> Frecvente distribuiri intermediare a pérgii software, cu
verificéri 5i validiri imediate
> Discutii zilnice:
u Ce ai fécut ieri? (realizéri)
U Ce ai de gind 55 faci péné mime? (de realizat)
u Care sunt problemele care teiar putea incurca?
(probleme/riscuri)
> Transparengé Tn planificare 5i dezvoltare
> intélniri frecvente pentru a monitoriza progresul
> Nu sunt problems tinute sub covor
> Eficien'ga muncii: “sé lucrezi mai multe ore" nu
ni neapérat “ob'ginerea mai multor rezultate"
k W

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Metodologia Scrum
SCRUM Methodology
Davelop Wrap
i Q
Architecture
‘

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
Lean (“sprijin”)

> Principiile Lean Software Development (LSD)

1‘ Eliminarea lucrurilor nefolositoare

2‘ Amplificarea invigérii

2. Decide cit mai térziu posibil

4. Terminé cét mai curénd posibil

s. Oferé responsabilititgi membrilor echipei

6. Construie§te un proiect integru

1. Construie§te vézénd tot proiectul Tn ansamblu

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Kanban

> A scheduling system for lean and just-in-time (JIT)
production

> Taiichi Ohno at Toyota in 1953

> A system to control the logistical chain from a
production point of view, and is an inventory control
system

> Aligns inventory levels with actual consumption. A
signal tells a supplier to produce and deliver a new
shipment when material is consumed

> An approach where the "pull" comes from demand

‘ H

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
Kanban — Toyota's Six Rules

> Later process picks up the number of items
indicated by the kanban at the earlier process.

> Earlier process produces items in the quantity
and sequence indicated by the kanban.

> No items are made 0r transported without a
kanban.

> Always attach a kanban to the goods.

> Defective products are not sent on to the
subsequent process. The result is 100% defect-
free goods.

> Reducing the number of kanban increases the
sensitivity.

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Kan ban methodology

> 2009, Corey Ladas, Scrumban, 2010, David
Anderson

> A method for managing knowledge work with
an emphasis on just-in-time delivery while not
overloading the team members

> A visual processemanagement system that tells
what to produce, when to produce it, and how
much to produce

> Visualisation is an important aspect that allows

l to understand the work and the workflow

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
Kan ban prinprles

> Start with existing process , The Kanban method does
not prescribe a specific set of roles or process steps

> Agree to pursue incremental, evolutionary change —
continuous, incremental and evolutionary change is the
way to make system improvements and make them stick

> Respect the current process, roles, responsibilities and
titles — agreeing to respect current roles, responsibilities
and job titles with the goal of gaining broader support

> Leadership at all levels — Acts of leadership at all levels
in the organization are encouraged

‘ z,

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Kanban — Visual Example
with; Amzsiysis Dzvzljpmmt TZse 0450105
5 5 é 51$ 5 5
5 35 5
5 . 55 '
Backlog ToDo Development® Tesnﬂgé) 022:1’? Don:
i (3 0min, m 0m...‘ m... (D
G ‘
B A
LE: Ci Q Q
I " '3
l

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
Kanban — Examples

1-04» Dvl'ha ngk 1-04» Doing 5:3;

a“ L§ - {9'11

?g‘§%“w a Eggs.“

E|___'_ __....

at ‘a h:

'i
E? P‘

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Model Driven Development

> Mode/ Driven DevelopmenﬂMDD) is a
paradigm for writing and implementing
computer programs quickly, effectively and at
minimum cost

> MDD is an approach to software development
where extensive models are created before
source code is written

> A primary example of MDD is the Object
Management Group (OMG)‘s Model Driven
Architecture (MDA) standard

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
> Thinking Through What You'll Do This Iteration
High <=> ) Each iteratiun implement the highest-
Priority 5_ priority work items
o
2
Modeled in g Each new work item is
greater detail c> 4- o prioritized and added to
g the stack
Q
o
E D Work items may be
Modeled in o: reprinritizad at any time
. c
lesser dem" c_ I Wurk items may be remuved
a at any time
o
Low g
Priority 2
Work Items wwwm 200472007 Swilw Ambler 29

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Test Driven Development
To Mu: Rum“
‘res-v Pass
an"! TIN“
or Mus T513
_ ‘m’

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Cum vom face nol?

> O comunicare foarte buné cu CLIENTUL care face parte
din echipi (SCRUM)

> Dupé fiecare etapé vegi obxine un produs finit care de
regulé nu va putea fi refécut Ia pa§ii urmétori (Cascade?!)

> Ca membru al “echipei” v51 voi sprijini cit mai mult
posibil (LEAN)

> Fiecare va fi Tncurajat sé facz'i ce ii place mai mult (XP)

> NU am 551 aduc modificéri continue Tn ceringele mele
(NU AGILE) A

> (NU) vom face un studiu de risc ((NU) MODEL IN
SPIRALA)

> Vom realoca resurse cénd 0 echipé intémpiné dificultégi

I iKANBAN)

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Etapele dezvoltarii programelor
> ln englezi: Software Development Life Cycle
—
> Proiectarea arhitecturala (Architectural design)
> Proiectarea detaliati (Detailed design)
> Scrierea codului (Implementation)
> lntegrarea componentelor (Integration)
> Validare (Validation)
> Verificare (Verification)

I > lntretinere (Maintenance)

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
Cum mcepe un prolect?
> Un client doregte si-gi
~ imbunétigeascé productivitatea
a Rezolve 0 problem?! de personal
a Facé reclami Ia produsele pe care le vinde
a Gestioneze mai u§0r activitatea sucursalelor din 'garii
> Un proiect interesant
> O idee, nevoia de a-mi gestiona cheltuielile
zilnice, etc.
> Din acest punct urmeazé lngineria Ceringelor!
‘ n

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
lngineria ceringelor (Requirement

analysis) — Definitie

> Procesul ingelegerii nevoilor clientului §i a
agteptirilor acestuia de la aplicalgia noastri

> O etapi bine definité din ciclul de viagé al
dezvoltirii unui produs (Software Development
Life Cycle)

> La ce ne a§teptém de la 0 aplicalgie 55 facé

> Cum ar trebui sistemul 55 se comporte 5i care

int caracteristicile acestuia

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
lnglnerla cerlngelor — Exemplu
> Realizagi un program C++ care 55 realizeze
suma a doué matrici citite din fi§ier.
> +2
~ Se specificé limbajul
~ $tim c5 citirea se face din fi§ier
> —:
~ Nu §tim ce 55 facem cu doué matrici care nu au
acelea§i dimensiuni
~ Ce facem cu rezultatul?
‘ is

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
lngineria ceringelor — Cine?

> Datorité multitudinii de tipuri de interacgiuni
care pot exista intre utilizatori, procese de
business, dispozitive hardware, etc., pot exista
diverse tipuri de ceringe, de la aplicaigii simple, la
aplicagii complexe

> Procesul de analizé a ceringelor presupune
alegerea si documentarea acestor tipuri de
ceringe, si construirea documentelor ce vor
constitui baza construirii sistemului

ine se ocupi? Project Manager, Program
u Business Analyst 35

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
lngineria ceringelor — De ce?

> Studiile fécute demonstreazi c5 atengia
insuficienté acordati analizei cerimgelor este cea
mai des Tntélniti cauzé in cadrul proiectelor
vulnerabile

> Foarte multe organizatii au cheltuit sume
imense pe proiecte software care Tn final nu
ficeau ceea ce se dorea inigial de la ele

> in momentul de fagé foarte multe companii
investesc timp 5i bani pentru a face 0 analizé a

$

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
lngineria ceringelor — Pagi
1. Stabilirea limitelor aplicagiei

2. Gisirea clientului

3. Identificarea ceringelor

4. Procesul de analizé a cerimgelor

s. Specificarea ceringelor

6. Gestionarea cerintelor

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
IC - Limitele aplicatgiei (1)

> Ca prim pas, are ca scop identificarea
modului in care aceasté noué aplicagie se va
integra in mediul pentru care va fi conceputé

> Care va fi scopul aplicagiei

> Care vor fi limitele aplicagiei

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
lC- Gasirea clientului (2)

> Obiectivul ultimilor ani: Cine esre utilizatoru/
(clientul) care va fo/asi efectiv ap/icaﬂa .7

> Ca rezultat, vom §ti exact ce persoane vor ﬁ
direct sau indirect afectate de realizarea
acestui produs

> Vom §ti pe cine $5 Tntrebém pentru eventuale
clarificéri

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
lC — Identlflcarea cermgelor (3)
> Ceringele se colecteazi de la mai multe grupuri
ce au fost identificate in etapa anterioari
> Se identifici ce anume doresc acegtia ca
aplicatia 55 realizeze
> Nivelul de detaliere depinde de:
~ Numirul 5i de dimensiunea grupurilor
~ Complexitatea procesului de business
a Dimensiunea aplicagiei
> Probleme intﬁlnite in aceasté etapi
a Ambiguitiqi Tn intelegerea proceselor
~ Inconsistenqi Tn Tnlelegerea aceluia§i proces
~ Date insuficiente
H'iicéri in ceringe dupé Tnceperea proiectului

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
lC — Cine face identificarea

cerimgelor ? (3)

> Aceasté persoané trebuie $5 interactioneze
direct cu multe grupuri de lucru

> Are de a face cu idei contradictorii

> Trebuie sé aibé abilitégi de comunicare 5i de
lucru cu oamenii

> Trebuie si aibi cuno§tin§e de programare

> Tn final trebuie 55 cadé de acord cu clientul Tn

.rivinga ceringelor

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
lC — Metode folosite Tn

identificarea cerin'gelor (3)

> lnterviuri cu viitorii utilizatori 5i cu grupuri de
utilizatori

> Folosirea documentatiei existente (manuale de
utilizare, diagrame ale organizagiei, specificagii
de sistem, etc.)

> Metode:
~ Prototipuri
~ Diagrame "Use case"
~ Diagrame de flux a datelor 5i a proceselor

‘rage utilizator

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
lC — Procesul de analizé a
ceringelor (4)
> Se face 0 analizé structuraté care folosegte
tehnici specifice:
Q “animarea” cerinlelor
Q Ragionament automat
Q Privire critical din punct de vedere al cunoa§terii
Q Verificarea consistengei
Q Rationament analogic 5i bazat pe exemple

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
IC — Specificarea cerlngelor (5) i

> Se face intr-un mod clar, neambiguu

> Scrierea unui document in care se specificé cerintele
este obligatoriu!

> Acest document va circula intre toate persoanele
implicate in aceasté fazé: client, grupuri de
uti/izatorl', ech/pe/e de dezvo/[are ,sl' de testare

> Documentul va fi folosit la:
v Validarea cerintelor de citre client
c Contractul dintre client 5i echipa de dezvoltare
c Bazé pentru proiectarea sistemului de cétre dezvoltatori
w Bazé pentru planificéri
v Sursé pentru realizarea scenariilor de testare

‘ .,

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
IC — SpeCIflcarea cermgelor (5) 2
> Trebuie sé surprindé viziunea clientului despre
produs
> Reprezinté rezultatul colabora'lrii dintre utilizator
(care nu e un expert) 5i analistul de sistem (care
surprinde situagia in termeni tehnici)
> E posibil ca specificarea cerin'gelor 55 se faci Tn
doué documente separate:
~ Cerintele utilizator , scrise Tn clar folosind cazuri de
utilizare (pentru utilizator)
=' Cerintele sistemului , descrise folosind un model
matematic sau programatic (pentru dezvoltatori §i
pentru testeri)
‘ ‘5

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
IC — Specificarea cerinyelor (5) 3

> in ceringele utilizatorului nu trebuie 55 aparé
nogiuni tehnice (protocol de comunicare,
criptarea folosind MDS, http, IP, etc)

> in ceringele sistemului trebuie si apari formatul
de export al datelor (XML), adresa serverului de
pe care se fac citiri, locul Tn care se depoziteazé
figierele log

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
lC — Speclflcarea cerlngelor (5) 4

> Nivelul de detaliere:
=' Ridicat , presuspune multé muncé, uneori inutilé (este
mai precis §i mai clar)
~ Scizut , poate fi vag (nu ajuti Tn procesul de
dezvoltare 5i testare)

> Exemplu:
~ Realizali un program care sé facé suma a doué matrici.
~ Realizagi un program C# care 55 aibé clasa Matrice cu
atributele n,m de tip int reprezenténd numirul de linii
5i de coloane 5i matrice de tip int[3][3] reprezentind
elementele matricii. Metodele disponibile Tn clasa
Matrice sunt

‘ A

***************Ending Page***************

***************Beginning Page***************
***************page number:49**************
IC — Speclflcarea cerlngelor (5) 5
> Tipuri de cerinte:

a Cerinte utilizator: legate de locul uncle va fi folosit
sistemul, eficienqi, durata de viali a produsului
(pradusu/ l/a f/ fo/os/t de campart/‘mentu/ ﬁnancial)

=' Cerinte functionale: despre modul Tn care se fac
anumite calcule, modul Tn care se manipuleazé datele
(impoz/ru/ pe sa/ar este de I 6 9n’)

~ Ceringe de performangi: modul Tn care anumite funcgii
sunt apelate cantitativ, calitativ (sistemu/ va perm/re
1000 de interoga'rl' pe secundé)

Q Constrirlgeri: nu 5e va permite ca doui persoane $5
introducé simultan date in tabele

‘ .9

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
IC — Gestionarea ceringelor (6)

> Este un proces continuu care surprinde toate
aspectele identificirii ceringelor §i in plus
asiguri verificarea, validarea acestora

> Pentru a fi utili trebuie 55 asigure
neambiguitatea ceringelor, eliminarea erorilor
5i completarea omisiunilor

***************Ending Page***************

***************Beginning Page***************
***************page number:51**************
Requlrement Example or had requiremeni ‘Example or good requirement
Quality
Atomic Students wlll he able to enroll to Students wlll he able to enroll to
undergraduate and post graduate undergraduate courses
curses Students wlll he able to enroll to p05!’
raduate courses
Unlquely ‘l’ Students Wlll be able to enroll to ‘l ,Course Enrolment
identified undergraduate courses] e Students Wlll zstuoents will be able to enroll to
be able to enroll to pustrgraduate undergraduate courses
ourses 3>Students Will be able t0 enroll to DOS!’
raduate courses
Complete professor userwrll log irito tne professor userwrll log irito tne system by
system by provrdirig lllS usornemo, provrdirig lllS usornemo, password and
password, and otner relevant epertrnent code
information
Conslsterlt student wlll have either student wlll have either underegraduate
and undergraduate courses or poste r post graduates but not both
unambiguous raduate (nurses but not born. Some
nurses will be open to born unoere
raduate and posteoraouate
Traceable t/lalﬂtillﬂ student informationernapped ‘Malntalﬂ student informationeMapped tn
o BRD req.lD7 BRD req ID 4.1
PriDrltlZed Registered student-Priority lMalrltain Register Student-Priorltv lMalntain User
User lnforrnatlon-Prlorlty lErerll Inlormation-Prlorlty ZErerll courses-
ourses-Priontv ll/iew Report Card- Priorlty lVleW Repori Card-Priorlty3
Priorlty I
Testable Each Page 0| the system Will load in an Register student and enrol courses pages 0
cceptable time'frame he system Wlll load within 5 seconds

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Scenarii de utilizare 1
> Folosesc actori (elemente cu care programul
interactioneazi):
~ Utilizatori umani
~ Elemente software (Ex: program care prelucreaza
informatiile colectate de pe Internet)
a Elemente hardware (Ex: cititor de coduri de bare,
telefoane mobile, etc.)
> Folosesc scenarii (use case)
=' Acestea descriu cum interactioneazi actorul cu
sistemul
~ Cum reactioneazé sistemul Tn urma acestor actiuni
~ Care e rezultatul vizibil pentru actori
‘ ,2

***************Ending Page***************

***************Beginning Page***************
***************page number:53**************
Scenarii de utilizare 2
> Ce nu contin acestea:
Q Diagrame de class
=' Structura modulari a programului
Q Tipul datelor de intrare 5i de ie§ire
> Use Case — Tipuri de conginut:
~ Pe scurt , descrie principalul caz de succes
~ Cazual , conﬁne ce ar trebui fécut in caz c5 se
intimplé ceva
a Detaliat , 5e prezinti pe larg toate situatiile posibile
‘ ”

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Use Case — Exemple

> Pe scurt: Programul trebuie 55 poati aduna 2 matrici

> Cazual: Programul trebuie 55 poati aduna 2 matrici
dacé au acelagi numir de linii 5i de coloane, altfel se
V3 Elﬁ§él un mesa] de eroare corespunzétor

> Detaliat: Programul trebuie sé poaté aduna doué
matrici de numere intregi citite de la tastaturé, daci
au ace|a§i numér de linii 5i de coloane, iar matricea
rezultati se va afi§a intr-un figier “rezultat.txt" cite
o linie pe rind. Altfel 5e va afi§a un mesaj de eroare
corespunzétor intr-un fi§ier “mesaj.txt" aflat Tn

.irectorul curent. (Mai [rebuie spec/ﬂea! ceva?)

***************Ending Page***************

***************Beginning Page***************
***************page number:55**************
Diagrama cazurilor de utilizare
(Use Case Diagram)
> Este o diagrami comportamentalé care
capteazé cerimgele sistemului
> Delimiteazé grani§e|e sistemului
> Punctul de plecare Tl constituie scenariile de
folosire a sistemului din fi§a ceringelor
> Poate prezenta:
= specificarea ceringelor (externe) din punctul de
vedere al utilizatorului
= specificarea functionalitégii sistemului din punctul
de vedere al sistemului
> Congine:
= UseCaseiuri I functionalitégi ale sistemului
7 Actori é entitégi externe cu care sistemul
Interacgloneaza
i agii

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
UseCase

> Este 0 descriere a unei multimi de secvente de actiuni
(incluzind variante) pe care un program Ie executé
atunci cénd interactioneazé cu entitégile din afara Iui
(actor!) 5i care conduc Ia obginerea unui rezultat
observabil

> Poate fi un sistem, un subsistem, o clasi, o metodi

> Reprezinti o functionalitate a programului

> Precizeazi ce face un program sau subprogram

> Nu precizeazi cum se implementeazi 0
functionalitate

> ldentificarea UseCaseiurilor se face pornind de Ia
cerin'gele clientului §i analizénd descrierea problemei.

‘ ”

***************Ending Page***************

***************Beginning Page***************
***************page number:57**************
Use-Case — Reprezentare
> Notagie
> Atribute
o Nume I fraza verbali ce denumegte o
operagie sau un comportament din
domeniul problemei.
> Restricgii
a Numele este unic

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
Actor
> Reprezinté un rol pe care utilizatorii unui
UseCase Tl joacé atunci cénd interactioneazé cu
acesta
> Este 0 entitate exterioaré sistemului
> lnteracgioneazé cu sistemul:
= lnigiazé execugia unor cazuri de utilizare
= Oferi functionalitate pentru realizarea unor cazuri
de utilizare
> Poate fi:
7 Utilizator (uman)
= Sistem software
'stem hardware
,g

***************Ending Page***************

***************Beginning Page***************
***************page number:59**************
Actor — Reprezentare

> Notagie

> Atribute

> Nume = indicii rolul pe care actorul Tl joaci Tn
interactiunea cu un UseCase

> Restricgii
a Numele este unic

***************Ending Page***************


***************Beginning Page***************
***************page number:60**************
Relagii
> Se stabilesc Tntre doué elemente
> Tipuri de relaKii:
= Asociere: Actor — UseCase, UseCase — UseCase
= Generalizare: Actor , Actor, UseCase i UseCase
= Dependenga'n: UseCase - UseCase (<<inc|ude>>,
<<extend>>)

***************Ending Page***************

***************Beginning Page***************
***************page number:61**************
Relatgia de Asociere

> Modeleazé 0 comunicare Tntre elementele pe
care Ie conecteazé

> Poate sa aparé intre

= un actor §i un UseCase (actorul inigiazé executia
cazului de utilizare sau oferi funcgionalitate pentru
realizarea acestuia)

= doui UseCase-uri (transfer de date, trimitere de
mesaje/semnale)

> Notatie —

‘ 6'

***************Ending Page***************

***************Beginning Page***************
***************page number:62**************
Relagia de Generalizare

> Se realizeaza intre elemente de acelagi tip 2
ierarhii

> Modeleaza situagii Tn care un element este un
caz particular al altui element

> Elementul particular mo§tene§te relagiile in care
este implicat elementul general

> Notatie: <—

***************Ending Page***************

***************Beginning Page***************
***************page number:63**************
Exe m pl u 1
Persoané
/ \ Sistem de
I Logare

***************Ending Page***************

***************Beginning Page***************
***************page number:64**************
Relagia de Generalizare

***************Ending Page***************

***************Beginning Page***************
***************page number:65**************
Relagia de Dependenga
> Apare Tntre doui UseCase-uri
> Modeleazé situagiile in care
~ Un UseCase foloseste comportamentul definit in alt
UseCase (<<inc|ude>>)
= Comportamentul unui UseCase poate ﬁ extins de
citre un alt UseCase (<<extend>>)
l >N0ta§ie <-------------'

***************Ending Page***************

***************Beginning Page***************
***************page number:66**************
Exemplul2
MW” i
(m MOI!“
w m...»
@ w
‘W
a:
_ : ~==' *5: 55

***************Ending Page***************

***************Beginning Page***************
***************page number:67**************
Exemlul 3
I

***************Ending Page***************

***************Beginning Page***************
***************page number:68**************
Exemplu 4
<<include>> /.\\<<include>>
I», ‘4

***************Ending Page***************

***************Beginning Page***************
***************page number:69**************
Concluzii
> Metodologii
> lngineria cerintelor
> Diagrame Use-case

***************Ending Page***************

***************Beginning Page***************
***************page number:70**************
lntrebiri

> 1) Ce metodologie ar fi mai utili pentru
angajayii companiei de IT?

> 2) Ce metodologie ar fi mai utilé pentru client
(manager, end-user)?

> Exemplu: eSims

***************Ending Page***************

***************Beginning Page***************
***************page number:71**************
Bibliografie

> Anil Hemrajani, Agile Java Development with
Spring, Hibernate and Eclipse, 2006

> Dorel Lucanu, Principii POO

***************Ending Page***************

***************Beginning Page***************
***************page number:72**************
ArgoUM L
> Link: http:[[argoum|—
downloads.tigris.org[argouml-O.34[
> Varianta “zip” trebuie doar dezarhivaté
> Trebuie si avegi instalatjava
~ in Path 5a aveti c:\Program FilesUava\jdk1.8.0_l4l\bin
~ Variabila
JAVA_HOME:c:\Program FilesUava\jdk1.8.0_I4l\

***************Ending Page***************

***************Beginning Page***************
***************page number:73**************
Llnks
> XP: hitQIZ[www.exiremeprogramming.0rg[rules.hlml
> Agile: htlptl[agilemanifestuorgl
> Scrum: http:[1'effsutherland.comloopslalschwagub.|gdf
> Lean: http:Z[www.gro'ectgerfect.com.au[info lean developmentghg
> V-model: httg:Z[en.wikipedia.0rg[wiki[ViModeL
htt%:Z[en.wikigedia.org[wikiZVi
M0 e _%28so lware_ eve ogment%29
> Project Management White Paper Index:
http:[[www.gro'ectgerfecl.com.aupr_index.phg
> Requirements analysis process:
httg:[[www.0ulsource2india.comZsoftware[ReguirementAnalysisasg
> lmageCup 2009:
httg:l1fiisludenl.wordg_ress.co_m[200811_2Z101imagineicugi2009i
ceiari I’ acaimtrioimiamia UVIQE*IOII* aimuzeul
> Curs ZIP — Ovidiu Gheorghie5:
httg:Z[www.infoiasi.ro[~ogh[filesliglcuryOZQdf
> Software house: httg:l[en.wikigedia.org[wiki[Software_house
' www. uru99.com learnisofiwareire uirementsianal sis’
. [I'Yl
73

***************Ending Page***************

