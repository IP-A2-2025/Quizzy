***************Beginning Page***************
***************page number:1**************
lngineria Pragramérii
Curs 1 — 21,22 Februarie 2023

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cu prins
> Context
> Motivagie
> Erori celebre
> Statistici
> Definiyii
> Etapele dezvoltéirii programelor
> Modele de dezvoltare
O Cascadé
O Spiralii

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Context

> Aplicatii de dimensiuni mari (milioane de linii
de cod) scrise pe durata a céteva luni, ani,...

> Echipe de lucru: Project manageri, Ana|i§ti,
Arhitecti, Programatori, Testeri, Ingineri de
suport (de ordinul 10, 100, 1.000 de
persoane,...)

> Solutia acestor probleme este 0 solutie scrisé
Tntr-un limbaj cle programare orientat-obiect

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Care e contextul vostru?

> Ce este un program mare pentru voi?
O Céte linii de cod agi scris?
O Céte persoane agi lucrat la acela§i proiect?

> Ce se Tntémplé cénd lucreazé din ce Tn ce mai
multe persoane Ia un proiect? Cum cre§te
eficienga?
O 3 persoane terminéi proiectul Tn douéi séiptéméni :>

6 persoane terminéi proiectul Tntr-o séptéméné?

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Motlvatle 1

> Din ce Tn ce mai multe sisteme sunt controlate
de software: controlul traficului (aerian, feroviar,
auto, naval, etc.), bancile, telefonia mobila,
Internet, supermarket, case inteligente

> Economiile tuturor statelor depind cle software

> Ingineria programarii propune teorii,
metodologii si instrumente pentru dezvoltarea
de software profesional

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Motivagie 2

> 1946 Goldstine §i von Neumann: “1.000 de
instrucyiuni reprezinté 0 limitéi superioaré
rezonabiléi pentru complexitatea problemelor ce
pot fi concepute ca rezolvabile cu ajutorul
calculatorului”

> Sistemul de rezervare a biletelor pentru
compania aerian a KLM continea, Tn anul 1992,
douﬁ milioane de linii de cod Tn limbaj de
asamblare

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Motivagie 3

> Sistemul de operare System V versiunea 4.0
(UNIX) a fost obginut prin compilarea a
3.700.000 linii de cod

> Programele scrise pentru naveta spatialéi NASA
au circa 40 de milioane de linii de cod obiect

> Pentru realizarea sistemului de operare IBM
05360 au fost necesari 5.000 de ani-om

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Motlvape - Erorl celebre 1
> Facturi imense Ia energia electricéi pentru
pensionari, recalcularea pensiilor
> IBM 05360 continea Ia fiecare relansare 1.000
de gre§e|i. Resemnare...
g 8

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Motlvalge — Erorl celebre 2

> Programatorul gh/n/on/st de la 0 bancéi: Banca
dorea séi trimité Ia cliengi prin po§téi 0 scrisoare
care 55 Ie semnaleze diverse servicii

> Programatorul a scris un program ce selecta 2.000
de cliengi §i le scria 0 scrisoare personalizaté

> in procesul de testare acesta a folosit un nume
fictiv de client Rich Bastard

> Din picate 2.000 de cliengi au primit 0 scrisoare

_“|ncepea "Dear Rich Bastard,

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
MotlvatIe — Erorl celebre 3

> Sacramento: un dentist primeste Tn casuta
postala Tntr-o saptaména 16.000 de formulare
pentru plata taxelor — “It was a computer
prob/em” a declarat un oficial

> “Fa/‘lure t0 convert English measures t0 metric
values was the root cause 0f the loss 0f the Mars
C //'ma te Orb/‘te. .

Error g
6 Catastrophicfailure 8 The operation completed successfully.

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Motivagie — Erori celebre 4

> Pierdere vehicul explorare Venus. Ah, era de fapt
.,. in FOR/...

> Sistem de avertizare anti-racheté activat.
Atacém sau nu?

> Ariane 5 explodeaza. Cost art/‘ﬁc/i:
500. 000. 000$

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Motlvatle — StatlstICI 1
> Acestea nu sunt doar “erori amuzante"
' i a1: u‘. A “5-?
> Proiectele mari software pot fi cele mai complicate
produse realizate de cineva
> sa ne uitam pe statistici
o Vorn considera ca un proiect software are succes, daca este
realizat Tntr-un timp rezonabil si cu un buget rezonabil
al unui produs software are loc atunci cancl
ealizat sau cand nu poate fi folosit 12

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Motlvalge — StatlstICI 2
> Studii de succes: USA’82 — Gibson & Singer
> 18 proiecte
O Succes: 17%
o Pargial 1n folosingé: 28%
O Satisfacétoare 11%
o E§ec: 22%
O Neevaluate: 11%
> Motivele e§ecuri|0r
O Probleme de organizare
O Noile metode de lucru §i politicile salariale
l O Modificéirile neprevézute Tn afacere

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
M0t|val;|e — StatlstICI 3
> Studii de succes — ONNI’88 (Finland)
> Din peste 100 proiecte
O Succes: 33%
O Cu probleme: 42%
o E§ec: 25%
> Motivele e§ecuri|or
O Slaba pregétire a inginerilor software
O Resurse insuficiente
o Probleme de management

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Motlvatle — StatlstICI 4

> The Robbins-Gioia Survey (2001), Alexandria —
Virginia, made a study over the perception by
enterprises of their implementation of an E.R.P.
(Enterprise Resource Planning) package.

> 232 survey respondents (36 % had, or were in the
process of, implementing an ERP system)

> 51 % viewed their ERP implementation as
unsuccessful,

> 46 % did not understood how to use the system

> 56 % of survey respondents noted their organization
has a program management office (PMO) in place, and
of these respondents, only 36 % felt their ERP

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Motivatie — Statistici 5

> The Conference Board Survey (2001)

> At ll7 companies that attempted ERP implementations

> 34 % were very “satisfied”

> 58 % were “somewhat satisfied"

> 8 % were unhappy with what they got.

> 4O % of the projects failed to achieve their business

case within one year of going live

> The companies that did achieve benefits said that

achievement took six months longer than expected.

> Implementation costs were found to average 25 % over
Net

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
IP — Iefinitje 1

> Prima definigie a ingineriei programéirii
(NATOJ 968): ingineria programérii este
stabi/irea si uti/izarea o’e ,orin cipii in gin eres ti
so/io’e ,oentru a obfine in moo’ economic
programe care sunt sigure si funcfioneazé
eficient ,oe masini o’e ca/cu/ concrete

> O definiyie mai recenté (/EEEStandard Glossary
of Software Engineering Tehno/ogy, i 983).‘
Ingineria programérii reprezin to’ abordarea
sis tema ticé’ a o'ez vo/térii, fun cfionérii,
in trefinerii, si re tragerii din fun cfiune a

Helm

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
lP — leflmtle 2
> Se refera Ia doua lucruri:

O "software engineer" care a Tnlocuit termenul de
"programmer"

O "Software Engineering" care este folosit pentru a
descrie "building of software systems which are so
large or so complex that they are built by a team or
teams of engineers“ — Fundamentals 0f Software
Engineering (Ghezzi, Jazayeri, and Mandrioli)

x 18

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
IP - Iefinitii 3

> FreeDictionary: “The process of manufacturing
software systems. A software system consists of
executable computer code and the supporting
documents needed to manufacture, use, and
maintain the code.”

> Webopedia.com: “The computer science
discipline concerned with developing large
applications. Software engineering covers not
only the technical aspects of building software
systems, but also management issues, such as

I directing programming teams, scheduling, and

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
IP — leflnltll 3

> Wikipedia: “Software engineering is the application of
a systematic, disciplined, quantifiable approach to the
development, operation, and maintenance of software,
and the study of these approaches"

> Answers.com: “The systematic application of scientific
and technological knowledge, through the medium of
sound engineering principles, to the production of
computer programs, and to the requirements
definition, functional specification, design description,
program implementation, and test methods that lead

I up to this code”

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
lP — Pe scu rt
> Este 0 disciplinéi inginereascé care se ocupéi de
toate aspectele dezvoltéirii unui program de
dimensiuni mari, de cétre 0 echipéi de dezvoltatori
> Propune adoptarea unei abordéri sistematice §i
organizate a procesului de dezvoltare software
> Propune folosirea tehnicilor §i instrumentelor
adecvate avénd Tn vedere
O problema care trebuie rezolvatéi
<> restricgiile impuse
O resursele disponibile
21

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Costurlle produselor saftware
100%
90%
80%
70%
60%
50% IHW
40% ISW
30%
20%
10%
0%
I 1955 1975 1985

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Software build (black) vs. buy (red)

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Costurlle produselor software

> Tn prezent costurile acestora sunt mai mari
decat costurile rezervate componentelor
hardware

> Costul Tntreginerii unui program este de regula
mai mare decat costul realizarii unui program

> Software — reprezinta programele §i
documentagia aferenta acestora

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Atributele unui program bun

> Sa ofere functionalitagile cerute

> Sa fie u§or de modificat, completat, schimbat
> Sa fie sigur

> Sa nu iroseasca resurse hardware

> Sa fie u§or de folosit

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
T d lP
nca rarea
> lP vs informatica
<> lnformatica se ocupa de aspectele teoretice ale dezvoltarii software
<> lP se ocupa de aspectele practice ale dezvoltarii software
> lP vs ingineria sistemelor
<> lngineria sistemelor se ocupa de toate aspectele dezvoltarii
sistemelor de calcul (hardware, software, ingineria proceselor)
<> lP este 0 parte din ingineria sistemelor si se ocupa de:
- Specificarea cerintelor
- Proiectarea arhitecturala
- lmplementare
- Testare
- lntegrare
oyment
26

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Re partizarea costu ri lor pe etape
Etapele dezvoltarii
I Scriere cod I Analizé §i proiectare I Testare

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Repartizarea erorilor pe etape
Erori pe etape
I Prog ramare I Sintaxé I Proiectare

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Costurile fixérii eroril
mm. Test. Int. Test.sist. Client 29

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
lelcultalg In lP
> Sistemele mai vechi care trebuie Tntreyinute §i
actualizate
> Eterogenitatea sistemelor software/hardware
> Presiunea pentru a Iivra programul repede, cu
l un cost mic §i cu 0 calitate bunéi

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Modele de dezvoltare

> Pentru a dezvolta un program este nevoie cle:
O O Tnyelegere clara a ceea ce se cere
O Un set de metode §i instrumente de lucru
O Un plan de acgiune

> Plan de acgiune : §ab|0n I model de
dezvoltare

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Etapele dezvoltarii programelor
> Ingineria cerintelor (Requirements engineering)
> Proiectarea arhitecturala (Arhitectural design)

> Proiectarea detaliata (Detailed design)

> Scrierea codului (Implementation)

> lntegrarea componentelor (Integration)

> Validare (Validation)

> Verificare (Verification)

> lntretinere (Maintenance)

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
lngmerla cerlngelar

> Se stabile§te ce anume vrea c/ientu/ ca
programu/ 55 facé'

> Scopul este anegistrarea ceringelor Tntr-o
manieréi cét mai claréi §i mai fidelii

> Probleme
O Comunicare
O Negociere
O Sféituirea clientului

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Prolectarea

> Arhitecturalé
<> Din motive de complexitate, programele mari nu
pot fi concepute §i implementate ca o singuré
bucaté
<> Programul este impérgit in module sau componente
mai simple, care pot fi abordate individual

> Detaliaté
O Se proiecteazé fiecare modul al aplicayiei, in cele
mai mici detalii

x 34

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
lmplementare + mtegrare

> lmplementare
O Proiectul detaliat este transpus Tntr-un limbaj de
programare
O Acesta se realizeazéi modular, pe structura rezultaté
Ia proiectarea arhitecturaléi

> lntegrare
O Modelul big-bang
O Modelul incremental

x 35

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Valldare 5| verlflcare

> Validare: ne asigurém c5 programul Tndepline§te
ceringele utilizatorului
O C onstru/‘m produsu/ corect?

> Verificare: ne asigurém c5 programul este stabil
§i c5 functioneazé corect din punctul de vedere
al dezvoltatorilor.
O C onstru/‘m corect produsul?

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
lntrepnere

> Dupé Iivrare
O Sunt descoperite gre§e|i ce trebuie reparate
O Pot apérea schimbéiri Tn specificagii
O Pot apérea noi ceringe
<> lnstruirea celor ce vor folosi produsul

> Tntreginere I gestionarea acestor tipuri de
probleme

x 37

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Modele de dezvoltare

> Cum efectuam activitagile inclicate de etapele
dezvoltarii programelor

> Exemple cle modele de dezvoltare:
O Ad-hoc: descurcéi-te cum pogi
O Modelul in cascada (cu feedback)
O Prototipizare
O Modelul in spirala
O RUP (Rational Unified Process)
O V-Model
o XP (Extreme Programming)
O Agile, Lean, Scrum

ND, AMDD

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Modelul Tn Cascadé (Waterfall)
‘ﬂoyce in 1970

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Modelul m Cascada +-

> +: Tmparte 0 sarciné complexii Tn pa§i mai mici

> +: U§0r de administrat §i controlat

> +: Fiecare pas are ca rezultat un produs bine
definit

> +: Tot timpul §tim uncle ce am fécut péné Tn
acel moment §i §tim ce mai avem de fiicut

> —: Erorile se propagii Tntre pa§i

> —: Nu exista mecanisme cle reparare a erorilor

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
ﬂ/ITSCascadé cu Tntoarcere
H1 q
m

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Medelul Tn cascadé cu Tntoarcere +-

> +: Oferé cadrul pentru remedierea erorilor
din pasul precedent

> —: Erorile Ia pasul i care sunt descoperite Ia
pasul i + 2 nu sunt remediate

> —: Clientul vecle produsul final abia Ia
sfér§itu| dezvoltérii

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Modelul In Splrala (Splral)
> Studiul de fezabilitate
> Analiza ceringelor
> Proiectarea arhitecturii
> lmplementarea
Pentru fiecare pas, se fac urmétoarele activitéigi:
1 : pregéitirea 2 : gestiunea riscului
[take stock] [dealing with risk]
4 I planiﬁcarea 3 : dezvoltama
urmétorului stagiu [development]
lanning]

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Modelul Tn Spiralé. +-
> +: Péstreazéi avantajele modelului Tn
cascadé
> +: la Tn calcul nogiunea de risc
> Exemple de riscuri:
O O firmél concurenté Ianseazé un produs
similar
O Un arhitect piirése§te echipa
O Clientul schimbé ceringele
Echipé nu respecté termenele de livrare

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Concluzu
> Statisticile ne demonstreazé importanya folosirii
unor tehnici inginere§ti Tn dezvoltarea de
software
> Definigiile lP-ului folosesc cuvinte cheie precum:
metode l'ng/nere5ti, pro/ecte de dl'mensiun/ marl‘
care sum“ l'mp/ementate in ech/pér', programe
s/gure care funcp'oneazz? ef/c/en t, dezvo/tare,
fntrep'nere, p/an/ﬁcare, buget
> Etapele necesare dezvoltéirii proiectelor de
dimensiuni mari
odele de dezvoltare: Ad-Hoc, Cascadé, Spiralii
k 45

***************Ending Page***************


***************Beginning Page***************
***************page number:46**************
lntrebarl

> De ce e util sé Tnvéigagi aceasté materie?

> V-agi Tntélnit cu 0 parte din elementele ce
compun lngineria Programérii? Uncle?

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
libiiografie

> Ovidiu Gheorghie§:
httg:[[www.infoiasi.r0[~ogh[filesZichurs-
Oi .chf

> Andy Kramek, New Software — Build or Buy? A
Personal View: httQ:[[weblogsfoxitexoml
andykramek [archiveZ2009ZO7z25[8674.asgx

***************Ending Page***************


***************Beginning Page***************
***************page number:48**************
Links

> Internet

> Wikipedia

> Failure rate: httg:[[www.it—
cortex.c0m[Stat_Fai|ure_Rate.htm

> RUP in the dialogue with Scrum:
httg:[[www.ibm.com[develogerworksirational[Ii
brarnyebOSZkresz

***************Ending Page***************

