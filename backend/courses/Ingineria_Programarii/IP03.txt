***************Beginning Page***************
***************page number:1**************
lngineria Programérii
Cursul 3 — 7,8 martie 2023
adiftene@info.uaic.ro

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cuprins
> Din Cursurile 1,2...
> Modelarea
> Limbaje de Modelare
Q Limbaje Grafice
> UML — lstoric
> UML — Definigie
> UML - Tipuri de Diagrame
> UML - Diagrame Use Case
> UML — Diagrame de Clase

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Din Cursurile 1, 2

> lngineria programérii (Software engineering)
> Etapele dezvoltérii programelor

> Modele de dezvoltare

> lngineria ceringelor

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Dm cursul 1
4%
Analysis Design Development Implement
Modelul in cascadé...
‘ ‘

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
lemml'.“ °b1°°""°s' Evaluate alternatives;
a am“ 9'95’ Identify, resolve risks
constraints r\

Cancer" " ,
Plan next pheeee

Rs - a ms Develop next level product

I 1 :1 n

| I, n:

s

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Din cursul 2
T@er
> XP, TDD...

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Din cursul 2

> lngineria cerintelor:
~ Actori
=' Scenarii

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
lerarhia dintr-o firmé de software — Compartimente
Hum
WWI
hm
w m mm MW.“
m. W M
‘ ,

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
lerarhia dintr-o firmi de software — Proiecte
...;__..
i];
-_.,.-.., -_.,.-,. _..,.-.
.... ..... ....
\—_ \_l L—
M..- M- m..-
é é ;
_w
a

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Modelarea — De ce?

Ce este un model? ,7 9;?“ =31 4-‘;
Simpliﬁcarea realitétii F-‘-~~"";"'“"r;";*““?€"“;"
Planul detaliat al unui - ~j -; ‘.'= ll)
sistem (blueprints) M‘-~»---'3---_-¢-_'-"§:-7-;'-"'

De ce modelim?
Pentru ainqelege mai bine ce avem de fécut
Pentru a ne concentra pe un aspect Ia un moment dat

l§gnde folosim modelarea.7
“\\\ m

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
Scopurile Modelarii

> Vizualizarea unui sistem

> Speciﬁcarea structurii sale §i/sau a comportérii
> Oferirea unui gablon care sé ajute la construcgie
> Documentarea deciziilor luate

***************Ending Page***************


***************Beginning Page***************
***************page number:12**************
Modelarea Arhitecturii

> Cu ajutorul Use case-urilor: pentru a prezenta
ceringele

> Cu ajutorul Design-ului: surprindem vacabularul §i
domeniul problemei

> Cu ajutorul Proceselor: surprindem procesele 5i
thread-urile

> Cu ajutorul lmplementirii: avem modelarea aplicagiei

> Cu ajutorul Deployment: surprindem sistemul din

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
Principiile Modelﬁrii

> Modelele influengeazi solugia finalé

> Se pot folosi diferite niveluri de precizie

> Modelele bune au corespondent in realitate
> Nu e suficient un singur model

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Limbaje de Modelare

> Analiza 5i proiectarea unui proiect trebuie fécute
inainte de realizarea codului

> in prezent, se acordé o atemgie deosebiti acestei
etape, deoarece de ele depind producerea 5i
refolosirea de software

> Pentru analiza $i proiectarea programelor s-au
creat limbajele de modelare

> Limbaj de modelare este un limbaj artificial care
poate fi folosit $51 exprime informatii sau
cunoa$tere sau sisteme

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
T|pur| de lebaJe de Modelare

> Limbaje Grafice: arbori comportamentali,
modelarea proceselor de business, EXPRESS
(modelarea datelor), flowchart, ORM (modelarea
rolurilor), regele Petri, diagrame UML

> Limbaje Speciﬁce: modelare algebricé (AML)
(pentru descrierea si rezolvarea problemelor de
matematicé ce necesité putere computational?!
mare), modelarea domeniilor specifice (DSL),
modelarea arhitecturilor specifice (FSML),
modelarea obiectelor (object modeling

I language), modelarea realitégii virtuale (VRML)

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Limbaje Grafice 1
> Arbori comportamentali
{ w i
% ‘=- ‘m' '
_ m- i
—

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
Limbaje Grafice 2
> Modelarea proceselor de business
MW: hm: :
No E
> EXPRESS (modelarea datelor) E 5
Ff’ ‘ifs

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Limbaje Grafice 3
,Howchan
Y
No
V
Ves
Y
Yes
}
No
‘ v

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
> ORM Ob‘ect Role Modelln
Q DogmaMudelel ENE”
Fla m Wan omnugyme cnmmm; Valdatnv mm; was“; Help
Tree Tabb 5mm ORM Dwgvam ORM-ML mm“ NL“ DIG
QOmulugyEaseUdbcpustgresql n, A ._, . 1-; ® @ ‘ ~ 3 é Q, I‘ q g
a n Dngma-Ontnmgyﬁasa
w ysmen Calequnes
E\ 1/ CusmmevComp\a\nt
E Aulhuv -- ‘IKISBNJQ
IHas Flvst Namz '1'“
mHas Lasi Name - ("mg
mwmgs Em 1-1,; -
t Bunk
mm ‘We m. '__\/a\ue_
\ > """
Q Cnmrmlmems um“: udhrepm -- "@15qu
w B
Q 9 Uhvavy V
< ‘ \ > < >

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Limbaje Grafice 5
> Petri Netsc1 redJellOw
o §
yell0w_green ‘° red
‘k
geeky/wow“ yellow
82 ‘1'7

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
L|mbaje Graflce 6
> Metoda Booch (Grady Booch) — analiza §i design 00
A / K \ g ’
r ’ \ \_ 7 -\\ \‘ X
\) mm n x / Class P r
I ~ ‘ k 4
(/A\y/q L_Wv' J ‘ \/
\ \ A ,_ _ _ _ _ _ 1
>c'aSSA H’ \1,< /0~1 ClassP \
I \ \ \ |_ _ _ _ _ _ A
k_ W
f J ) (HassB 0..“ 0| n \
L §—l\ ass 1
~ \ f J _ _ i 1
/4 v \ /
(A v / 1 W mum Class
\ ‘ i Assoclation
> 0355c Q
4P Inherlls
L — \ I - 0— Agereaauon
v o— Uses y

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
> OMT (ob ect-modelln- technI ue
A m
s mmmmmm mm” m,
m Ammmmmgm WWW m,
“WWW MW 0b,.“
i MM
4O anphcny upnnmi “6'5"” w
4. Mmhvhcny 7"an
% Awmgancm ‘
WM 100 m
-esaer a [Oblecl] vmd
BMW W Mm". QM M
—
' \HSSYIHM Owed] m “em 0mm
mm Omen gsuslzeu v“
Wm, m. WWW, "W
' Q
Wm 22

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
lebaje Graflce 8
> OOSE (Objecteoriented software engineering)
0W
\\ .
\
upressed [we veriﬁed \\§ @
suuctuled mplmaned ‘um
Actnr
m“- Acmr
mm. hm.“
hams

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Limbaje Grafice 9
> Dia-rame
bias H 32E1>=)_§.=\
q:@§11§s—ig E Q
>i b-Ei7ii ‘wag 1;
€~’,%%%§ \-

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
UML — lntroducere

> UML (Unified Modeling Language) este
succesorul celor mai bune trei limbaje
OO de modelare anterioare:
D Booch (Grady Booch)
D OMT (Ivar Jacobson)
D OOSE (James Rumbaugh)

> UML se constituie din unirea acestor
Iimbaje de modelare 5i Tn plus are o

niesivitate mai mare

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Evo | u t; | e U M L
m
1990
“mm GEE?!
1595 WW‘
m (gm usEs
2m WEI-51> m
20w
znns ms 01m
1w mm mm) 25
2W8 UMLE.

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
UML — Definitie (OMG)

> "The Uniﬁed Modeling Language (UML) is a
graphical language for visualizing,
specifying, constructing, and documenting the
artifacts of a software-intensive system.

> The UML offers a standard way to write a
system's blueprints, including conceptual
things such as business processes and system
functions as we/l as concrete things such
as programming language statements,
database schemas, and reusable software

nionents. ”

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
UML - Standard International

>lanuarie1997 — UML 1.0 a fost propus spre
standardizare in cadrul OMG (Object
Management Group)

> Noiembrie1997 — Versiunea UML1.1 a fost
adoptata ca standard de catre OMG

> Ultima versiune este UML 2.5.1 (Decembrie 2017)

> Site-ul oficial: htgp:[[www.um|.org ,

_ UML® Resource Page

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
UML2.0 — 13 Tipuri de Diagrame
_ [AW my“ 29

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
. v
UML2.0 — Dlagrame de Structura 1
> Diagrame de Clasi: clasele (atributele, metodele) 5i
relagiile dintre clase
Name Sifeet
Phone Number 04 ﬁves a‘ 1 cny
Email Address 5mm
Postal Code
‘ Validate
Outpui As Label
Sludenl Number
Avemge Mark —
ls Ehgible To Enroll
Get Seminars Taken m

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
UML2.0 — Diagrame de Structuré 2
> Diagramﬁ de Componente: componentele sistemului 5i
legéturile Tntre components
I

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
UML2.0 — Diagrame de Structura 3
> Diagrame structuré compositi: structura interné
indVar2 indVaH depVar view
Val’ V81 Val’
w
‘ n

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
UML2.0 — Diagrame de Structuré 4
> Diagramé de Deployment: modelarea structurii hardware
E
I -|

***************Ending Page***************


***************Beginning Page***************
***************page number:34**************
. v
UML2.0 — Dlagrame de Structura 5
> Diagrami de obiecte: structura sistemului Ia un
moment dat
Ausprégungsspezilikalion (ﬁr eine
Objeklbeziehulng
vater Y sohn
vomame = "Hans' vomame = 'Pelet"
nachnarne = 'Meiet" nachnama = "Meief'
alter = "50" aher = "20‘
‘ “

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
UML2.0 — Diagrame de Structuré 6
> Diagramé de pachete: Tmpirgirea sistemului Tn pachete 5i
relagiile dintre ele

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
UML 2.0 — Diagrame Comportamentale 1
> Diagrame de activitate: prezentare business si a
fluxului de activitégi —'“'S¥"g“'"“y°‘""“
\ Rum “WW

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
UML 2.0 — Diagrame Comportamentale 2

> Diagrame de stare: pentru a prezenta stirile obiectelor
MWWWWMMLQ
_ w
mmmmques‘ Wyc=d/mqu.mmm
_ “-
MWWW
17

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
UML 2.0 — Diagrame Comportamentale 3
> Diagrame Use Case: prezinti fungionalitélgile sistemului
folosind actori, use case-uri 5i dependenge intre ele
% ,::‘1"l':“::i
TeamLeadev a <<mclmig>>ﬁfz
> /./ ,4,’
M “We;
MW -
Spmmwmmks

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
UML 2.0 — Diagrame de interacgiuni 1
> Diagrama de comunicare: araté interacgiunile Tntre
obiecte (comportamentul dinamic al sistemului) (actori:
bucétar, aragaz, acyiuni: gétirea, aprinderea,
deconectarea)
I: einschaltenﬁ
_>
_>
- B

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
UML 2.0 — Dlagrame de Interacglunl 2
> Diagramé de secventi: prezinté modul Tn care obiectele
comunicé intre ele din punct de vedere al trimiterii de mesaje
' | | |
' WWW ms» : :
Mmmm»
| sannsuﬂgwsnnmn MRMPW I
| | | |
' I l I
' | | |
! | I

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
Dlagrama de clase — Class Dlagram

> Scop:
a Modeleazé vocabularul sistemului ce trebuie
dezvoltat
a Surprinde conexiunile semantice sau interacgiunile
care se stabilesc Tntre elementele components
a Folosité pentru a modela structura unui program

> Congine
a CIase/Interfege
a Obiecte
a Relan (Asociere, Agregare, Generalizare,
Dependenlé)

‘ "

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Clase
> Modeleazé vocabularul I identificé conceptele pe care
clientul sau Programatorul Ie folosegte pentru a descrie
solugia prob emei
> Elementele unei clase:
c Nume: identificé o clasé
c Atribute: proprietégi ale clasei
c Metode: implementarea unui serviciu care poate fi cerut
oricérei instants a clasei
Minllnllatemmher! } Nume
Clas
E FEMS } Alribule (private)
J9 Mm
E Methods
O Afsare
'1 MampulateNurrbersU invemad) Metode (private,
"O nimm
.. we pmtected)
,0 Snmaveclon 41

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
Relagu — Generallzare — C#
> Modeleazé conceptul de mo§tenire Tntre clase
> Mai poarté denumirea de relagie de tip is a (este
un/este o) v
‘um-m B
m
EM
l ,m.
J vmua
MM
Q 96M"!
,¢ Wm
. W.
'Q mm"
WI g mum g
z... cu‘
WW. “m.
M; in»?
‘p Mm. up W
Emma; f smw
‘ Balm!!!“ 5mm
_ . W" ~ W»
. gm. 4;

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
ArgoUML — Relaigla de generallzare
selNumEmume String)
.
inu\.\n'€isl
—
‘ u

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Relagu — Asoclere
> Exprimé o conexiune semanticé sau o interacgiune Tntre obiecte
aparginénd diferitelor clase
> Pe misura ce sistemul evolueazé noi legaturi Tntre obiecte pot fi create,
sau legéturi existente pot fi distruse
> O asociere interacgioneazi cu obiectele sale prin intermediul capetelor
de asociere
> Elements:
~ Nume: descrie relazia
a Capete de asociere
- Nume : roluljuca! de ma Tn relagie
- Mulnplicitate : (ﬁle inslame a\e unei class corespund unei singure \nstange ale
celeHalte clase
mwnphmateA mlﬂﬂphmatell u
- mlA numeaswere ram -
1..‘ 0 ' .
-angma( lumamlemru angajmr - 45

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Relagla de asoclere 1
> Relatgia Student - Discipliné
=' Student: urmez 0 sau mai multe discipline, cunosc
disciplinele pe care Ie urmez;
~ Disciplini: pot fi urrnaté de mai mulgi studengi, nu
cunosc studentii care m5 urmeazé
StudDiso
0..‘ 0..‘
m
sludlnseiisi dichimaie
‘ ‘5

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
Relagla de asouere 2
> Relagia Discipliné - Profesor
Q Disciplini: sunt predaté de un profesor, imi cunosc
titularul
~ Profesor: pot preda mai multe discipline, cunosc
disciplinele pe care Ie predau
DiscProf
1.!‘ 0..’
discPredate titular
‘ "

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Relagu — Agregare
> Este un caz particular al relagiei de asociere
> Modeleazé o relagie de lip parteiintreg
> foate avea toate elementele unei relagii de asociere, Tnsé
In general se specifica numai multiplicitatea
> Se folose§tedpentru a modela situagiile Tntre care un obiect
este format in mai multe componente.
- U ' l 2
— ; — ; —
I >
. r
. .
: :
k V k
igregar: (umpuzme
‘ 4B

***************Ending Page***************

***************Beginning Page***************
***************page number:49**************
—
— male
achuniNumbEr Integer Iemale
O 1 —
0 - customer
manager u >
1
manaaaaCampamaa
.aMamaa aaalaan name 5mm:
lSUﬂempIOyeﬂ BDCHBEH numberOvEmmoyees Integer
mnnnare Dale employee empmyer
aga ‘Mega, . 0 . awmao Real
ﬁrSiNamE Sirlng ﬂ |
.aawama smug ,
aanaar Gama I
D i \ l wlfe
a,
u 1
"aaaana u 1 "Ha amna
aaaaala Daaa
salary Waaar
—
\
plaae slung
dale Dale
— 17
\—l

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Relagia de Compozi'gie (“hasA”)
1 1 1 1
lac 1n he fie
stud prof planln suiun Ex
1.“ 1.1‘ 1”" 1."
m m

***************Ending Page***************

***************Beginning Page***************
***************page number:51**************
Studiu de Caz

> Obginerea Studengilor Bursieri
=' Actori
=' Scenarii de utilizare
=' Clase

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Concluzu
> Modelare — De ce.7
> Limbaje grafice
> UML
a Structurale: clase
a Comportamentale: use-case
~ De interactiuni
‘ ‘Z

***************Ending Page***************

***************Beginning Page***************
***************page number:53**************
lntrebari

> 1) Datj exemplu de 0 situapie in care e
suficienté doar o diagrami sau o schemé
pentru a realiza ceva.

> 2) Datj exemplu de 0 situa§ie in care e nevoie
de mai mult de o diagramé sau o schemé
pentru a realiza ceva.

> 3) Care e legétura dintre diagramele de tip
use-case §i diagramele de clase?

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Bibliografie

> OMG Unified Modeling LanguageTM (OMG
UML), Infrastructure, Version 2.2, May 2008,
httg:Z[www.omgorg[docslptciO8-OS-04Qdf

> ArgoUML User Manual, A tutorial and
reference description, http:[[argoum|—
stats.tigris.org[documentation[grintablehtml
[manualiargomanualhtml

> Ovidiu Gheorghie§, Curs lP, Cursurile 3, 4

> Diagrame UML, Regie.ro

***************Ending Page***************

***************Beginning Page***************
***************page number:55**************
Links

> OOSEI httpilch-exhibitions.uni—
klu.ac.at[index.ghg?id:448

> ArgoUML: http:[[argoum|—
stats.tigris.org[nonavldocumentation[manual-0.22l

> Wikipedia

***************Ending Page***************

