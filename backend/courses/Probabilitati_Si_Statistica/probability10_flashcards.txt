[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What distinguishes a deterministic algorithm from a non-deterministic algorithm?
--InteriorSeparator--
A deterministic algorithm always produces the same output for a given input, while a non-deterministic algorithm can produce different outputs for the same input.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are examples of non-deterministic algorithms?
--InteriorSeparator--
(right) Concurrent algorithms
(right) Randomized algorithms
(wrong) Sorting algorithms
(wrong) Search algorithms
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a key characteristic of a randomized algorithm?
--InteriorSeparator--
It receives a source of random numbers as input.
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In which areas has randomization and probabilistic methods become an important investigation tool?
--InteriorSeparator--
(right) Communications
(right) Cryptography
(right) Discrete optimization
(wrong) Database design
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the core idea behind analyzing the efficiency and error probability of a randomized algorithm?
--InteriorSeparator--
Studying the random variables associated with the algorithm.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the two fundamental classifications of random algorithms?
--InteriorSeparator--
(right) Algorithms that always solve the problem correctly.
(right) Algorithms that may produce incorrect results.
(wrong) Algorithms that use dynamic programming.
(wrong) Algorithms that utilize recursion.
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a defining characteristic of Las Vegas algorithms?
--InteriorSeparator--
They always guarantee a correct output or the answer "I don't know."
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a typical performance metric of interest for Las Vegas algorithms?
--InteriorSeparator--
Average complexity: the average execution time and average memory usage.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of constant 'e' in the context of Las Vegas algorithms related to calculating function F with algorithm A(x)?
--InteriorSeparator--
(right) P(A(x) = F(x)) >= e
(wrong) It defines memory usage during execution
(wrong) It dictates how many times algorithm A is executed
(wrong) It calculates number of inputs
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the ultimate goal of a MAX node during Game Tree evaluation?
--InteriorSeparator--
Return the largest value among its children.
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the value associated with each leaf node in a game tree?
--InteriorSeparator--
A real number
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a game tree, what operation is logically associated with a MIN node when the leaf values are binary?
--InteriorSeparator--
AND operation
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the average cost of evaluation in Game Tree with depth 2h using RandomEval procedure?
--InteriorSeparator--
(right) At most 3^h
(wrong) Always 2^h
(wrong) Equal to number of leaves
(wrong) Directly proportional to depth of the tree
--InteriorSeparator--
hard
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of RandomizedQuickSort, what does 'partitioning' achieve?
--InteriorSeparator--
Divides the set into two subsets based on comparison with a pivot.
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the average time complexity of RandomizedQuickSort?
--InteriorSeparator--
Θ(n log n)
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In RandomizedQuickSort, what is the pivot element?
--InteriorSeparator--
An element chosen randomly from the set to partition the remaining elements.
--InteriorSeparator--
easy
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the worst-case time complexity of RandomizedQuickSort?
--InteriorSeparator--
O(n^2)
--InteriorSeparator--
medium
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the variable Xij represent in the analysis of RandomizedQuickSort?
--InteriorSeparator--
A Bernoulli variable indicating whether elements xi and xj are compared during the execution.
--InteriorSeparator--
hard
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is probability p_ij used to compute the average number of comparisons of RandomizedQuickSort, knowing that xi and xj are compared only if one of them is the first pivot element of the sub-set Sij?
--InteriorSeparator--
(right) p_ij = 2 / (j - i + 1)
(wrong) p_ij = i / j
(wrong) p_ij = 1 / (j - i + 1)
(wrong) p_ij = i * j
--InteriorSeparator--
hard
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Define what a median is
--InteriorSeparator--
The median is an element m of an ordered set S such that at least ⌊n/2⌋ elements of S are less than or equal to m, and at least ⌈n/2⌉ elements of S are greater than or equal to m.
--InteriorSeparator--
easy
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the main reasons for choosing cardinal of R, and d and u values, on the context of random algorithm to determine median of a set S?
--InteriorSeparator--
(right) To include median of S with high probability
(right) To make R small enough to be sorted in sublinear time
(wrong) To avoid negative numbers
(wrong) To simplify the equations
--InteriorSeparator--
hard
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the randomized algorithm for finding the median, and what type of algorithm is it?
--InteriorSeparator--
Linear complexity and a Las Vegas type algorithm.
--InteriorSeparator--
medium
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the probability that the randomized median-finding algorithm fails to find the median?
--InteriorSeparator--
At most 1/(n^1/5).
--InteriorSeparator--
hard
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a defining characteristic of Monte Carlo algorithms?
--InteriorSeparator--
They do not guarantee a correct answer.
--InteriorSeparator--
easy
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is "amplification" in the context of Monte Carlo algorithms?
--InteriorSeparator--
Repeating the algorithm independently until the error probability is sufficiently low.
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary goal of the matrix multiplication verification algorithm?
--InteriorSeparator--
To verify if A * B = C more quickly than standard matrix multiplication, accepting a small probability of error.
--InteriorSeparator--
medium
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the time complexity of RandomVerify, in the verification of matrix multiplication?
--InteriorSeparator--
(right) Θ(n^2)
(wrong) Θ(n^3)
(wrong) O(log n)
(wrong) O(1)
--InteriorSeparator--
hard
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a cut (téietură) in a multigraph?
--InteriorSeparator--
A cut is generated by a bipartition of the vertices.
--InteriorSeparator--
medium
--InteriorSeparator--
33
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the basic operation used in the randomized algorithm for the min-cut problem?
--InteriorSeparator--
Contraction of edges.
--InteriorSeparator--
medium
--InteriorSeparator--
34
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens to the number of nodes after each step in the RandMinCut algorithm?
--InteriorSeparator--
The number of nodes decreases by one.
--InteriorSeparator--
easy
--InteriorSeparator--
35
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the key idea behind the probabilistic method?
--InteriorSeparator--
To demonstrate the existence of mathematical objects with specific properties by showing that the probability of their existence is strictly positive.
--InteriorSeparator--
medium
--InteriorSeparator--
39
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
For a set of m clauses C1, C2, ..., Cm, what guarantees that it has an assigning values such that satisfies at least m * (1- 2^-k) clauses, knowing that k is the min|Ci|?
--InteriorSeparator--
(right) E[X] >= m * (1 - 2^-k)
(wrong) k > m
(wrong) m is even
(wrong) C are composed by only one variable
--InteriorSeparator--
hard
--InteriorSeparator--
41
--FlashCardSeparator--
}], role=model}, finishReason=STOP, citationMetadata={citationSources=[{startIndex=188, endIndex=309}]}, avgLogprobs=-0.2425986752122724}]