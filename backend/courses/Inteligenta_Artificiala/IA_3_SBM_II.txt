***************Beginning Page***************
***************page number:1**************
.
Art1ﬁ01a1 Intelllgence
3rd your, 1st semester
State based models for decision problems
Week 3: informed strategies and alternative problem spaces

“In any moment of decision, the best thing you can do is the
right thing, the next best thing is the wrong thing, and the
worst thing you can do is nothing.” Theodore Roosevelt

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
.
Let’s ﬁnd a N P-complete problem and a computer able to solve it
Problem: ﬁnding a path in a graph
Describing a model - reducing a problem

- describe a state

- identify special states and the problem space

- describe the transitions and validate them

- specify a search strategy

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Q
Search strategies
o Uninformed — no distinction between states
o Random
o BFS and Uniform Cost
o DF S and lterative Deepening
o Baektraeking
o Bidirectional
0 Informed — heuristics to help distinguish between states
o Greedy best-ﬁrst
o Hillelimbing and Simulated Annealing
o Beam search
o A* and IDA*

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Heuristics?
Common sense is as good as a
mathematical proof.
Statistical proofs are hard t0 get — i
and largely irrelevant‘ w
Brute force (search) is great, but
intelligence is faster.

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
l ,

Q
Finding a relevant heuristic
A heuristic should direct the search towards the geall
Heuristic: function applied to any state, returns extreme and
opposing values for all initial state(s) and for at least one ﬁnal
state(s)l
h: S »> [min, max], h(lS) I min/max, h(FS) I max/min
An admissible heuristic never overestimates the distance between a
state and the goal.

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
a‘ x
Q
Lets lry ﬁnding a hcurislic
For Hana! Towers:
0 Number ofplscss ml the gnal mwcr
~ Ifslarllng lawar is l and goal is n‘ sum ofall values in a slate
. 7
For Slldlng Puzzle:
~ Number alpims placed conaclly
For chess:
0 How many places I have - how many pleces has the opponem'?
~ A mammal value _ number of moves available la [he opponent?
h should always he relaﬁvely easy m umlpute, glmﬂ enough is enough

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Q
Three way 0f looking at solutions
path in a graph path in a space heuristic function graph
V i \
%§\ ‘/ \K ‘ \\ MS) (8
/ /l ' A j
/ \ i </ J /*
/ R )/ f"
J,

@A jy/k

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
r .
Q
Greedy (best-ﬁrst) (2Q
/ l \
/ l \
Evaluate all unexplored states / V‘ \
accessible from the current stale. / / \
/ \
/ / \
/ / \
Select the unexplored state closer / " \
to the goal (best score according / \\
. . / r \
to a heunstlc). // l \
// l \ \\\
4% 1/

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
Q
' ,4 Kw
Greedy evaluauon ,,,// 2Q J
Best case: gets you to the ﬁnal ///
state much quicker than DFS, // '_>/
doesn’t guarantee optimal / A
solutlon. ‘y 7/"
Worst case: DFS with bad \
choices. t‘
t
/F
\ /

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
m

Q
Hillclimbing ms’ 7
Select one accessible state which q‘

is at least as close to the ﬁnal /
state as the current one, [if i/
h(NewState) Z h(CurrentState) /"

hltgsJ/www youtubexom/watclﬂvi1H3'A ‘/

VBIQHY; 4h§i§4ingpF4 l 50mm"

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
,
l
Hillclimbing evaluation “'S’ 7
<29
Best case: fastest general .2 f
strategy. / \\\\j“
Worst case: fails to ﬁnd a
solution (local optimum)‘ g’
if 7 i i7 /'
/
/ i 50m"

***************Ending Page***************


***************Beginning Page***************
***************page number:12**************
a,“
Q
Hillclimbing Selection Algorithm
wwmjmhbm Z W
:r hooﬁmomenoom] m n \c ommojeoooom;
mm magma BLQAMEJvelqhb/za;
Frequemly used seleclions:
0 ﬁrst one found - mos! common
o Besl one (greedy)
o All, in lhe cider they were found. choosing nexl slate avaxlablc ifstuck
(h|llchmbmg'backlmckmg)

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
, .
Q
Simulated annealing
l-lillclimbing, but allows choosing a state further away from the goal,
with an ever decreasing probability the closer you get to the goal
state,

N0 more local optimum,
Slower than hillclimbingl
ling://www.cse.11lm.acvin/»vplab/courses/oplimizalion/SA SEL SLIDESvpdf

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
e ,
Q
Beam search
BFS but only keeps in a sorted list best k visited states‘ The list
should be re—sorted and extra states removed after every new
explored state,
Explores all states in the sorted list until the ﬁnal state is found -
should be ﬁrst in the list.
Does not guarantee the optimum solution!

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Q
A* and lDA*

A‘ 15 mmrly Dijkstra combincd willi Grrrdy, mm is informed IDDFS

IDDFS explores nodes by distance from initial slale d(S)

A‘ explores “011% by rug) + msy where li(5) is ilie aslimalcd distance [0018 goal Male
(obligatory an admissible heurislic)

Always chnnses the unexplored slat: whlch IS closes! w bolli rlie mmal stale and \he goal
slam,

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Q
A* Algonthm
Cumming Z Inhaljtam
Heavens - mum of h,-
Mmdiqum - [m wqmwm of amenimu, Mn compmd M mm as
Wmls m of (he hm uneKPlored “m 5 m Smeuueue H 1m! man mucus
u s ,5 a ma, m“. Swim“; - a! 5;
Hm 5 as explmd;
m =0 swam“ an 1:; “swam Mn imputed W and Mk mam
u a duphme “m mam m immune“, keep only (he mh 1M“
5m sways“;
The 0pm“, Pm. 15W“ mm (he 1m mm “Mung Sauce“ and 1mm m
explmd nmmm mh We! up m {he mm, Mm.

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Q
A*
Always ﬁnds the optimum f’ \
solution. X6) ‘~ “(~21
5 ,/
Really? f ‘\‘f/ l W ‘
\ / l
\\
n may“
\(B \y,
\,/

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
, .
Q
A*

Always ﬁnds the optlmum f A ‘\} NA)“
solutlon. 5 ,/\7/ ‘ ‘teal :4
Delft step when you ﬁnd the g; C>§l
goal state! Keep looking until all ' \\3 I, ’
states with better scores have \\ “(5) = A
been explored‘ ‘ng' m‘ =4

\,/
hugsHmmuWIS-Mmmg/

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
.
BFS/IDDFS A*

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
n

Optimizing A*

Consistent heuristic: h(A) 5 h(A,B) + h(B) if B is reachable from A

Simpliﬁed Memory Bounded A*

0 anes (removes) states for which the path was more costly than
estimated, up to a set number of states (memory bounded)

0 Remembers costs of reaching pruned states from each explored
state

0 If solution is not found, recovers pruned states and explores them

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
n
Choose a strategy
o Do you want a solution
quickly?
0 D0 you want the best
solution?
o Do you want all solutions?
o How much do you know
about the problem?
a Are you sure the state
representation is good
enough?

***************Ending Page***************


***************Beginning Page***************
***************page number:22**************
, .
n
Non-deterministic problem space /¥\

/\ 4

Stochastic: known possibilities / ‘i
and probabilities ,\“
Non-deterministic: known ,/ J
possibilities r <‘ (‘x 5g‘

‘\_/ \ / 7/
Each transition has multiple
possible outcomes

1

AN D»OR trees ‘8 ‘2Q

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
.
Partially observable problem space: you know what could happen
after a transition, you don’t know what will happen after a transition.
n a
1 ' 5i
uiﬁiiig

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Unknowable problem space: you don’t know what could happen
aftcr a transition
' \
r'l 146 ’ 5 ~

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
, ,

.
Next week: Constraint satisfaction problems (Variable based models)

1 3

4 9 3 5 6

3 4 5 Z
6 8 9

5 7 8 4 Z

III

Z 5

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
.
Week 5: Games II.-
l
Interactive decision problems (games) -iﬁ-
o Solution is not built exclusively by
your strategy I'll-
. Not all ﬁnal states arc the same
l- g; I
. lyéﬂ¥ﬁl€ﬂﬂ¥§ l l i l l
Hardest solvable problems 111A]. :peyézhiﬁ" Emmi 3 3
NLP problems hardest potentially 'i' éﬁn kirfiiiééiﬁgéi

***************Ending Page***************

