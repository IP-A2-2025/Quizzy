***************Beginning Page***************
***************page number:1**************
IA 2023/2024
<E|> <ﬁ>4IE>4IE> IE OQO

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Conjunut

lntroducere

Algoritmi de céutare

Imbunététirea algoritmului de céutare

Structura grafului de restrictii

Cﬁutare localé

4E1r<ﬁ>4ifb4IE> :E QQG

Cur“ —

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Probleme de satisfacere a constréngerilor (CSP)

V Sunt definite prin: variabilele X,- cu valori din domeniul D,- $i o
multime de constréngeri care specificﬁ combinatiile permise de valori
pentru submultimi de variabile.

> O asignare este consistenté' dacé nu sunt Tncélcate constréngeri. O
asignare este comp/eté’ dacé include toate variabilele.

Solutie: o asignare completé de valori variabilelor a.T. toate
constréngerile sunt satisfécute.

> NP-hard

V algoritmi cu seep-general, mai puternici decét algoritmii de céutare
standard

> MaxCSP: maximizeazé numérul de constréngeri satisfécute

Cm 4 ‘A 2023/2024 3 / 59

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Exemplu: Colorarea unei hérfci
‘raw
Variabile: WA, NT, Q, NSW, V, SA, T
Domenii: D,- : {red,green, blue}
Constréngeri: regiunile adiacente trebuie 55 aib5 culori diferite
WA 75 NT (dacé limbajul permite), sau
(WA7 NT) G {(red,green), (red, blue), (green, red)7 (green, blue), . . .}
Curs 4 IA 2023/2024 4/59

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Exemplu: Colorarea unei hérfci
Tasw
Solutiile sunt asigniri care satisfac toate restrictiile.
{WA I red, NT I green, Q I red7 NSW I green, V I red, SA I
blue, T I green}
Curs 4 IA 2023/2024 5/59

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Exemplu: N-Regine
Formularea 1:
Variabile: X,-J-
Domenii: {0,1}
Constréngeri Eid- Xij = N
Vi,j, k (Xij,XkJ-) 6 {(0,0),(O,1), (1,0)}
V1111 (Xij7Xi+kJ+k)€{(070)7(071)1(1,O)}
Vid', k (Xij1Xi+k,j—k) G {(0,0),(O,1), (1,0)}
C. 51 2 E :2 A“
Curs 4 IA 2023/2024 6 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Exemplu: N-Regine
Formularea 2:
Q1
Q2
Q3
Q4
Variabile: Qk
Domenii: {1,2,3,...,N}
Constréngeri
Implicit: Vi,j non — threatening(Q,-, Qj)
Explicit: (Q1, Q2) € {(1,3),(1,4),...}...
cl 51 2 E :2 0&0
Curs 4 IA 2023/2024 7/59

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Exemplu: Sudoku
Variabile: xij G {1, ...,9} I: N (valorile din celulele corespunzétoare)
Restrictii de inegalitate (perechi): toate valorile de pe o Iinie, coloané,
regiune sunt diferite
X/j 75 Xik Vk 75 i,j G N, (linie)
xij 75 xkj Vk 75 i,j G N, (co/oana)
Xij € N Vi,j G N
Cu I {(3(i — 1) + i’,3(j — 1) +1’)!(i’yj’) E IV’X/V’}
Se poate utiliza restrictia globalé alldifferent pentru o formulare mai
puternicé’:
a/Idifferent(XijU G N) Vi G N, (/inie)
alldifferent(x,-j]i G N) Vj G N, (co/oana)
a/Idifferent(C,-j) Vi,j G N’7 (regiune)
Xi,j G N Vi,j G N
Curs 4 IA 2023/2024 8 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Exemplu: Cryptarithmetic puzzle
/-\
T W0 9 '0 @‘ﬂ'! @hQ
+ T wo i.‘-
F 0 u R I I.
'19 Q Q
Variabile: F T U W R O X1 X2 X3
Domenii: {0,1,27374,5,6,7,8,9}
Constréngeri:
al/diff(F, T7 U7 W, R, O)
0+0: R+10-X1, etc.
Curs 4 IA 2023/2024 9/59

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Exemplu: planlflcarea orarulul
Planificarea orarului profesorilor $i a elevilor
P Variabile: profesori, materii, clase, 55H, intervale orare
P Constréngeri:
P un profesor predé anumite materii
P o materie este tinuté la anumite clase
P un profesor preferé anumite intervale orare, etc.
cl 51 i E :2 QQG
Cm 4 ‘A 2023/2024 10/ 59

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Exemplu: Job-shop scheduling
Asamblarea unei ma$ini
> Sarcini: instaleazﬁ axele (fatﬁ, spate), ﬁxeazé rotile, strénge piulitele
(pentru ﬁecare roatﬁ), ﬁxeazé' capacele rotilor, inspecteazé ansamblul
final.
Modelare: variabila: sarciné, valoare: timpul la care Tncepe (minute).
X I {AX/6F7 AX/GB7 WheelRF, WheelLF, Wheel/:337 Where/LB,
NutsRF, NutsLF, NutsRB, NutsLB, CapRF, CapLF, CapRB, CapLB, Inspect}
> Constréngeri:
P 0 sarciné trebuie 55 Tnceapé Tnaintea alteia (0 roatia’ trebuie instalaté
Tnaintea capacului)
T1 + d1 g T2 (T1 trebuie 55 Tnceapé Tnaintea lui T2)
V 0 sarciné necesité o perioadé de timp pentru a fi finalizaté
Cm 4 ‘A 2023/2024 11/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Exemplu: Job-shop scheduling
Asamblarea unei masini. Constréngeri:
> Axele trebuie instalate Tnaintea rotilor
Ax/eF + 10 g Whee/RF
P Dup‘a’ fixarea rotilor, strénge piulitele 5i apoi ata$eaz‘a’ capacele
Whee/RF + 1 g NutsRF; NutSRF + 2 g CapRF
> Pentru a a$eza axele, se utilizeazé un instrument (AX/6F, Axle/3 nu se
suprapun)
(AX/6F + 10 g AX/GB) 0|’ (AX/65 + 10 g AX/GF)
> Inspectia este la sférsit 5i dureazé 3 minute
X + dX g Inspect
> Ansamblul trebuie terminat Tn 3O de minute
D : {1,2,3, ...,27}
Curs 4 IA 2023/2024 12/59

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Probleme din lumea realé
> Planiﬁcarea orarului personalului medical
P Planiﬁcarea transportului Tn comun, a constructiei unei fabrici,
F/oorp/anning, etc.
> Meeting scheduling
> Probleme de asignare (a profesorilor la clase)
> Configurare hardware
Obs: multe probleme din lumea realé implicé variabile cu valori reale
https://www.csplib.org/Problems/
Cue 4 ‘A 2023/2024 13/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Tipuri de variabile
> Variabile discrete
P domenii finite; dimensiune domeniu d :> O(d”) asignéri complete
P ex: Boolean CSPs, incl. Boolean satisfiability (NP-complete)
P domenii infinite (intregi, siruri de caractere, etc.)
P ex: job scheduling
P constréngeri liniare (rezolvabil), neliniare (nedecidabil)
> Variabile continue
V ex: timpii de Tnceput/sfér5it pentru observatiile furnizate de telescopul
Hubble
F constrﬁngeri liniare (rezolvabile Tn timp polinomial cu metode de
programare liniarﬁ)

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Tipuri de constrﬁngeri

V Constréngeri unare implicﬁ o singuré variabilé
ex: SA 51$ green

> Constréngeri binare implicé perechi de variabile
ex: SA 75 WA
Probleme CSP binare: ﬁecare constréngere se referé la cel mult doué
variabile

> Constréngeri de ordin superior implicﬁ 3 sau mai multe variabile
ex: constréngerile din exemplul cryptarithmetic puzzle

V Preferinte (restrictii soft) ex: ro$u este mai bun decﬁt verde
reprezentate prin costuri asociate asignérilor —> probleme de
optimizare

Cm 4 ‘A 2023/2024 15/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Graful de restrictii
Nodurile sunt variabile, muchiile reprezinta restrictii
Algoritmii cu scop-general utilizeaza structura grafului pentru a accelera
cautarea (ex: Tasmania este o subproblema independenta)
Cm 4 ‘A 2023/2024 16 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Continut
Algoritmi de céutare
El 5' ' _= :E JDQG
Cm 4 ‘A 2023/2024 11/59

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Formularea standard (céiutare incrementalé)
Stirile sunt definite prin valorile asignate.
V Starea initialé: asignarea vidi, (Z)
> Functia succesor: atribuie o valoare unei variabile neasignate
> Testarea obiectivului: asignarea curenté' este completé
cl 51 i E :2 @va
Cm 4 ‘A 2023/2024 18/ 59

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Formularea standard (céiutare incrementalé)

V Solutiile se gésesc la adéncimea n Tn arbore (n variabile asignate)
:> utilizeazé DFS

V Factorul de ramiﬁcare este nd, la urmétorul nivel (n — 1)d, etc. —>
n!d” frunze, d" asignéri posibile

ll’
/ ‘x
Curs 4 IA 2023/2024 19/59

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Backtracking
Asignérile variabilelor sunt comutative
[WA : red then NT I green] la fel ca [NT : green then WA : red]
La ﬁecare nod considerém asignarea unei singure variabile
(nu intré Tn conflict cu asignarea curenti)
:> d noduri pe nivel $i d” frunze
Céutarea DFS pentru CSP cu asignéri pentru 0 singuré variabilé:
backtracking. Backtracking este algoritmul de bazé neinformat pentru
CSP.
Cm 4 ‘A 2023/2024 2° / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Exemplu Backtracking
Cénd un nod este extins, se verifici dacé fiecare stare urmétoare este
consistenté, Tnainte de a fi adéugaté.
/\
/\
Cm 4 ‘A 2023/2024 21/59

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Backtracklng
function BACKTRACKING-SEAR.CH(csp) returns solution /failure
return REGURSIVE-BACKTRACKING({ }, esp)
function RECURSIVE-BACKTRACKING(assignment, esp) returns soln/failure
if assignment is complete then return assignment
uar‘— SELECT-UNASSlGNED-VARIABLE(VARIABLES[esp], assignment, esp)
for each value in ORDER-DOMAIN-VALUES(uar, assignment, esp) do
if value is consistent with assignment given CONSTRAINTS[csp] then
add {uar = value} to assignment
‘resultP REGURSIVE-BACKTRACKING(assignment, esp)
if result 7! failure then return result
remove {uar : value} from assignment
return failure
Backtracking : DFS + ordonarea variabilelor + fail-on-vio/ation
Poate rezolva problema celor n regine pentru n as 25.

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Conjunut
lmbunétﬁfcirea algoritmului de cﬁutare
El r51 i E :5 QQG
Cm 4 ‘A 2023/2024 23 / 59

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Imbunététirea eficientei algoritmului Backtracking
1. Ce variabilé trebuie asignaté?
2. Tn ce ordine trebuie veriﬁcate valorile?
3. Putem detecta esecul mai devreme?
4. Putem proﬁta de structura problemei?
Curs 4 IA 2023/2024 24/59

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
1. Minimum-remaining-values
Minimum-remaining-values (IVIRV): alege variabila cu cele mai putine
valori permise (variabila cea mai constrénsé).
"Fail-first" heuristic
Cm 4 ‘A 2023/2024 25/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
2. Least-constraining-value
Least-constraining-vaIue: alege valoarea cea mai putin constrénsé
(cea care exclude cele mai pufcine valori)
Exemplu: ce valoare alegem pentru Q?
% Allows l value for SA
@ﬁ ' %<% Allows Ovaluesfor SA
Combinarea acestor euristici face posibilé rezolvarea problemei lOOO-regine.
Cm 4 ‘A 2023/2024 26/ 59

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Chestionar
/r“\
“W 0% ﬁg 6%
haw U Q U
Variable order WA, NT, Q,NSW, V, T, SA. Tightest upper bound
on na'l've backtracking search space size?
(A): 145 (B): 382
(<3); 433 (D): 37
Curs 4 IA 2023/2024 21/59

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Chestionar
A
WW 6% c% ¢%
mw B U U

Variable order SA, NT, Q, NSW, V, WA, T. Tightest upper bound
on na'l've backtracking search space size?

(A): 52 (B): 145

(C): 382 (D): 433

Curs 4 IA 2023/2024 2s /59

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Forward checklng
ldee: actualizeazﬁ domeniul variabilelor neasignate
V atunci cénd selectém o valoare pentru o variabilé’, eliminé valoarea din
domeniul variabilelor neasignate, conectate cu aceasta
WA NT o msw v SA T
Cm 4 ‘A 2023/2024 29/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Forward checking
Idee: actualizeazé domeniul variabilelor neasignate
P atunci cénd selectém o valoare pentru o variabilé, eliminﬁ valoarea din
domeniul variabilelor neasignate, conectate cu aceasta
WA NT o msw v SA T
IIIIIIIIIIIIIIIIIIEIIIEEIIIEEIIIIIIIIIIEEI
III-IUDIEIIIEEIIIEEIIIIIIIIEEI
Cm 4 ‘A 2023/2024 30/ 59

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Forward checking
ldee: actualizeazé domeniul variabilelor neasignate
V atunci cénd selectém o valoare pentru o variabilé’, eliminé valoarea din
domeniul variabilelor neasignate, conectate cu aceasta
WA NT o msw v SA T
IIIIIIIIIEEIIIEEIIIEEIIIEEIIIEEIIIEEI
III-IUDIIIIEEEIEIIEIIIIIIEIIIII
I:l_:ll:ll:-:IEI:I:l-IIEI:I:I
Cm 4 ‘A 2023/2024 3'1/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Forward checking
Idee: actualizeazé domeniul variabilelor neasignate
P atunci cénd selectﬁm o valoare pentru o variabilé, eliminé valoarea din
domeniul variabilelor neasignate, conectate cu aceasta
WA NT o msw v SA T
IIIIIIIIIIIIIIIIIIIIIIIEIIIIIIIEIIIIIIIIIIIIIII
III-JJDIIJEIIIIIEIIEIIIIIIEIIIII
I:l_:ll:lE-:IEI:I:l-:|EI:I:I
I:I_:ll:ll:_l:l—l:l:l:l
Cm 4 ‘A 2023/2024 32/ 59

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Forward checklng - algorltm
procedure SELECTVALUE-FORWARD-CHECKING
while D; is not empty
select an arbitrary element a E Di, and remove a from D;
emptyedomnin <— false
foralllmi<lc§ﬂ
for all values b in ch
if not CONSISTENTEIH‘ 331:0.‘ mk:b)
remove b from D"C
end for
if ch is empty (3:!- : a leads to a dead-end)
empty-domain e true
if emptyedomnén (d0n’t select Q)
reset each 13;“, i < lc g n to value before n was selected
else
return a
end while
return null (no consistent value)
end procedure
cl 51 r E :2 v?» {my
Curs 4 IA 2023/2024 33/59

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Generallzed look ahead
procedure GENERALIZED-LOOKAHEAD
Input: A constraint network P : (X, D‘ C)
Output: Either a solution, or notiﬁcation that the network is inconsis’
tent.
D; k D1; for 1 S i g n (copy all domains)
-i <- 1 (initialize variable counter)
while 1 g i g n
instantiate m1; s SELECTVALUE-XXX
if .111; is null [no value was returned)
i <- i — 1 (backtrack)
reset each Dz‘ k > i‘ to its value before st," was last instantiated
else
i k i+ 1 [step forward)
end while
if i : [l
return “inconsistent”
else
return instantiated values of {m1 . . . an}
end procedure
Curs 4 IA 2023/2024 34/ 59

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Propagarea constréngerilor

Forward checking propagé informatii Ia variabile neasignate, dar nu asiguré

detectarea timpurie a e$ecuri|orz

WA NT o msw v SA T

IIIIEIIIIIEIIIIIEIIIEIIIIIEEIIIEIIIIIEIII
III-JJDIIJEIIIIIEEEIIIEIEEEI
I:I_:Il:IE-:IEI:I:l-:|EI:I:I

NT 5i 5A nu pot ﬁ colorate ambele cu albastru!

Nu existé' propagare Tntre variabilele neasignate! —> Singleton domains

Aplicé’ Tn mod repetat constréngerile la nivel local.

Curs 4 IA 2023/2024 35/59

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Arc consistency
Arc consistency: cea mai simplé formé de propagare; face ca fiecare arc 55
fie consistent.
X —> Y este consistent dacé si numai dacé
pentru fiecare valoare x a lui X, existé’ 0 valoare permisﬁ y pentru Y
WA NT o msw v SA T
I:l_:ll:ll:-:I|:I:I:l-:ll:l:l:l
Cm 4 ‘A 2023/2024 36 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Arc consistency
Arc consistency: cea mai simplé formé de propagare; face ca fiecare arc 55
fie consistent.
X —> Y este consistent dacé si numai dacé
pentru fiecare valoare x a lui X, existé’ 0 valoare permisﬁ y pentru Y
WA NT o msw v SA T
I:l_:ll:ll:-:ll:l:l:l-:ll:l:l:l
Cm 4 ‘A 2023/2024 37 / 59

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Arc consistency
Arc consistency: cea mai simplé formé de propagare; face ca fiecare arc 55
ﬁe consistent.
X —> Y este consistent dacé si numai dacé
pentru fiecare valoare x a lui X, existé o valoare permisé y pentru Y
WA NT Q msw v SA 'r
I:I_:II:II:.:0:CI:l-:ll:l:l:l
Daci X pierde o valoare, vecinii lui X trebuie verificati.
Cm 4 ‘A 2023/2024 38/ 59

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Arc consistency
Arc consistency: cea mai simplé formé de propagare; face ca fiecare arc $5
fie consistent.
X —> Y este consistent dacé si numai dacé
pentru fiecare valoare x a lui X, existi o valoare permisé y pentru Y
WA NT Q msw v SA 'r
I:l_:ll:ll:-:0:CI:l-:1EI:I:I
Daca X pierde o valoare, vecinii lui X trebuie verificati.
Arc consistency detecteazﬁ esecul mai devreme decét Forward checking.
Poate fi executat ca un pas de preprocesare sau dupé fiecare asignare.
Cm 4 ‘A 2023/2024 39/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Algoritmul Arc consistency
function AC-3( esp) returns the CSP, possibly with reduced domains
inputs: esp, a binary CSP with variables {X11 X2, ..., X,,}
local variables: queue, a queue of arcs, initially all the arcs in esp
while queue is not empty do
(X ,-, Xj) 1_ REMOVE-FlRST(queue)
if REMOVE-INCONSISTENT-VALUES(X;, X j) then
for each XL- in NEIGHBORSPQ-l do
add (Xk, X;) to queue
function REMOVE-INCONSISTENT-VALUES( X i, X I) returns true iff succeeds
removed P false
for each :r, in DOMAINIXJ do
if no value y in DOMAINPQ] allows (my) to satisfy the constraint X,- <—> X}-
then delete I from DOMAINIXi]; removede true
return removed
Complexitate timp: O(n2d3); versiuni O(n2d2).
Curs 4 IA 2023/2024 40/59

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Propagarea constréngerilor

> 3-consistent5 (path consistency), k-consistenté
k-consistenté: orice asignare consistenté a k — 1 variabile poate ﬁ
extinsé Ia 0 instantiere de k variabile
Dacia o problemé CSP cu n variabile este n-consistenté, atunci nu mai
e necesaré céutarea Backtracking.

P Utilizarea tehnicilor de propagare a constréngerilor implicé $i o
cre$tere a timpului de executie

P un compromis Tntre propagare 5i céutare; dacé propagarea dureazé mai
mult decét céutarea, atunci nu se merité
V Consistenté directionalé
Cm 4 ‘A 2023/2024 41/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Conflict-Directed Backjumping (CBJ)
> Backtracking: ne Tntoarcem la variabila anterioaré pentru a-i asigna o
noui valoare
F ne Tntoarcem UN nivel Tn arborele de cé'utare
V Cénd ajungem Tntr-un punct din care nu mai putem continua (datorité
unei inconsistente), putem Tncerca $5 identiﬁcﬁm cauza problemei
V Tn Ioc $5 ne Tntoarcem un nivel, ne putem Tntoarce direct Ia variabila
care a cauzat problema
Cm 4 ‘A 2023/2024 42 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Conflict-Directed Backjumping

V Idee: Mentine o multime de conflicte CONFLICT SET pentru ﬁecare
variabilé (actualizatﬁ pe mésuré ce asigném valori variabilelor)

> Considerém variabila curentﬁ X,-. Multimea CONFLICT SET a lui X,-
este multimea de VARIABILE ASIGNATE ANTERIOR conectate cu
X,- (datorité unei restrictii)

> Dacé nu am identificat 0 asignare validé pentru variabila curentﬁ Xi,
ne INTOARCEIVI la variabila Xk, din multimea de conflicte a lui Xi,
cea mai apropiaté

V Actualizém multimea de conflicte a lui Xk
CONFLICTCSET(Xk) :
CONFLICT,SET(Xk) U CONFLICT,SET(X,-) \ Xk

Curs 4 IA 2023/2024 43/59

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Conflict-Directed Backjumping
Exemplu: colorarea unei hZa'rfci
M
15 m]
A g
15 {x5}
Q l1 r
2\\4 I? SEHCh umlimzs hue.
1 / \ r g I]
3\ 5 13 mam]
6/ AR
7 r g h
X7 nu este Tn multimea de conflicte a lui X3; ne Tntoarcem la cea mai
apropiaté variabilé din multimea de conflicte (X6)
Cm 4 ‘A 2023/2024 44 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Confllct-Dlrected Backjumpl ng
procedure CONFLICT-DIRECTED-BACKJUMPING
Input: A constraint network R I (X, D‘ C).
Output: Either a solution‘ or a decision that the network is inconsistent.
11 <— 1 (initialize variable counter)
D; k D1; (copy dornain)
J1; e (i (initialize conﬂict set)
while 1 g i g n
instantiate m1; <— SELECTVALUE-GBJ
if 37,3 is null (no value was returned)
iprev P 1',
i k index of last variable in Ji; (hackjunip)
J1; <- J,7 U Jim” — {mi}(1nerge conﬂict sets)
else
i 4- i + 1 (step forward)
Di‘; e Di (reset mutahle domain)
J11 <- [3 (reset conﬂict set)
end while
ifii : U
return “inconsistent”
else
return instantiated values of {m1 . . . Pawn}
end procedure
cl n t e :2 ‘11;
Curs 4 IA 2023/2024 45/59

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Confllct-Dlrected Backjumplng
subprocedure SELECTVALUE-CBJ
while D; is not empty
select an arbitrary element a E D15‘ and remove a from D;
consistent P true
Ic e 1
while k < i and consistent
if CONSISTEN'ﬂ-i'k, m‘- : a)
k e k + 1
else
let R5 he the earliest constraint causing the conﬂict
add the variables in Rs’s scope S, hut not .ri‘ to Ji
consistent e false
end While
if consistent
return a
end while
return null (no consistent value)
end procedure
U 51 2 E :5 v“ ‘KG
Curs 4 IA 2023/2024 46 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Continut
Structura grafului de restrictii
El r51 ' _= :E ‘)QG
Cm 4 ‘A 2023/2024 41 / 59

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Structura problemei
Tasmania 5i continentul sunt subprobleme independente
Identificabile ca $i componente conexe ale grafului constrangerilor.
Cm 4 ‘A 2023/2024 48/ 59

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
Structura problemei
Presupunem c5 fiecare subproblemé are c variabile, dintr-un total de n.
Complexitatea Tn cazul cel mai nefavorabil este n/c - dc, liniar Tn n
Exemplu: n I 80, d I 2, c I 20
280 I 4 miliarde de ani la 10 milioane noduri/sec
4 - 220 I 0.4 secunde Ia 10 milioane noduri/sec
Sunt rare situatiile acestea.
Cm 4 ‘A 2023/2024 49 / 59

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Probleme CSP cu structuré arborescenté’
Teoremé: dacéi graful de constréngeri nu are cicluri, problema CSP poate
ﬁ rezolvaté’ Tn O(n d2) timp.
(Reamintim: pentru problemele generale CSP, complexitatea timp Tn cazul cel
mai nefavorabil este O(d”))
Curs 4 IA 2023/2024 50/59

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
Probleme CSP cu structuré arborescenté’
O problemé CSP este directed arc-consistent pentru o ordonare
X1,X2, ...,X,7 a variabilelor <:> ﬁecare X,- este arc-consistent cu
Xj,Vj > i.
Met0d5:
1. Alege Tn ridécini o variabilé, ordoneazi variabilele de la rédéciné la
frunze a.T. périntele ﬁecarui nod TI precede Tn ordonare
2. Forj : n downto 2, aplicé Make-Arc-Consistent(Parent(XJ-)7Xj)
3. Forj I 1 to n, asigneazé’ Xj (0 valoare consistenté’ din domeniu)
Curs 4 IA 2023/2024 51/59

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Probleme CSP cu o structuré "aproape" arbore
Cutset conditioning
@475 w
0 0
Q) Q)
> Alege o submultime 5 de variabile ai. graful de constrangeri devine
arbore dupé’ $tergerea Iui S (S cutset)
> Pentru ﬁecare asignare a variabilelor din S, $terge din domeniul
celorlalte variabile valori care sunt inconsistente cu asignarea;
returneazé cele doué solutii.
Timpul de executie O(dC - (n — c)d2), c dimensiune cutset (rapid pentru
valori mici ale lui c)
Curs 4 IA 2023/2024 52/59

***************Ending Page***************


***************Beginning Page***************
***************page number:53**************
Continut

Introducere

Algoritrni de céutare

Imbunététirea algoritmului de céutare

Structura grafului de restrictii

Céutare Iocalé

C1 ﬁ - '= :5 ‘)RO

Cm 4 ‘A 2023/2024 53/ 59

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Algoritmi euristici pentru CSP
Hill-climbing, Simulated annealing lucreaza cu stari "complete" (toate
variabilele asignate)
Pentru a aplica pe probleme CSP:
permitem stéri cu restrictii nesatisfacute
operatori care reasigneaza' valori variabilelor
Selectarea variabilei: alege aleator o variabilé conflictualé
Selectarea valorii utilizénd euristica min-conflicts:
alege valoarea care Tncalcé cele mai putine restrictii
h(n) : numarul de restrictii violate
Cm 4 ‘A 2023/2024 54 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:55**************
Min-conflicts
function MIN-CONPLICTS(csp, mans-steps) returns a solution or failure
inputs: csp, a constraint satisfaction problem
max_steps, the number of steps allowed before giving up
current <- an initial complete assignment for csp
for t = 1 to max_steps do
if current is a solution for csp then return current
car <- a randomly chosen conﬂicted variable from CSp.VARIABLES
ualue <- the value u for uar that minimizes CONFLICTS(uar, u, current, csp}
set uar = ualue in current
return failure

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
Exemplu: 4-Regine
Variabile: Q1, Q2, Q3, Q4 (cﬁte o reginé pentru fiecare coloané’)
Domenii: D,- : {1,2,3,4} (pe ce linie se aflé ﬁecare reginé)
Constréngeri:
Q,- 75 Qj (nu pot fi pe aceea$i linie)
|Q,- — Qj] 75 |i —j] (sau pe aceea$i diagonalé)
Curs 4 IA 2023/2024 56 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:57**************
Exemplu: 4-Regine

> Stare: 4 regine pe 4 coloane (44 : 256 stéri)
> Operatori: mut5 regina pe coloané'
> Testarea obiectivului: nu existé atacuri
> Evaluare: h(n) I numérul de atacuri

Elﬂl in

h =5 h =2 h =0
Cm 4 ‘A 2023/2024 57 / 59

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
Compararea algorltmllor pentru CSP

Numérul mediu de verificéri a consistentei necesare pentru a rezolva

problema
-|—————
USA (> 1,000K) (> LUDOK) 2K 00 54
n-Queens p 40,0001q 13,5000: [> 4000019 01m 4K
Zebra 3359K 1K 35K UBK 2K
Randnml 415K 3K 26K 2K
Random 2 942K 2:0: 1m 15K

Cm 4 ‘A 2023/2024 58 / 59

***************Ending Page***************


***************Beginning Page***************
***************page number:59**************
Concluzn

> Probleme de satisfacere a restrictiilor

stéri: asignéri ale variabilelor
restrictii intre variabile

> Backtracking I Depth-ﬁrst search Tn care asigném o variabilé (la
ﬁecare nod)

> Euristici de ordonare a variabilelor $i selectare a valorilor

> Forward-checking previne asignﬁri care garanteazé e$ecu| ulterior.
Propagarea constrangerilor (Arc consistency) constrénge suplimentar
valorile.

P Reprezentarea utilizénd graful de constréngeri permite analiza
structurii problemei. Problemele cu structuré arborescenté' pot ﬁ
rezolvate Tn timp liniar.

V IVIetodele de céutare Iocalﬁ (Iterative min-conflicts) sunt de obicei
eficiente Tn practicé'.

Cm 4 ‘A 2023/2024 59 / 59

***************Ending Page***************

