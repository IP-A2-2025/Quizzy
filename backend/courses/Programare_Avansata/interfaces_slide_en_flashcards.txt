[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the definition of an interface according to Webster?
--InteriorSeparator--
A place at which independent and often unrelated systems meet and communicate with each other, respecting a set of rules.
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary role of an interface in programming?
--InteriorSeparator--
To describe a model or contract that classes can implement.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following can be declared within an interface?
--InteriorSeparator--
(right) Constant declarations
(right) Abstract methods
(wrong) Concrete methods
(wrong) Private variables
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What must a concrete class do when implementing an interface?
--InteriorSeparator--
Specify code for all abstract methods declared by the interface.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of common denominators, what benefit do interfaces provide?
--InteriorSeparator--
They allow unrelated classes to be treated uniformly based on a shared capability (e.g., "talk").
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When can an object be considered of type X, where X is an interface?
--InteriorSeparator--
If that object is an instance of a class implementing the interface X.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the benefits of using Interfaces over abstract classes?
--InteriorSeparator--
(right) Implementing an interface is much lighter, specifying conformance to specifications.
(wrong) Abstract classes cannot be used together with Interfaces.
(wrong) Abstract classes have more utility.
(right)Interfaces and abstract classes are designed for different purposes but can be used together for optimal utility.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why can adding an abstract method to an existing interface be problematic?
--InteriorSeparator--
It can break all classes that implement the interface.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of default methods in interfaces?
--InteriorSeparator--
To allow extending interfaces without breaking existing implementations.
--InteriorSeparator--
medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the key characteristic of static methods defined in interfaces?
--InteriorSeparator--
They belong to the interface only.
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a callback method?
--InteriorSeparator--
A method that is passed as an argument to another method.
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is an Anonymous Class?
--InteriorSeparator--
(wrong) An automatically generated class.
(right) Inner class used to create an object of a specific type.
(wrong) Parent class that has no name.
(wrong) Class that requires no name.
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What interface is implemented to impose a total ordering on objects of a class?
--InteriorSeparator--
Comparable
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the Comparator interface?
--InteriorSeparator--
To impose a total ordering on some collection of objects.
--InteriorSeparator--
medium
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the defining characteristic of a functional interface?
--InteriorSeparator--
It contains only one abstract method.
--InteriorSeparator--
easy
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When is it appropriate to use a method reference?
--InteriorSeparator--
When a lambda expression does nothing but call an existing method.
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary role of marker interfaces?
--InteriorSeparator--
To associate some metadata to a class that will be useful at runtime.
--InteriorSeparator--
medium
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the main utility of Interfaces?
--InteriorSeparator--
(wrong) To hide code.
(right) Separating the model from the implementation.
(wrong) To be the antithesis of classes.
(right) They are a common denominator between unrelated classes.
--InteriorSeparator--
hard
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How should interfaces be named when they describe app data types?
--InteriorSeparator--
They should get the "best" name (e.g., Service, List).
--InteriorSeparator--
easy
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the relationship between interfaces and classes in Java?
--InteriorSeparator--
(right) Classes can implement multiple interfaces.
(wrong) Interfaces can implement classes.
(wrong) Interfaces can extend classes.
(right) Interfaces define a contract that classes must adhere to.
--InteriorSeparator--
hard
--InteriorSeparator--
3, 5, 23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the key difference between extending an abstract class and implementing an interface?
--InteriorSeparator--
Extending an abstract class imposes a strong relationship, while implementing an interface specifies conformance to a contract.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How can existing code be adapted to work with an evolved interface without breaking compatibility?
--InteriorSeparator--
By creating a new interface extending the old one or using default methods.
--InteriorSeparator--
hard
--InteriorSeparator--
10, 11
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the benefits of using callback methods?
--InteriorSeparator--
(wrong) They allow methods to return multiple values.
(wrong) They improve the performance of recursive algorithms.
(right) They allow customization of algorithm behavior at specific points.
(right) They provide a way to execute different code based on the context.
--InteriorSeparator--
hard
--InteriorSeparator--
13, 14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `FilenameFilter` interface and how is it used?
--InteriorSeparator--
It is used to filter files based on certain criteria, by implementing the `accept` method.
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the relationship between anonymous classes and interfaces?
--InteriorSeparator--
(right) Anonymous classes can implement interfaces.
(wrong) Anonymous classes are interfaces.
(right) Anonymous classes can be used to create objects of a specific type that implements an interface.
(wrong) Interfaces are anonymous classes.
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What exception is thrown when comparing incompatible objects using the `compareTo` method?
--InteriorSeparator--
ClassCastException
--InteriorSeparator--
hard
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the advantages of using lambda expressions with functional interfaces?
--InteriorSeparator--
(right) They provide a more concise syntax.
(wrong) They improve code execution speed.
(right) They eliminate the need for anonymous classes.
(wrong) They allow for multiple abstract methods in an interface.
--InteriorSeparator--
hard
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are examples of marker interfaces?
--InteriorSeparator--
(right) Serializable
(wrong) Runnable
(right) Cloneable
(wrong) Comparable
--InteriorSeparator--
medium
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the modern alternative to marker interfaces for associating metadata with a class?
--InteriorSeparator--
Annotations.
--InteriorSeparator--
medium
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When describing abilities, what should interfaces be named using?
--InteriorSeparator--
(right) Able
(wrong) Ify
(wrong) Iness
(right) Using the 'able' convention (e.g. Comparable, Iterable, etc.)
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the use cases for interfaces in advanced programming?
--InteriorSeparator--
(right) Defining a set of specifications for classes to implement.
(wrong) Providing a way to inherit multiple implementations.
(right) Serving as a common denominator between unrelated classes.
(wrong) Hiding implementation details completely from the outside world.
--InteriorSeparator--
hard
--InteriorSeparator--
23
--FlashCardSeparator--
}], role=model}, finishReason=STOP, citationMetadata={citationSources=[{startIndex=135, endIndex=259, uri=https://profs.info.uaic.ro/~acf/java/slides/en/interfaces_slide_en.pdf}]}, avgLogprobs=-0.20201802641229819}]