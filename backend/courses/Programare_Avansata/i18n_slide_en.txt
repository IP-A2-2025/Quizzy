***************Beginning Page***************
***************page number:1**************
£2) Java“
a,
Advanced Programming
Internationalization
Localization

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
i18n & l10n

- Internationalization (i18n) is the process of
designing an application so that it can be
adapted to various languages and regions
without engineering changes.

a Most applications should be designed for international use right
from the start of the development.

- Localization (l10n) is the process of adapting
software for a specific region or language by
adding locale-specific components and
translating text.

— Country-specific data should be added without changing the code!

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Considerations

- With the addition of localized data, the same
executable can run worldwide —> adding support for
new languages should not require recompilation.

- Textual elements, such as status messages and the
GUI component labels, are not hardcoded in the
program. Instead they are stored outside the source
code and retrieved dynamically.

- Culturally-dependent data, such as dates, numbers
and currencies, appear in formats that conform to the
end user's region and language.

- Sorting collections of strings should take into
consideration the alphabet specific to a language.

- The direction of writing, etc.

***************Ending Page***************


***************Beginning Page***************
***************page number:4**************
The Locale Class
- A Locale object represents a specific
geographical, political, 0r cultural region.
e Language: ISO 639 alpha-2 or alpha-3 language code
"en" a english, “ja” a japanese, “r0” a romana
— Country: ISO 3166 alpha-2 country code
“US” a United Slates, “UK” a United Kingdom, “R0” a Romania
e Locale usLocale I Locale.US;
Locale roLocale I new Locale("ro", "RO");
- An operation that requires a Locale to perform
its task is called locale-sensitive
7 Nu'nbe[Fozma'wgel,NmeerInsl,am:e(ruanalel.5:)1ma;[12345.99)
4 12.345, 99

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
_ _ Default locals:
lmporc javslutlllLocsle: English Unlted States
. A 'lahl l 1 z
publlc class TestLQcale ( Sign :hquca as
publlc static vold maln($tring arqu) ( Algerian?"
Systemouc.pzlncln("Defaulc locale!"); Argentina espaﬁol
localelnfo (Locale.getDefault() > ; Australia Enqliﬁ
Austria Deutsch
E h ‘ l
System,outpnntlmmvsllsble localesz") a “MW”, .
_ Belarus ﬁenapyckl
Locale avallableH : Eelgxum fzaﬂcaxs
Locale .qsmvausblsnocales 0 ; 581919“ "Ederlams
Eollvla espaﬂol
Bulgaria ﬁ'hnrapckn
for(Locale locale = avallable) ! Quads francs“

. Canada English
localelgezmsplaycouncryu + "\t" + Chile espanol
locale4qetDisplayI-ang'uage(locale)H China $32

) {Romania roméné
) ..
)

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Where Are Locale Data Stored?

- Resource bundles contain locale-speciﬁc objects
When your program needs a locale-specific resource, a String for
example, your program can load it from the resource bundle that is
appropriate for the current user's locale.

Reschrcelhmﬁlé resources :
Resourcellundle.qetl1undle("MyResouirces", $0‘ii€iior:aleli

- Resource bundles belong to families whose members
share a common base name, but whose names also
have additional components that identify their locales.

e MyRequrces
e MyResoJr'ces m
e MyResoJrcesieniUS

~ A resource bundle can be a .class or a .properties file

~ rt.jar ~> sun.util>resources.

LocaleData, LocaleNames, CurrencyNames, TimeZoneNames,

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Properties
~ A .properties file is a text file containing pairs
of type: key = value
config .Exogerties
drive: a con.mysql.]dbc.Drlve:
LIl a jubc:r\ysql://localhost/test
user : Qba
passwnrn : sql
~ The Properties class represents a persistent
set of properties. The Properties can be saved
to a stream or loaded from a stream.
Properties props = new PropertiesO;
“095.1%;de F119Reaue:(path + "/database.propértles"));
SysLem.ouL.p11nt1'1tp!0p5.get1’!0perty("driver") ) 7

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
ResourceBundles

- MyResources_ro.properties

hellQISaluL

byeILa rcvccicrc

welcomeIUtiilzatorui (0) 51 conecta: la (1)
- MyResources_fr.properties

hellOIBanjour

bye=Au Revoir

welcome=Utilisateur {0) est connecté a (1}
- MyResources.properties (default)

kPllQII-Ielln

eyeiGooubye

welcom91User (0) icgqeu 1r, at (1)

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
Translatlng the User Interface
publlc statlc void d15playMessages(Locale locale) (
String baseName = “com.example.MyResources";
ResourceBundle messages =
ResourceBundle .gsuaundls (baseName, locale) ;
SysLem.0uL .pUnLln (messages,qetstringwheno") 1,-
String pattern = messages.qecscrinqv'velcome"),-
ommcn arqumcnts : ("Dukc", LocalDa:c.now[H;
Strlnq welcome : new McssaqcFormat1pattcrn) .format(arqumcnts);
Systom.out.pr1ntln (welcome) ;
System.out .prlntln [messages.getStx:ing("bye") p;
)
public sLaLlc veld maln(SLrinq erqu) Lhrows IOExcepLion (
displayMessages (Locale. foxLanquageTag("zo") ) ;
//=» Sawt, Um Y7fi)Y\Y 'Auke sf») :wecta: Ya )C 60541:, Ta revedeve
displayMessages (Locale . get-Default () ) .-
)

***************Ending Page***************


***************Beginning Page***************
***************page number:10**************
- Usmg a class Instead of a .propertles ﬁle
package Colmexample;
lmpcrc java.Jfll.LlStRGSOUrCeBUndle,‘
public class MyResources_ro extends ListResourceEundle 4
private Siaflc final Objectﬂ [1 contents : {
("hellc'w "salm'W
1"welcone", "Utillzatorul 40) 5*5 conecta: la 41)",
("byc", "La :evcdclc")
);
@Overzide
public Objectl] [J qetContentsU (
:eCJrn Contentﬁ;
)
)

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
Formattlng Numbers
- NumberFormat helps you to format and parse
numbers for any locale.
~ Your code can be completely independent of the
locale conventions for decimal points or thousands-
separators.
dmlhle runber : 12345.99;
NumbezFomat. getNumbexInstance (Locale . US) . format (numzcr) l?
_ 12, 34h t 99
NumberFornat . qetNLmloerlnstarce (Locale . GERMANY) . format (numcer) l;
, 12 . 345, 99
~ Formatting currency
double 5515:)‘ e 1 000 000d;
Locale zolocale JLocgteicrLangcaquaq(":OeRo"),-
Numberli'ormat.getCurzencyInstance (:oLccalel .iorrna: (salaryl J;
~ LUV/WOUF/JO LEI

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Formattlng Dates
- java.time.format.DateTimeFormatter
Localnateﬁme today : TmcaanceTimemoz-M);
DateTimeFonnattex fonnatter : DateTlmeFormailer
.ochcallzedDate(Formatﬁtyle.FULL)
.wlthLocale (roLoCale);
System.out.prlntln("Datc: " + todav. format (formattcr) b;
// Q Date: G? mal 2016
- Format Styles:
-) SHORT
-) MEDIUM
-) LONG
-) FULL

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
- The Collator class performs Iocale-sensmve
Strlng comparlson.
Simnq WOrdSH :

{"ramuré", "rémurlcé", "ré;uscé", "rcpcdc", "riu");
Arrays . sort (words) :
Systemouppnntln1Aneys,:z>$tnng<wmdsl)r
//[ramuré, repede, riu, rémurlcé, ré;uscé]

Locale roLocale Z Locale.torLanquageTag("ro"),'

collate: collatoz = Collatoz.get1nstance(zaLouale);
Arrays.sozt(nozds, (w1,w2) -> cellator.ccmpaze(n1, v12));
System.out.prlntln (Arrays . iOStIlnq (words) );

//[ramuré, rémur\cé, rétuscé, repede, riL]

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Internationalization Layer
~ Separate the internationalization code from the
rest of the application
a encapsulate your i18n code
- You may want to use the default Java I18N
features, or you may use another API.
- Every input from the user should be parsed
according to the rules defined by the I18N layer
~ Every output to the user should be formatted
according to the rules defined by the I18N layer

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Bibliography
- Java Tutorial
https://docs.oracle.com/javase/tutorial/i18n/TOC.htm|

***************Ending Page***************

