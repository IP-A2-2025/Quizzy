***************Beginning Page***************
***************page number:1**************
g BAZE DE DATE
Mihaela Elena Breabén
© FII 2020-2021

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cuprins
> Etapele procesérii interogérilor
> Expresii Tn algebra relagionalé
Operatori (revizitat)
Expresii
Echivalen'ga expresiilor
> Estimarea costului interogérii
> Algoritmi pentru evaluarea operatorilor/expresiilor Tn algebra relatjonalé
2

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Etapde procasaru mterogarllor
> Compilarea interogérii
Analiza sintacticé Compi area
Parsare intero irii
U Arbore de parsare
Analiza semanticé
Preprocesare si rescriere Tn AR Generare a Planu'u' log'c
_ - __ _ lptimizarea
Selec'gla reprezentarll algebrlce i erogérii
U Plan logic Generare a planului ﬁzic
Selec'gia algoritmilor §i a ordinii
U Plan fizic
metadat
-
3

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Anahza s1ntact10a
> Gramaticé independenté de context
<query> ::= <SFW> | (<query>)
<SFW> ::= SELECT <se|ect_|ist> FROM <table_|ist> WHERE <where_cond>
<se|ect_|ist> ::= <identifier>, <se|ect_|ist> | <identifier>
<tab|e_|ist> ::= <identifier>, <table_|ist> | <identifier >
> Rezultatul parsﬁrii: arbore de parsare
@gmg
[MM] EM? [Merl [=1 @ f3
=|= usertable 115911131116 ’greg’ passmrd *secret’
> Gramatica SQL in forma BNF: http://savage.net.au/SQL/index.htm|

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Anahza semantlca

Pr6pr006sar6

> Rescrierea apelurilor la view-uri

> Verificarea existentei relagiilor

> Verificarea existentei atributelor §i a ambiguitégii

> Verificarea tipurilor

Dacé arborele de parsare este valid el este transformat Tntr-o expresie cu operatori din algebra
rela'gionalé
5

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Analiza s6manticé
Rescriere in AR (1)
<Query>
< ||=W>
/%5 \
SELECT < select_|ist > FROM < lam WHERE < where_cond >
< idenliﬁer > < ideniifier > <TupI/e> ¥N suery>
tit‘le StarLIn < identiéer > (/<QLery\>)
ASJW
V
SELECT < select_|ist > FROM < table_|ist > mlhere_c0nd >
< identiéer > < identié> < identm <\Pattern>
nalme Movi/eStar birthDate ‘%19‘60’
6

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Analiza s6manticé
R6scri6r6 in AR (2)
Htitle Htitle
G where_c0nd> GstarNaTe=name
/ \ X
StarsIn H / \
<tup|e> IN name StarsIn Hname
<attribute> Gbirthdate LIKE ‘%1960’ Gbirthdate LIKE ‘0/01960'
starName MovieStar MovieStar
7

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Anahza semantlca
Optlmlzarea planulul log1c
SELECT Theater “Th t plan logic inijial
FROM Movie, Schedule Parsare/ | ea er
WHERE Conversie (5 . _ _ _ .
M ovi e.Titl e = S che dul e.Titl e I Mov1e.T1tle=Schedule.T1tle AND Mov1e.Act0r=“W1nger”
AND M.Actor=“Winger” /X
Movie Ehedule
Generatorul de planuri logice
all‘ plan logic aplicé rescrieri algebrice
7tTheater .
| all‘ plan logic
(j TE
| Movie.Actor=“Winger” | Theater
l><l . . _ Generatoru 6 _ _ ”
Mov1e.T1tlc— de lanuri | Mov1e.Actor=“W1nger
JOIN :Schedule.Title p .
logice 6
| Movie.TitleIScheduleTitle
Movie Schedule X
/ \
G Movie Schedule

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Analiza semanticé
Optimizarea planului logic
TE
“I Theater | Theater
l><l . _ . .
?M0vie.Aet0r:“Winger” ScheduleTltle M0v1e.T1tle
l><l Generatorul
MOVie.Title: de planuri 6
/ \—Schedule.Tit1e loice NJActor=“Winger”
M0V1e Schedule Schedule ovie
| l
C|jcond dacé 00nd [Xi
l><l face referire / (5
/\ dearlaS R |
R S S

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Analiza semanticé
Optimizarea planului fizic
7t
| Theater index pe Actor, tabelul
M .
Schedule.TitleIMovieTitle Sehedula 80m“ P6 me,
\ TTheater
Generatorul de [><] SORT-MERGE _ _
T Actor=“Winger” plan ﬁzic \Schedule.TitleIMOV1e.T1tle
Sche ule Movie
Generatorul de plan ﬁzic alege I C or= 1nger
primitivele de executie Schedule Movie
index pe Actor $i Pl _ 2
TIETheater Title, tabele nesortate an ﬁZlC
[><] LEFT INDEX
\Schedule.TitleIMovieTitle
GINDEX _
I Actor=“W1nger”
Schedule Movie
Planﬁzwl
y |o

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Op6rat0ri in a1g6bra r61a§ionalé
(revizitat)
> $ase operatori de bazé
Selec'gia:6
Proiec'gia: H
Reuniunea: U
Diferen'ga: —
Produsul cartezianzx
Redenumirea: p
b Operatorii iau ca intrare una sau doué relatji §i genereazéi o noua rela'gie
| |

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Oparatorul d6 selectia

b Reala'gla F "Bu
a a I 7
a ,6 5 7
p ﬂ 12 3
p ﬂ 23 10

> GA=BAD>5(F) "nu
a a I 7
5 ﬂ 23 10

I2

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Oparatorul d6 proi6cti6
a I0 I
a 20 I
ﬂ 30 I
ﬂ 40 2
b HA,c (7’)
a I a I
a I ,6 I
ﬂ I ﬂ 2
I 2
I3

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Oparatorul muniunﬁ:
> Relatiile rsi s
’ ’
a I a 2
a 2 ,6’ 3
,3 I S
I’
“Us; ll
a I
a 2
ﬂ I
5 3
I4

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Oparatorul difareznté
> Relatjile r§i s
a I a Z
a 2 ,6’ 3
,3 I S
r
a I
5 I
I5

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Produsul cartezzian
,6 I0 a
ﬂ 2 ﬂ 20 b
r 7/ I0 b
S
HXS "HE.
a I a IO a
a I ,B IO a
a I p 20 b
a I 7 I0 b
,6’ 2 a I0 a
p 2 p 10 a
p 2 p 20 b
b’ 2 I0 b
I6

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Opératorul d6 r6d6numir6
> px (E) - returneazé expresia E sub numele X
> Dacé o expresie E Tn algebra rela'gionalé are aritate n atunci
10x(A1,A2,...,An)(E)
returneazz'l rezultatul expresiei E sub numele X §i atributele redenumite Tn A,,A2, ....,An
I7

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Compunezma 0p6rat0r110r
> 6A=C(rxs)
Illﬂﬂ
I. rXS
a I a IO a
a I ,B IO a
a I ﬂ 20 b
a I 7/ IO b
,6 2 a IO a
,6 2 ,6 IO a
p 2 p 20 b
i 2 10 b
2. 6A=C(rxs)
lulu!
06 I 06 IO
ﬂ 2 ﬂ 10
ﬂ 2 ﬂ 20
I8

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Exprasii in algabra ralationalé

> Cea mai simpla expresie este o rela'gie in baza de date

> Fie E, §i E2 expresii Tn algebra relagionala; urmatoarele sunt expresii Tn algebra relationala:
E, u E2
El — Ez
El x E2
UP (El), P este un predicat peste atribute din El
HS(EI), S este o lista de atribute din El
px (El), x este noul nume pentru rezultatul lui El

I9

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
prlmarea 1nter0gar110r 1n algebra relaiuonala
branch account deposits-r customer
lmmvh Ff'h/ lnwnflpnamv accmermmire!‘ cm;{omensh'eef
balance cusmmer_uffy
Iorm borrower
crrshnm?i‘_nmm’
A lrrmuilr_mm.=v [OHJLIHHHIWI'
> lmpumuturile (loan) mal marl de IZOO amount
Gamount > |200 (loan)
> Numﬁrul Tmprumutului (loan_number) pentru Tmprumuturi mai mari de l200
1_[Ioan_number (Camount > |200 (IOGH))
> Numele cliengilor care au un Tmprumut, un depozit sau ambele la bancé
chstomer_name (borrower) U chstomer_name (dePOSItOI')
20

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Int6rogar1
> Numele tuturor cliengilor care au un Tmprumut Ia filiala Perryridge
chstomer_name (Gbranch_name = “Perryridge” (
Csborrower.loam_number = |0an.|oan_number (borrower X |oan)))
chstomer_name(6|oan.loan_number = borrower.|oan_number (
(Gbranch_name = “Perryridge” (loan)) x borrower))
branch account depositor customer
brand: Fm! l'n'anrh_mmrr animuaniJul-re!‘ UL“?FOUR.’I'_51‘!‘£’£??
balance cusmmer_uffy
form bormwcr
[."rrshmm'_1m1m’
Irrmn."lr_rmn.=v [01m_mzmlrrr
amount
2|

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Intorogarl
branch account depositor customer
broom’: F-"h/ Inwnfh_rmmv mimimszm:moor £115hmm‘_5h'v€f
balance cushrmenuffy
form borrower
[."rrsmowr_1mrm’
Irrmnilr_rmn.=r loommzmlwr
amount
> Numele tuturor clien'gilor care au un Tmprumut la filiala Perryridge dar nu au un depozit la nici o filialé
a béncii
chstomer_name (Gbranch_name = “Perryridge”
(Gborrower.loan_number = Ioan.Ioan_number(b°rrower X loan)» _
chstomer_name(depos'tor)
22

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Op6rat0ri adijcionali
lntersecgia pe mul'gimi
joinul natural
Agregarea
joinul extern
Teta-joinul
> To'gi cu excep'gia agregérii pot fi exprima'gi utilizﬁnd operatori de bazé
23

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Int6rs6c§ia p6 multimi
> Relatjile r §i s
a I
a 2
3
B l B
I‘ S
24

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
J oinul natural
> Relagiile r §i s "an
0L l 0L a | a (X
B 2 y a 3 a B
y 4 B b l a v
0L | y a 2 b 5
5 2 i b 3 b e
r s
"HRH
a l 0c a 0c
> PM S a l 0c a y
a | y a 0c
a l y a y
8 2 B b 6
> HrA, r.B, r.C, r.D, s.E (6&8 = s.B A r.D = s.D (r X 3))
25

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Agrégarﬁ:
EX6IIlplU.
> Cea mai mare balangé din tabela account
nccmmt
I'uwrchqmnw
I'Jrrimrcv
1_Ibalance(account) ' 1—[c1ccount.balance
(Saccountbalance < d.balance (account X pd (account)))
26

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Functii d6 agragara $1 oparatori
> Func'gii de agregare:
> avg
> min
> max
> sum
> count
> var
> Operatorul de agregare Tn algebra relagionala
G1 ,G2 G 191'?1(A1),F2(A2)F(An) (E)
> E — expresie Tn algebra relagionala
> 6,, G2 ..., Gn o lista de atribute de grupare (poate ﬁ goala)
> Fiecare F,- este o func'gie de agregare
> Fiecare Ai este un atribut

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Agrégare
Exemplu
0L 0L 7
0c B 7
B B 3
B B l0
> gsum(c) (1‘)
> Care opera'gii de agregare nu pot fi exprimate pe baza celorlal'gi operatori relatjonali?

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Join extern
relatia loan relatia borrower
Ioan_number branch_name amount
L- l 70 Downtown 3000 jones L- | 70
L-230 Redwood 4000 Smith L-230
L-260 Perryridge | 700 Hayes L- | 55
> loan >< borrower 00in natural)
Ioan_number branch_name amount customer_name
L- l 70 Downtown 3000 jones
L-230 Redwood 4000 Smith
b loan IN borrower Goin extern stanga)
Ioan_number branch_name amount customer_name
L- l 70 Downtown 3000 jones
L-230 Redwood 4000 Smith
>29 L-260 Perryridge I700 null

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Join extern
> join extern dreapta
loan >4: borrower
loan_number branch_name amount customer_name
L- l 70 Downtown 3000 jones
L-230 Redwood 4000 Smith
L- l 55 null null Hayes
> join extern plin
loan Mborrower
loan_number branch_name amount customer_name
L- | 70 Downtown 3000 jones
L-230 Redwood 4000 Smith
L-260 Perryridge | 700 null
L- l 55 null null Hayes

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
EX6mp16 1nt6r0gar1
> Numele cliengilor care au un Tmprumut §i un depozit la bancé
chstomer_name (borrower) (W chstomer_name (depositor)
> Numele cliengilor care au un Tmprumut Ia bancé §i suma Tmprumutaté
chstomer_name, Ioan_number, amount (borrower>4 loan)
> Clien'gii care au depozite Ia ambele filiale Downtown §i Uptown
chstomer_name (Gbrcmch_name =“Downtown” (depositor M GCCOUHt )) m
chstomer_name (Gbranch_name = “Uptown” (depositor MGCCOUHI»
3|

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Ech1va16n§a 6Xpres1110r
> Douii expresii Tn algebra relagionalé sunt echivalente dacé acestea genereazé acela§i
set de tuple pe orice instangé a bazei de date
ordinea tuplelor e irelevanté
> Obs: SQL lucreazé cu multiseturi
Tn versiunea multiset a algebrei rela'gionale echivalenga se veriﬁcé relativ Ia multiseturi de tuple
32

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
R6guli d6 6chiva16njté
l. selec'gia pe bazé de conjunc'gii e echivalenté cu o secven'gi de selecgii
501A02(E) I 501(502(E))
2. operatjile de selec'gie sunt comutative
601(662(E)) I 502(501(E))
3. ?ntr-un §ir de proiec'gii consecutive doar ultima efectuaté e necesaré
HLI (HLZ (- - (11,102)). . ->> = 111E)
4. selec'giile pot fi combinate cu produsul cartezian §i teta joinurile
a- 69(El X E2) = E|><1 e E2
b- 69|(El M 92 E2) = El M 9|A92 E2
33

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
R6guli d6 6chiva16njté
5. operagiile de teta-join §i de join natural sunt comutative
EIM9E2:E2M9EI
6. a) Opera'giile de join natural sunt asociative
(El M E2)M E3 = El M (E2 M E3)
b) Opera'giile de teta-join sunt asociative astfel:
(El M9| Ez) M 92A e3 E3 = El M 9|A93 (E2 M 02 E3)
unde 92 implici atribute doar din E2 §i E3
34

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Reguli de echivalenté
[>49 Rule 5 M 9
/ \ / \
E1 E2 E2 E1
[>4 Rule 6a >4
/ \ / \
[>4 E3 E1 |><]
/ \ / \
| 1 E2 E2 E3
(59 Rule 7a D4
|>l<1 If 9 only has / \EZ
attributes from E1 69
/ \ l
E1 E2 E1
35

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Raguli d6 echivalenté
7. Distribu'gia selecgiei asupra operatorului de teta-join
a) cﬁnd 60 implicﬁ atribute doar din una dintre expresiile (El) din join:
600(E| M e E2) = (690(E|)M e E2
b) cﬁnd 6 | implicﬁ numai atribute din E| §i 62 implicﬁ numai atribute din E2:
GBIAGZ (ElM e E2) = (69|(E|))M 9 (692 ('52))

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Reguli d6 66hiva16n§é
8. Distribugia proiec'giei asupra teta-joinului
dacé 6 implicé numai atribute din L| U L2:
HLIUL2(E1M 9E2) I (HL1 (E1)) Mad-[L2 (E2 ))
Fie joinul El We £2
Fie L| §i L2 mul'gimi de atribute din E| §i respectiv E2
Fie L3 atribute din E| care sunt implicate in condit,ia de join 6, dar nu sunt in L| U L2,
Fie L4 atribute dinE2 care sunt implicate in condigia de join 9, dar nu sunt in Ll U L2
HLIULZ (E1 M 6E2) I HLlULZ ((HLlUL3 (E1)) We (HLZUL4 (E2 D)
37

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
R6guli d6 6chiva16njté
9. Opera'giile de reuniune §i intersecgie pe mul'gimi sunt comutative
E| u E2 = E2 u E|
E| m E2 = E2 m E|
l0. Reuniunea §i intersecgia pe mulgimi sunt asociative
(E| u E2) u E3 = E| u (E2 u E3)
(E| m E2) m E3 = E| m (E2 m E3)
| |. Selec'gia se distribuie peste U, m §i —.
0-6 (El _ E2) = 0-9 (El) _ 0-9052)
similar pentru U §i m in locul —
Us (El _ E2) = (79(5) _ £2
similar pentru m in locul —, dar nu pentru U
l2. Proiec'gia se distribuie peste reuniune
1_I|_(E| U E2) = (HL(EI)) U (HL(E2))
38

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Optlmlzarl
Implng6r6a $616c§1110r
> Numele cliengilor care au un cont la o filialé din Brooklyn
chstomer_name(Gbranch_city=“Brooklyn”(branCh M (GCCOUHI M depos!tor)))
> Pe baza regulii 7a
chstomer_name ((Gbranch_city =“Brooklyn” (branch)) M (GCCOUHI M dEPOSItOI'»
> Realizarea selec'giei Tn primele etape reduce dimensiunea rela'giei care participé ?n join
branch account depositor customer
brrmrh f-"FI! Inurnfh_nnmr aummer:mixer cm;romeLsfrm‘
balance L"usmmez‘_cfr1/
Ioan borrower
[."rrstmmu;mum’
ln'mnflr_mm.=v [OHJLMHmIIrr
39 mnmmt

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Opt1m1zar1

Implngoroa S€1€Ct1110r
> Numele cliengilor cu un cont la o filialé din Brooklyn care are balan'ga peste

IOOO
chstomer_name(Gbranch_city = “Brooklyn” /\ balance > IOOO
(branch M (account M depositor)»
> Regula 6a (asociativitatea la join)
chstomer_name((Gbranch_city = “Brooklyn” /\ balance > IOOO
(branch M account)) M depositor)
> A doua formé furnizeazé oportunitatea de a efectua selecgia devreme
CSbranch_city = “Brooklyn” (branch) M 6 balance > IOOO (GCCOUITC)
4O

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Vizualizare sub formé d6 arbori
H customsLna me
H CHSFOm€F_H£Im€ ‘

L M
bmnrhcityzﬁrooklyn
A balance .1: 100E] / \ .

i [>4 depositor

/ \ G branch_ci _Broo1<l n 5 a mice
branch /l><1\ ‘ is“ F ‘I: 1 < 1000
account depositor branch account
(a) Initial expression tree (b) Tree after multiple transformations
4|

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Optlmlzarl
Implng6r6a pI'016CtlllOI‘
chstomer_name((6branch_city = “Brooklyn” (branCh) M account) M depositor)
> Eliminarea atributelor care nu sunt necesare din rezultatele intermediare
chstomer_name ((
l—I(1ccount_number (Gbranch_city=“Brooklyn” (branch) MGCCOUH'C)
M depositor)
> Realizarea devreme a proiec'giei reduce dimensiunea rela'giilor din join
42

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Optlmlzarl
Ordonarea Jomurllor
> Pentru orice relacii r|,r2,si r3,
(rl Memo = HM (QWa)
> Dace rzm r3 are dimensiuni mari §i r| Wrz e de dimensiuni mai mici,a|egem
(r| M r2) M r3
> Exemplu
chstomer_name ((Gbranch_city = “Brooklyn” (b I‘ anch))
M (account M depositor))
Numai un mic procent din clien'gi au conturi Tn filiale din Brooklyn deci e mai
bine 55 se execute mai Tntﬁi
CFbranch_city = “Brooklyn” (branch) M GCCOUI'II
> Pentru n rela'cii existé (2(n — |))!/(n — I)! ordonéri diferite pentru join.
n = 7 -> 665280, n = IO ->|76 miliarde!
> Pentru a reduce numérul de ordonéri supuse evaluérii se utilizeazé
programarea dinamicé
43

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Estlmama costurllor
> Ir: dimensiunea unui tuplu din r.
> nr: numz'lrul de tuple in rela'gia r.
> br: numirul de blocuri conginﬁnd tuple din r.
> fr:factorul de bloc al lui r — nr. de tuple din r ce intré Tntr-un bloc
> Dacé tuplele lui r sunt stocate Tmpreuné Tntr-un fi§ier, atunci:
n
l, 2H
r
fr
> V(A, r): numérul de valori distincte care apar in r pentru atributul A; e echivalent cu dimensiunea
proiec'giei HA(r) (pe seturi).
> Estimarea vizeazi numﬁrul de tuple rezultat iar optimizarea vizeazé reducerea numérului 5i dimensiunii
tuplelor cﬁt mai devreme
44

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Estlmama dlmensmnu S61€Ct161
> C$A=v(r)
> nr /V(A,r) :numérul de anegistréri ce satisfac selec'gia
> pentru atribut cheie: |
> 6A§V(r) (cazul 6A2 V(r) este simetric)
> dacéi sunt disponibile min(A,r) §i max (A,r)
0 daci v < min(A,r)
n V _ min(A, 7") altfel
r'maX(A,r)—min(A,r)
> dacé sunt disponibile histograme se poate rafina estimarea anterioari
> Tn lipsa oricérei informa'gii statistice dimensiunea se consideré a ﬁ nr/ 2.

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Estimama diménsiunii s616c§iilor compl6x6
> Selectivitatea unei condi'gii 9,- este probabilitatea ca un tuplu Tn rela'gia r $5 satisfacé 9,-
dacﬁ numér'ul de tuple ce satisfac 9i este si , selectivitatea e si /n,.
> Conjuncgia (Tn ipoteza independengei)
UGIAGZA.../\9n (r): n *W—*Sn

> Disjunc'gia r n:

O-9|\/ 92v...\/ 9n (r):

nr *£1_(1_Sl)*(1—SZ)*...*(1_S"))
n?’ n!’ n?’

> Nega'gia

o'ﬁ9(r): nr— size(6g(r))

46

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Estimama diménsiunii joinului
> pentru produsul cartezian r x s: nr * ns tuple, fiecare tuplu ocupé sr + ss octe'gi
> pentru r M s
R m S = @z n, >kns
R m S este o (super)cheie pentru R: <= nS
R m S = {A} nu e cheie pentru R sau S: sau
minimul este considerat de acurate'ge mai mare V(A,S) V(A,I')
dacé sunt disponibile histograme se calculeazé formulele anterioare pe fiecare celuli pentru cele douﬁ relat,ii
47

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Estimarea dim6nsiunii p6ntru alte opezratii
> Proiec'gia HA(r) : V(A,r)
> Agregarea: AgF(r) : V(A,r)
> Opera'gii pe mul'gimi
r U s : nr + n5.
r m s :min(nr, n5)
r-s :nr
> join extern
r :Msdimﬂ' Ms) + nr
r Ms = dim(r Ms) + nr+ ns
b 69' (r) m 692 (r) echivalent cu 69' c592 (r)
b Estimatorii furnizeazi Tn general margini superioare
48

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
Optimizarea planului fizic

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Estimarca costului 1a nivclul planului fizic
> Costul e in general misurat ca durata de timp necesarz'l pentru returnarea rﬁspunsului
> Accesul la disc este costul predominant

Numérul de céutéri * tS (timpul pentru o localizare a unui bloc pe disc)

Numérul de blocuri citite/scrise * tT (timpul de transfer)

costul CPU e ignorat pentru simplitate
> Costul pentru transferul a b blocuri plus S cﬁutz'lri pe disc:

b*q+$*g
50

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
Algoritmi pentru selectie
> Ciutare liniaré (full scan)
> cost: bf‘< tT + tS
> daCé selecgia e pe un atribut cheie, costul estimativ: br/Z * tT + tS
> poate fi aplicaté indiferent de conditja de selec'gie, ordonarea inregistririlor in fi§ier, existen'ga indec§i|or
b Céutarea binarﬁ
> aplicabilé pentru condi'gii de selec'gie de tip egalitate pe atributul dupi care e ordonat fi§ieru|
> costul gésirii primului tuplu ce satisface condi'gia: |—|og2(br)_| * (tT + t5); dacé existé mai multe tuple se adaugi
timpul de transfer al blocurilor
b Scanarea indexului — condi'gia de select,ie = cheia de céutare a indexului
> index primar pe cheie c21ndidat,egalitate:(hi + I) * (tT + t5)
> index primar pe non-cheie, egalitate: h,- * (tT + ts) + tS + tT * b
> index secundar, egalitate, n tuple returnate: (h,- + n) * (tT + ts)
> index primar, comparagie: hi * (tT + t5) + tS + tT * b

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Algorltml pentru selecjm complexe
b Conjuncgle: GQIA 92A. . . 9n(r)
> utilizarea unui index pentru 9, §i verificarea celorlalte condigii pe mésuré ce tuplele sunt aduse Tn
memorie
> utilizarea unui index multi-cheie
> intersecgia identificatorilor (pointerilor Ia anegistriri) returnagi de indec§ii asociagi condi'giilor
urmaté de citirea anegistririlor
> Dlsjunc'gle: GQIV 92 v. . . 9n (r)
> reuniuneaidentificatorilor

***************Ending Page***************


***************Beginning Page***************
***************page number:53**************
Algoritmi pentru join
> Algoritmi:
join cu bucle imbricate (nested-loop join)
join indexat cu bucle imbricate
join cu fuziune (merge join)
join hash
> Alegerea se face pe baza estimérii costului
> Sunt necesare estiméri realizate la nivelul planului logic
53

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Join cu b11016 imbricat6
> Pentru teta-join: rm 9 s
for each tuplu tr in r do begin
for each tuplu ts in s do begin
if (tpts) satisface 9
adaugé tr - ts la rezultat
end
end
> rela'gia interioaré — s
> rela'gia exterioaré — r
> Costul estimat: (nr * bs + br)*tT + (nr + br )*tS
54

***************Ending Page***************


***************Beginning Page***************
***************page number:55**************
J 01n 1ndexat cu bucle 1mbrlcate
b Ciutz'lrile in index pot inlocui scanarea fi§iere|or dacé:
e un echi-join sau join natural
existﬁ un index pe atributul de join al relatjei interioare
> pentru fiecare tuplu tr in relagia exterioarﬁ r se utilizeazé indexul pentru localizarea tuplelor
din s care satisfac condi'gia de join cu uplul tr.
> costul: br (tT+ t5) + nr * c
c este costul parcurgerii indexului pentru a returna tuple din s care se potrivesc pentru un tuplu din
r (echivalent cu selec'gia pe s cu condigia de join)
dacéi existﬁ indec§i pentru ambele relagii, relagia cu mai pugine tuple va fi preferatﬁ drept relagie
exterioari in join
b Exemplu
depositor M customer, depositor relatje exterioaré
customer are asociat un index primar de tip B+-arbore pe atributul de join customer-name, cu 20
intrﬁri pe nod
customer: l0,000 tup|e(f=25), depositor:5000 tuple (f=50)
costul: I00 + 5000 * 5 = 25, | 00 blocuri transferate §i cﬁutéri (corespondentul in joinul
neindeXat12,000, l 00 blocur'i transferate §i = 5 |00 céutéri)
55

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
Join cu fuziun6
> Algoritm
se sorteazi ambele rela'gii Tn func'gie de atributul de join
are Ioc fuziunea rela'giilor
> Poate fi utilizat doar pentru echi-joinuri
> Costul:
br + bs blocuri transferate
+ costul sortérii rela'giilor
b join cu fuziune hibr'id: o relagie este sortatﬁ iar a doua are un index secundar pe atributul de join de tip B+-arbore
rela'gia sortatﬁ fuzioneazﬁ cu intrérile de pe nivelul frunzé al arborelui
56

***************Ending Page***************


***************Beginning Page***************
***************page number:57**************
J 01n hash
> aplicabil pentru echi-join
> o functie hash h ce ia la intrare atributele de join partitioneazé tuplele ambelor relatii in blocuri ce
Tncap Tn memorie
rl, r2,...rn
s|,sz,...sn
> tuplele din ri sunt comparate doar cu tuplele din si
"I-l “W
l
L-JS I | 3
,. 4| I 4
partitions partitions
of!’ ofs
57

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
J 01nur1 compl6x6

b Condlgle de t|p conjuncge: r M 9M 9 2AM 9 n s
> bucle imbricate cu verificarea tuturor condi'giilor sau
> se calculeazé un join mai simplu r mis §i se realizeazé selec'gia pentru celelalte

condmﬁ

> Condl'gle de t|p d|5|unc§|e: r Mm V92 V___V ens
> bucle imbricate cu verificarea condigiilor sau
> calculul reuniunii joinurilor individuale (aplicabil numai versiunii set a reuniunii)
(r m) w (r W25) U ~~ (r Mans)

y 58

***************Ending Page***************


***************Beginning Page***************
***************page number:59**************
Eliminaréa duplicatelor

> Sortarea tuplelor sau hashing

> Fiindca e costisitoare, SGBD-urile nu elimina duplicatele decat la cerere
59

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
Evaluare expresulor
> Alternative:
Materializarea: (sub)expresii|e sunt materializate sub forma unor relatii stocate pe disc pentru a ﬁ
date ca intrare operatorilor de pe nivele superioare
Pipeliningztuple sunt date ca intrare operatiilor de pe nivele superioare imediat ce acestea sunt
returnate in timpul procesarii unui operator
El nu e Tntotdeauna posibil (sortare, join hash)
varianta la cerere: nivelul superior solicita noi tuple
varianta la producator: operatorul scrie Tn buffer tuple iar parintele scoate din buffer (Ia umplerea bufferului exista
timpi de a§teptare)
60

***************Ending Page***************


***************Beginning Page***************
***************page number:61**************
Planuri de executie
Oracle
> lnregistreaza planul:
EXPLAIN PLAN
[SET STATEMENT_|D = <id>]
[INTO <tab|e_name>]
FOR <sq|_statement>;
Pentru orice comanda DML
> Vizualizeaza planul:
SELECT * FROM tab|e(dbms_xp|an.disp|ay);
sau
select * from plan_tab|e [where statement_id = <id>];
http://www.orac|e.com/technetwork/database/bi-datawarehousing/twp-explain-the-explain-plan-OSZO| l-
393674.pdf
6|

***************Ending Page***************


***************Beginning Page***************
***************page number:62**************
Planuri de executie
Oracle-statistici
> Table statistics
> Number of rows
> Number of blocks
> Average row length
> Column statistics
> Number of distinct values (NDV) in column
> Number of nulls in column
> Data distribution (histogram)
> Index statistics
> Number of leaf blocks
> Levels
> Clustering factor
> System statistics
> l/O performance and utilization
> CPU performance and utilization

***************Ending Page***************


***************Beginning Page***************
***************page number:63**************
Planuri de executie
Colectarea statisticilor
> Proceduri Oracle din pachetul DBMS_STATS:
> GATHER_|NDEX_STATS
Index statistics
> GATHER_TABLE_STATS
Table, column, and index statistics
> GATHER_SCHEMA_STATS
Statistics for all objects in a schema
> GATHER_DATABASE_STATS
Statistics for all objects in a database
> GATHER_SYSTEM_STATS
CPU and l/O statistics for the system
> http://docs.oracle.com/cd/ B l 0500_0 l /server.920/a96533/stats.htm
63

***************Ending Page***************


***************Beginning Page***************
***************page number:64**************
Planurl de executle
Hlnts
> In cadrul unei comenzi DML este posibil a instrui optimizatorul Oracle asupra planului de executie:
SELECT /*+ USE_MERGE(emp|oyees departments) >kl * FROM employees, departments WHERE employees.department_id =
departments.department_id;
http://docs.oracle.com/cd/B l 9306_0 l /server. | O2/b l 4200/sql_elementsOO6.htm
64

***************Ending Page***************


***************Beginning Page***************
***************page number:65**************
Bibliografie

> Capitolele I3 §i l4 Tn Avi Silberschatz Henry F. Korth S. Sudarshan. “Database System Concepts”. McGraw-
Hill Science/Engineering/Math;4th edition
65

***************Ending Page***************

