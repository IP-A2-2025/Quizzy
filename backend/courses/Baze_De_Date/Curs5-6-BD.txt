***************Beginning Page***************
***************page number:1**************
Baze de date relationale
Normalizarea bazelor de date
Nicolae-Cosmin Vérlan
November l4, 2019
Baze de date relaﬁonale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
|\/|ode|u| relational - chei (recapitulare de Ia primul curs)

P Supercheie - un atribut sau 0 multime de atribute care
identiﬁca unic un tuplu Tntr-o relatie

P Cheie candidat - o supercheie cu proprietatea ca nici o
submultime proprie a sa nu este supercheie

P Cheie primara - o cheie candidat selectata pentru a identifica
Tn mod unic tuplele Tntr-o relatie

P Cheie alternativa - Chei candidat care nu au fost selectate
pentru a juca rolul de cheie primara

P Cheie straina - un atribut sau o submultime de atribute dintr-o
relatie care face referinté Ia o cheie candidat a altei relatii

Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
. Gasirea cheilor folusind dependetele functionale
Gﬁsirea cheilor candidat utilizénd dependentele functionale
lntuitiv: Cheia candidat, este de fapt formaté’ dintr-o combinatie
de atribute care pot determina unic linia. Dacé pot determina unic
linia (deci oricare dintre valorile celorlalte atribute), atunci putem
considera c5 avem o dependenta functionala de la X Q U c5tre
toate atributele din U atunci X este cheie Tn orice relatie r
construité peste R[U].
Formal: Fie R[U] o schemé de relatie 5i E o multime de
dependente functionale satisfﬁcute de R[U]. X Q U este cheie
candidat d.dac5 X+ I U 5i VX’ C X,X’+ 51$ U
Un atribut se nume$te prim dacé face parte dintr-o cheie candidat.
Un atribut este neprim dacﬁ nu este parte din nicio cheie candidat.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Gasirea cheilor folosind dependetele functionale
Forme Normale: lNF, ZNF, 3NF, BCNF, 4NF
. . . reminder (din cursul 2)
Fie X Q U si RA regulile de inferenté ale lui Armstrong. Not‘a’m cu
+ _
XRA _ {A|ZJ PM X _> A}
Regulile de inferenté ale lui Armstrong:
A1: iAl...An~>Ai’Z I 1,71
A2 A1‘..Am->Bj 7.7 — 177”
A17---Am—>Bj1]:ﬁ
Al~-‘A111_>B17~--Br
A3 A1,...Am—)B1,...BT, 31,...BT—>01,MCP
' A1...Am—>C1,...Cp
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Gasirea cheilor folosind dependetele functionale
Forme Normale: lNF, ZNF, 3NF, BCNF, 4NF
Revenim - Exemplul 1:
55 considerém U : {A,B,C} 5i E : {A —> B,B —> C}. Vom
construi multimea X7§A pentru fiecare dintre atribute:
A?“ I {A,B,C} (A din A1, B din A _> B,
C din A —> B, B —> C 5i folosind A3)
B73‘ I {5,0} (B din A1, C din B -> C)
C73‘ I {C} (C din A1)
Se observi c5 A este cheie candidat pentru c5 de el depind
(functional) celelalte atribute.
Atribute prime: {A}
Atribute neprime: {B,C}
Baze de date relaﬁonale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Gasirea cheilor folusind dependetele functionale
Forme Normale: lNF, ZNF, 3NF, BCNF, 4NF
$5 considerém U I {A,B,C} si E I {A —> B,B —> C}. Vorn
construi multimea X734 pentru fiecare dintre atribute:
Putem organiza atributele tinénd cont de Iocul unde apar ele Tn
cadrul dependentelor din E:
P Sténga: Apar numai Tn partea stangé a dependentelor din Z.
P Mijloc: Apar 5i Tn sténga 5i Tn dreapta dependentelor din E.
P Dreapta: Apar numai Tn partea dreapté Tn dependetele din E.
Sténga Mijloc Dreapta
A B C
Regulé: Tntotdeauna atributele din Sténga sunt atribute prime, cele
din Dreapta sunt neprime. Cele din Mijloc pot ﬁ Tn oricare dintre
categorii.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Gasirea cheilor folosind dependetele funcﬁonale
Forme Normale: lNF, ZNF, 3NF, BCNF, 4NF
Exemplul 2:
Fie U z {A, B, c, D, E,F} 5i
E I {A —> BD,B —> C7 DE —> F}. Care sunt cheile candidat ?
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
. Gasirea cheilor folosind dependetele functionale
Exemplul 2:
Fie U : {A,B,C,D,E,F} 5i
E I {A —> BD,B —> C7 DE —> F}. Care sunt cheile candidat ?
Sténga Mijloc Dreapta
A, E B, D C, F
A734 : {A,B,C,D} - nu e cheie (nu contine F), dar cu siguranté
apare Tn orice cheie.
De fapt, am stabilit c5 ﬁecare cheie candidat va conﬁne toate
atributele din “Sténga” - Tn cazul nostru pe A 5i pe E:
AEng I {A,B,C,D,E,F}
AE I cheie multivaluaté (este compusé din mai multe atribute).
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Gasirea cheilor folosind dependetele funcﬁonale
Forme Normale: lNF, 2NF, 3NF, BCNF, 4NF
Exemplul 3:
Fie U : {AB} 5i E : {A —> B,B —> A}. Care sunt cheile
ca ndidat ?
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Gasirea cheilor folosind dependetele functionale
Forme Normale: lNF, 2NF, 3NF, BCNF, 4NF
Exemplul 3:
Fie U : {A,B} 5i E : {A —> B,B —> A}. Care sunt cheile
candidat ?
Sténga Mijloc Dreapta
A, B
Jr _
ARA _ {AB}
+ _
BRA _ {AB}
Ambele sunt chei candidat.
Atribute prime: {AB}
Atribute neprime: Q)
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
. Gasirea cheilor folosind dependetele functionale
Dependente pline
Fie R[U] o schema de relatie peste o multime de atribute U $i Z o
multime de dependente functionale ce au loc Tn R[U]. O
dependenta X —> A E 2+ se nume$te pliné dacé 59X’ C X astfel
Tncﬁt X’ —> A G 2+.
Exemplu:
R[A7 B7 C, D]
E: {AB~>C,B~>D,BC%A}
Toate dependentele din E sunt pline (e.g. nu avem Tn 2+ nici una
dintre dependenjcele: A —> C, B —> C, B —> A, C —> A).
AB —> D nu este pliné pentru c5 B C AB 5i avem B —> D G 2+
Baze de date relaﬁonale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
. Gasirea cheilor folusind dependetele functionale
Atribut tranzitiv dependent

Fie R[U] o schemé de relatie peste o multime de atribute U $i Z o
multime de dependente functionale ce au loc Tn R[U]. Un atribut
A G U se nume$te tranzitiv dependent de X (X C U, A gZ X)
dacé EIY C U astfel Tncét:

P A G U — Y

P X —> Y G 2+

> Y —> A G 2+

P Y —> X Q 2+
Exemplu:
R[A, B7 C, D, E]
E : {AB—> C,AB—> D,CD —>E}
E este tranzitiv dependent de AB (X : AB, Y : CD).

Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Gasirea cheilor folosind dependetele functionale
Forme Normale: lNF, 2NF, 3NF, BCNF, 4NF
Dependente trlwale
O dependenté functionalﬁ X —> Y este trivialé dacé 5i numai dacé
Y Q X
O dependenté multivaluaté X —» Y este trivialé dacé Y Q X sau
dacéZ:@(XUY:U)
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Normalizarea schemelor bazelor de date
Normalizarea este necesaré din douﬁ motive:

P Pentru eliminarea redundantelor.

P Pentru a p§stra datele Tntr-o manieré consistenté.
Normalizarea trebuie fécuté Tncﬁ din faza de proiectare a bazei de
date 5i din acest motiv este ﬁresc 55 vorbim despre
NORIVIALIZAREA SCHEIVIEI bazei de date 5i nu despre
normalizarea anumitor relatii.

Existé mai multe forme normale (clasice), fiecare aducénd ceva Tn
plus faté de forma precedenté: 1NF, 2NF, 3NF, BCNF, 4NF.
$5 vedem Tn ce constau. ..

Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
N I' Gasirea cheilor folosind dependetele functionale
“ma ‘we Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Fie U o multime de atribute §i R[U] o schema de relatie.
Spunem c5 schema de relatie R[U] este in Forma Normala 1 (1NF)
daca $i numai daca domeniile atributelor sunt indivizibile 5i ﬁecare
valoare a fiecarui atribut este atomica’.
Pentru a avea o relatie Tn 1NF, trebuie efectuate urmatoarele
operatii:

P Eliminarea grupurilor repetitive din fiecare relatie.

P Identiﬁcarea tuplelor ce ar putea avea duplicate Tn coloana
printr-o cheie.

P Crearea unei noi scheme de relatie avénd ca atribute:
identiﬁcatorul de la punctul precedent 5i valoarea repetata ca
atribut atomic.

Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Exemplu:
Avem schema: Studenti[nr,matrico|, nume, prenume, an] Tn care
studentii ar putea avea céte doué prenume:
nrimatricol nume prenume an
1 lonescu Maria loana 1
1" : .
2 Popescu VaSIIe 1
3 Vasilescu Vali Cristi 2
Pasul 1: Eliminém grupul repetitiv:
nr1matrico| nume an
1 lonescu 1
1" :
2 Popescu 1
3 Vasilescu 2
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Pasul 2: ldentificam cheia:
nr1matrico| nume an
1 lonescu 1
r :
2 Popescu 1
3 Vasilescu 2
Pasul 3: Creare relatie Tn care fiecare valoare apare pe un rénd nou
5i e legati de relajcia principalﬁ prin intermediul cheii:
nr1matrico| prenume
1 IVIaria
, 1 loana
r : .
2 Va5||e
3 Vali
3 Cristi
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF

De$i ar putea parea ca am utilizat efectiv relajcia care este
construita peste R[U], Tn fapt nu am facut decat 55 modiﬁcam
schema de realatie R[U] 5i s5 construim 0 noua schema de relatie
Tn schema bazei noastre de date denumita R’[U].
Pasul 1: de fapt a eliminat atributul “prenume” din multimea U.
Pasul 2: de fapt a identiﬁcat o cheie candidat (ce se poate face
direct din schema - vezi cum am gasit o cheie candidat din
dependenjcele functionale).
Pasul 3: de fapt a construit o noua' schema de relatie R’[U]
S-ar putea ca Tn unele locuri $5 Tntalniti ideea ca relajcia este Tntr-o
anumita forma normala. Aceasta idee este incorecta datorita
faptului ca normalizarea se realizeaza Tnainte de a crea baza de
date, Tn stadiul de proiectare a acesteia !

Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
. Gasirea cheilor folosind dependetele funcgionale
2NF (1971)
O schema de relajcie R[U] care este Tn 1NF, Tmpreuné cu 0 multime
de dependente functionale Z este Tn a doua formé normalﬁ (2NF)
dacé orice atribut neprim din R[U] este dependent plin de orice
cheie a lui R[U].
55 reluém exemplul de la dependente pline:
R[A7 B7 C, D]
E: {AB—>C,B—>D,BC—>A}
1. Gasiti cheile
2. Gasiti atributele neprime
3. Atributele neprime sunt dependente plin de cheile gésite ?
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
. Gasirea cheilor folosind dependetele funcgionale
2NF
Sa reluam exemplul de la dependente pline:
R[A, B7 C, D]
E:{AB—>C,B—>D,BC%A}
Posibilele chei: AB, BC
Atribute prime: A,B,C
Atribute neprime: D
B —> D € 2+. D nu este dependent plin de AB pentru c5, degi
avem AB —> D G 2+, avem 5i B —> D G 2+ rezulté c5 R[U]
Tmpreuné cu E nu este Tn 2NF.
Observatie: dacé nu avem chei multivaluate, cu siguranté R[U]
este Tn 2NF (pentru c5 avem numai dependente pline de la chei -
nu putem gﬁsi submultimi de atribute atunci cénd cheia este
formaté dintr-un singur atribut).
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Avénd o schemﬁ de relatie R[U] care nu este Tn 2NF, putem 55 o
ducem Tn 2NF urménd urmﬁtorii pagi:
Pasul 1: ldentiﬁcém cheile candidat.
Pasul 2: Gésim atributele neprime.
Pasul 3: Pentru ﬁecare din atributele neprime A identiﬁcém care
sunt atributele dintr-o cheie de care depinde A.
Pasul 4: Creém o noué relatie R’ peste acele atribute identificate
la pasul anterior Tmpreuné cu atributul neprim pentru care s-a gésit
dependenta.
Urmati cei patru pasi pentru exemplul anterior care nu era Tn 2NF.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Gasirea cheilor folosind dependetele functionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Exemplu: Daca avem schema de relatie
OS[nume, versiune, an, companie]
nume versiune an companie
Windows XP 2001 Microsoft
MacOS Sierra 2017 Apple
Ubuntu Bionic Beaver 2018 Ubuntu
Windows 7 2009 Microsoft
MacOS Mojave 2018 Apple
De obicei, cand ne exprimam, spunem c5 Windows XP este facut
de Microsoft. Avem dependenta: nume,versiune —> companie. In
acelasi timp, stim c5 Windows este facut numai de Microsoft si
MacOS numai de Apple. Deci avem si nume —> companie. Fiecare
versiune este facuta intr-un anumit an. Avem: versiune —> an.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
dependenjce:
P nume,versiune —> companie
P nume —> companie
P versiune —> an
Cheie: (nume, versiune) (apar Tn sténga dependentelor)
Atribute neprime: companie
companie nu este dependent plin pentru c5, de$i avem
nume,versiune —> companie, totodaté avem $i nume —> companie.
Vom elimina din schema OS atributul companie 5i vom adé'uga o
schemé de relatie R’[nume, companie].
Vorn avea a5adar. ..
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
nume versiune an
Windows XP 2001
IVIacOS Sierra 2017
Ubuntu Bionic Beaver 2018
Windows 7 2009
MacOS Mojave 2018
si
nume companie
Windows Microsoft
IVIacOS Apple
Ubuntu Ubuntu
Este in 2NF ? Mai avem de verificat dacé' an este dependent plin
sau nu. . .sé’ vedem cum faceti asta voi :D
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
. Gasirea cheilor folosind dependetele funcgionale
3NF (1971)
Schema de relajcie R[U] Tmpreuné cu muljcimea de dependente
functionale Z este Tn forma a treia normalﬁ (3NF) dacé este Tn
2NF 5i orice atribut neprim din R NU este tranzitiv dependent de
nici o cheie a lui R.
(Ad/c5 e Tn 2NF 5i orice atribut neprim depinde de chei $i nu de un
alt atribut neprim sau grupare de atribute neprime)
Exemplu:
Considerém schema de relajcie R[A,B,C] 5i
E:{AB—>C,C—>A}
Chei: AB, BC
Atribute neprime: (I) - deci este Tn 2NF 5i Tn 3NF.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Gasirea cheilor folosind dependetele functionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
3NF - glumita de pe Wikipedia. . ..
An approximation of Codd's definition of 3NF, paralleling the
traditional pledge to give true evidence in a court of law, was given
by Bill Kent: [Every] non-key [attribute] must provide a fact about
the key, the Who/e key, and nothing but the key. 1
A common variation supplements this deﬁnition with the oath: so
help me Codd 2.
lKent, William - A Simple Guide to Five Normal Forms in Relational
Database Theory, Communications of the ACM 26 (2), Feb. 1983, pp. 120 —
125.
2Diehr, George. Database Management (Scott, Foresman, 1989), p. 331.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
N I' Gasirea cheilor folosind dependetele funcgionale
“ma ‘we Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Exemplu de normalizare 3NF
Fie schema: Concursurﬂmaterie, an, castigator, IQ].
Avem dependentele functionale:
E I {(matem'e, an) % castigator, castigator e IQ}
Cheie primara: (materie,an)
Atribute neprime: castigator, IQ (IQ este tranzitiv dependent)
Se observé' c5 (materie, an) —> IQ G 2+, si Tn acelasi timp
materie —> IQ Q 2+ respectiv an —> IQ g 2+. Deci schema de
relatie se aflé’ Tn 2NF (atributele neprime ﬁind dependente plin de
chei).
Vom normaliza schema pentru
Concursum'hnaterie, an, castigator, IQ] prin construirea a doué
scheme diferite: Concursum'hnaterie,an,castigat0r] si
Intelz'gentakastigator, IQ].
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Gasirea cheilor folosind dependetele funcgionale
“ma ‘we Forme Normale: 1NF, 2NF, 3NF, BCNF, 4NF
BCNF (Boyce-Codd Normal Form) E 3.5NF (1975)
O schemﬁ de relajcie R[U] Tmpreuna cu o multime de dependente Z
este Tn BCNF dacé este Tn 1NF 5i pentru orice dependenta
functionalé netrivialé X —> A G 2+, X este cheie Tn R[U].
Observatie: O schemé’ de relajcie ce este Tn BCNF este Tn 3NF.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: 1NF, ZNF, 3NF, BCNF, 4NF
Obs: O schemé ce este Tn BCNF este 5i Tn 3NF.
Consideram (R7 E) Tn BCNF - Tn 1NF este sigur din deﬁnitie.
a) PP (RA) c5 nu e Tn 2NF, adic‘a’ exist‘a’ un atribut neprim A 5i 0
cheie K 5i A nu este dep. plin de K. Adicﬁ existﬁ X C K a.i.
X —> A G 2+. Deoarece nu considerém dep. triviale avem c5
A g2 K. Atunci X este cheie (pentru c5 (RE) este Tn BCNF).
Ceea ce Tnseamné c5 K nu este cheie (pentru c5 trebuia $5 fie
minimalé').
b) Deci (R, E) ce este Tn BCNF trebuie 55 ﬁe Tn 2NF. PP (RA) c5
nu ar ﬁ Tn 3NF: adicé existé un atribut A tranzitiv dependent de o
cheie X. Adica existé Y a.T. A ¢ X, A g Y 5i avem c5:
X —> Y G 2+,Y —> A E 2+ 5i Y —>X 952+. Y nu contine nicio
cheie pentru c5 altfel am avea Y —> V G 2+ deci 5i Y —> X € 2+.
Deoarece Y nu este cheie 5i totusi am Y —> A E 2+ avem c5
(RE) NU este Tn BCNF - fals. Deci este 5i 3NF
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
. Gasirea cheilor folosind dependetele functionale
Descompunerea de tip join Fa'rﬁ pierdere
Considerém o schemé’ de relatie R[A1,A2, . “Ami. Spunem despre
Rt[AZ-5,Ai5, . . . Aiiwi} c5 este 0 descompunere de tip join a lui
t kp
U U Ai; I {A1...An}
p21 1:1
p este o descompunere de tip join fﬁré pierdere cu privire Ia o
multime de dependente functionale Z dacé V7“ peste R ce satisface
multimea de dependente functionale Z, avem c5
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
. Gasirea cheilor folosind dependetele funcgionale
Descompunerea de tip join fé'rﬁ pierdere
Teoremﬁ: Dacé p I {R1, R2} este o descompunere a lui R 5i E o
multime de dependente functionale, atunci p este o decompunere
de tip join féré pierdere cu privire Ia E dac§ $i numai dacé
R10R2%R1*R2€E+ SGU leRgﬁ>RgiR1 €E+
Exemplu: Considerﬁm R[A,B,C] 5i E I {A —> B}.
p1 : {R1[A, B], R2[A, C]} este féré pierdere deoarece:
ABﬁAC:A,ABiAC:B§iA%B€E+
p2 I {R1[A7 B], R2[B, C]} este cu pierdere deoarece:
ABNBC:B,AB—BC:A$iB—>A¢Z+
ABUBC:B,BC—AB:C§iB—>C¢E+
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Descompunerea de tip join Fa'rﬁ pierdere

Putem calcula 21> pentru Ri[UZ-] $i continua procesul de
descompunere péné cénd ajungem la scheme de relatie ce sunt Tn
BCNF. 21-:{X —> Y\X,Y E U1} - adicé, pentru Ri[U,-] ce este
un element al descompunerii p luém acele dependenjce din E+care
sunt peste atributele ce sunt Tn U1.
Pentru exemplul precedent:
Considerﬁm R[A, B, C] 5i E : {A a B}.
p1 I {R1[A, B], R2[A, 0]} este féré pierdere deoarece:
ABNAC:A,AB—AC:BsiA—>B€E+
avemc521:{A—>B}$i22:(Z)

Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
. Gasirea cheilor folosind dependetele funcgionale
Alg. pt. descompunerea Tn join fara pierdere de tip BCNF
lntrare: (RE)
lesire: p I {(191,211) ...(Rt, 2%)} : descompunere fara pierdere
a lui R cu privire la E. Unde (HZ-.21) Tn BCNF,Vi€{1..t}
Pas 1: p I R : R1; se caculeaza 2+ si cheile din R (necesare
verificarii formei BCNF).
Pas 2: Cat timp exista Tn p un cuplu (HZ-,2) ce nu eTn BCNF
(daca nu e in BCNF atunci exista X —> A si X nu e cheie):
Pas 2.1: Alege X —> A din Eli a.i. A g X si X nu conﬁne cheie
Pas 2.2: S1 : X U {A}; SQ I Ri — A;
Pas 2.3: p:p—R¢; pIpUS1USg;
Pas 2.4: Se caculeaza 23551’ E; si cheile pentru S1 si SQ.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Exemplu
Schema de relatie:
Absolvent(CNP, aNume, adresa,|Cod, INume, lOras, medie,
prioritate)
E :{ CNP § aNume,adresa,medie medie % prioritate
ICod —> lNume, IOras}
Se descompune Tn:
...ca|cu|ati
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Gasirea cheilor folosind dependetele funcgionale
“ma ‘we Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Exemplu
Schema de relatie:
Absolvent(CNP, aNume, adresa,|Cod, INume, lOras, medie,
prioritate)
E :{ CNP § aNume,adresa,medie medie % prioritate
ICod —> lNume, IOras}
Se descompune Tn:
p : { R1[|Cod, INume, lOras], R2[medie, prioritate],
R3[CNP, aNume, adresa, medie], R4[CNP, |C0|]}
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Dependente multivaluate (quick reminder)
Definition
Relatia r peste U satisface dependenpa multiva/uataT X —» Y dacé
pentru oricare doué tuple t1,t2 G r satisfﬁcénd t1[X] : t2[X],
existi tuplele t3 5i t4 din r, astfel incét:
> t4iX] I t2iXi1t4iYiIt2iYi7t4iZi I tliZi
unde Z I U — XY (Z mai este denumitﬁ 5i rest).
Relatia r peste U satisface dependenia multiva/uat5 X —» Y, dacé
pentru orice t17t2 G T cu t1[X] I t2[X] avem c5
MY(t1iXZi) I MY(t2iXZi)
unde My(t[XZ]) I {t’[Y]it’ G r,t’[XZ] I tiXZi} .
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Dependente m u Itivaluate (exercitiu)
Arétati c5 AC —» BD:
A B C D E
8 1 2 0 4
8 9 2 2 9
r : 9 3 2 4 9
8 1 2 O 9
8 9 2 2 4
9 3 2 4 4
DA (este IVIVD)
Baze de date relaﬁonale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: 1NF, 2NF, 3NF, BCNF, 4NF
4NF (Ronald Fagln) (1977)
O schemé’ de relajcie R Tmpreuna cu 0 multime de dependente
multivaluate A (delta) este Tn 4NF dacé' este Tn 1NF 5i pentru
orice dependenta multivaluaté netrivialé X —» A G AW X este
cheie pentru R.
Observatie: O schemé de relatie ce este Tn 4NF este Tn BCNF.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Descompunere in 4NF
lntrare: (R,E,A)
lesire: p I {R1, . . . ,Rt} : descompunere fara pierdere a lui R cu
privire Ia E. Unde (R¢,E¢,Ai) Tn 4NF,Vi€{1..t}
Pas 1: p I R : R1; se caculeaza 2+.AJF si cheile din R (necesare
verificarii formei 4NF).
Pas 2: Cat timp exista Tn p un triplet (R¢.Zi,AZ-) ce nu e Tn 4NF
(daca nu e in 4NF atunci exista X —» A si X nu e cheie):
Pas 2.1: Alege X —» A din Eli a.i. A g X si X nu e supercheie
Pas 2.2: S1 : X U {A}; 5'2 I Ri — A;
Pas 2.3: p:p—R¢; pIpUS1USg;
Pas 2.4: Caculam E§1,A§1,E§2, A; si cheile pentru 5'1 si S2.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Gasirea cheilor folosind dependetele funcgionale
Forme Normale: INF, 2NF, 3NF, BCNF, 4NF
Exemplu de descompunere in 4NF
Consideram schema: Student[cnp, nume, facultate, pasiune]
Studentul poate ﬁ la doua facultati si sa aiba mai multe pasinui:
cnp —> nume;
cnp,nume %> facultate;
Se descompune in:
p : {Sl[cnp, nume], S2[cnp, facultate], S3[cnp, pasiune] }.
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
. Gasirea cheilor folosind dependetele functionale
Bibliograﬁe
P Further Normalization of the Data Base Relational l\/|odel. -
Frank Edgar Codd; IBM Research Report RJ909 (August,
1971)
P Baze de date relationale. Dependente - Victor Felea; Univ. AI.
l. Cuza, 1996
Baze de date relationale Normalizarea bazelor de date

***************Ending Page***************





