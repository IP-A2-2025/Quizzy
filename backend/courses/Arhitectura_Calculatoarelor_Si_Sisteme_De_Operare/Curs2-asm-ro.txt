***************Beginning Page***************
***************page number:1**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Adunar6a/scéd6rea
' sintaxa
add cpl , opZ //0p1 +2 0p2
sub opl, opZ //0p1 -: 0p2
' sunt posibilﬁ acﬁlea§i combinagii dﬁ

opﬁranzi ca in cazul atribuirii

' indicatorii de condigii prim§sc valori
conform rezultatului operagiei

—27

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Arhitectura calculatoarelor §i sisteme de operare - ASM
Exezmplez
add €ax,ebx
add dl,3
add si,[ecx]
add [eax+edi],ebp
add byte ptr [esi+10],14
add word ptr [esi+lO],l4
add dword ptr [esi+lO],l4

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Operagii cu §i firé semn (1)
unsigned int a;
int b;
_asm add a,20;
_asm add b,20;
' rezultatul poate ﬁ incor6ct(dep€1§ire)
- tmbui€ testat indicatorul Carry (pentru a),
respectiv Overﬂow (pentru b)

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Operagii cu §i firé semn (2)
- problemé
— oparanzii a 5i b sunt adrese de memorie
— procasorul nu gtie cam este numéir cu semn §i
care féré semn
— deci cam indicator trebuia setat: C sau O?
' réspuns
— procesorul semazé t0§i indicatorii
— programatorul trﬁbuie 551-1 testeze p€ cel potrivit
30

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Incrﬁmﬁntare:/d6crem6ntar6
' sintaxa
inc o p // 0p++
de c o p // 0p--
' opﬁrandul poate ﬁ
— registru (0ric6 dimensiune)
— locagie de mﬁmorie - dim6nsiunea tr6bui6
precizaté €Xp1iCit
—31

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Adunare/scédezre: cu transport
' sintaxa
adc cpl , opZ // 0p120p1+0p2+Carry
sbb cpl , opZ //0p1:0p1-0p2-Carry
' la adunam/scédem participé §i valoaraa
anterioaré a indicatorului Carry
' r01 - operagii cu numere care depé§esc
dimﬁnsiunea unﬁi variabilﬁ

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Arhitectura calculatoarelor §i sisteme de operare - ASM
Inmuliima
' sintaxa
mul o p // numare ﬁréi sﬁmn
imul op // numﬁre cu semn
' este indicat explicit un singur opﬁrand
— poate ﬁ registru sau locagie de memorie
' a1 doilea este implicit §i depinda de
dimansiunea primului
—33

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
()p eran21 ( 1 )
' opﬁrandul €XpliCit nu poate: ﬁ 0 constanté
' dacé 0p6randul explicit est6 0 loca§i6 de
memoriﬁ, trebuiﬁ precizaté §i dimﬁnsiunea
sa
' d6stina§ia mzultatului estﬁ tot implicité gi
necesité 0 dimensiune dublé fagé d6
operanzi
—34

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Arhitectura calculatoarelor §i sisteme de operare - ASM
dimensiune operand explicit operand implicit dastinatie rezultat
35

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Exezmple:
mul ebx // eaX-ebx—>(edx,eax)
mul cx // aX-cx—>(dx, ax)
mul al // se ridicéi al 1a pétrat
mul dword ptr [esi]
// eaX-[esi]—>(edx,eax)
// operanzi pe 4 octegi
imul cx // operanzi cu 56mm
—36

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Impértireza
' sintaxa
div op // numare ﬁréi sﬁmn
idiv op // numﬁre cu semn
' este indicat €Xp1iCitdOElfiII1p2vlfltitOﬂll
— poate ﬁ registru sau locagie de memorie
' deimpérgitul este implicit §i depinde d6
dimansiunea impérgitorului
—37

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
()p eran21 ( 1 )

- impérgitorul nu poate ﬁ 0 constanté
' dacé impérgitorul 65t6 0 loca§i6 dﬁ mﬁmoriq

tr6buie precizaté §i dimﬁnsiunea sa
' doué reazultatﬁ: cétul §i restul
' destinagiile acestora sunt tot implicite

38

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Arhitectura calculatoarelor §i sisteme de operare - ASM
dimensiune impérﬁtor deimpéryit
39

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Imparpre: 1a O

' dacé impérgitorul am valoama O, s6 produce

0 6r0ar6 la ﬁxecugiﬁ

— la fel ca in orica limbaj
' pr0b16ma poatﬁ apérw §i in alte situalzii

— obginem acela§i efect, de§iimp€1r§it0ru1 este

nenul

—40

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Arhitectura calculatoarelor §i sisteme de operare - ASM
EX€IIlplll

_asm {

mov eaX,1

mov edx,l

mov ebx,l

div ebX

}
' secvenga de mai sus produce eroare
——————————————————————————————i€

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
De C6?
- impélrgitorul 6st6 ebx - 4 octegi
' daci deimpéirgitul este (€dx,eax)
- iar cﬁtul trebuie depus in eax
' dar valoama cétului €st6 232+1 - prea mare
pentru a incépea in eax
— similar cu impérgirea la O
— produce ace6a§i eroare
—42

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Cand apam 6r0ar6a?

' dacé §i numai dacé jumétawa mai
semniﬁcativé a deimpéryitului ﬁste mai mam
sau 6ga151 cu impértitorul

' ex6mplu1 anterior

div €bX
— jumétatea mai semniﬁcativé a deimpérgitului:

edx (I 1 2 ebx)
—43

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM

Apare problezrna in limbajul C‘?
' nu
' s6 impart intotdeauna opﬁranzi d6 acﬁlagi tip
' impérgitorul s6 a16g6 de dimensiunﬁ 6ga151

cu a tipului de data folosit
' deimpérgitul are implicit dimensiune dublé

— dar jumétataa sa mai semniﬁcativé va primi

valoarea O

—44

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Instructiuni pe bigi

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Instructiuni b0016en6
- impl6m6nteazé funcgiila b0016en6
elﬁmentam
— unaré: NOT
— binara: AND, OR, XOR
' instrucgiunile au ac€l€a§i num6 ca §i
funcgiile: pe care: 16 implementeazé
' execuyie: se aplicé funcgia, in paralel, pe togi
bigii operanzilor
46

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Exezmple:
not €ax
and bx , 1 6
or byte ptr [edx],1OO
xor [esi],ecx
te st al , ah // va ﬁ discutaté ulterior
' §i aici, primul/singurul 0p6rand ester §i
destinagia rézultatului
—47

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Utllltat0
' 0Xist2'1 0p0rat0ri similari §i in limbajul C
- rar utilizagi
- mai ales 210010 und0 0st0 n0v0i0 d0 tratar0a
individualé a unor bigi
— 1u0ru 0u mé§ti
~ in practicé, doar funclzia AND s0 preteazé 1a
a§a 00va
—48

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Lucrul cu ma$t1 ( 1 )
- problamé: trﬁbuie s51 tastém bitul de pe
pozitia 3 din registrul ax
— pentru testare putem folosi indicatorul Zero a1
procasorului
— dar acesta n6 poate spune doar dacé intregul
opnrand (ax) are valoarea O sau nu
' solugie: togi cailalgi bigi din ax (cu 6xcep11ia
pozigiei 3) primesc valoarea 0
—49

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Lucrul cu ma$t1 (2)
' astfel, registrul ax am valoarea O dacéi §i
numai dacé bitul d6 pe poziyia 3 ﬁste O
' d6ci indicatorul Zero n6 va furniza
informagia corﬁcté
and ax, 8 // d60arece 8 I 23
' a1 doilea operand este 0 constant’; - mascd
— bitul 1 doar pe pozigia 3 - réménﬁ nemodiﬁcat
—50

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Lucrul cu ma$t1 (3)
' cﬁﬁa ce ne doream ara 0 tastam a valorii
unui bit
— nedistructiv
- in schimb, togi ceilalgi bigi din ax se pierd
' ar trﬁbui ca mai intéi s51 salvém valoarea din
ax in alt registru
— in6ﬁci6nt
—51

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Lucrul cu ma$t1 (4)
- instrucgiunea t€st calculﬁazéi tot funcgia
booleané AND
— dar nu scrie razultatul nicéiari - n6distructiv
— doar seteazé indicatorii de condigii in acelagi
mod
test ax, 8 // ax nu 6ste modiﬁcat
// acum putem testa indicatorul Zero
—52

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Instrucyiuni de deplasare
' sintaxé
shl opl , opZ // deplasara spre stﬁnga
shr opl , opZ // deplasarﬁ sprﬁ dreapta
' 0p] - operandul asupra céruia s6 aplicé
deplasama
' 0p2 - indicé numérul de pozigii pe care se
face dﬁplasarea

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
()p eran21

- primul oparand poate: ﬁ

— registru

— locagie d6 memori6 (trebuie indicaté explicit

dimensiunea sa)

' a1 doilﬁa operand poatﬁ ﬁ

— constanté (1 sau mai mult)

— registrul cl - singurul p€rmis

—54

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Impl6m6ntar6
- ﬁﬁcam bit din 0p] 65m mutat spre
sténga/dreapta cu 0p2 pozigii
' bigii cam "i6s" sunt m6m0ra§i, p6 rand, in
indicatorul Carry
— ﬁvident, numai ultimul este pistrat
' bigii care: "intré" au togi valoarera O
55

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Utilitat€ practicéi (1)
' pantru numara féré sﬁmn
\/ deplasam spm sténga cu n pozigii -
echivalent cu inmulgima cu 2”
\/ deplasam spra dreapta cu n pozigii -
echivalent cu impérgirea la 2”
—56

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Utilitam practicéi (2)
' dar pentru numﬁm cu s6rnn?
\/ deplasare spm sténga - nu s6 p0at6
\/ deplasam spm dmapta
— pentru a rﬁaliza 0 impérgire corecté 1a 2”, bitul
de smnn trebuie séi réméné nemodiﬁcat
— §i in acela§i timp s5 se deplaseze §i spm dreapta
— deci bigii cam "intré" nu mai au valoarea 0, ci
sunt 6ga1i cu bitul de sezmn
57

***************Ending Page***************


***************Beginning Page***************
***************page number:32**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Dezplasare antm6t1ca

' sintaxé
sar opl , o p2
' oparanzii au acelea§i roluri ca anterior
' dar instrucgiunea realizerazé de: fapt

impérgire la 2” pentru num6re cu samn

58

***************Ending Page***************



***************Beginning Page***************
***************page number:33**************
Arhitectura calculatoarelor §i sisteme de operare - ASM
Exémplé
shl €ax,l
shl byte ptr [ebx+€cx],3
shr dx,cl
sar €ax,2
59

***************Ending Page***************


