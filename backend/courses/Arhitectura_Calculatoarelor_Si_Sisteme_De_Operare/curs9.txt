***************Beginning Page***************
***************page number:1**************
1.2. Pipeline - rezolvarea
problemelor

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Avansarea (1)
add dword ptr [eax],5
sub €cx,[€ax]
- mzultatul adunérii - calculat de ALU
' dureazé péné cénd 6st6 scris la dﬁstinaﬁa
' instructiunﬁa de scéderre poate: prelua
rezultatul adunérii direct de la ALU
—31

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Avansarea (2)
Avantaj
- rﬁduw timpii d6 a$t6ptar6
Dezavantajﬁ:
' necesité circuite suplimentare complaxe
' trebuia considerate: rﬁlatiile intre toate
instructiunile aﬂate in ex6cu§i€ (in pipeline)
32

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Unitéyi superscalare:
- id66a d6 bazé - mai multﬁ ALU
' s6 pot efectua mai multﬁ: calcule in paralﬁl
- folosité impreuné cu t6hnica pip6lin6
' MAR $i MDR nu pot ﬁ multiplicate
' cﬁt de mult se pot multiplica ALU?
— depinde de structura gi eﬁcieniga pipelinﬁ
—33

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Unitéyi supezrpipezline
- mai multa pip6lin6 in acela$i procﬁsor
— de obicﬁi 2
- 2 (sau mai multé) instructiuni €X6cutate
complet in paralel
' rﬁstrictii
— accesﬁle la memorie 5i periferice - secwnigial
— un616 instructiuni pot ﬁ executatﬁ de un singur
pipeline
34

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Predictia salturilnr (1)

- razolvarea depnndnntelor de control
- idnﬁa de b21251 - a "prazicﬁ" dacé un salt $6

exncuté sau nu

— nu s6 a$teapté terminarea instructiunii de salt
' predic§i6 corecté - féré blocaje in pipﬁlina
' predictie eronaté - s6 executé instructiuni

care nu trebuiau ﬁxecutate

— ﬁfectul acestora trebuie anulat

35

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Predictia salturilnr (2)

' spor de performanlil - cét Inai multn
prndicyii corectn (nu neapérat 100%)

' 0 instrucgiune exncutaté eronat producn
efncte doar cénd rnzultatul 6ste scris 1a
dnstinayie

' rezultatele instrucyiunilor - memorate: intern
de procersor péné cénd s6 veriﬁcé dacé
predicgia a fost corecté

36

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Sch6m€ d6 pf€dlC§1€

Tipuri de scheme:
' staticﬁ

— intotdwuna ace6a$i decizie
' dinamic6

— se adapteazé in funcyie de comportarea

programului
37

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Schezme: statiw d6 prﬁdicyie
' saltul nu se ex6cut2'1 niciodaté
— rata pradictiilor corecte z 40%
' saltul se executé intotdeauna
— rata predictiilor comcte z 60%
' salturilﬁ inapoi sﬁ ﬁxecuté intotdeauna, 0616
inainte niciodaté
— combiné variantde anterioam
— raté superioaré a predictiilor
38

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Scheme: dinamice: de pr6dicti6 (l)
- prowsorul retine intr-un tabﬁl comportama

la salturilﬁ anterioare
— salt 6X6cutat/neexecutat
' un singur ﬁlament pentru mai mult6
instructiuni d6 salt
— tabel mai mic —> economies de spatiu
—39

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Scheme: dinamice: de pmdictie: (2)
Tipuri de pradictori
- locali

— reyin informayii despm salturile individuale
' globali
— iau in considﬁrare corelagiile dintre
instructiunile de salt din ac61a$i program
' micgti
—40

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Utlhzarca cache-ulul 1n pf€dlC§1€

Cachc-ul d6 instructiuni
- reﬁne vechea comportarc a unui salt

— condiyie

— adresé d6stina§i6
' trace cache

— memoreazé instructiunile in ordinea in care sunt

cxccutate
— nu in ordinca ﬁzicé
—41

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Ex6cu§1a sp€culat1va

- inrudité cu pradicyia salturilor
' s6 6X6cut51t0at6 variantﬁla posibil6

— inainte de a $ti care este 66a corecté
' cénd s6 cunoagte: varianta comcté,

mzultaterle sale sunt validate:
' se poate utiliza gi in circuite simple:
—42

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Cum funcylonﬁaza? (1)
- instructiuni de salt conditionat
\IIDL ea}: 3* Eb}: €
sub EEHFEDH sub ebH,eaH
' ambele: variante se executé in paralerl
' cum se modiﬁcéi regigtrii eax gi ebx?
—43

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Cum funcylonﬁaza? (2)
- nici una din varianta nu ii modiﬁcé
- razultatﬁle scédﬁrilor sunt depuse in regi$tri
tﬁmporari
' cénd $6 cun0a$te r61a§ia intm eax gi ebx
— se determiné varianta coracté de executie
— se actualimazé valorile eax §i ebx conform
rezultatelor obyinute in varianta comcté
—44

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Executie sp6cu1ativéi vs. pr6dic§i€
- nu apar pradicyii eronate

— rata d6 succes - 100%
- necesité mulyi mgi$tri pentru razultat6l6
temporare
' gestiunea acﬁstora - complicaté
' ﬁecare varianté de execuyie: poate continé:
alte salturi etc.
— variantde se multiplicé exponantial
45

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Pr6dica§ia (1)
- folosité in arhit6ctura Int6l IA-64
— 5i in alte unitéigi de procﬁsare
- as6mén€1t0are cu 6xecu§ia speculativé
- prowsorul congim mgigtri de pretdicatﬁ
— predicat - conditie booleané (bit)
' ﬁﬁcare instructiune obignuité are asociat un
asememea pradicat
—46

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Pr6d1ca§1a (2)
' 0 instructiune produce 6fecte dacé 5i numai
dacé pmdicatul asociat ester true
— altfel mzultatul séu nu est6 scris la destinayia
- instructiunik de tﬁst pot modiﬁca valorilﬁ
predicatﬁlor
' s6 pot implementa astfel ramiﬁcayii in
program
—47

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
EX€IIlplll

' pseudocod
if(Rl::O){

R215;

R328;

}
else

R2=21;
—48

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Exermplu (continuam)
- limbaj de asamblam "clasic"
cmp R1,0
jne E1
mov R2,5
mov R3,8
jmp E2
El: mov R2,21
E2:

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Ex6mplu (continuam)
- limbaj d6 asamblam cu pmdicatﬁ
cmp R1,0,P1
<P1>mov R2,5
<P1>mov R3,8
<P2>mov R2,21
' predicatele P1 5i P2 lucreazé in pereche
— P2 ﬁste intotdeauna inversul lui P1
— prima instructiunﬁ ii modiﬁcé pe améndoi
50

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Executla out-of-orderr
- instructiunile nu se mai tﬁrminé obligatoriu
in ordin€a in care gi-au inwput 6X66u§ia
' scop - eliminarea unor blocaje in pipﬁline
' posibilé atunci cénd intre instrucyiuni nu
existé dep6nden§e
51

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Arhitectura calculatoarelor §i sisteme de operare - partea a II-a
EX€IIlp1U

in al,278

add bl,al

mov €dx,[€bp+8]

- prima instrucyiune - foartﬁ lenté

' a doua instructiunﬁ trebuiﬁ $51 agtﬁpta
terrminama primeia

' a treia instructiune nu depinde de: cele
dinaintea sa - se poate: tarmina inaint€a lor

52

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Red€num1r6a m g1$tr110r
' dﬁpendentp de data
— apar cénd doué instrucyiuni folosesc a066a$i
rasursé (variabiléi/registru)
— numai cénd cel puyin una din instructiuni
modiﬁcéi rasursa respectivé
— dacé resursele sunt regigtri, unele dependenlp se
pot rezolva prin red€numire
53

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Tipuri de dependente de date

' RAW (read after write)

— prima instructiune modiﬁcéi resursa, a doua 0

cite$te

' WAR (write after read)

— invers
' WAW (write after write)

— ambele instructiuni modiﬁcé resursa

—54

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
D6p6ndent6 RA W
' dﬁpendentﬁ "ad6v€1rat6"
- nu pot ﬁ ﬁliminate:
mov eax,5
sub ebx,eax
' valoama scrisé in eax d6 prima instrucyiune
6ste necesaré instructiunii urmétoare
55

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
D€p6ndent6 WAR
- numite: $i antidﬁpendﬁnte
add esi,eax
mov eax,16
sub ebx,eax
' prima instrucgiune trebuie 6xecutat€1inaintea
célﬁi de-a doua (nu se poate in paralel)
—56

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
D6p endeznte: WAR - rezzolvare:
add esi,eax add esi,eax
mov eax,l€ mov reg_tmp,16
sub ebx,eax sub ebx,reg_tmp

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
D 62p 6nd6n§6 WAW
' dependant; de i€$ire
div ecx
sub ebx,edx\
mov eax,5
add ebp,eax
—58

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
D6p end6n§6 WAW - r6201var6
div ecx div ecx,3
sub ebx,edx sub ebx,edx
mov eax,5 mov reg_tmp,5
add ebp,eax add ebp,reg_tmp

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Utllltat6

' ajuté 1a cre$t6rea p6rf0rmantei‘?
' cre$t6 potengialul d€ paralelizare
- mai 6ﬁcienté in combinagiﬁ cu alte tehnici

— structura superpipeline

— 6X€cutia out-of-order

60

***************Ending Page***************



***************Beginning Page***************
***************page number:32**************
Arhitectura calculatoarelor 5i sisteme de operare - partea a II-a
Eﬁcienta abordérii
' mai multi regi$tri
— folosiyi intern d6 procesor
— nu sunt accesibili programatorului
' de 06?
— radenumiraa s6 face automat
— programatorul poate gre§i (6Xp102lt211'6
innﬁcinnté a resurselor)
— cregtema pnrformanlpi programalor vnchi
61

***************Ending Page***************



