***************Beginning Page***************
***************page number:1**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache cu adresare dlrecta (1)
- plasarea unei locatii in cache
— linia de cache este intctdeauna aceea$i
— depinde de adresa din memoria principala
' adresa din memoria principala - 3 pargi
— eticheta - se memoreaza in cache
— selectorul liniei de cache
— selectorul octetului in cadrul liniei
—262

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
h ' '
Cac e: cu adrersare d1r6cta (2)
11111121111 i11 11112111111111 11111112111313
III:
etichﬁta

selectie 1111112 1:112 cache
-_
— seleche 1311:1121 1111111112

_
9-H-
-_
(1111:1111
263

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I

Cache cu adrcsarc dircctéi (3)
Exemplu
' adrcsa in memoria principalé - 32 biti
' dimensiunc cachc: 211 linii >< 25 cctcyi/linic
' adrcsa in mcmcria principalé sc impartc in

— sclectcrul linici dc cache - 11 biti

— sclectorul octctului in cadrul linici - 5 biti

— ctichcta - 16 biti ( I 32 — 11 — 5)
—264

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Arbitectura calculatoarelor 5i sisteme de operare - partea I

Cache: cu adrersare dimctéi (4)
Exemplu (continuam)
- adresa in memoria principalé: 450973 73(10)
00000010101100000010000110011101(2)
' 6ticheta: 00000010101 10000(2):688(10)
' linia de cache: 00100001 100(2):268(10)
' octetul in cadrul liniﬁi: 1 1 101(2):29(10)

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Arhitectura calculatoarelor 5i sisteme de Operare _ partea 1
Cache cu adrersare dimctéi (5)

Exemplu (continuam)
' C6 adrese din mamoria principalé sunt

adus6 in linia de cach6?
00000010101 1000000100001 100XXXXX(2)
00000010101100000010000110000000 +
0000010101100000010000110011111(2)
45097344 + 4509737 5(10)

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache cu adresare directa (6)
Continutul unei linii de cache
' un bit care indica daca linia conﬁne date
valide
— initial, toate liniile sunt goale, deci invalide
' campul eticheta
' datele propriu-Zise, aduse din memoria
principala
—267

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache cu adrersare dimctéi (7)
Avantaje
- implementare simplé
' timp d6 accﬁs (TC) redus
Dazavantaje
~ lips'Zl d6 ﬂexibilitate
' politicé de inlocuire neperformanté - raté de
succﬁs (H) scézuté

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache cu adrcsarc dircctéi (8)
Exemplu
for(i:O;i<1000;i++) aza+i;
' adrcsc: i—>3806240, a —>1756566572
' ambclc sunt mcmcratc in cachc in linia 161
' acccsc altcrnativc —> inlocuiri dcsc in cache
—> numér marc dc ratéri

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache: total asoclatlv (1)
- realizat cu memorii asociativﬁ
— mamoria 0bi$nuitéi - acces 1a 0 locatie pe baza
adresei sale
— m6moria asociativéi - permite $i regésirea
locayiei p6 baza continutului sﬁu
— implementare - valoarea céutaté este comparaté
in paralel cu toate locayiile
' de ce in paralel?
270

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache: total asociativ (2)
Avantaje
- plasarﬁa datﬁlor din m6m0ria principalé - in
orice linie dﬁ cach6
' s6 pot aleg6 convanabil adrasﬁle aduse in
linia de cach6
' s6 pot implementa politici de inlocuire
erﬁciente - raté de succes (H) ridicaté
—271

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache: total asoclatlv (3)
Dezavantaje
- timp de acces (TC) mam
— mamoriile asociative - lente
— algoritmi complecgi d6 inlocuire - timp
suplimantar consumat
' hardware complicat pantru memoriile
asociative 5i algoritmii d6 inlocuire
—272

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache partial asoeiativ (1)

- numit $i cache asoeiativ pe seturi
' derivat din eache-ul eu adresare direeta
- ﬁeeare linie de cache eontine mai multe

seturi de date (4, 8, 16, ...)
' structura unui set

— bit de validare

— eticheta

— date din memoria principala

273

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
sﬁtl SHE sﬁtn
bit validarel bit Vﬂlidﬂlli'g | bit validaren
I-—-—-—III
274

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Cache: partial asociativ (3)

Timpul de acces (TC)
' putin mai mam dﬁcét la cach6-ul cu adresare

dimcté

— trebuiﬁ veriﬁcate toata cale n seturi
Rata de succes (H)
' ridicaté

— aliminé problema suprapunerilor
—275

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Scnerma 1n cache: (1)

' scriﬁm intr-o 100a§ie cam s6 aﬂé in cache:
' unde s6 facﬁ scrierﬁa?
' variant6

— doar in mamoria principalé - nu se poate

' de ce?
— doar in cachﬁ (write-back)
— atét in cache, cét 5i in mﬁmoria principalé
(write-through)
276

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Scnerma 1n cache: (2)
Cachﬁ de tip write-back
' scriﬁma $6 faca doar in cache
' datele: ajung in m6m0ria principalé doar la
evacuarea din cachﬁ
' Vitezé mare
' probleme in sistamele multiprocersor
277

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Scncrca 1n cachc (3)
Cachc dc tip write-through
' scricrca sc face atét in cachc, cét $i in
mcmoria principalé
' mai lent
— datorité acccsului la memoria principalé
' ambclc tipuri dc cache sunt larg fclcsitc
—278

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Scncrca 1n cachc (4)
' dar dacé locagia modiﬁcaté nu sc aﬂé in
cache?
' variantc

— lccayia cstc aduséi in cache (write allocate)

— lccagia nu cstc adusé in cache, ci valoarca sa
cstc actualizaté in mcmcria principalé (no-write
allocate)

279

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Mermoria cache: in sistﬁme: paralﬁvle:
' sistem de calcul paralﬁl - mai multe:
prowsoara
— sau nuclea
' procﬁsoamlﬁ pot accesa 0 zoné d6 memoria
wmuné
— pentru a conlucra in rezolvarea problenmlor
— 6X.I variabile comune (partaj at6)
— dar ﬁacam procasor are propriul cache
280

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Coerﬁnta mermonal
' tr6bui6 ca t0at6 procﬁsoarek s51 folosﬁascé
ultima valoam scrisé pentru 0 variabilé
partaj até
- pr0b16ma - memoriilﬁ cach6
' scopul - orice variabilé partajaté s51 aibé
aceeagi valoare
— in toate cachﬁ-urile
— in memoria principalé
281

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
C06r6n§a - cach€ write-back
X - variabilé partajaté
. Valoare Valoare Valoare
----u
--u-u
Iii-nun
mun
“nun
—282

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
C06r6n§a - cach€ write-thmugh
X - variabilé partajaté
. Valoare Valoare Valoare
----u
--u-u
Iii-nun
----u
min-u
—283

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
C6 1nseamna co6ren§a? (1)
1. ordinea 6X60u§i6i
a) procesorul P scria in variabila X
b) apoi procasorul P cite$te X
— intre a) 5i b) nu existé alte scrieri in X
—> citirea b) returneazé valoarea scrisé de a)
—284

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
C6 1nseamna cobrenya? (2)
2. Viziune coerenté a memoribi
a) procesorul P scrie in variabila X
b) apoi prowsorul Q (QiP) Cit€$t6 X
— intra a) 5i b) nu existé alte scrieri in X
— intre a) 5i b) a tracut suﬁcient timp
—> citirea b) returneazé valoarea scrisé de a)
—ms

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
C6 1nseamna co6ren§a? (3)
3. sﬁrializarea scri6ri10r
a) procesorul P scrie in variabila X
b) procésorul Q (QIP sau Q¢P) scrie: in variabila
X
—> toate procesoarele Vid cele: doué scrieri in
aceea$i 0rdin6
— nu naapérat a) inaintea b)
286

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Menpnm'era (:06r6nte1 cacher-unlor
- protocoak: d6 m6n§iner6 a coerentei
' s6 bazeazé p6 informatiile d6spre liniile d6

cach6

— invalid - datele nu sunt valide

— dirty - doar cache-ul curent datina valoarea
actualizaté

— shared - cache-111 curent dﬁyine valoarea
actualizaté, la fel mezmoria principalé 5i
6v6ntual altﬁ cache-uri

—287

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Tipuri de prctcccale

' directory based

— informayiile despre ﬁecare linie de cache -

yinute intr-un singur 10c

' sn00ping

— ﬁecare cache are 0 copie a liniei partajate

— fara centralizarea informatiei

— cache-urile monitorizeaza magistrala

' detecteaza schimbarile produse in liniile de cache
288

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Actuahzarera cach6-ur110r

- ﬁ6care cache: anunté modiﬁcérile félcutﬁ
' cﬁlﬁlaltﬁ cachﬁ-uri rﬁactioneazé
' contﬁazé doar operatiilﬁ de scriere:
' variant6

— scriam cu invalidam (write invalidate)

— scriem cu actualizarﬁ (write update)

289

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Scnetm cu 1nva11dar6 (1)
' un procﬁsor modiﬁcé 0 daté
- modiﬁcarea $6 faca in cachﬁ-ul propriu
— toate celelalta cache-uri sunt notiﬁcat6
' cﬁlﬁlalw cachﬁ-uri
— nu au 0 copie a datei modiﬁcate - nici 0 actiuna
— au 0 copie a datei modiﬁcate - igi invalidﬁazé
linia corespunzétoare
— valoarea corecté va ﬁ pmluaté cénd va ﬁ n6v0ie
290

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
S crime: cu invalidate: (2)
X - variabilé partaj até
. R6a6§i6 Cache Cach6 -
“—u-u
annul-
--—--u
m
—291

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Scnerré: cu actuahzare: (1)
' un procﬁsor modiﬁcé 0 daté
- modiﬁcarea $6 faca in cachﬁ-ul propriu
— toate celelalta cache-uri sunt notiﬁcat6
— se transmitﬁ noua valoare
' cﬁlﬁlalte cachﬁ-uri
— nu au 0 copie a datei modiﬁcatﬁ - nici 0 actiune
— au 0 copie a datei modiﬁcate - prﬁiau noua
valoare
292

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
S crierre: cu actualizare: (2)
X - variabilé partaj até
. R6a6§i6 Cache Cach6 -
u-u-II
annul-
m
—293

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Invahdare vs. actuahzare (1)
- mai multe scrieri succesive in aceea$i
locatie
— write invalidation - 0 singuré invalidate (prima
datéi)
— write update - céte 0 actualizare pentru ﬁecare
scriere
— mai avantajos - invalidate
294

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Invahdare vs. actuahzare (2)
- mai multe scrieri in aceea$i linie d6 cache

— modiﬁcarea unei locayii necesitéi
invalidarea/actualizarea intregii linii

— write invalidation - 0 singuré invalidate (prima
datéi)

— write update - céte 0 actualizare pentru ﬁecare
scriere

— mai avantajos - invalidate

295

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Invahdare vs. actuahzare (3)
' "timpul de raspuns"
— timpul intre modiﬁcarea unei valori 1a un
procesor 5i citirea noii valori 1a alt procesor
— write invalidation - intéi invalidate, apoi citire
(05nd este necesar)
— write update - actualizare imediaté
— mai avantajos - actualizare
296

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Invahdare: vs. actuahzare: (4)
' amb616 variante au avantaje $i d6zavantaje
' scriﬁma cu invalidam - ocupare (mult) mai
rﬁdusé a memori6i 5i magistralalor
' scriﬁma cu actualizara - rata de succﬁs a
cache-urilor mai mare
' mai des folosité - invalidarea
297

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Concﬁptul d6 caché: - extindem
' aplicabil nu doar la procﬁsoare
- tipul de pr0b16m51: comunicama cu 0
entitatﬁ lanté, de mam capacitatﬁ
' soluyia: interpunarw unﬁi @ntitégi cu
capacitate mai micé 5i vit6z'21 mai mare:
— reginﬁ ultimelﬁ dam v6hiculate
—298

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Unde mai putam folosi idaea?
Aplicabilitate
' oriunda funcrionaaza legila localizarii
' hardware
' software

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Excmplc ( 1 )

Cache-uri dc disc
- 2 directii dc aplicarc

— hardware - circuit dc memoric intcgrat in

controller

— software - o zonﬁ din mcmoria sistcm
' cntitatca rnai mare gi lcnté - discul
' cntitatca mai micé 5i rapidé - memoria

300

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Arhitectura calculatoarelor 5i sisteme de operare - partea I
Exemple (2)
Browserul web
' ultimele pagini aeeesate sunt retinute pe
disc
— numai localizare temporalé - de ee?
' entitatea mai mare $i lenté - regeaua
(Internet)
' entitatea mai mieé gi rapidé - diseul
301

***************Ending Page***************

