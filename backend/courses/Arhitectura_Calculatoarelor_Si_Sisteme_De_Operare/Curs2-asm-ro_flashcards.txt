[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the syntax for addition in ASM?
--InteriorSeparator--
add op1, op2
--InteriorSeparator--
easy
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What registers can be used as operands in the `add` instruction?
--InteriorSeparator--
Any register of any size.
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When performing addition with unsigned and signed integers, which flag(s) should be tested for potential errors (overflow)?
--InteriorSeparator--
(right) Carry flag (for unsigned)
(right) Overflow flag (for signed)
(wrong) Zero flag
(wrong) Sign flag
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What flags are set by the processor after an addition operation?
--InteriorSeparator--
All flags (Carry, Overflow, Zero, Sign, etc.) are set based on the result.
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the syntax for incrementing a value in ASM?
--InteriorSeparator--
inc op
--InteriorSeparator--
easy
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When incrementing a memory location, what must be specified?
--InteriorSeparator--
The size of the memory location (e.g., byte ptr, word ptr, dword ptr).
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the syntax for addition with carry in ASM?
--InteriorSeparator--
adc op1, op2
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `adc` instruction?
--InteriorSeparator--
To add two operands and the Carry flag.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the syntax for multiplication without sign in ASM?
--InteriorSeparator--
mul op
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If the explicit operand in a `mul` instruction is a byte, what is the implicit operand and where is the result stored?
--InteriorSeparator--
Implicit operand: AL, Result stored in AX.
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Can the explicit operand in `mul` be a constant?
--InteriorSeparator--
No.
--InteriorSeparator--
hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are valid examples of the `mul` instruction?
--InteriorSeparator--
(right) `mul ebx`
(wrong) `mul 10`
(right) `mul dword ptr [esi]`
(wrong) `mul eax, ebx`
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the syntax for division with sign in ASM?
--InteriorSeparator--
idiv op
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If the divisor in a `div` instruction is a word, what is the dividend and where are the quotient and remainder stored?
--InteriorSeparator--
Dividend: DX:AX, Quotient: AX, Remainder: DX.
--InteriorSeparator--
hard
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Can the explicit operand in `div` be a constant?
--InteriorSeparator--
No.
--InteriorSeparator--
hard
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if you divide by zero in ASM?
--InteriorSeparator--
It causes an error at execution time.
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What condition causes a divide error even when the divisor is not zero?
--InteriorSeparator--
When the quotient is too large to fit in the destination register.
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When does a divide error occur during the `div` instruction?
--InteriorSeparator--
If and only if the more significant half of the dividend is greater than or equal to the divisor.
--InteriorSeparator--
hard
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which boolean instruction is implemented in ASM?
--InteriorSeparator--
(right) NOT
(right) AND
(right) OR
(right) XOR
--InteriorSeparator--
easy
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the function of the `test` instruction?
--InteriorSeparator--
Calculates the boolean AND but does not write the result, only sets flags.
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the syntax for a shift left instruction in ASM?
--InteriorSeparator--
shl op1, op2
--InteriorSeparator--
easy
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What can the first operand (op1) of a shift instruction be?
--InteriorSeparator--
(right) Register
(right) Memory Location
(wrong) Constant
(wrong) Immediate Value
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What can the second operand (op2) of a shift instruction be?
--InteriorSeparator--
(right) Constant
(right) CL register
(wrong) Any register
(wrong) Memory location
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens to the bits that "exit" during a shift operation?
--InteriorSeparator--
They are stored, one by one, in the Carry flag; only the last one is kept.
--InteriorSeparator--
hard
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
For unsigned numbers, what operation is equivalent to a left shift by n positions?
--InteriorSeparator--
Multiplication by 2^n.
--InteriorSeparator--
medium
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why can't left shift be used for multiplication on signed numbers?
--InteriorSeparator--
Because it doesn't preserve the sign bit.
--InteriorSeparator--
hard
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the arithmetic right shift (sar) instruction?
--InteriorSeparator--
To perform division by 2^n for signed numbers, preserving the sign bit.
--InteriorSeparator--
medium
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following ASM instructions performs a division by 2, preserving the sign?
--InteriorSeparator--
(right) sar eax, 1
(wrong) shr eax, 1
(wrong) shl eax, 1
(wrong) div eax, 2
--InteriorSeparator--
hard
--InteriorSeparator--
32
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.10690494685978084}]