***************Beginning Page***************
***************page number:1**************
Instrucgiuni de lucru in
virgulﬁ mobile“!

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Arhilectllra calcullloarelor 5i sixteme a: upmn - ASM
Unitatea de virgulé mobilé
' Floating Point Unit — FPU
- inigial - separaté dc procesor
i inclusi in procesor incepénd cu Intel 486
' lucreazé intern cu operanzi in precizie
extinsé (80 de bigi)
- orice operand dc tip float sau double
este convertit la aceasté. reprezentare
—|z@

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Arhilectura calcullloarelor 5i sixteme a: upmn - ASM
Re gigtrii interni (l)

' 8 regigtri pe 80 de bigi

i denumiri: ST(O) ST(7)
' sunt organizagi intr-o stivé

i ST(0) este intotdeauna vérful stivei

i referit §i ca ST
' orice operatic dc scriere in stivi schimbﬁ

ordinea (§i numele) regi§trilor

— fostul ST(O) devine ST(1) etc,

117

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Arhilectura calcullloarelor 5i sixteme a: upmn - ASM
Regigtrii interni (2)
- la orice instructiune, ST(0) este unul dintre
operanzi
— sau singurul, 1a operagiile unare
' celﬁlalt operand poate ﬁ, dupé caz
i 0 localie d6 memorie (valoare intreagﬁ sau in
virgulé mobilé)
i un alt registru ST(i)
i niciodati 0 constants?!
118

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Arhilectura calcullloarelor 5i sixteme a: upmn - ASM
Regigtrii interni (3)
- introduccrea in stivé - prin instrucgiuni dc
incircare a unor valori
— locayii de memorie
i uncle constants predeﬁnite
~ scoaterea din stivé
i multe instrucgiuni de procesare au §i 0 varianté
care eliminé ST(0) din stivé
i numele acestor instrucyiuni se termini cu "p"
119

***************Ending Page***************


***************Beginning Page***************
***************page number:6**************
Arhilectura calcullloarelor 5i sixteme a: open“ - ASM
Incércare din memorie
~ sintaxa
f l d a dre s a
f i l d a dres a
- introduce in stivﬁ operandul, care este
i in primul caz - o variabilé in virgulé mobilé
(float, double)
i in a1 doilea caz - 0 variabilé intreagi (short
int, int)
—|3u

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
float f;
int i;
_asm {
fld f
fild i
fld dword ptr [ebp+8]

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Arhilectura calcullloarelor 5i sixteme a: 0pm“ - ASM
Incﬁrcare constanté predeﬁnité
' sintaxa
fl d z
f l d l
fldpi
- introduc in stivﬁ, respectiv, valorile O, 1, TE
- existé $i alte constante (logaritmice)
—131

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
Arhileclurl calcullloarelor 5i sixleme a: openre - ASM
Scriere in memorie

~ sintaxa
f s t a d re sa
f s t p a dre s a

— scriere ST(O) intr-o variabilé in virgulé mobili
f i s t a dre s a
f i s tp a dre s a

i scriere ST(0) intr-o variabilé intreagé

—\33

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Arhileclurl calcullloarelor 5i sineme a: 0pm“ - ASM
Exemple
float f;
int i;
fa sm f s tp f ;
i copiazz'l ST(0) in f §i il eliminé din stivi
i foslul ST(l) devine ST(0) etc.
iasm fist i;
— copiazé ST(0) in i, pistréndu-l pe stivé
—\31

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Arhilectura calcullloarelor 5i sixteme a: 0pm“ - ASM
Interschirnbare regigtri

' sintaxa

f xch st (i)

~ i este 0 valoare constanti intre l §i 7

' schimbé intre ele valorile regigtrilor ST(0) §i

ST(i)
—|35

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Arhilectllra calcullloarelor 5i sixteme a: upmn - ASM
Adunare ( l)
' unul dintre operanzi este intotdeauna ST(O)
i dc obicei 5i destinagia rezultatului
~ celilalt poate ﬁ
i locayie de memorie (virgulé mobilé sau intreg)
i all registru din stiva FPU
- in ultimul caz, rezultatul poate ﬁ scris in
celélalt registru, in 100 de ST(0)
— eventual cu eliminarea ST(O) din stivi
136

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
Arhilectura calcullloarelor 5i sixteme a: open“ - ASM
Adunare (2)
- sintaxa
fadd adresa //virgulé mobilé
fiadd adresa //intreg
fadd st (O) , st (i) //ST(0):ST(0)+ST(i)
fadd st (i) , 511(0) //ST(i):ST(i)+ST(0)
faddp st (i) , st (O) //cu scoatere ST(0)
din stivﬁ

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Arhilectllra calcullloarelor 5i sixteme a: upmn - ASM
Scédere ( l)
- similar cu adunarea
- ST(0) este de obicei descﬁzutul §irezu1tatu1
' celélalt operand
i locatie de memorie (virgulé mobili sau intreg)
— all registru din stiva FPU
- in ultimul caz, celﬁlalt registru poate ﬁ
descézutul §i destinagia rezultatului
i eventual cu eliminarea ST(0) din stivi
—m

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Arhilectura calcullloarelor 5i sixteme a: open“ - ASM
Scédere (2)
- sintaxa
fsub adresa //virgulé mobilé
fisub adresa //intreg
fsub st (O) , st (i) //ST(0):ST(0)-ST(i)
fsub st (i) , st (O) //ST(i):ST(i)-ST(0)
fsubp st (i) , st (O) //cu scoatere ST(0)
din stivﬁ

***************Ending Page***************


***************Beginning Page***************
***************page number:16**************
Arhilectura calcullloarelor 5i sixteme a: 0pm“ - ASM
Scédere inversé (1)
~ ordinca operanzilor este invers fagé dc
operagia de scédere obignuité
i se scade primul operand din al doilea
i dar rczultatul cstc scris tot in primul operand
—uu

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
Arhilectura calcullloarelor 5i sixteme a: 0pm“ - ASM
Scédere inversé (2)
- sintaxa
f subr adresa //virgul?1 mobilé
f i subr adresa //intreg
fsubr st (O) , st (i) //ST(0):ST(i)-ST(0)
fsubr st (i) , s t (O ) //ST(i):ST(0)-ST(i)
fsubrp st (i) , st (O ) //scoate ST(0) din
stivé

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Arhilectura calcullloarelor 5i sixteme a: open“ - ASM
Inmul'gire
- similar cu adunarea
fmul adresa //virgulé mobilé
fimul adresa //intreg
fmul st (O) , st (i) //ST(0):ST(0)*ST(i)
fmul st (i) , 511(0) //ST(i):ST(i)*ST(O)
fmulp st (i) , st (O) //cu scoatere ST(0)
din stivﬁ

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Arhilectllra calcullloarelor 5i sixteme a: upmn - ASM
impérgire ( 1)
- impﬁrgire in virgulﬁ mobilé
- ST(0) - dc obicei deimpérgitul 5i rezultatul
' celélalt operand
i locatie de memorie (virgulé mobili sau Tntreg)
— all registru din stiva FPU
- in ultimul caz, celﬁlalt registru poate ﬁ
deimpéryitul §i destinagia rczultatului
i eventual cu eliminarea ST(0) din stivi
—m

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Arhilectura calcullloarelor 5i sixteme a: open“ - ASM
Impér'gire (2)
- sintaxa
fdiv adresa //virgulé mobilé
fidiv adresa //intreg
fdiv st (O) , st (i) //ST(0):ST(0)/ST(i)
fdiv st (i) , st (O) //ST(i):ST(i)/ST(0)
fdivp st (i) , st (O) //cu scoatere ST(0)
din stivﬁ

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Arhilectura calcullloarelor 5i sixteme a: upmn - ASM
Impargire inversé ( l)
~ similar cu scaderea inversa
' a1 doilea operand este deimpérﬁtul, iar
primul este impérgitorul
' dar rezultatul este scris tot in primul
operand
—us

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Arhilectura calcullloarelor 5i sixteme a: 0pm“ - ASM
Impﬁr'gire inversé (2)
- sintaxa
fdivr adresa //virgulé mobilé
fidivr adresa //intreg
fdivr st (O) , st (i)//ST(0):ST(i)/ST(0)
fdivr st (i) , st (O ) //ST(i):ST(0)/ST(i)
fdivrp st (i) , st (O)//scoate ST(0) din
stivé

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
Arhileclura calcullloarelor 5i sixteme a: 0pm“ - ASM
Diverse operagii unare
' ST(0) 6ste singurul operand (implicit)
i 5i dcstinaﬁa rczultatului
fabs
— calculeazé valoarea absoluté a ST(O)
fchs
i schimbi semnul valorii din ST(O)
fsqrt
i caculeazé rédécina pitrati din ST(0)
N7

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Arhilectura calcullloarelor 5i sixteme a: 0pm“ - ASM
Compara'gii
~ compari ST(0) cu alt registru din stiva FPU
i ST(0) este primul termen al comparayiei
' seteazé indicatorii de condigii
' sintaxa
fcomi st (O) , st (i)
fcomip st (O) , st (i)
i in a doua variantﬁ, ST(0) este scos din stivé
—ux

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
Arllilectura calcullloarelor 5i sisteme do 0pm“ - ASM
Valorile indicatorilor de condigii
SW) > STU) u.-
ST(0) < 5T0) u-
ST(0> I STU) --

***************Ending Page***************

