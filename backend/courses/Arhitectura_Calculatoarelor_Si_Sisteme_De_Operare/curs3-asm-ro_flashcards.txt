[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What does a jump instruction generally modify?
--InteriorSeparator--
The value of the program counter register.
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the two main categories of jump instructions?
--InteriorSeparator--
Unconditional and conditional.
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the syntax for an unconditional jump instruction in ASM?
--InteriorSeparator--
jmp address
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is the address typically expressed in an unconditional jump?
--InteriorSeparator--
Through labels.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What must be true for a conditional jump to occur?
--InteriorSeparator--
A specific condition must be true (or false, depending on the instruction).
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What can be tested to determine if a conditional jump should be taken?
--InteriorSeparator--
(right) Individual condition flags
(right) Combinations of condition flags
(wrong) Register values directly
(wrong) Memory addresses
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the 'cmp' instruction?
--InteriorSeparator--
Performs a subtraction and sets condition flags without storing the result.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the 'cmp' instruction do internally?
--InteriorSeparator--
(right) Performs a subtraction
(wrong) Performs an addition
(wrong) Stores the result in a register
(right) Sets the condition flags
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of jump instructions in implementing control structures?
--InteriorSeparator--
To control the flow of execution based on certain conditions.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When implementing an 'if' statement in assembly, the conditional jump is based on the inverse of the condition in C, why is this?
--InteriorSeparator--
Because assembly jump instructions typically *avoid* execution of code if a condition is met, rather than directly *causing* execution.
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When implementing an 'if-else' structure, what types of jump instructions are used?
--InteriorSeparator--
(right) Conditional jump
(right) Unconditional jump
(wrong) Logical jump
(wrong) Bitwise jump
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In an 'if-else' structure, what is the purpose of the second jump instruction?
--InteriorSeparator--
To ensure that after executing the instructions in the first branch, the instructions in the second branch are skipped.
--InteriorSeparator--
hard
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How many jump instructions are typically used in a 'while' loop implementation?
--InteriorSeparator--
Two.
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a 'while' loop implementation, on what condition is the first jump based?
--InteriorSeparator--
The inverse of the condition in the C code.
--InteriorSeparator--
hard
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a 'while' loop implementation, what is the purpose of the second jump instruction?
--InteriorSeparator--
To return to the beginning of the loop for the next iteration.
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What additional types of instructions are used with 'for' loop implementations?
--InteriorSeparator--
Initialization and update instructions for loop variables.
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a 'for' loop implementation, which parts are similar to the 'while' loop structure?
--InteriorSeparator--
The conditional jump for exiting the loop and the unconditional jump to the beginning of the loop.
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Where does the test for continuation/exit take place in a 'do-while' loop?
--InteriorSeparator--
At the end of the loop.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does the condition tested in a 'do-while' loop compare between C and assembly?
--InteriorSeparator--
The same condition is tested in both languages.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the role of labels in assembly code using jumps?
--InteriorSeparator--
(right) They mark specific memory addresses
(right) They serve as targets for jump instructions
(wrong) They store variable values
(wrong) They define data types
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why is testing a single indicator sometimes insufficient for relational operators?
--InteriorSeparator--
Relational operators often depend on multiple condition flags to accurately represent relationships like greater than or less than.
--InteriorSeparator--
hard
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does a conditional jump depend on?
--InteriorSeparator--
(right) Value of a condition flag.
(wrong) Value of a register.
(wrong) Value of a variable.
(wrong) Direct address in memory.
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if the jump condition is not met?
--InteriorSeparator--
The execution continues with the next instruction.
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the 'jle' instruction do?
--InteriorSeparator--
(right) Jumps if less than or equal
(wrong) Jumps if equal
(wrong) Jumps if less
(wrong) Jumps if greater than or equal
--InteriorSeparator--
medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why are auxiliary instructions needed for For structures?
--InteriorSeparator--
To clearly delimit the initialization of variables and updating of the values for the next iteration.
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the key difference between the while and do-while loop regarding condition evaluation?
--InteriorSeparator--
The while loop evaluates the condition at the beginning, while the do-while loop evaluates it at the end.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is the condition for continuing or exiting the loop handled in a do-while loop at the assembly level?
--InteriorSeparator--
(right) It is tested at the end of the loop.
(wrong) It is tested at the beginning of the loop.
(right) The condition from C is the same in assembly.
(wrong)The condition is inverted to determine flow.
--InteriorSeparator--
hard
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How can you jump between ASM and C code?
--InteriorSeparator--
You can jump from asm to C and vice versa.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the context of 'if' statements, what is the primary reason for using jump instructions at the processor level?
--InteriorSeparator--
(wrong) To simplify code readability.
(wrong) To ensure optimal code efficiency.
(right) To skip execution of code blocks when conditions aren't met.
(wrong) To directly execute specific sections of code.
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does the structure of the `for` loop at the processor level handle the auxiliary instructions?
--InteriorSeparator--
The auxiliary instructions of initialization and updating of variables for the next iteration make it similar to `while` loop.
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the significance of performing an internal subtraction in the 'cmp' instruction without storing the result?
--InteriorSeparator--
It sets the condition flags based on the outcome of the subtraction, enabling conditional jumps.
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Why is understanding the behavior of jump instructions important for anyone programming in assembly language?
--InteriorSeparator--
(right) They are the foundation of control flow.
(wrong) They make code more readable.
(right) They allow the program to make decisions based on conditions.
(wrong) They are not essential for any type of loops.
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How do jump instructions work?
--InteriorSeparator--
(right) They modify the program counter register.
(wrong) They allocate memory.
(wrong) They perform arithmetic operations.
(right) They can be conditional or unconditional.
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.25723287563131314}]