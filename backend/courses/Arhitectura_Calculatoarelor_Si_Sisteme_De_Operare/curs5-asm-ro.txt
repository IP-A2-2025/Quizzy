***************Beginning Page***************
***************page number:1**************
Tablouri gi structuri

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tablouri - accezs la 61€ment€ (1)
' admsa unui alement a1 unui tablou este
formaté din
— adresa d6 inceput a tabloului
— daplasamantul el6mentului in cadrul tabloului
' cum pot ﬁ 6Xprimate sintactic?
—101

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tablouri - accezs la 61€ment€ (2)
- admsa d6 incﬁput a tabloului
— prin numele variabilei tablou
' deplasanmntul elﬁnmntului in cadrul
tabloului
— constanté
— registru
— 6v6ntual combinagii
— nu 0 alté variablé din memorie
102

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Dif6r€n§€i C - limbaj d6 asamblam
- in limbajul C, indicerlﬁ exprimé

d6plasam6ntul in elﬁmentﬁ ale tabloului
— dinmnsiunea elementelor depinde d6 tipul lor
' in limbaj de asamblam $6 pmcizeazé
deplasanmntul in octqi
— calculele trebuia fécute de citre programator
—103

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
EX€IIlp1€ (1 )
' cod C
int t[100];
t [2 ] :5 ;
' traducere in limbaj d6 asamblare
mov t [8] , 5
' dwarace tipul int are 4 octegi,
d6p1asamentul 6sta 2 - 4 I 8
—104

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Arhitectura calculatoarelor 5i sisteme de Operare -ASM
EX€IIlp1€ (2)
' cod C
int t[100],i;
// i am valoarea 3
t[i]=5;
' traducere in limbaj de asamblam
// eax are va10area 3
mov t[eax*4],5
—105

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Varianta sintactice (1)
mov t[€ax*4],5
6st6 6chiva16nt sintactic cu
mov t+eax*4,5
' cét dﬁ complexé p0at6 ﬁ expresia
deplasanmntului?
' limitaté de modurile de exprimare a
admselor in limbajul procesorului
—106

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Varlante s1ntactlce (2)
' cu 06 inlocuiegte: compilatorul numelﬁ
tabloului
— tabloul estﬁ variabilé globalé - adresa sa este 0
constanté
' 6X.I [ 1 O O O ]
— tabloul este variabilé localé - adresa sa este
6pxrimaté mlativ la vérful stivei
' ex; [ebp-4]
—107

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Arhitectura calculatoarelor 5i sisteme de Operare _ ASM
P0interi ( 1 )
- in exﬁmplul anterior, considerém gi 0
variabilé d6 tip pointer

int t[lOO];

int *pzt;

' in limbajul C, urmétoarela sunt échivalente:
t[i]=5;

P [i] =5;
—108

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
P0interi (2)
' dar in limbaj d6 asamblam?
‘PHI
mov p [eax*4] , 5 - gr6§it
' scriﬁm coracté
mov ebx,p
mov dword ptr [ebx+eax*4],5
—109

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tablouri ca paranmtri (1 )
int t[100];
int *p=t;
void f(int X[]) {...}
void g(int *X) {...}
' ce tipuri de parametri accept’; ﬁecare: dintre
acﬁste funcgii?

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tablouri ca paranmtri (2)

- t0at6 combinagiilﬁ sunt pﬁrmise

f (t) ;

q (t) ;

f (P) ;

q (p) ;

' de 0e?

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Arhitectura calculatoarelor §i sisteme de operare - ASM
Tablouri ca paramertri (3)
- indif6rent de sintaxa folosité, p6 stivé s6
depunﬁ un pointer ca parametru
' chiar dacé furnizém un tablou ca parametru
ef€ctiv, pe stivé se d6pun€ admsa sa d6
inc6put
— convﬁrsie implicité
— in implamantama funcgiei, accesul la paramatru
in limbaj de asamblarﬁ se face ca la un pointer
112

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tablouri bidimﬁnsicmalﬁ (1)
- tablouri alocate static
int t [3] [3] ;
' tablouri cu alocare dinamicé
int **p;
' transmitare: ca paramﬁtri
void f(int X[] [3]) {...}
void g(int **x) {...}

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tablouribidim6nsi0na16 (2)
' ap6luri valide
f (t) ;
q (P) ;
' apeluri invalid6 (erori d6 compilam)
f (P) ;
q (t) ;
' cauzé - reprezentéri diferite in mermorie

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tab10u alocat static

- reprezérntarﬁ in memorie - liniaré

' 616mentele sunt plasatﬁ in memoriﬁ 1a
adrese consecutiv6, in ordinaa

t[O] [O], t [O] [1], t [O] [2], t [l] [O]
etc.

' cam est€ admsa dementului t [i] [j ] ‘?

' deplasarnentul in tablou: i-3+j

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tablou alocat dinarnic (1)

- alocare dinamicé

p=new int*[3];

for(i=0;i<3;i++)
p[i]=new int[3];

' sunt crerate prin alocare
— un tablou d6 3 pointari
— 3 tablouri d6 céte 3 nunmre intregi

—116

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Tablou alocat dinamic (2)
' care est€ admsa elﬁmentului p [i] [j ] ?
- folosind pointerul p, se accesﬁazéi alementul
p [ i 1
- folosind p0int6ru1 p [i] , se 210065621251
6lem6ntu1 p [i] [j ]
' sunt necesari 2 pagi
— complet dif6rit de modul de acces la tabloul
alocat static
—117

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Structuri
' admsa unui cﬁmp a1 unﬁi structuri 6st6
formaté din
— adresa d6 inceput a structurii
— deplasamantul cﬁmpului in cadrul structurii
' similar tablourilor
' dar cﬁmpurile unei structuri pet ﬁ d6 tipuri
dif€rit6
— deplasamantul nu mai €ste dat de un indice
118

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
A11n16rea adr6s610r

' deplasamﬁntul unui cémp - multiplu d6
dimensiunﬁa sa

' cons6cin§€1 - pot 6Xista goluri (octegi
n6utiliza§i) intm cémpuri

' iar dimensiunea structurii poate f1 mai mare
deceit suma dimensiunilor cﬁmpurilor

119

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
EX€IIlplll

struct S {

char a,b;

int c;

} S;
' dinwnsiunﬁa variabiki s d6 tip S - 8 octegi
' d6p1asamente: a - O, b - 1, c - 4

120

***************Ending Page***************


***************Beginning Page***************
***************page number:22**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Accezsul 1a cémpuri (1 )
' codCI
s.a=7;
s.c=22;
' traducere in limbaj de asamblam
mov byte ptr 3,7
mov dword ptr s+4,22
Usmlmov dword ptr s[4],22

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Accezsul 1a campun (2)
' de 66 tr6bui6 pmcizaté explicit dimensiunea
opﬁranzilor?
- folosim variabila s, a Cami dimensiun6 este
de 8 octati
' dar dorim s51 accersém 1 octet, respectiv 4
octeti
122

***************Ending Page***************


***************Beginning Page***************
***************page number:24**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
Structuri ca paranmtri d6 funcgii
- limbajul C nu pﬁrmitﬁ transmiteraa dﬁ
structuri ca parametri ai unor funcgii
— doar p0int6ri la structuri
' in limbajul C++ este posibil
' cum traducem operatorul — > ?
— determinaraa daplasamentului
— demferengiema
—123

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Arhitectura calculatoarelor 5i sisteme de operare - ASM
EX€IIlplll
' codCI
S *pznew S;
p—>b:11;
' traduc ere in limb aj d6 asamblam
mov eax,p
mov byte ptr [eax+l],ll
—124

***************Ending Page***************

