[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is a constructor in C++?
--InteriorSeparator--
A type-less function that is called whenever a class is created.
--InteriorSeparator--
easy
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are true about constructors?
--InteriorSeparator--
(right) A class may contain multiple constructors.
(wrong) A constructor must be static.
(right) A class may have constructors that are not public.
(wrong) A constructor must return a value.
--InteriorSeparator--
medium
--InteriorSeparator--
9, 10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a default constructor?
--InteriorSeparator--
A constructor without any parameters.
--InteriorSeparator--
easy
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When is a constructor called?
--InteriorSeparator--
(right) Whenever an object of that class is created on the local stack.
(right) Whenever an object of that class is heap allocated.
(wrong) Whenever a pointer to an object is created.
(wrong) Only when the class is first defined.
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If a class contains a 'const' data member, what must it have?
--InteriorSeparator--
A constructor where the 'const' data member is initialized.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens if a class has data members that have their own constructors?
--InteriorSeparator--
(right) Those constructors will be called in the order of their declaration.
(wrong) Those constructors will be called in reverse order of their declaration.
(wrong) The compiler will automatically resolve the order.
(wrong) An error will be thrown
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If a class doesn't have a default constructor, but has other constructors, what must another class with a data member of that type do?
--InteriorSeparator--
Explicitly call that constructor in all of its defined constructors or add a default constructor or remove all constructors.
--InteriorSeparator--
hard
--InteriorSeparator--
25, 29, 30
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens if you define an array of objects?
--InteriorSeparator--
(right) The constructor will be called for every object in the array.
(wrong) The constructor will only be called for the first object in the array.
(wrong) The constructor will not be called.
(wrong) Only the default constructor will be called.
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When using initialization lists, which dimension of a matrix can be left unknown?
--InteriorSeparator--
Only the first dimension can be left unknown.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens if an initialization list is too small for an array?
--InteriorSeparator--
(right) The rest of the array will be filled with the default value for that type.
(wrong) The program will throw an error.
(wrong) The program will crash.
(right) The rest of the array will be filled with 0 for type int.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main purpose of a move constructor?
--InteriorSeparator--
To reuse an allocated memory from a temporary object.
--InteriorSeparator--
medium
--InteriorSeparator--
110
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is a move constructor declared?
--InteriorSeparator--
(right) Using "&&" to refer to a temporary value.
(wrong) Using "*" to refer to a pointer.
(wrong) Using "&" to refer to a reference.
(wrong) Using the 'move' keyword.
--InteriorSeparator--
easy
--InteriorSeparator--
110
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If no move constructor is provided, but a copy constructor exists, what will the compiler do for temporary values?
--InteriorSeparator--
The compiler will use the copy constructor.
--InteriorSeparator--
medium
--InteriorSeparator--
110
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens if both copy constructors (const and non-const parameter) are present?
--InteriorSeparator--
(right) The compiler will choose the best fit based on the argument type.
(wrong) The compiler will throw an error.
(right) The non-constant form will be used if the argument is not constant.
(wrong) The const form will always be used.
--InteriorSeparator--
hard
--InteriorSeparator--
98
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When calling a constructor from another constructor's initialization list, what else is possible?
--InteriorSeparator--
Other initializations are not possible.
--InteriorSeparator--
hard
--InteriorSeparator--
52
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If a class has only static functions, what can be done to prevent instances of that class from being created?
--InteriorSeparator--
(right) Make the default constructor private.
(right) Use the keyword `delete`.
(wrong) Make all methods static.
(wrong) Mark the class as abstract.
--InteriorSeparator--
hard
--InteriorSeparator--
119, 121
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the `explicit` keyword do?
--InteriorSeparator--
Tells the compiler to use the constructor-based initialization and not the initialization list method.
--InteriorSeparator--
hard
--InteriorSeparator--
126
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a glvalue?
--InteriorSeparator--
(right) An expression that results in an object.
(wrong) An expression that reflects a value.
(wrong) A numerical constant.
(wrong) An expression that can only appear on the right side of an assignment.
--InteriorSeparator--
medium
--InteriorSeparator--
86
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is an xvalue?
--InteriorSeparator--
An expression that results in an object that can be reused (a temporary object).
--InteriorSeparator--
hard
--InteriorSeparator--
87
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a prvalue?
--InteriorSeparator--
(right) An expression that reflects a value.
(wrong) An expression that results in an object.
(right) Numerical constants.
(wrong) An expression that can only appear on the left side of an assignment.
--InteriorSeparator--
medium
--InteriorSeparator--
89
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is an lvalue?
--InteriorSeparator--
A glvalue that is NOT an xvalue.
--InteriorSeparator--
hard
--InteriorSeparator--
90
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is an rvalue?
--InteriorSeparator--
(right) A prvalue.
(wrong) A glvalue.
(right) An xvalue.
(wrong) An lvalue.
--InteriorSeparator--
easy
--InteriorSeparator--
91
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a copy constructor?
--InteriorSeparator--
A constructor that has only one parameter that is a reference (const or not-const) to the same class as the current one.
--InteriorSeparator--
easy
--InteriorSeparator--
93
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When is the copy constructor also used?
--InteriorSeparator--
(right) Whenever a function/method has a parameter of that class type that is not send via reference.
(right) If a function returns an object (not a reference or a pointer).
(wrong) Never
(wrong) Only with const parameters
--InteriorSeparator--
medium
--InteriorSeparator--
95, 96
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When are constant or reference data members initialized?
--InteriorSeparator--
In every constructor defined in the class, or directly in the definition of the class (starting with C++11)
--InteriorSeparator--
hard
--InteriorSeparator--
41, 44
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the Singleton pattern?
--InteriorSeparator--
(right) A design pattern that restricts the instantiation of a class to one object.
(right) Combining a private constructor with a static function.
(wrong) Making all methods of a class static.
(wrong) Inheriting from a base class.
--InteriorSeparator--
medium
--InteriorSeparator--
114
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are value types used for?
--InteriorSeparator--
Helps the compiler understand how to use that value.
--InteriorSeparator--
easy
--InteriorSeparator--
85
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When can initialization lists be used?
--InteriorSeparator--
(right) To initialize classes and structures.
(wrong) Only to initialize structures.
(right) To return a value from a function.
(wrong) Only with default constructors.
--InteriorSeparator--
medium
--InteriorSeparator--
60, 83
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When can the code below compile?
class Data{
    int x;
    public:
    char t;
    const char* m;
};
void main(){
    Data d1{ 10, 'A', "test" };
}
--InteriorSeparator--
If the data members x, t, m are public
--InteriorSeparator--
hard
--InteriorSeparator--
62
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the context of initialization lists for classes, what needs to be present for assignments to be possible?
--InteriorSeparator--
(right) A matching constructor
(right) Public data members
(wrong) Private data members
(wrong) No constructor
--InteriorSeparator--
medium
--InteriorSeparator--
64
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if you try to initialize a class with an empty initialization list {} but no default constructor is present?
--InteriorSeparator--
It will result in an error and will not compile
--InteriorSeparator--
medium
--InteriorSeparator--
68
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What values will d1 have after the execution of the code below?
class Data
{
int x;
public:
char t;
const char* m;
};
void main()
{
Data d1;
}
--InteriorSeparator--
(right) d1.x = 0
(right) d1.t = ‘\0’
(right) d1.m = nullptr
(wrong) Garbage values, it depends on memory
--InteriorSeparator--
hard
--InteriorSeparator--
70, 71, 72
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.1526487383539277}]