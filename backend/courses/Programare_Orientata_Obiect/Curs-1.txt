***************Beginning Page***************
***************page number:1**************
00 P X Gavrilut Dragos
Course 1

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
> Administrative
> Glossary
> Compilers
> OS architecture
SL1 m mary b C++ history and revisions
> From C to C++
> Classes
> Classes - Data Members
> Classes - Methods

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
> Administrative

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Administrative
> Site: httgs://sites.google.com/view/fii-Qoo/ ‘3
> Final grade for the OOP exam: ‘g
- First lab examination (week a) —) 30 points ‘1
- Second lab examination {week 14 ur15i —> 30 points
- Course examination -> an points
- Lab activity —) up ta 1 point for each laboralury and nn murE than 10 points in total
> Minimum requirements to pass OOP exam:
it capability to write C++ programs based 0n speciﬁcalions
2, capability lo correctly apply OOP principles (inheritance, polymorphism, etc)
3, ability t0 understand OO principles/nrogramming-techniques written in C++,~"
4 ability to detect simple errors in a C++ program and understand them/w"

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
\ > Glossary
\

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Glossary

> API —) Application frogram interface

> Library r a set o functions that can be use by multiple programs at the same
time ((or example math functions like cos, sin, tan, etc)

> GUI -) graphic Qser interface

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Glossary
> Compiler - a program that translates trorn a source code (a readable code) l
into a machine code {binary code that is understand by a specific architecture ‘r
r x86, x64, ARM, etc} r
> A compiler can be:
> Native » the result is a native code application (or the speciiic architecture ‘a
> interpreted e the result is a code lusually called byte-code) that requires an
interpreter to he executed. lts portability depends on the portability of its
interpreter
b JIT (gust 1n Iime Compiler] - (he result is a byte-cﬂde, but during the Execution
parts of this code are convened to native code ior performance
Interereted JIT Native
I Faster Low Level'
Portable, High Level

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Glossary
Source 1 Object File ‘
Executable
Source 1 Object File Z a‘
i Source n Object File n Libranes /

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
Glossary
> Linker - a program that merges the object files obtained irom the compiler ‘l
phase into a single executable ‘l
> It also merges various libraries to the executable that is being create. ‘1
> Libraries can be linked in the following ways: i‘
> Dynamically: When applicatinn is executed, the operating system links it with the I
necessary libraries [if available). Ii not, an execution error may appear
> Statitt The resulted executable code contains the code from the libraries that it
uses as well
> Delayed: similar with the Dynamic load, but the libraries are only lbaded when the
application needs one runction land not before that moment). ,
Static Delayed Dynamically r
——
I Smaller cOdE'
Portable

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
> OS Architecture

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
OS Architecture
> What happens when the OS executes a native application that is obtain from a I
compiler such as CH ? I‘
> Let's consider the following C/CH file that is compile into an executable ‘I
application: ‘1
APP-(PP I
“include mm.» l
m vectnruw]; ‘
m1 IsNuiber-oddﬂnt In l
Mum (m x 21:1“);
)
ma nil-mm l
m p01,‘;
m lWx-on-lwnxdeﬂn») i
u (um-“mum; t
v::tcr'[pnz¢¢] - 1;
l } '
prlmmrma m m numbers l");

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
OS Archi tectu re
> Let's assume that we compile “App.cpp" on a Windows system using Microsoit
C++ compiler icllexey
> App.cpp is compiled using dynamic linkage for libraries‘
A . .
PP cpp APP-Dbl App.exe
msvcrLlib \
kemelﬂllb
ntdlllib

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
OS Architecture
b Let's assume that we Compile “Appﬂpp” 0n a WindOWS System using MiCrDSuft
Cw compiler lcllexe)‘
> App.cpp is compiled using dynamic linkage (or libraries‘ -
pp Lpp APP-0b] App.exe \
msvcrtllib
“print!” function tells the
_ linker t0 use the CRT libraly ,
kernel324lib (where the code for this
function is located). msvcrtlib
is (he Winduws version of CRT
ntdll.lib (Q'Bunlime) library‘
/,

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
OS Archltecture
b Let's assume that we Compile “Appﬂpp” 0n a WlndOWS System using MiCrDSuft
Cw compiler lcltexe)‘
> App.cpp is compiled using dynamic linkage (or libraries‘ -
A .' . l
pp Lpp APP-0b] App.exe \
msvcrtlllb
The implementation o! printf
_ 1mm msvcrt.lib uses system ,
kernel324llb lunction to write characters to
the screen‘ Those lunctions
are located into the system
ntdll.lib library kernel32.lib
/,

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
OS Architecture
b Let's assume that we Compile “Appﬂpp” 0n a WindQWS system using MiCrDSuft
Cw compiler {cliexey
> App.cpp is compiled using dynamic linkage (or libraries‘ -
pp Lpp APP-0b] App.exe i
msvcrtilib
_ Kernel3Z,lib requires access to ,
kerneBZlib windows kernel / lo-levelAPl
functions. These iunctions are
provided through ntdll.lib
ntdll.lib
/,

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
OS Architecture
> What happens when a.exe is executed:

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
OS Architecture
> Content of “annexe” is copied in the Process memory
— I
—
k AppleXe
—

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
OS Archltecture
> Content nv the libraries that are needed by “a.exe" is Copied in the process
“my — ‘=
msvcrtddll — 3
Winn
kemel32.dll
"mud" g NW

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
OS Archltecture
> References to diﬂerent functions that are needed by the main module are
"8am —
imparted in App.exe from the
msvcrtxﬂl CRT libra
‘ W‘ '-
kernel32.dll

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
OS Archltecture
> Slack memory is created‘ In our example, variable p02, i, and parameter n
will be stored into this memoryl —
> This memory is not initialized‘ That is —
why local variables have undeﬁned
values, — —
> Every execution lhread has its own stack — ‘r
EVERY local variable and
(unction parameters will be
stored Into this stack

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
OS Architecture
> Heap memory is allocatede Heap memory is a large memory from where smaller
buffers are allocated. Heap is used by —
the following functions: ;
, opemr new — 3
e melee, eeuee, eee — a
b Heap memory is not initialized.
e The eeme heee ee eeee by meleele BE-
threats
msvcrt.dll

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
OS Arch1 tectu re
> A memory for global variable is allucaled. This memory is initialized by
default with 0 values‘ This is where all —
global variables are stored, Ii a global
variable has a default value (different —
than U), that value will be set into this
memmyspace' EE- r
> In our case, variable vector will
\ be stored into this memory,
—

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
OS Architectu re
b A memory Space for Constant data is created‘ This memory Stores data that
will never changer The operating system —
creates a Special virtual page that does
not have the wr1te flag enable —
> Any attempt to write to the memory Global Variables
that stores such a variable will produce m
an exception and a system crash‘
> In our example, the String “Found 160 — ,
odd numbers I” will be stored into this App.exe
memory msvcrt.dll Found 100 odd

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
OS Archltecture ‘
> Let's consider the followin examle: ‘
‘
void main (void) ‘
{
char 51,52,53; ‘
char *p;
51 = 'a‘;
sZ = 'b‘;
$3 = 'c‘;
p = 851;
*P = '6‘;
P[1] = '1';
*(P+Z) = '1';
}—_

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
OS Archltecture
> The program has 4 variable (3 0f type Char "a','b’ and ‘C’ and a pointer ‘p'). I
> Let's consider that the stack start at the physical address 100 r
App.cpp Stack Address Var I
2m mm ("may 99 (s1)
:22; 98 ($21 r
Z; I ‘it; 97 (53)
53 Z ‘a;
v - an; 93 (p)
w - w;
um - ‘r;
‘(My - ‘2w
)—

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
OS Archltecture
> Let's also consider the following pseudu code that mimic [he behavior of the I
original code ‘
2nd main (1mm 99 (S1,
:::: 98 (s21 l
iii ‘El; 97 (53)
53 : 'c';
5;.‘22 93 (P)
PP] ' T;
W . w
)—

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
OS Archltecture
> Upon execution r the following will happen: I
z,“ mm mm Stack[9§] _ ,a. 99 ‘a, 1
:22; if”; 9s z 1
97 2
33-15;‘ 93 7
w - I‘;
PP] ' ‘f;
‘(W27 - ‘T1
)—

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
OS Archltecture
> Upon execution r the following will happen: I
z,“ mm mm Stack[9§] _ ,a. 99 ‘a, 1
5:1; $552,“; Stack[98] = 'b‘ 9s ‘b’ 3
97 2
345;‘ 93 7
w - I‘;
PU] - T;
“(my - ‘2w
)—

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
OS Archltecture
> Upon execution r the following will happen: I
z,“ mm mm Stack[9§] _ ,a. 99 ‘a, 1
5:1; $552,“; Stack[98] = 'b‘ 9s ‘b’ 3
“i ' lilf |—>sta<k[sv] = '<' 97 ‘c’
v- ; 93 7
.,, . I‘;
PU] - ‘f;
W, . ‘r:
)—

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
OS Archltecture
> Upon execution , the following will happen: I
z,“ mm (may steam] _ ,a. 99 ‘ ‘a, 1
5:: 3551,53; “MW : ,b. 98 ‘b, ‘
s! - ‘aH \\
$2 . m‘; Sta<k[97] = 'c' 97 \\ ‘c’
Z ' '~ \»
*sucsz] = 99 93 99
£11 vi‘;
We, . ‘r:
)—

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
OS Archltecture
> Upon execution , the following will happen: I
Stack[93] = 99, Stack[99] = ‘0’ “
App.cpp Stack Address Value ‘
z,“ mm (may steam] _ ,a. 99 ‘0, 1
2:2; 25*“; smklsn = 'b- 9s ‘b’ ‘
3:11;: Sta<k[97] = 'c' 97 ‘c’
3.’ ‘3 5tack[93] = 99 93 99
#1: - ; L.smk[sta<k[ss11 - 'a'
) ‘(W27 - ‘T1

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
OS Architecture
> Upon execution , the following will happen: I
Stack[93] = 99, Stack[99-1] = ‘1' 1
e
2mm" ("may meme] - 'e- 99 ‘0' 1
Eiiiiign'“; 5mm] = 'b- 9s ‘1' ‘
3211212 smkm] = '<' 97 ‘c’
E3352 swam] = 99 93 99
mstackﬁtackﬁsl] - 'a'
; Stack[5tack[93]-1] - ‘1-

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
OS Archltecture
> Upon execution , the following will happen: I
Stack[93] = 99, Stack[99-1] = ‘1' 1
App.cpp Stack Address Value ‘
z,“ mm (may steam] _ ,a. 99 ‘0, 1
5:13:77“; 5m:k[98] = 'b‘ 9s ‘1' ‘
2;: ‘Li stackm] = -<- 97 *2’
23-15;’ suck[s:] = 99 93 99
‘I! - ‘ ‘;
Stack[5tack[93]] - ‘a
)— Stack[5tack[93]-1] - ‘1-
Stack[$tzck[93]-2] - '1'

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
OS Architecture (memory alignment)
int x; ‘a
int y; ‘g
int 1; ‘a
};
2 EEEEIIIIIIIIIIIIIIIIIIII '
IiIlIIIiilliiﬂllllllllllllllllllIi!

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
OS Architecture (memory alignment)
char x,- ‘1
char y; ‘a
int z; ‘I
)s E‘
IIIIIIIIIIIIIIIIIIIIIIII '
lilllllliillllllllllllllllllllII

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
OS Architecture (memory alignment)

c ha r x,‘ ‘a

c ha r y ; a

Chal‘ z; g

int t; ‘a

L' 1
II! IIIIIIIIIIIIIIIIIIIIIIII i
illllliiillllllllllllllllllllli'

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
OS Architecture (memory alignment)

char x 3 ‘1
char y; =
c ha r z ; I‘
shor't s; a
int t ; I

} s

III IllIIIIIIIIIIIIIIIIIIIIIIIII'!
illlllililiiiﬂlllllllllllllllllil

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
OS Architecture (memory alignment)

char X ; ‘I
short y ,- 1
char z,‘ ‘a
short s; a
int t; I

)s

Ill I!llﬂllllIIIIIIIIIIIIIIIII!’
illlllliliiiﬂlllllllllllllllllIIII

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
OS Architecture (memory alignment)

double z; 1
char s; a
short t; I
int u;

h

IIIIIIIIIEEEEEEEE IIIHEEHIIIIIII!"
iliiiiillllllllliiﬂilﬂllﬂﬂﬂlllllil

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
OS Architecture (memory alignment)
itm Test
ll'lt Z; 1
); \l
BEHEEIIIIIIIIIIIIIEEEEEIIIIIIIIII
IIHIIIIIIIIIIIIIEHEIIEHEIIIIIII '

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
OS Architecture (memory alignment)

char x; ‘I

short y; 1

int z; ‘a

char t; z

); 1
Ell!BEBE!liIIIIIIIIIIIIIIIIIIII '
IiIilliiiliiﬂlllllllllllllllllllIi!

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
OS Architecture (memory alignment)
{ char x; :1‘
short y; l
int z; a
char t; I
};
IIEEEEIIIIIIIIIIIIIIIIIIIIIIIIII '
illilliilllllllllllllllllllllli'

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
OS Architecture (memory alignment)

{ char x; a‘:
short y; I‘
int z; a
char t; 1

L‘

EIIBEBE!IIIIIIIIIIIIIIIIIIIIIII '
IiIllliiliilllllllllllllllllllIi!

***************Ending Page***************


***************Beginning Page***************
***************page number:44**************
OS Architecture (memory alignment)
( char X; 1‘:
short y; I
int z; ‘a
char t; I
)i
II!!!ElilililﬂEIIIIIIIIIIIIIIII '
lillllliilliiﬂllﬂHEIIIIIIIIIIIIIIi!

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
OS Architecture (memory alignment)
struct Test struct Test2 all
short y; short y; a
Testz z; int z; I‘
int t,- },- z
char u; I
1;
IIIHEHHHHEH HIIIIIIIIIIIIIII
iliili'iggﬂlﬂllnllllEEIIIIIIIIII '

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
OS Architecture (memory alignment)
> Alignment rules for cl.exe (default settings) ‘i
> Every type is aligned at the first offset that is a multiple of its size. ‘I
> Rule only applies for basic types ‘a
> To compute an offset for a type, the following formula can be used: l
ALIGN(position,type) (- (((position - 1)Islzetrf(type))+1)‘slzecrf(type)
> The size of a structure is a multiple of the biggest basic type size use
in that structure
> Directive: pragma pack and declspeqalign) are specific to
Windows C++ compiler (cl.exe)

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
C++ history and
revmons

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
C++ history and revisions
-—
1979 Bjarne Stroustrup starts to work at a super class of the C language‘
The initial name was C with Classes

1983 The name is changed to C++

1990 Borland Turbo C++ is released

199B First C++ standards (ISO/IEC 1488221998) 9 C++9B

2003 Second review —> (~03

2005 Third review —) C++0x

2011 Fourth review —) C++11

2014 Fifth review —) C§+14

2017 The sixth review is expected -) C++17

ZUZO Seventh review 9 CHZO

2023 Eight review —> C++Z3 or C++2b

***************Ending Page***************

***************Beginning Page***************
***************page number:49**************
C++98

Keywords asm do if return typedef auto double inline short typeid bool
dynamic_cast int signed typename break else long sizeof union
case enum mutable static unsigned catch explicit namespace
static_cast using char export new struct virtual class extern
Operator switch void const false private template volatile
const_cast float protected this wchar_t continue for public
throw while default friend register true delete goto
reinterpret_cast try

Operators [} [ ] it W l ) \\
(11> <%%>%:%:%I;:.N \
new delete? c: . .'
+ * l 96 A & l ~
1 = < > += =
'= /= %=
": Et: |: << >> >>: <<: :: !:
<= >= ea | | t+ .
>' >

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
C++ compllers g
> There are many compilers that exists today for c++ language. However, the I
most popular one are the following: “
l
Visual C++ Microsoft 1011 (14.29.3013!) CHZO I
(IQ-+13 partial) ‘
GCC/GH- GNU Compiler 11 .Z C++ZO
(Ca-+23 partial)
Cling (LLVM) 13111 CH-ZO
(c++za partial)

***************Ending Page***************

***************Beginning Page***************
***************page number:51**************
l From C to C++

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
C to C++ g

> Let's look at the following C code. I
APP-(PP I
slmc! Per-5M l

( , l
m k<i l
m mm; l
in“ mm ‘
( l
mm 9; l
mmlw- - “HP-MP);

DJ“ - -s; ‘
pmw - manna;

>

I b What can we observe that does not have any sense ?

***************Ending Page***************

***************Beginning Page***************
***************page number:53**************
C to C++
b Let's look at the following C code.
APP-(PP
5W“ Per-5M
( ,
m m:
m Mm;
in“ mm
‘ v .
DJ‘: - .s;
pmm . manna; x
) x
> The program is Correct, however having these values for the field Age and
Height does not make any sense.
> There is no form of initialization (or the variable p. This means that the value ‘
for the Age field that printf function will Show is undefined. i

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
C to C++
> The solution is to create some functions to initialize and validate structure Person.
App.c App.c
5W“ Per-5M SW" Person
1 , ( ,
m m; m m;
m mm; m mm;
> )
m4 nlﬂO m4 mum“ 'p)
( (
, ,, . was u;
Puntﬂ'wn = unwm; mum: no;
)
Mum . 1m; m4 Selm(PerM mu“ value)
) (
a; ((viluol) u ("imam
ww "in;
)
_ m4 MMWOMM WM value)
(
n ((mwsn) u (“heal”)
mum‘: "m;
, ,
m4 "no
(
Periwi r;
lmt(lv);
Saleem). -s>;
“mama, 1m);
)

***************Ending Page***************

***************Beginning Page***************
***************page number:55**************
C to C++
> This approach while it provides certain advantages also comes with some drawbacks:
App.c I‘
51M! Per-5M i
( , i

m k<i i

m mum; i
) i
ma mums” q» 1
(

pr)!“ 1n; I

P~>>hum- m;
) i
ma SmbgeOer-snn ~p,m mm ‘
(

a; ((viluvl) u (valued-50))

ww- v.1“;

>
ma Seamlﬂqver-snn ~p,m value)
(

n ((mmsn) u (“heal”)

P~>>hum- "m;

ma um)
(

mm v;

mm»;

5:0qu .5);

swumuo. W);

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
C to C++
> This approach while it provides certain advantages also comes with some drawbacks:
:lmc! Per-5m SelHeight must be validated ‘
m k<i I
m mum; i
in“ “MM” -.,) < . , ‘1
Wm setweﬂersm mm m“) I
‘ v (OI-hem) u (vlluedBB) u- i
) p-)ke- value; ‘
Wm sammwmw ‘min vilu!) < - >
ma "no
(
Person 9;
mu»);
saw-(w. ~s>;
scoumtﬂv, 1m);

***************Ending Page***************

***************Beginning Page***************
***************page number:57**************
C to C++
> This approach while it provides certain advantages also comes with some drawbacks:
a) Pointer “p” from functions SetAge and I‘
:lmc! Per-son SetHeight must be validated ‘
2:: :2”; h] We can still change the values for fields Age‘
) and Heights and the program will compile
“'4 “"0"!” 'p) ( ’ ' and execute‘ ‘
wid Setke(Persw mm m“) I
‘ v (“are”) u ("Mm u- i
) p-)A‘e- value;
ma Setbkiﬂitwersw mm viluQ) c - >
ma "no
t
Person p;
mm»);
5-0009. ~s>;)_ ,

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
C to C++
> This approach while it provides certain advantages also comes with some drawbacks:
a) Pointer “p” from functions SetAge and I‘
:vw Per-son SetHeight must be validated ‘
2:: :2”; h] We can still change the values for fields Age‘
) and Heights and the program will compile 1
ma “mm” q» t . i ‘
and execute‘
ma Sethe(Perswi mm value) c _ > I
1.1 5.1m t k _ 1 t 1 cl Variable p is not initialized by default (we ‘
‘m n ( PM D‘ n u “2) ( A have to call a special function to do this). ‘
Md IainO
‘ .
I
) . l . lump-Me);

***************Ending Page***************

***************Beginning Page***************
***************page number:59**************
C to C++
> This approach while it provides certain advantages also comes with some drawbacks:
ai Pointer “p” from functions SetAge and I‘
zlruc! Person SetHeight must be validated ‘
$351; bl We can still change the values for fields Age‘
) and Heights and the program will compile i
void hikivei'smi ‘a; 1...) i
and execute.
ma sum Perswi 'rmm mu) l1") I
m S ‘m ‘ P ' ‘ t l ii Variable p is riot initialized by default (we ‘
'° ‘ a“ ‘ "5“ P‘ " “ “*1 ""l have w call a special function to do this). i
ma mm» mm ‘mm "he; (m)
d m»! t P ’ t l a) Havmg a lot of functions that work With a
V'" m "m "' m “a “J L") structure means that each time one of
h“ “"‘“["“°" '° 1'") those functions is called we need to be sure
m owing“ Perswi ~v7 l1") that the right pointer is pass to that
— iunctioris

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
C to C++
Basically , we need a language that can do the following:
> Restrict access to certain structure fields ‘a
> There should be an at least one initialization function that is l‘
called whenever an instance of that structure is created. I‘
> We should find a way to not send a pointer to the structure every 3
time we need to call a function that modifies different fields of
that structure
> We should not need to validate that pointer (the validation should
be done during the compiler phase). ,

***************Ending Page***************

***************Beginning Page***************
***************page number:61**************
C to C++ (Conversmns)
‘ In MI;
( if (Mu)
v (01:53:; u (‘lawman
vom ml(P=rsm 'v)
( 1F (In-mu)
3.,“ -m
(
Iniﬂlo);
Seth-(19.10); I
)

***************Ending Page***************

***************Beginning Page***************
***************page number:62**************
C to C++ (Conversmns)
APP-c APP-CPD
( if (Mu)

v (01:53:; u (‘lawman
vom ml(P=rsm 'v)
( 1F (In-mu)
3.,“ -m
(

Iniﬂlo);

Seth-(19.10); I
)

***************Ending Page***************

***************Beginning Page***************
***************page number:63**************
C to C++ (Conversmns)
51m: Wm ch55 Mm
t _ x ‘ _
) m W’ m" e' Access modifier (specifies
rm setbgeWersm “mm um) who can access the ﬁelds
1F (Filth-L)- thai are declare after ‘(I
v “mum? M 1v:lue<199))
D->l:e . value;
)
m1 mmpmw w)
(
v 19-04mm
return;
ww 1 1a‘
>
Mn malﬂU
(
Person n;
mum
Setbiﬂivdﬁli
>

***************Ending Page***************

***************Beginning Page***************
***************page number:64**************
C to C++ (Conversmns)
(m W 2,,“ W
( if (v=lllu.)
1r (01:53:; u ("mum-m
vold Xn|l(P=rsm 'v)
( 1F (DH-MILL)
3.,“ um)
(
Ini\(Io)i
selheﬂvnl); I
)

***************Ending Page***************

***************Beginning Page***************
***************page number:65**************
C to C++ (Conversmns)
M“ PM was W
C (
M. w;

—

if (Mu)

mm;

1F ((vulme) H (valued-88))
vold Xml(Persm 'V)
(

.F (hm
)
vum um)
(

MM p;

mime);

Sellmﬂvnn); '
)

***************Ending Page***************


***************Beginning Page***************
***************page number:66**************
C to C++ (Conversmns)
m 2,,“ W
‘ mt Mp; urn-tn:
) in! be;
‘ i; (PM
mm; ) Constructor
1F ((V-Ilue>9) H (valued-88))
)
mm um)
(
“$00);
senaﬂvnl); I
)

***************Ending Page***************

***************Beginning Page***************
***************page number:67**************
C to C++ (Conversmns)
APP-c APP-CPD
C (
) in! lee;
( void SQKmUIK value);
if (p=0l:u.) Perin;
1F (Ml-ma; u (valued-m» .n - mm: > w v1 ..
W.“ . um; (
) IF ((valuem) II: (valuumh
1F (DH-)IILU )
)
mm um)
(
mm»);
senaﬂvno); I
)

***************Ending Page***************

***************Beginning Page***************
***************page number:68**************
C to C++ (Conversmns)
APP-c APP-CPD
m d,“ W
( (
> M. w;
( void saueuu value);
iF (v=ll:h)_ ) Perswoi
1F ((v-Iluem; u (v-Iluedﬂ!» m Perxmnieﬂgeﬂnt mu)
Eke . um; (
) IF ((valuem II: (valuumn
vnld mumm w) we Z valve;
( )
)
<
"$00);
Selhrﬂv-ll); ,
)

***************Ending Page***************

***************Beginning Page***************
***************page number:69**************
C to C++ (Conversmns)
App.c App.cpp
M“ PM <1,“ Pm
( (
1n M Wm:
) in! ‘6!;
m “Wm W! "M, M:
( void SklmulK value);
if (FltlLL) PerEWO;
m um; )
,F (MW) u ("mm m ansmm "w
W.“ . um; (
If ((valuem) I‘ (valuumﬁ
.F (mm WWW“)
w“; (
Dam Z ll;
(
MM p;
Inmlo);
sethcﬂvnn); I
)

***************Ending Page***************

***************Beginning Page***************
***************page number:70**************
C to C++ (Converswns)
W W (his W
C (
) in! HE;
( void SQKMQUIK value);
if (FltlLL) ) PerEWO;
1F ((v-Iluem; u (v-Iluedﬂ!» m Per-sm::5eﬂge(m vllne)
W.“ . um; (
) If ((valuem) I‘ (valuumﬁ
vold Xml(Persw 'v) misoke 1 value;
( )
.F (Wm, WWW, ‘
mum; ( ‘
) )
mm um) vnm um) I
( ( L’
‘ 'nn); "
)

***************Ending Page***************

***************Beginning Page***************
***************page number:71**************
C to C++ (Conversmns)
APP-c APP-CPD
C (
) in! lee;
( void SQKmUIK value);
if (FIYLL) ) Perin;
1F (Ml-ma; u ("mum-m m Per-municilgeﬂnt m.)
W.“ . um; (
) IF ((valuem) II: (valuumh
vold Xml(|>ersm 'v) misoke 1 value;
( )
Mum; (
) )
mm um) WM um)
( (
) Selhrﬂvnl); ) ,

***************Ending Page***************

***************Beginning Page***************
***************page number:72**************
r r

m w, WM";
) n2 w.
Mr SUMWM w,“ “my 9mm:
r rm 5mm,“ “Mr,

1;<g::mu\y v-r-wnl],

\‘etm'lv, r
,r umwr) M mrrmrrn mm PursounSutAthu! “1ou
p We V Mr r

» 11 rrmwm as lvanuzmll
vmd XmHPzr-wn m my»? Z m“,
1 r

,r (WM/u) mm rmom

Mm. Z m, and“! Z m,
r 1
rm mm rm mm
r r

rmmrr. . in“ m

Compiler error r ﬂew
) Age IS declared as

Age

***************Ending Page***************

***************Beginning Page***************
***************page number:73**************
> Classes

***************Ending Page***************

***************Beginning Page***************
***************page number:74**************
> Member variables E
A mm deﬁned as member =4 me alas 1
» Each am membercan have m vvm awe‘ modvﬁer a‘
A Daramemhermnalwbesulk x‘
,, Atlas may have no data members 1‘
b Member functions (methods) X
A WWW:mum“ g
° Em- merud m um m own ‘(less mam“ ‘a
A A mind can accesx any data member deﬁned or other method deﬁned m lhe cla§ regardless 0H1; axes; a‘
mudlﬁer
A Aclass may have no mm;
> Cunstructors
» Methods Mlmmr A rerum type um are called whenever an mum B! A class ls evened
,, A :las m6 m have m have mnsmmmrs
A A consmlcwr my have drﬂerem "<55 mm“ ,7
> Destructor f
» Aﬁmmon Wlmullll mum Kw: m“ .5 ulled whenever In Inshnc: 01 A cllss vs 4“qu
>> A (lax mes m have m have a desmxmr
> Operators

***************Ending Page***************

***************Beginning Page***************
***************page number:75**************
Classes
> (Access modifiers)

***************Ending Page***************

***************Beginning Page***************
***************page number:76**************
Classes (access modifiers)
> The are 3 access modifiers defined in C++ language:
> Eublic (allow access to that member for everyone)
> grivate (access to that member is only allowed from functions l
that were defined in that class). This is the default access ‘3
modifier. ‘
k > Erutected

***************Ending Page***************

***************Beginning Page***************
***************page number:77**************
Classes (access modifiers)
> The code compiles and runs “1
gm‘ P‘: correctly ‘1
L > mue; > Member "Age" from class Person is l
(“"d ‘:0 _ declared public and may be access ‘1
k ) viii-"a; from outside the class. ‘

***************Ending Page***************

***************Beginning Page***************
***************page number:78**************
Classes (access modifiers)
> This code won't compile (Age is “1
i'm M” defined as private and can not be ‘1
) access outside its class/scope). ‘I
(wid Iain() ‘2
k ) pm i- ‘

***************Ending Page***************

***************Beginning Page***************
***************page number:79**************
Classes (access modifiers)
> The code compiles and runs I
2"“ :‘Z’: correctly I
Nari?‘ W b From outside the class scope only 3
) "id “WM "m the SetAge method is call (SetAge 3
YD“ Tmmwm "D is defined as public) “
in“ um) > As SetAge is a method in class
Emil»); Person it can access any other
> method or data member
regardless of their access
modifiers.

***************Ending Page***************

***************Beginning Page***************
***************page number:80**************
Classes (access modifiers)

> This code won't compile (member

2"“ "m" Age from class Person is private I

l.“ .1 and can not be access outside its ‘1

< __ .. _ scope). I

I > If no access modifier is specified, I
the default access modifier will be
private.

***************Ending Page***************

***************Beginning Page***************
***************page number:81**************
Classes (access modifiers)
APP~¢PP > This code won't compile (member
@211‘ Age from class Person is private
3i“ ‘who and can not be access outside its
f scope).

Person p;

lege = 10;
>—
> This code will compile. C++
-:‘[§:J_" ‘ structures support access
if,“ who modifiers as well. However, the 1
f default access modifier for a

:fZZZ"_"§m structure is public.
>—

***************Ending Page***************

***************Beginning Page***************
***************page number:82**************
Classes
> (Data members)

***************Ending Page***************

***************Beginning Page***************
***************page number:83**************
Classes (member data)
> Member data are variables defined “1
i'm Pi”: _ within the class ‘1
Wwi?‘ ‘f"’*”“ b In this example , Age and Height I‘
i“ 1 Om’ "1-; are private, and Name is public 1‘
( Person Pi ‘
k )

***************Ending Page***************

***************Beginning Page***************
***************page number:84**************
Classes (member data)
> This code does not compile ‘E
gm‘ M” _ because Age is a private data ‘1
"Mi; “mam; member ‘I
Mm; =
) my W; =
vnld "no ‘
( 1 .. .> ‘
k ,

***************Ending Page***************

***************Beginning Page***************
***************page number:85**************
Classes (member data)

> This code compiles because Name ‘E

gm‘ “I”: _ is declared as public. ‘1
“Aug! Ageleﬂl;

(liar ‘Hale; ‘i
) i
vnld "no ‘
k
)

***************Ending Page***************

***************Beginning Page***************
***************page number:86**************
Classes (member data)
> Member data can also be static “1
gm‘ Pi”: _ and have access modifiers at the ‘1
same tlmev
pubhc: . . ‘2
, 1

***************Ending Page***************


***************Beginning Page***************
***************page number:87**************
Classes (member data)
> Member data can also be static and “
2"“ M” have access modifiers at the same “
'"Miii “Wm; time ‘g
sud: m X;
“Mix” ‘up; > Any static data member that is I
mu: m v; defined within a class has to be I
defined outside its class as well
(similar to a global variable).
> One can also initialize this static
variables. If you do not initialize
these variables, the result is identical
to the use of global variables (the
default value will be 0)

***************Ending Page***************

***************Beginning Page***************
***************page number:88**************
Classes (member data)
App,cpp > Static data members can be access as the
class mm scope of the class or as a member ‘rem of any I‘
( lav-lute: instance of that class‘ 3
225$??? b In this case, after the code is executed, V will I
Wblic: be 6 1
my mm; ' \
nun: m v; 1
Lt MW;
m mm" e 1n;
ma "no
(
Persm --
WWW";

***************Ending Page***************

***************Beginning Page***************
***************page number:89**************
Classes (member data)
App,cpp > The code does not compile because X is
in“ mm private, I‘
"1"!" > We need to create a method to be able to ‘z
m “yuan .
mm m x; access this values I
Wblic: 1
(m mm; ‘
mm m v; 1
l“ MW“;
m Pmmw e 1n;
vnld "no
(
Person --
, ﬂm

***************Ending Page***************

***************Beginning Page***************
***************page number:90**************
Classes (member data)
Appxpp > Now the code compiles and X value is set to 6 “
class Pusan I
( ‘
mum ‘
m “mum; I
sud: m x;
Wblic: 3
(m ‘up;
nun: m v- \
‘
l
m mm“;
m Wm" - 1-;
m4 Min-menu“ value)
)
m4 um)
(
Perim -

***************Ending Page***************

***************Beginning Page***************
***************page number:91**************
Classes (member data)
App,cpp b The code compiles and runs correctly ‘1
2"” q > Static data members belong to the class and l‘
)_ I“ X"; not to the instance r that's why they don't i‘
(in! n count When We compute [he size 0f an I
( m m; instance ‘I
mm m z; . l ‘
>; b A class may be defined Without any data 1
:1“! a member. In this case it's size will be 1t
mm m n _ . .
i; n > Upon execution the program Will print:
i; sheaf-‘(C1) = 8
m uni; _
m cam; sueoﬂcz) = s
ma "no
‘ MH~51Mlu>.a~.,iwlu>>; Sizeoﬂcz) = 1
wi-itmsimnuwnEmma)n
mmwnmmn-w,mama»; size0f(c4) = 1
PrintF("nsz(ﬁl)-Xd',nsz(ﬁl));

***************Ending Page***************

***************Beginning Page***************
***************page number:92**************
Classes (member data) ‘
App,cpp Address Name Value ‘
2"” “m 100000 Dalexl 0 ‘
Mil?“ 300000 d1 .x z ‘
mm m z; ‘
n 300004 dLV z ‘
m haunt; ‘
f“ "MO 300000 02.x 2 ‘
, 0.1. MM" 300011 dZX 2
200010 le z
200010 an 2

***************Ending Page***************

***************Beginning Page***************
***************page number:93**************
Classes (member data) ‘
App,cpp Address Name Value ‘
2"” “m 100000 Dalenl 5 ‘
"1:3"; 300000 d1 .x z ‘
mm m z; ‘
n 300004 um z ‘
m haunt; ‘
f“ ""0 300000 02.x 2 ‘
_'“" 300011 020v 2
)
200010 01x z
200010 an z

***************Ending Page***************

***************Beginning Page***************
***************page number:94**************
Classes (member data) ‘
Appcpp Address Name Value ‘
Eh” “m 100000 Dalenl 5 ‘
h 300004 dLV I ‘
f“ ""0 300008 d2.X 7 ‘

M“ 5%.”; 300011 dZX I
) 300016 d3,X 7

300010 d3.V Y

***************Ending Page***************

***************Beginning Page***************
***************page number:95**************
Classes (member data) ‘
App,cpp Address Name Value ‘
21:55 Due 100000 Dalenz 5 ‘
"1:?le; 300000 d1 .x 7 ‘
mm m z; ‘
n 300004 um z ‘
m haunt; ‘
:0“ um) 300003 02.x 7 \
) 300010 le 7
200010 an z

***************Ending Page***************

***************Beginning Page***************
***************page number:96**************
Classes (member data) ‘
Appcpp Address Name Value ‘
21'” “m 100000 Daleul 6 ‘
"1:3"; 300000 d1 .x 7 ‘
h 300004 dLV I ‘
f“ ""0 300008 d2.X 7 ‘
3:; 2,51,“; 300011 dLv 6
azx - 15.1 ¢ 1- 300016 d3,X 7
I
i 300010 d3.V Y

***************Ending Page***************

***************Beginning Page***************
***************page number:97**************
Classes (member data) ‘
App,cpp Address Name Value ‘
21'” “m 100000 Dalenl a ‘
"1:3"; 300000 d1 .x 7 ‘
mm m z; ‘
n 300004 um z ‘
m haunt; ‘
f“ “MO 300000 02.x 2 ‘
3:; 2,51,“; 300011 dLv 6
41.x - 1;
) 200010 an z

***************Ending Page***************

***************Beginning Page***************
***************page number:98**************
Classes
> (Methods)

***************Ending Page***************

***************Beginning Page***************
***************page number:99**************
Classes (methods)
> Methods are functions define within
2"“ Mm the class. Their main role is to
PM‘; W operate and change data members
mm?“ ‘"““"“"“"‘ "m from the class (especially private
); vnld snmrm val); ones)
‘(M m:1:::::l:l:;:;» > Just like data member, a method can
( “@31ngth > A method can access any other
3.,“ "no method declared in the same scope l
< mm m (that belongs to the same class)
) P-SQKMUO); regardless of that methods access
modifier.

***************Ending Page***************

***************Beginning Page***************
***************page number:100**************
Classes (methods)
APPIDP > A method can be static and have l
Em‘ M” an access modifier at the same ‘1
"' m Age; t1me. 1
mm > ‘
1
Li.“ Mmmm" v.» 3
( Mum ((vahl) H ("1050);
3.,“ Mansmmm v.»
( 1F (Che<k(vil))
new)‘: Z m;
and nunO
mm p;
if (Perim: :cnxk(w))

***************Ending Page***************

***************Beginning Page***************
***************page number:101**************
Classes (methods)
APPIDP > In this case the code does not l
Em‘ M” compile because Check method is ‘1
"' h declared pnvate, 1
‘
public: ‘l
vnld s-Uuum "n; ‘
is.“ Mmmm" v.» ‘
( Mum ((vahl) H ("1050);
3.,“ Mmelwm v.»
( 1F (UlKk(Vil))
new)‘: Z m;
in“ "no
mm p;
if (Perim: :cnxk(w))

***************Ending Page***************

***************Beginning Page***************
***************page number:102**************
Classes (methods)
> The code compiles - SetAge
Tm M” method is public and can be called I
Mm: 1
ililﬁna chxkuu m); b Any method (even if it is declared 1

‘Twin snmun m); private like method Check) can be 1
Elm anmm m) accessed by another method ‘
) MW“ (mm) u (mum); declared in that class (in this case
vnld Per-mmseﬂlrﬂnt v.1) SetAge)
(

if “Medan!”

MW“ Z m;

in“ um)

Persm >

***************Ending Page***************

***************Beginning Page***************
***************page number:103**************
Classes (methods)

> A static method can access any

if?“ static member declared in the I

"' " 5;! X; same scope as the method ‘1
5nd: m v;

whim‘ u m 1 ‘ _ regardless of that member access I
5 a z vn Mm O. t t

ii! mm . a; mOd'ﬁer “

Md maximum“) ,

< M > In this example, Increment

3m mm function will add 1 to the static

‘ Mummmi and private data member Y,

)

***************Ending Page***************

***************Beginning Page***************
***************page number:104**************
Classes (methods)
> This code does not compile 1
“m M! i
Lin.“ > A static function can not access a 3‘
222521“ v; non-static member i‘
Mm: ‘
>; “"k '““ ‘“‘""““" > A static function can not access i‘
:"DSEZZYIILW the pointer this
k
(. v - n
Mummm;
) H

***************Ending Page***************

***************Beginning Page***************
***************page number:105**************
Classes (methods)
> A method within a class can
if?“ access private members / I
D132?“ methods from instances of the ‘
W {-154 s“"‘<—m m“) same class ! I
,> > > In this case, p1 can access ‘
m mm data member ,IAge from p2.
< MM p,‘ p1; The cod complles and runs

2322?“ W‘ correctlyv
)

***************Ending Page***************

***************Beginning Page***************
***************page number:106**************
Classes (methods)

> The same rule applies for

if?“ static methods as well. I

mil? W > _ > > In this example, the code 1
PM“ a?“ M“ " m m") compiles and runs correctly‘ 1

h > M" - u After the execution, p1 .Age

2n mm IS 20 and p2.Age1s 10.

> m W i

***************Ending Page***************

***************Beginning Page***************
***************page number:107**************
y my

***************Ending Page***************

