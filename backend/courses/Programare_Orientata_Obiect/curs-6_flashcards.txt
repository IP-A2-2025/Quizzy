[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the result of converting a derived class object to a base class object?
--InteriorSeparator--
Upcasting
--InteriorSeparator--
easy
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are valid ways to define a macro?
--InteriorSeparator--
(right) #define macro value
(wrong) #macro define value
(right) #undef macro
(wrong) #macro undef macro
--InteriorSeparator--
easy
--InteriorSeparator--
51
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which type of cast provides the simplest cast mechanism that translates in changing the type of a pointer, while maintaining the same address where it points to?
--InteriorSeparator--
reinterpret_cast
--InteriorSeparator--
medium
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following casts can be used to specify how a cast should behave in C++?
--InteriorSeparator--
(right) static_cast
(right) reinterpret_cast
(wrong) default_cast
(wrong) implicit_cast
--InteriorSeparator--
easy
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the term for losing derived class members when upcasting?
--InteriorSeparator--
Object slicing
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the limitations of macros?
--InteriorSeparator--
(right) Don't support overloading
(right) Use round brackets
(wrong) Analyze the expression
(wrong) Do a text analyze
--InteriorSeparator--
medium
--InteriorSeparator--
61
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary difference between macros and inline functions?
--InteriorSeparator--
Macros guarantee inline replacement, while inline is a suggestion to the compiler.
--InteriorSeparator--
medium
--InteriorSeparator--
78
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What parameters must a literal operator have?
--InteriorSeparator--
(right) const char *
(right) unsigned long long int
(wrong) int
(wrong) float
--InteriorSeparator--
medium
--InteriorSeparator--
82
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What keyword is used to define a model of a function or class in which the types of data can be modified at the precompilation stage?
--InteriorSeparator--
template
--InteriorSeparator--
easy
--InteriorSeparator--
91
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What types of templates are defined in C++?
--InteriorSeparator--
(right) For classes
(right) For functions
(wrong) For structures
(wrong) For enums
--InteriorSeparator--
easy
--InteriorSeparator--
92
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which cast checks RTTI and requires at least one virtual method in the class?
--InteriorSeparator--
dynamic_cast
--InteriorSeparator--
hard
--InteriorSeparator--
36
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When is `reinterpret_cast` useful, and when is it dangerous?
--InteriorSeparator--
(right) Fast pointer type translation.
(wrong) Safe conversion between related class types.
(right) Can lead to weird memory alignment and invalid pointers.
(wrong) Prevents any type of memory corruption.
--InteriorSeparator--
hard
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Under what condition is `const_cast` likely to cause a runtime error?
--InteriorSeparator--
When attempting to modify data that was originally declared as const and resides in read-only memory.
--InteriorSeparator--
hard
--InteriorSeparator--
44
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the potential consequences of using `const_cast` to modify a variable declared `const`?
--InteriorSeparator--
(right) Program may exhibit undefined behavior.
(wrong) It always results in a runtime crash.
(right) The compiler may optimize assuming the variable's value never changes.
(wrong) The variable's value is guaranteed to be updated.
--InteriorSeparator--
hard
--InteriorSeparator--
46
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why is it important to use parentheses when defining macros, especially with operators?
--InteriorSeparator--
To ensure correct operator precedence and prevent unexpected results due to text substitution.
--InteriorSeparator--
hard
--InteriorSeparator--
62
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Why does using inline specifier NOT GUARANTEE that inline replacement is going to happen?
--InteriorSeparator--
(right) It should be seen more as a suggestion for the compiler
(wrong) It is always used in release mode
(wrong) Debugging becomes more difficult
(right) It is used on in release mode if the optimizations are enabled at the compiler level
--InteriorSeparator--
hard
--InteriorSeparator--
78
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `volatile` specifier?
--InteriorSeparator--
To prevent the compiler from optimizing away reads or writes to a variable, ensuring that the value is always read from or written to memory.
--InteriorSeparator--
medium
--InteriorSeparator--
80
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When defining a literal with a const char* parameter, what other parameter can be added and why?
--InteriorSeparator--
(wrong) int - to store the value as an int
(wrong) float - a float that is assigned to it
(right) size_t - to have the length of the string.
(wrong) double - to store the value as a double
--InteriorSeparator--
hard
--InteriorSeparator--
89
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why must templates be stored in header files when used in libraries?
--InteriorSeparator--
Because the substitution is made during precompilation, and the compiler needs the template definition to create the specialized code.
--InteriorSeparator--
medium
--InteriorSeparator--
92
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is one situation when you need to specify the type in the template?
--InteriorSeparator--
(wrong) Parameters are of the same type.
(wrong) Only 1 type is used in a template
(right) When the return type cannot be deduced by the parameters.
(wrong) Template function receives parameters with default values
--InteriorSeparator--
hard
--InteriorSeparator--
101
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What condition must be met for a class template to accept default values for types, such as T3 y = 10?
--InteriorSeparator--
Type T3 must accept equality (or have an explicit assignment operator) with the type of the default value.
--InteriorSeparator--
medium
--InteriorSeparator--
102
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of specialized templates?
--InteriorSeparator--
(wrong) To have limited behaviour
(right) Define a method that overwrites the initial code from the template with a more specific one for parameters of a certain type
(wrong) Same behavior than the default implementation
(wrong) To inherit base templates
--InteriorSeparator--
medium
--InteriorSeparator--
123
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the static_assert keyword do?
--InteriorSeparator--
It produces an evaluation of an expression during the compile phase and throws a compile error.
--InteriorSeparator--
easy
--InteriorSeparator--
129
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does using `TypeCompare` provide?
--InteriorSeparator--
(right) A way to enforce type checks in templates.
(wrong) A way to automatically cast between types.
(right) A way to conditionally enable code based on type equality.
(wrong) It will automatically compare between the code to see if there's a difference
--InteriorSeparator--
hard
--InteriorSeparator--
131
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What types of classes have clear translations?
--InteriorSeparator--
Classes that inherit other classes.
--InteriorSeparator--
medium
--InteriorSeparator--
37
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.2916205604735495}]