***************Beginning Page***************
***************page number:1**************
Sist6m6 d€ Op6rar6
G6stiun6a pr006s610r
part€a a II-a
Cristian Vidragcu
https://pr0fs.inf0.uaic.r0/~Vidrascu

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cursul pracerdernt
> Conwptul d6 procﬁs (/ﬁr de execugm)
> Stﬁfilﬁ procesului (/unui ﬁr de execu§i€)
> Relagii intre proces6
> Procerse concurente
> Planiﬁcama pfOC€S€lOr (/ﬁrelor d6 emcuﬁe)
> Obiective
> Cozi de planiﬁcare
> Planiﬁcatoare
> Schimbarea contaxtului
> Prioritégi
2/40

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Cuprins
' Planiﬁcama procerselor (continuare)

> Structura planiﬁcéirii
> Algoritmi de: planiﬁcare:

— FCFS

— SJF $1 SRTF

— Planiﬁcarea cu prioritégi

— RR

$.21.

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Structura planlﬁcarn /1
' Concﬁpte de bazé ;
Execugia unui proces/thread consté ‘Dad more 1
intr-o secvengé de calcule executate ﬁiiﬁﬁme [ CPU m‘
pe CPU §i de operagii de I/O: <
rafale CPU urmate: d6 rafale I/O if
store increment } C
. . . . . V v ind x PU b r t
DIStflbll'gla statlstlca uzuala a wrifemle < u s
duratﬁlor rafalelor CPU: MG burst
160 load store %
140 Edd StOI'E CPU DUFSI
120 read from file
Z :Q MOWH
O 8 burgteduration(miﬁileconds) 32 4O 4/40

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Structura planiﬁcérii /2
' Structura planiﬁcéirii
— Dnciziile d6 planiﬁcare a CPU se iau in unnétoarele situatii:

1. 05nd un pfOC€S/thread trece din starea running in starna
waiting (e. g. cerere I/O, sau apel wait)

2. cénd un proces/thread trece din stama running in starea
mady (e. g. cénd apare 0 intrerupere hardware de ceas ce
marcheazé sférgitul unei cuante de timp procasor)

3. cﬁnd un proces/thread tmce: din stama waiting in stama
r€ady (e. g. terminarea unei operatii I/O, sau apel wait)

4. cénd exncutia unui pfOC€S/thread se termini (normal sau
fortat)

5/40

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Structura planiﬁcarii / 3
' Structura planiﬁcarii

— Pentru situagiile 1. §i 4., un nou proces/thread (daca exista
vreunul in starea ready) trebuie sa ﬁe selectat pentru exeeugie.

— Cand planiﬁcarea se face numai datorita situagiilor 1. §i 4.,
schema de planiﬁcare este numita ne-preemptiva; altfel, ea
este preemptivii.

— O politica de planiﬁcare este numita preemptivii daca, 0 data
ee unui proces/thread i s-a alocat CPU-ul, acesta poate mai
tarziu sa-i ﬁe luat (in mod forgat).
$i este ne-preemptiva daca CPU-ul nu mai poate ﬁ luat de
1a eel care-l degine, i.e. ﬁecare proces/thread ruleaza pana la
terminate sau pana la efeetuarea unei cereri I/O (sau apel wait).

6/40

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Structura planlﬁearn /4
' Preemptie

— Politieile de planiﬁeare pot ﬁ preemptive sau ne-preemptive.
Preempjie: planiﬁeatorul poate forga un proees sa renunge la procesor
inainte ea procesul sa se bloeheze (i.e. sa inigieze 0 operagie I/O), sa
renunge singur la CPU, sau sa se termine.

' Cuantiﬁcarea timpului CPU (timeslieing) previne
monopolizarea CPU-ului de eatre vreun proees

— Planiﬁeatorul alege un proees ready gi-l executa 0 euantéi de timp.

— Un proees ee se executa mai mult deeat euanta sa de timp, este foryat sa
renunge la CPU de eatre eodul planiﬁeatorului rulat prin handler-ul
intreruperii hardware de eeas.

' In politieile de planiﬁeare pe baza de prioritagi se folosegte
preempyia pentru a onora prioritagile

— Procesul eurent running este preemptat daea un proees eu 0 prioritate
mai mare intra in starea ready. 7/40

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Structura planiﬁcarii /5
' Observatii:

— O politica ne-preemptiva implica mai putina incarcatura
(overhead) a sistemului §i face ca timpul total de la startul
executiei unui program §i pana 1a terminarea lui sa ﬁe mai
uecr de anticipat. Astfel de politici s-au utilizat indecsebi
in sistemele seriale (cu batch job-uri).

— Schemele preemptive implica schimbarea frecventa a
proceselor pe CPU (prin context switching), ceea ce pcate
determina c incarcare suplimentara sernniﬁcativa a
sistemului. Ele sunt utilizate in sistemele interactive (cu
timp partaj at), precum §i in cele in timp real, pentru a putea
satisface constrangerile legate de timpul de raspuns.

8/40

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Planiﬁcarea pr006s610r
> Algoritmi de planiﬁcare
— Critarii de optimizare utilizate:
' Gradul d6 utilizarﬁ a CPU-ului (% timp non-idle; 40%-90%)
' Rata d6 s6rvir€ (numérul de procesa/unitatﬁa de timp)
' Timpul turnaround (intﬁrvalul scurs intre monmntul
submiterii §i C61 a1 tenninérii unui prows; timpul de viagé)
' Timpul de a§teptare (timpul petrecut in coada rﬁady)
' Timpul d6 réspuns (timpul scurs intre emiterea unei comanzi de
cétre utilizator gi producerﬁa primului réspuns la acea comandé)
— Scopuri:
' Maximizama utilizérii CPU gi a ratei de servire
' Minimizarea timpilor turnaround, d6 a§teptare §i de réspuns
9/40

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Algoritmi d6 planiﬁcare: / 1
> Algoritmi de planiﬁcare:
— First-Comer, First-Saved (FCFS)
— Shortest-Job-First (SJF) gi SRTF
— Planiﬁcarea C11 pinfitéti, preamptivé §i n6-preemptiv51
— Round-Robin (RR)
— Planiﬁcareza cu cozi ready pe nivele: multip16,
simplé §i cu f6edback
— Planiﬁcama in timp r6211
— Planiﬁcama cu prowsoam multiplﬁ

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Algoritmi d6 planiﬁcare: /2
' First-Come, First-Served (FCFS)

— procesul cam solicité primul sé i s6 acorde timp
CPU, este primul céruia i se va a100a CPU-ul

— implemerntare: 0 simplé structuré FIFO

— algoritmul este simplu de scris §i de ingeles

— alg. de planiﬁcare: FCFS este n6-pm6mtiv (deci nu
poate ﬁ utilizat pentru medii int€ractiv6)

— procesale lungi sunt favorizate de politica de
planiﬁcare FCFS, iar 0616 scurt6 sunt dafavorizam

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Algoritmi d6 planiﬁcare: / 3
' First-Come, First-Served (FCFS)

— rata de servire — alg. FCFS este la fel d6 bun ca
orice alté politicé de planiﬁcare nﬁ-pmamtivé
dacé CPU-ul ar ﬁ singura rasursé planiﬁcabilé din sistem

— ﬁchitate: — alg. FCFS 6ste intuitiv ﬁchitabil

— timpul de réspuns — procesele lungi le gin pe toate
celelaltﬁ: in agteptare

l-I-luﬁmjn Ur 1 - r1 .
He-'m'f1"lrh|"1fnir f:c!.-"~rm'r I uf-hmf;
~ HLWHH-'E'FJ'TJ.I'.IHF Mm’
remix‘ Erlw mﬂh
12/40

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Algontml de planlﬁcare /4
' Flrst-Come, Flrst-Served (FCFS)
Scenariu1#1: Proc6se Momentul Timpul de s6rviciu
(un exemplu sosirii solicitat [POteZd d6 1”” u?
(pentru urmétoarele exemple)
doar cu procese E“ 3 . ..
(PU-intensive, B Momgntul SOS“
w niciwp- 1/0) we “some _ 8”
(Opgiunea alternativé
prunes
Diagrama timp 1
a planiﬁcérii i
(pe 1 CPU) : 4 —
5 —
l I]l23456'1"8-9lﬂ11121314151617181931211511“)

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
. F ‘ F S Tutclrial pentru (ursul de Sisteme de lilperare — 1121-1:
ﬁrst-Come, First-Served (FCFS) cu L/O
Bine ali tenit, T' 31
v'izitatol' 1111p
Planiﬁcarea pmes e101-
Fiat-commrilm-seﬂmmno - - - - I
. [j Geshunea pruceselur
C 6narlu [j F'Ianiﬁcarea proceselor
I] First-Come, First-Served
F V I/O I] First-Come, First-Served cu IIO
ara I] Shortest-JolyFirst
I] Shnﬂest-JnlyFirst cu no
I] F'Ianiﬁcarea Round-Robin
I] F'Ianiﬁcarea Round-Robin cu IIO
ljSincronizarea proceselcr
ﬁ““m‘"‘s"a'“mem°"e‘ III-
lj Paginarea Ia cerere MMm- Start Sfalsﬂ. Raspuns Imsnt Penahzana pruces
@Memdedempedisc IIII- III-II 1
E- "Bu 3
IIII III“.- 4
u-u III-III- 5
__ _ __ _ __ I]l23456"189101112131415161718192021ﬁmp
[Agenda : Raspum=$fals1t$nsue ;I.ms11=Rasplms-Senl1s1u;Penaluam=RaspunsISem1u Legenda: . _ mady- m}
Execulie automala _ _ Schimba dale defunclionare
Execuue ma nuala secvenuala
Restart Panza Numar proceseimax 5]: 5 TlmpiIIO 1: B Tlmpi "04: B
Wm :Q "an"! Tlmpiidestarl: 0.1.3.9.12 nmpilroz: a Tlmpil105: a
‘ "I ' lncet Hedlu Rand Durala semcllloﬁ 3,525.5 TlmpllIOﬁ: 5 0k
Sumarul planiﬁcérii'
"1112111516171819
00 01 ()P O3 O4 05 l6 O 0 0v O 1 20

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Algoritmi de planiﬁcare / 6
' FCFS
Proces Sosire S6rviciu Start Finish T W P
Scenariul #1 A “nu-u 1-0
B mu 1.4
Rszultatsle
planiﬁcéﬂi i5
FCFS: '
“EEEEE 1.6
Notaﬁi:
Start I momentul cénd devine running
Finish I momentul cénd se tenniné de executat
t I timpul de execugie propriu-Zisé (i.e. timpul d6 serviciu)
T I timpul de viagé (I momsnt ﬁnish — momsnt sosira)
W I timpul de asteptam (in coada ready) (I T — t)
P I rata d6 penalitate I T/t ; R I rata d6 réspuns I t/T
15/40

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
A1 't ' d 1 'f / 7
' F C F S
scenariul #2 o .Tutc-riaWentru :ursu\diSisternideUparari i 13-5
A . . _ . FirstiCome, FirstServed (FCFS) cu U0
un exemplu 1n care (unele) “JJJJJ'” Tim» I?
v . . . . mm mmor Procesur
proc6se executa $1 operatn I/O “firmlm'm
(pentru simplitate, in cazul acestora I I I I l
in coloana Serviciu se vor speciﬁca .EJJJJQJZZEZZZZZL,
atét duratele rafalelor CPU, cu negru, @JJJZJZJJJZJJJ \10
cét §i duratele operagiilor I/O, cu rogu) giﬁﬁﬁiijzﬁlllm
D Planiﬁcarea Round-Robin
D Planiﬁcarea Round-Robin cu HO
i Sincronizarea proceselor
' 0 ' IAclminisirareamemoriei races
PTOC€S SOSII'6 SGYVICIU. Jiﬂﬁﬁﬁ'zjjjgfgjemsc %%II-ulu-I P 1 . _
i Planiﬁcarea mscului nun-nu 2 —
III-I-IIIIIII 3 —
A 2' 1 ' 1 nun-“mun 4 —- —
“nu-mull 1 J 5 —
B 5 Lem. : . I. -, .: _. l]123456789ll]1112131415151718192llilﬁm1]
ge .Raspuns szmlt-Snsu'e,hmli-Rupluu-Semm,Penah1am Raspumeenlmu Legenda: _ ruluu'ng; really; U0;
C 3 2 Exewliealnmlaia Exemﬁemanualasecvenﬁala Schinbadatedeﬂlllcﬁonam
llumaIproceielnlax “E mpiuo1: Q TInpill'Oﬂ: Q
Wen :Q Tlnpidestarl: 0.1.3.9,12 mpiuoz a runpilrosz u
D u: ‘ —11—|II meet neuiu Rapid mrataselvicior: W mpilrm: ]u—
9 9
l 6/40

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Algoritmi de planiﬁcam / 8
. FCFS prunes
Scenariul #2 (cu I/O) i '— _
3 _
Diagrama timp 4 —- —
aplaniﬁCérii 5I] 1 2 3 4 5 ﬁ 7 B 9 ll] 11 12 13 14 15 lﬁ 17 18 19 2|] 21 ﬁrnp
(pe 1 CPU) : I lag-1111111: — mm; may; 1.11:1;
Proces Sosire: Serviciu Start Finish T W P
R 1 1 A lull-Inn 2.5
‘*1? tatff? B --n-1.2
Plamﬁm -—-nu- 3 o
---n-12
Sumarul planiﬁcérii:
IIIIII-IIII 1 1 1 1516111819 11
“III-"IIIEEEEEE D
17/40

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Algoritmi de planiﬁcare / 9
' Shortest-Job-First (SJF)

— Ideea: scoatema rapidé din sistem a proceselor
scurte pentru a minimiza numérul d6 procﬁse aﬂatﬁ:
in a§teptar6 cét timp rulﬁazé un procﬁs lung

— Intuitiv: procesﬁrle cele mai lungi déuneazé 061 mai
mult perntru timpii d6 a§t6ptar6 ai competitorilor lor

— SJF ﬁste optimal (lucru damonstrabil matematic), in
sensul c5 produw cal Inai mic timp Inﬁdiu de
a§teptar6 p6ntru 0 mulgime daté d6 procﬁsa

— Esm nevoie de anticiparea timpilor de serviciu CPU

18/40

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
A1g0ritmi de planiﬁcare / 10
' Shortest-Job-First (SJF)

— Plniﬁcarea SJ F poatﬁ: ﬁ ne-pre6mptivé, sau preemptivé

— Varianta SJ F preemptivé 6ste numité planiﬁcara shortest-
remaining-time-ﬁrst (SRTF)

— SJ F favorizeazé procesele interactive, ce newsité réspuns
rapid §i care interacﬁomazéi cu utilizatorul in mod rep6tat

— SJ F favorizeazéi procﬁsﬁle ce produc rafalﬁ I/C) (1/0 bursts) —
cele care se blochaazéi curénd, ginénd perif6ricele ocupate §i
eliberénd astfel CPU-111

— Atenyia esta indraptatéi spre 0 mésuréi medie a performangei,
unﬁle procese lungi pot f1 infometata in cazul unei incércéri
masive: a sistemului sau a unui ﬂux constant de noi procesa
scurte ce intré in sistem 19/40

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
A1 gontnn de planlﬁcam / 1 1
° Shortest-Job-First (SJF)
— Sacriﬁcé echitatea pentru a micgora timpul mediu de rﬁspuns
— Planiﬁcarea SJF puré este impracticabilé: planiﬁcatorul nu poate
anticipa durata unui proces
— Totugi, SJF are valoare in sistemele: reale:
' Multe aplicagii executé 0 sacvangé de rafale CPU scurte cu oparagii I/O
intre acesteza
' E. g., j oburiles interactive se blochnazé in mod rapetat pentru a accepta
input din partea utilizatorului
Scop: furnizarea celui mai bun timp de réspuns pentru utilizator
' E. g., joburil6 pot trece prin perioade de activitate I/O intensivé
Scop: cererea urmétoarei operagii 1/0 cét mai repede posibil pentru a gine
perifericela ocupate §i a furniza c621 mai buné raté de servirn pe ansamblu
' Folosirea prioritéiﬂi interne adaptive p6ntru a incorpora SJF in RR
Strategia meteorologilor: previziunea viitorului apropiat pe baza trecutului
recent
20/40

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Algoritmi d6 planiﬁcam / 12
' SJF
Scenariul #1 P 1
(firé 1/0) Z —
Diagrama timp z —
aplaniﬁcérii I] 1 2 3 4 5 6 'T B 9 ll] 11 12 13 14 15 15 1"! 18 19 2|] 21 tiltlp
(p6 1 CPU) : hwm — m; may; “0;
l l Proces Sosira Serviciu Start Finish T W P
R t t
pgzﬁﬁiéii? A ‘In-“ll 1.0
- B --u-1.8
SJF (1.6., alg.
mpmmptiv); C -—--u 1.0
D u-I-u-12
E --u-1-6
Sumarul planiﬁcérii:
IIIIIIJIIIII 21 4111611181911
I-quIIIIEIEIEMEEE E
21/40

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Algoritmi d6 planlﬁcam / 13
' SJ F
Temé (196111711 61611de aplicati SJF p6ntru Scenariul #2 (CU. I/ O) Rezultatul planiﬁcérii: similar ca la FCFS.
' SRTF
SC6nariul #3 (alt exemplu, tot fairé I/O)
Diagrama timp a planiﬁcérii (pe 1 CPU) : (temd pentru acasd)
R 1t t l Proces Sosire Serviciu Start Finish T W P
€le a € 6
planiﬁcérii A “nu-u 1.0
SRTF (1.6., B --u-1.8
alg. preemptiv): C ---u 1-0
D II-I-I- 151
. W. E ---u 111
Sumarul planlﬁcarn:
IIIIIIJIIIII 1 11 1 15 16 11 18 19 11
III-I-I-I-IIHIEEIEEEIEI D
22/40

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Algoritmi d6 planiﬁcam / 14
' Planiﬁcarea cu prioritiiﬁ
— Fiercare procas are asociaté 0 prioritate, iar CPU-ul
6st6 alocat procesului raady cu prioritatea 06a mai
mam
— Procasele cu prioritéigi agale sunt planiﬁcata in
ordinea FCFS
— Valoril6 prioritégilor dﬁpind d6 impl€mentar6a SO.
(numerele mici pot semniﬁca prioritégi mari, sau invﬁrs)
— 0bS€rva§i€I SJ F poate f1 privit ca un algoritm cu
prioritégi, unde prioritatea (p) esté: inversul duratei
urmétoarei rafale CPU anticipate (c) : p I l/c
23/40

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Algoritmi d6 planiﬁcam /15
' Planiﬁcarea cu priOPitiiti
— Prioritiigile pot ﬁ statice, sau dinamicﬁ
— Planiﬁcarea p0at6 ﬁ pre6mptivé, sau ne-preemptivé
— Problmné: Blocarea nelimitatd sau inmeetarea
(starvation) proceselor cu prioritégi mici
— Solugiﬁ: imbdtrdnirea (aging), i.6. cre§ter6a gradualéi
a prioritégii prowselor care a§teapté in coada mady
pentru 0 perioadé mare: d6 timp
' Variantii: planiﬁcarea cu prioritz'lgi cu time-slicing
— Pentru procesﬁ ready cu prioritégi egalﬁ $6 aplicé R25“)

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Algoritmi d6 planiﬁcam /16
' Planiﬁcarea cu prioritiiﬁ
SC6Ilariul #1’ (fairé I/O) — rmonsiderém primul exemplu, la care adéugém prioritégi:
Diagrama timp a planiﬁcérii (pe 1 CPU) : (temd pentru acasd)
Proces Sosim Servici Prioritate Start Finish T W P
Raw??? A II---II 6.6
planlﬁcarn
. .v . B---II1-4
C“ 1mm“ ----u 10
Sumarul planiﬁcérii:
‘III-null 12 3 41 16171819 20
WEBEEEEE A
25/40

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Algoritmi d6 planiﬁcam / 17
' Planiﬁcarea Round-Robin (RR)

— Fiecérui procﬁs i se oferé sarviciul CPU pentru 0 p6ri0adé
scurté de timp (numité cuantéz' saufelie de timp), dupé care,
doar dacé nu a fost terminat, revine 1a sfér§itul cozii ready §i
agtﬁapté sé-i viné din nou réndul 1a CPU

— Aceasté perioadé este adﬁsea d6 ordinul 10 + 100 ms

— A fost pr0i6ctat€1 sp6cia1 pentru sist6mele cu timp partaj at

— Coada mady esta tratatéi ca 0 coadé circularé

— Comutarea CPU-ului d6 la un proces 1a altul (schimbarea

contextului) implicé 0 incércare suplimentaré considerabilé
a sistﬁmului
26/40

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Algontml d6 planlﬁcam /18
' Planiﬁcarea Round-Robin (RR)
— T impul de viafd
RR reduce timpul de Viagé pentru procesele scurte
' Pentru 0 incéircare daté a sistﬁmului, timpul de Viagé a1 unui proces
este direct proporjtional cu durata sa d6 serviciu
— Echitate
RR reduce variagia in timpii de a§teptare
' Dar: RR forgeazé procesele s51 a§tepte pentru alte procese intrate mai
térziu in sistem
— Throughput (rata de servire)
RR impune 0 incércarﬁ suplimentaré a sistemului pentru
schimbarea contextului, ceea ce déuneazé ratei.
Pe un sistem multiprocesor, RR poate imbunétégi rata de servire
sub 0 incércare ugoaré (i.e. numér mic de joburi).
27/40

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
AngIitmi de planiﬁcam / 19
' RR, cu cuanta I 11mm
I 1 unitat6 de timp 1 — —
g _ _ _ _ _
Scenariul #1 (ﬁréI/O) 3 — —
4 _ _ _ _ _
Diagrama timp 5 _ _ _ _
aplaniﬁcérii .- n 1 2L: “in-s 11-7 :1 .9 .1“ 11 12 :11“ 15 15 11H: 19 211 21 tirnp
(pe l CPU) : g6 I m, y’ l
Proces Sosire Serviciu Start Finish T W P
Rﬁzultawle A u-nllu- 2-0
Planiﬁwrii RR» B 2.0
D “null- 1-8
E --u-1.6
Sumarul planiﬁcérii:
"In-IEEEEEIIEEII-E 29/40

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Algoritmi d6 planiﬁcam /20
' RR, cu cuanta I prunes
I 4 unitégi de timp i
Scenariul #1 (ﬁré I/O) 3 —
Diagrama timp 2 —__
aplaniﬁcérii _ n 1 2 3 11 5 a 1 a 9 1|] 11 12 13 111 15 15 17 la 19 2|] 21 timp
(pe 1 CPU) : ' Lege'm‘ _ “"‘mg; “a”; “D;
Proce Sosire S6rviciu Start Finish T W P
11621111811616 A nun-u 1.0
planiﬁcﬁrii RR, B --II-1.8
cu cuantaz4: C -—-uu- 3-0
D u--- 2-0
E --n-16
Sumarul planiﬁcérii:
W112 111 1111819 11>
"In-I-IIIIEIEIEIEIEEE E 30/40

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Algoritmi d6 planiﬁcam /21
' Planiﬁcarea Round-Robin (RR)
— Problemé: Cét ar trebui s51 ﬁe Quanta de timp ?
— Dacéi 6 prea mare, pur §i simplu RR d6vin6 FIFO (i.e., FCFS)
— Daca e prea micé, CPU-ul est€ folosit (aproape) in intregime
doar de cétre rutina dispecer pentru salecgie §i cornutarea
contextului, daci joburile utilizatorilor nu mai apucéi s51 ﬁe
6X60utat6
— Durata idealé a cuantei de timp depinde de mulgi factori
— O bunﬁ r€gu1€1 g6n6ral€1 6St61 acea p6ri0ad51 d6: timp in care marea
maj oritate a utilizatorilor interactivi pot ﬁ satisfécugi (10 + 100 ms)
— Durata cuantei este adesea schimbaté de doué ori p6 zi (este
mai lungé noaptea, 05nd rulﬁazé joburi de tip batch)
31/40

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Algoritmi de planiﬁcare /22
' Planiﬁearea cu eozi pe nivele multiple

— Divizarea eozii ready in mai multe nivele distinete,
i.e. mai multe (sub-)eozi ready separate
E. g., eoada proceselor foreground (joburi interactive) §i
eoada proceselor background (batch-j oburi)

— Procesele sunt asignate permanent uneia dintre cozi,
in general pe baza unei proprietéti a procesului
(dimensiunea memoriei, tipul procesului, etc.)

— Fieeare eoadé are propriul algoritm de planiﬁeare

— Trebuie s51 existe gi 0 “planiﬁeare intre eozi” (e.g.,
poate ﬁ utilizaté 0 planiﬁeare preemptivé cu prioritéti ﬁxe)

32/40

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Angntml de planlﬁcam /23
' Planlﬁcarea cu c021 pe nlvele multlple
— Exemplu:
mi} hound jnhs waiting fur CPU
4|, jnhs hnlding resnuces
- jnhs with hi gh external prim'lty
I
r1’ JﬁrNar: TnRu 1 selects 'nh
at the head ﬁfrthﬂ highést [TFU-hnundjnhs prim‘: mleTPlllk-ihnund
priority qucuc. 10 5 says “in SFStFm
cum-mm 1mm. m; mnmg “,fiiﬁfﬁnﬁiiﬁn 193d ﬂI'Id FIEWIBE rcﬁcwcd.
33/40

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Algoritmi d6 planiﬁcam /24
' Planiﬁcarea cu cozi pe nivele multiple
— Alt exermplu:
' Procas6 de sistem mammal
' Pr006s6 interractive . .
. Prlorltate
' Procese de edltare d6 texte
' Prowsa batch minimé
Algoritmi d6 “planiﬁcare intre cozi” (i.e., de alegere a uneia dintre cozi):
— O solugie, pe baza prioritégii cozilor: ﬁecare coadé are intéietate
absoluté asupra cozilor cu prioritégi mai joase
— Altai solugie, RR: de impérgit timpul in cuante (time slice) intre cozi
34/40

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Algoritmi de planiﬁcare /25
' Planiﬁcarea cu cozi pe nivele multiple, cu feedback
— Se permite unui proces $51 migreze intre cozi
— Parametri:
' Numérul de cozi + algoritmul de “planiﬁcare intre cozi”
' Algoritmii de planiﬁcare pentru ﬁecare coad'Zl
' Metoda utilizaté pentru a decide in ce coadé va intra inigial
un proces (i.e., atunci cénd acesta este lansat in execugie)
' Metoda utilizaté pentru a decide cénd un proces $51 ﬁe
avansat intr-o coadéi cu prioritate mai mare
' Metoda utilizatéi pentru a decide cﬁnd un proces séi ﬁe
degradat intr-o coadé cu prioritate mai micé
— EX€IIlp1UI Windows utilizeazé 0 coadé ready pe 32 nivele de prioritate
35/40

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Algoritmi d6 planiﬁcam /26
' Planiﬁcarea in timp real
— Planiﬁcatoamlﬁ in timp real tmbuiﬁ $51 suport6
execugii regulate), pﬁriodica, ale taskurilor
(e.g., ﬂux merdia continuu)
— Rezervéiri timp CPU

“Am nevoie séi 6X6cut X din ﬁecare Y unitéigi de timp.”

' Planiﬁcatorul exercité controlul admiterii la momentul
rezervérii: aplicagia trebuie séi gesti0n6z6 e§6cul unei
cereri de rezervare

— Constrdngeri temporale

“Ruleazé aceasté aplicagie inainte d6 tannenul meu limité:

momantul T.”

36/40

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Algontml de planlﬁcare /27
' Planiﬁcarea cu procesoare multiple (multiprocesare)
— Probleme:
' Tipul procesoarelor: sisteme omogene vs. sisteme heterogene
' Tipul eozilor de planiﬁcare: coada ready comuné vs. cﬁte 0
coadé ready separaté pentru ﬁecare procesor

— Sisteme SMP (multiprocesare simetrieé): sisteme omogene, in
care procesele sunt planiﬁeate pe oricare dintre procesoarele
disponibile

— Planiﬁcare master-slave (multiprocesare asimetricé)

— PVOCeSSOI” aﬁnily: aﬁnitate hard (un proces poate speciﬁca s51 ﬁe
rulat doar pe un subset din CPU-urile existente) VS. aﬁnitate SOft (SO-ul
incearcé s5 pistreze un proces pe acelasi CPU, pentru a reaccesa infonnagiile
din cache-ul CPU-ului, sau in cazul sistemelor NUMA, pentru acces local)

37/40

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Algoritmi d6 planiﬁcam /25
' Planiﬁcarea multiprocesor
Scenariul #4 (alt ex6mplu, tot féréi I/O): planiﬁcare SMP (cu doué CPU),
cu 0 singuré coadé ready
Diagrama timp a planiﬁcérii (pe 2 CPU) : (temd pentru acasd)
Rezultatélﬁ: Proces Sosire Servici Prioritat Start Finish T W P
planiﬁcérii mm 1.66
cu prioritéti I“-- 1-57
staticﬁ, ----II 1.0
prwmptiva, nun-"III 1-0
p6 2 CPU; ----ll 1-0
planiﬁcéﬂi: IEEII'IEIEEI
CPUZ IBEIEII-IIIEI
38/40

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Bibliograﬁe
' Bibliograﬁe obligatorie

capitolele despre gestiunea proceselor din
— Silberschatz : “Operating System Concepts”

(cap.5 din [OSC10])
S8111
— Tanenbaum : “Modern Operating Systems”

(a patra parte a cap.2 din [MOS4])

39/40

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Sumar
' Planiﬁcarea procﬁserlor (continuarez)
> Structura planiﬁcérii
> Algoritmi de: planiﬁcarer:
— FCFS
— SJF §i SRTF
— Planiﬁcarea cu prioritégi
— RR
$.21.
intrebéri ‘.7

***************Ending Page***************

