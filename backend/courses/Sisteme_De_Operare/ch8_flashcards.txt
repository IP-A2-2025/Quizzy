[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What are the three ways a process can utilize a resource?
--InteriorSeparator--
request, use, and release
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following conditions must hold simultaneously for a deadlock to occur?
--InteriorSeparator--
(right) Mutual exclusion
(right) Hold and wait
(wrong) Resource sharing
(wrong) Prioritization
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a resource-allocation graph, what does a directed edge from a process to a resource represent?
--InteriorSeparator--
A request edge
--InteriorSeparator--
easy
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens if a resource allocation graph has a cycle with multiple instances per resource type?
--InteriorSeparator--
(right) Possibility of deadlock
(wrong) Certain deadlock
(wrong) No deadlock
(wrong) Guaranteed safe state
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the two deadlock handling strategies that ensure the system never enters a deadlock state?
--InteriorSeparator--
Deadlock prevention and deadlock avoidance
--InteriorSeparator--
easy
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are strategies for deadlock prevention?
--InteriorSeparator--
(right) Breaking the hold and wait condition
(right) Breaking the circular wait condition
(wrong) Allowing resource preemption without restrictions
(wrong) Ignoring mutual exclusion for non-sharable resources
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
To invalidate the circular wait condition, what must be implemented?
--InteriorSeparator--
A total ordering of all resource types
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What information is required for deadlock avoidance?
--InteriorSeparator--
(right) The maximum number of resources of each type that each process may need
(wrong) The current number of processes in the system
(wrong) The minimum number of resources that will be utilized
(wrong) The average time to complete a process
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What defines a safe state in the context of deadlock avoidance?
--InteriorSeparator--
A sequence of processes exists where each process can obtain its needed resources and terminate.
--InteriorSeparator--
medium
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If a system is in an unsafe state, what is the implication?
--InteriorSeparator--
(right) Possibility of deadlock
(wrong) No possibility of deadlock
(wrong) Definite deadlock
(wrong) Guaranteed safe state
--InteriorSeparator--
medium
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
For a single instance of a resource type, which algorithm can be used for deadlock avoidance?
--InteriorSeparator--
Resource-allocation graph
--InteriorSeparator--
easy
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is represented by a claim edge in a resource-allocation graph?
--InteriorSeparator--
(right) A process may request a resource
(wrong) A process is currently using a resource
(wrong) A resource is available
(wrong) A process has released a resource
--InteriorSeparator--
medium
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When can a process's request for a resource be granted in the resource-allocation graph algorithm?
--InteriorSeparator--
Only if converting the request edge to an assignment edge does not result in the formation of a cycle
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is required from each process using the Banker's Algorithm?
--InteriorSeparator--
(right) To a priori claim maximum use
(wrong) To claim minimum use
(wrong) To use resources indefinitely
(right) To return all resources in a finite amount of time
--InteriorSeparator--
medium
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the Banker's Algorithm, what does the 'Need' matrix represent?
--InteriorSeparator--
The remaining resource requirements of a process.
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the conditions to find an index 'i' in the Safety Algorithm?
--InteriorSeparator--
(right) Finish[i] == false
(right) Need_i <= Work
(wrong) Finish[i] == true
(wrong) Need_i >= Work
--InteriorSeparator--
hard
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the Resource-Request Algorithm, what happens if a process requests more resources than its 'Need'?
--InteriorSeparator--
An error condition is raised because the process has exceeded its maximum claim
--InteriorSeparator--
hard
--InteriorSeparator--
30
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In deadlock detection for a single instance of each resource type, what structure is maintained?
--InteriorSeparator--
(right) Wait-for graph
(wrong) Resource-allocation graph
(wrong) Need Matrix
(wrong) Claim Matrix
--InteriorSeparator--
hard
--InteriorSeparator--
35
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the detection algorithm for multiple instances of a resource type, what indicates a deadlocked state?
--InteriorSeparator--
If Finish[i] == false for some i, then process P_i is deadlocked.
--InteriorSeparator--
hard
--InteriorSeparator--
39
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What factors influence the usage of a deadlock detection algorithm?
--InteriorSeparator--
(right) How often a deadlock is likely to occur
(right) How many processes will need to be rolled back
(wrong) The cost of the CPU
(wrong) The age of the Operating System
--InteriorSeparator--
hard
--InteriorSeparator--
42
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the possible strategies to recover from deadlock through process termination?
--InteriorSeparator--
Abort all deadlocked processes, or abort one process at a time until the deadlock cycle is eliminated
--InteriorSeparator--
hard
--InteriorSeparator--
43
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What considerations are important when selecting a victim for resource preemption during deadlock recovery?
--InteriorSeparator--
(right) Minimizing cost
(wrong) Maximizing resource utilization of the victim
(right) Avoiding starvation
(wrong) Selecting the process with the shortest remaining execution time
--InteriorSeparator--
hard
--InteriorSeparator--
44
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main disadvantage of breaking the "hold and wait" condition to prevent deadlocks?
--InteriorSeparator--
Low resource utilization; starvation possible
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the Available vector represent in the Banker's Algorithm data structures?
--InteriorSeparator--
(right) The number of available instances of each resource type
(wrong) The maximum number of instances of each resource type
(wrong) The number of instances currently allocated to each process
(wrong) The minimum number of instances of each resource type required
--InteriorSeparator--
hard
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When pretenting to allocate resources in the Resource-Request Algorithm, what happens if the system is unsafe?
--InteriorSeparator--
P_i must wait, and the old resource-allocation state is restored
--InteriorSeparator--
hard
--InteriorSeparator--
30
--FlashCardSeparator--

}], role=model}, finishReason=STOP, avgLogprobs=-0.16366393122840767}]