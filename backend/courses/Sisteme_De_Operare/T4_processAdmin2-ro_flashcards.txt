[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main goal of process scheduling?
--InteriorSeparator--
To maximize CPU utilization and throughput while minimizing turnaround time, waiting time, and response time.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In which situation(s) is a CPU scheduling decision made?
--InteriorSeparator--
(right) When a process switches from running to waiting
(right) When a process terminates
(wrong) During a system boot
(wrong) When the computer is turned off
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Define preemptive scheduling.
--InteriorSeparator--
A scheduling policy where the CPU can be forcibly taken away from a process.
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are CPU scheduling algorithms?
--InteriorSeparator--
(right) First-Come, First-Served (FCFS)
(right) Shortest-Job-First (SJF)
(wrong) Last-In, First-Out (LIFO)
(wrong) Random Choice
--InteriorSeparator--
easy
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What type of data structure is typically used to implement the FCFS scheduling algorithm?
--InteriorSeparator--
FIFO queue
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Is the FCFS scheduling algorithm preemptive or non-preemptive?
--InteriorSeparator--
Non-preemptive
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a disadvantage of the FCFS scheduling algorithm?
--InteriorSeparator--
(right) Long processes can make shorter processes wait longer
(wrong) It maximizes CPU utilization
(wrong) It always provides the lowest average waiting time
(wrong) It is complex to implement
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary goal of the Shortest-Job-First (SJF) scheduling algorithm?
--InteriorSeparator--
To minimize the average waiting time for processes.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the preemptive version of the SJF algorithm called?
--InteriorSeparator--
Shortest-Remaining-Time-First (SRTF)
--InteriorSeparator--
easy
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are benefits of the SJF algorithm?
--InteriorSeparator--
(right) Favors interactive processes requiring rapid response
(right) Favors processes that produce I/O bursts
(wrong) Guarantees fairness among all processes
(wrong) Is simple to implement in all scenarios
--InteriorSeparator--
medium
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a major drawback of the SJF scheduling algorithm in practice?
--InteriorSeparator--
It requires knowing the CPU burst time in advance, which is not always possible.
--InteriorSeparator--
hard
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How can the SJF algorithm be approximated in real systems?
--InteriorSeparator--
By using adaptive internal priorities based on recent process behavior (predicting the future based on the recent past).
--InteriorSeparator--
hard
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does priority scheduling work?
--InteriorSeparator--
Each process is assigned a priority, and the CPU is allocated to the process with the highest priority.
--InteriorSeparator--
easy
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a potential problem with priority scheduling?
--InteriorSeparator--
(right) Starvation of low-priority processes
(wrong) Maximizing CPU utilization
(wrong) Always minimizing the average waiting time
(wrong) Simplicity of implementation
--InteriorSeparator--
medium
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is aging in the context of priority scheduling?
--InteriorSeparator--
Gradually increasing the priority of processes that have been waiting in the ready queue for a long time.
--InteriorSeparator--
medium
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is time slicing?
--InteriorSeparator--
Giving each process a short burst of CPU time (a quantum) in turn.
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the Round-Robin (RR) scheduling algorithm designed for?
--InteriorSeparator--
Time-sharing systems.
--InteriorSeparator--
easy
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens to a process that does not finish its execution within its time quantum in RR scheduling?
--InteriorSeparator--
It is moved to the end of the ready queue and waits for its next turn.
--InteriorSeparator--
easy
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a major overhead associated with RR scheduling?
--InteriorSeparator--
Context switching
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the impact of RR on short processes?
--InteriorSeparator--
(right) Reduces turnaround time
(wrong) Increases the chance of starvation
(wrong) Makes execution predictable by design
(wrong) Maximizes CPU usage without limits
--InteriorSeparator--
medium
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if the time quantum in RR is too large?
--InteriorSeparator--
RR becomes equivalent to FCFS.
--InteriorSeparator--
medium
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a good general rule for setting the time quantum in RR?
--InteriorSeparator--
Set it to a duration that satisfies the majority of interactive users (10-100 ms).
--InteriorSeparator--
hard
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Describe multilevel queue scheduling.
--InteriorSeparator--
Dividing the ready queue into multiple distinct queues, each with its own scheduling algorithm.
--InteriorSeparator--
medium
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is required in multilevel queue scheduling besides the scheduling algorithms of each queue?
--InteriorSeparator--
(right) A "scheduling among queues" mechanism
(wrong) Processes to dynamically switch queues
(wrong) Identical scheduling parameters in all queues
(wrong) That all queues share the same quantum size
--InteriorSeparator--
medium
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Name two strategies for scheduling among queues in multilevel queue scheduling.
--InteriorSeparator--
Fixed-priority preemptive scheduling and time-slicing.
--InteriorSeparator--
medium
--InteriorSeparator--
34
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Describe multilevel queue scheduling with feedback.
--InteriorSeparator--
Allows processes to migrate between queues based on their behavior.
--InteriorSeparator--
medium
--FlashCardSeparator--
35
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What parameters need to be defined in multilevel queue scheduling with feedback?
--InteriorSeparator--
(right) How to decide when to promote a process to a higher-priority queue
(right) How to decide when to demote a process to a lower-priority queue
(wrong) The overall number of processes that the system can handle
(wrong) The maximum allowed queue length in the system
--InteriorSeparator--
hard
--InteriorSeparator--
35
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary requirement for real-time scheduling?
--InteriorSeparator--
Support for regular, periodic execution of tasks.
--InteriorSeparator--
easy
--InteriorSeparator--
36
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is CPU time reservation in the context of real-time scheduling?
--InteriorSeparator--
Guaranteeing that a task can execute for a specific amount of time within a given time period.
--InteriorSeparator--
hard
--FlashCardSeparator--
36
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are some problems associated with multiprocessor scheduling?
--InteriorSeparator--
(right) The type of processors (homogeneous vs. heterogeneous)
(right) The type of scheduling queues (common vs. per-processor)
(wrong) The brand of CPU used in different processors
(wrong) The size of the processors' caches
--InteriorSeparator--
medium
--InteriorSeparator--
37
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is SMP (symmetric multiprocessing)?
--InteriorSeparator--
A system where any process can be scheduled on any available processor.
--InteriorSeparator--
medium
--FlashCardSeparator--
37
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is "processor affinity"?
--InteriorSeparator--
The tendency of a process to prefer running on the same CPU to preserve cache data.
--InteriorSeparator--
hard
--FlashCardSeparator--
37
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the two types of Processor Affinity?
--InteriorSeparator--
Soft Affinity and Hard Affinity
--InteriorSeparator--
hard
--FlashCardSeparator--
37
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.17679006317515433}]