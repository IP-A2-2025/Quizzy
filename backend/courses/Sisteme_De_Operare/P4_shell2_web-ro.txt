***************Beginning Page***************
***************page number:1**************
GHID DE UTILIZARE LINUX (V)
Lucrul la linia de comandé in UNIX, partea a lV-a:
lnterpretoare de comenzi UNIX, partea a ll-a — scripting BASH
Cristian Vidra$cu
vidraschinfo .uaic . r0
Martie, 2021
1/38

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Su mar
\nlmducere \mrcducere
F=°"“5“"" “'“balmm “e Facilitétile limbajului de scripting bash
50!! (m bash
4L9‘ Procedun she/I , scr/ptrun
VaHabHe a; she/I Execuua procedumor she/I
EvaesuammEME S‘ \ogme Demo‘ “ﬁfty/p’ 'HeHoond‘
Alle mm“
Struchm d2 cumru‘ akemahve
s. reghlwe Variabile de shell
Dehrwe (creare) 5‘ ‘mums [SubSMuUe]
M \nstruchunea de alnbwre
Refevmle mbhugraﬂce Alte Iorme de subsmuhe
Comenzx \nteme me
Variabﬂe pozmonale 5‘ aHe vanabﬂe spe0\a\e
Demo‘ un say/p! ‘Pr\n(Args‘
Expresii arilmelice si Ingice
Comenn penlru came ammeuce
Comenm pentru expresu condmuneﬂe
Slrucluri de control alternalive si repetitive
SUUCKUVH EHBFHHUVQ IF
Structura anemauva CASE
Strucmra repehtwé WH\LE
Strucmra repehtwé UNTIL
swam repetmvé FOR
Strucmra repehhvé SELECT
Alle comenzl meme uhle
Funcﬁishe”
Deﬂmre (declarave) S‘ ape\are (execune)
Example de iunctn
Memu de navigare Relerime bibliogralice 2 / as

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
lntroducere
‘"‘mdm'e Tn prima pane a acesiei prezentéri am discutat despre:
meame hmbalwul de
g! gb h . .
SC" m as I Comen2| s|mp\e
Vanabﬂe de she” , . -
— Modul de executle a comenzHor slmple
Evaesu ammihli S‘ \Ogme . . A
— Executla comenzﬂor swnple ll'l background
Structuvl d2 cumm‘ akemahve . ..
51“;ng — Redlrectan l/O
Functll mu I Comenzi compuse
Anew“ Wm '3'“ — Lamuri de comenzi simple
— Execuiia secvemialé a mai multor comenzi
i Execuiia paralelé, neinlémuité a mai muliur comenzi
i Executia conditionalé a mai multor comenzi
— Sintaxa extmsé: liste de comenzx
I Speciﬁcarea numelor de Iisiere
— Specificarea fi$ierelor \ndwiduale
— Sabloane pemru speciﬂcarea multiplé de fi$iere
I Fisierele de configurare a \merpretorului de comenzi
— lmtiaHzarea sesxunilor interactive ale shell-ului
i lsioricw comenzilor execuiaie
Acum vorn continua prezemarea cu subieclele sumarizale pe slide'ul amerior.
Memu d9 navigare Lucrm la lmia de comandé in umx, parlea a lV-a: lmerpretoare de comerm UNIX, panea a \l-a - scripting BASH a / as

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
lntroducere (cont.)
Mm intr-un sistem UNIX, interpretorui de comenzi este un program executabil ce oteré
Facilititiieiimbaluiulde - . . .. _ -
Ju% doua functionalitati de baza:
Variabiie de she/i . _ _ , . . ~ - ~ - A
WesuammWe I preia comenZIIe introduse de utilizator, le interpreteaza $| le executa, realizand
51:53:53="""“‘a“*'"a“"e astfel interfata dintre utilizator $i sistemul de operare;
M I oferé facilitéti cle programare intr-un limbaj de comandé specific, cu ajutorul céruia
MW‘ se pot scrie script-uri, i.e. fieiere text ce contin secvente de comenzi UNIX.
(Important: limbajui de scripting permite automatizarea lucrului la linia de comandé a acelui shell.)
Heamintesc taptul cé in sistemele de operare din tamilia UNIX avem Ia dispozitie mai multe shell-uri:
sh (Bourne SHell), bash (Bourne Again SHe/l), csh (C SHell), ksh (Kom SHe/I), ash, zsh, $.a.
Referitor la cea deea doua tunctionalitate de mai sus (i.e., aceea de limbaj de scripting), she/I-urille
disponibile in UNIX posedé toate facilitétile specifice oricérui Iimbaj de programare de nivel inalt:
variabile, instructiuni de atribuire, instructiuni de control structurate — alternative si repetitive (de genul
if, case, while, for, 5a.), proceduri $i functii, parametri de apel, etc. Sintaxa acestor facilitéti este
specificé fiecérui shell, tiind astfel o caracteristicé prin care se diferentiazé intre ele shell-urille UNIX.
Vom prezenta in continuare toate aceste facilitéti, cu referiri expiicite la sintaxa
utilizaté de limbajui de scripting oterit de interpretorui de comenzi bash.
Meniu de navigare Lucrui la linia de comandé in UNIX, partea a lV-a: lmerpretoare de comenzr UNIX, partea a il-a — scripting BASH 4/38

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Agenda
\nlmducere \mroducere
:j"'l‘i“‘il'::al“‘“' “e Facilitétile limbajului de scripting bash
4L9‘ Procedun she/I E saw/ppm‘
chedun shell’ scnptrun
Execulla procedumor she/I
Execuha procedumorshell Demo‘ m SCI/m Hemmd
Demo \m strip! “H9\\0wnrld“ Alle 'HCHHQU
AME iac|l|\é\|
Vanabﬂe de she” Variabile de SHE”
i Deﬂrure (creare) 5‘ utlhzare [substltuhe)
Exgvesu antmetme 5‘ mm \nsKruchunea de atnbmre
swam ﬁe comm anemalwe AME Iorme de SUDSMUUE
5| vewwe Comerm mteme me
Variabﬂe pozmcmale 5‘ aHe vanabﬂe spemahe
M Demo‘ un scrip! ‘Pr\n(Args‘
‘we m“ '3'" Expresii arilmelice si lugice
Comenn penlru came anlmeuce
00mm pemru expresu cond\t|una\e
Strucluri de conlrol alternalive si repetilive
SULACIUYH akemauvé IF
Strucwra akemahvé CASE
Strucwra repemivé WH\LE
Structure repemivé UNTIL
Strucmra repehtlvé FOR
Strucmra repehtivé SELECT
Alle comenzi meme “we
Funcﬁishe”
Dehmre (declarare) S‘ apemre (execune)
Example de Vuncln
Memu d9 navigare Helerime bibliogralice 5 / as

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Proceduri shell - script-uri
Tiff’? b ‘ d O proceduré shell, denumité si script (de la termenul in englezé), este practic un
% lisier text ce contine secvente de comenzi UNIX, simple si/sau compuse.
Em“p'°°e“‘ff“°'5“e” “ Noté: $i in MS-DUS sau windows avem un concept similar —fisiere|e batch * .bat.
Demo UH Strip! Hellnwnrld l
Allelacvlvléll . - . A . -- ~ y 1
Wampum” Pentru a Indlca un comentarlu Intr-un script, se utlllzeaza caracterul # urmat de un
Exwmmmeices‘low text (péné la finalul acelei linii de text).
mim— Accesarea In corpul unel procedurl (l.e., In acel llsler script) a argumentelor de apel a
M acesteia, se realizeazé cu ajutorul unor variabile specials (ce pot li doar citite, nu $i
Helennle blhllngvallce
modificate), avénd numele $1, $2, ... , $9, ${10}, ${11}, ...
l t l
Apelul unui script inseamné invocarea numelui séu, folosind oricare dintre formele
sintactice permise pentru comenzi externe, prezentate deja in prima parte: formele de
apel al unei comenzi simple in foreground sau in background, forma de apel al unui
pipeline (i.e., lant de comenzi) $i respectiv celelalte forme de specificare a comenzilor
compuse.
Meniu de navigare Lucrul la llnia de comandé in UNIX, parleaa lV-a: lmerpretoare de comenZlUNIX, parleaa ll-a-scnpting BASH 6/38

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Executia procedurilor shell
rifligﬁmawmde Astfel, pentru lansarea unui script Tn executie in foreground, se poate utiliza oricare
kgfgcgujjiimm dintre cele trei forme de apel amintite deja, cu urmétoarele particularitéti de execulie:
Zigzcxxéiww“Herwww'w UNIX> nume_script [opﬁiuni] [arguments] [redirectd'm' 1/0]
Vanamedm” Efect: se creeazé un nou proces ce ruleazé neinteractiv shell-ul specificat pe prima
W linie a script-ului, prin constructia: # ! nume_shell (sau she/I-ul curent, dacé nu este
we specificat vreun shell pe prima linie), iar acesta va executa linie cu linie comenzile din
w acel fi$ier (ca $i cum ar fi fost introduse la prompterul séu).
UNIX> nume_sheLZ nume_sc’r1;pt [parametm' 5i redirectdm' I/U]
Efect: la fel ca mai sus, procesul shell nou creat fiind cel specificat la prompter.
UNIX> source nume_sc'rz'pt [parametri .57; 'redi'rectii'rz' I/O]
sau UNIX> . nume_sc'r7;pt [parametri $1; 'redi'rectﬁ'r'll I/O]
Efect: nu se mai creeazé un nou proces shell, ci insusi procesul she/l curent va
executa linie cu linie comenzile din acel fi$ier.
Memu d9 navigare Lucrm lalmia de comandéin umx, parleaa lV-a: lmerpretoare de comenerNIX, paneaa \l-a-scrlptfng BASH 7/38

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Executia procedurilor shell (cont)

tiff b ‘ d lar pentru lansarea unui script in execulie in background, se adauga caracterul ‘8c’ la

PJUM ﬁnalul oricareia dintre cele trei forme de lansare Tn executie specificate anterior:

Execuha procedurilor shell - - 4 - -

Em MWWHWMM“ UNIX> nume_scmpt [parametm $1 redirectam 1/0] &

AME lacvlnétl

M UNIX> nume_sheLZ nume_sc’ript [parametr'i $1‘ redirectd'r'i I/U] 8c

Exgvesu antrneuce si \ogice

ffjfgjlsjmmmmm“ UNIX> source mime_sc'r'1lpt [paramet'r'i $7; redirectzi'ri I/U] 8c

M sau UNIX> . nume_sc'ript [paramet'rz' $7; 'red'L'rectd'r'L I/U] &

Helennle bihhngvaiics
Efect: script-ul se executé in maniera descrisé la cele trei forme de apel pentru
execulia in foreground, doar ca de data aceasta interpretorul curent nu mai a$teapta
terminarea executiei acelui script, ci reaﬁaeazé imediat prompterul, oferind astfel
utilizatorului posibilitatea sa introducé o noué comandé pentru a fi executata inainte
de a se termina executia script-ului respectiv (i.e., noua comandé se va executa Tn
paralel cu acel script).

Meniu d9 navigare Lucrul la linia de comandé in UNIX, parlea a lV-a: lnlerpretoare de comenzi UNIX, panea a \l-a - scrlpting BASH a / as

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
I I
I ' ii ,5
Demo. un script Helloworld
Intmducere lata un exemplu, numlt Hello. sh, cu care vorn llustra modul de executle prln cele trel forme de apel:
Faciliﬁjile hmbajului L19
Sclrgnng bash
chedun mu’ scrwr'uli
Execuha pmcsdnmlor she/I
Demo 1m SCHPI “Hallow/add“
“mama. UNIX> ./Hello.sh world
M H2110. unxld!
Lista pruceseluz active in sesiunea ﬁe lucru curenta:
EX 'wammem “° ‘CE um PID PPID c suns TTY 11m: cm:
smmmnnemnumauemanve vidrascu 2424s 242421 o 13:05 {its/4 00:00:00 ibash
vidrascu 24256 24249 0 13:05 ts 4 00:00:00 bin bash . Helln.sh wulld
smegma P / / / /
vidrascu 24257 24256 0 13:05 phi/4 00:00:00 p5 if
Fummlsnsu
Mamet“ rang Noté: la pvimalormé de apel, trebuie semdreplul de executie (Lev, chmod u+x Hello.sh) si specificm numele pvin cale absolulé sau relahvé.
1 Hg 1
UNIX> dash Hello.sh Cristian
re Helln. Cristian!
Lista pruceseluz active in sesiunea de lucru curenta:
UH) PID PPID C STIHE TTY TIME CM!)
vidrascu 24249 24245 0 13:05 pts/4 00:00:00 ibash
vidrascu 25002 24249 0 13:20 phi/4 00:00:00 dash 512110.511 Cristian
vidrascu 25003 25002 0 13:20 phi/4 00:00:00 p5 if
UNIX> source Hello.sh
Hallo. !
Lista pruceselur active in sesiunea de lucru curenta:
UID PID PPID C STIHE TTY TIME CMD
vidrascu 24245 24245 0 13:05 pts/4 00:00:00 ibash
vidrascu 25052 24245 0 13:21 pts/4 00:00:00 p5 if
Memu de navigare 9 l 38

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Alte facilitégi

‘gut; ha ‘ in sectiunile urmétoare vom prezenta 0 serie de facilitéti oferite de limbajul de

|| x \m lu ulde '

scngmgbash . . . . . .

Pmcédmheuisc,,mru.. scripting oferlt de Interpretorul de comenZI bash, precum ar fl:

mm procedumor shell

32251;?““mm” I Variabile de shell

M I Expresii aritmetice si logice

Xwesuanmmg we . . . . .

E ‘ ‘ ‘ I Structun de control alternatlve $| repetmve

Snucmn we comm auernauve

—“—s"e “We I Functii she/l

Funcm she”

RsYeHnle mhhngvaﬂcs
Avertisment: prezentarea acestor facilitéti va fi Ia un nivel simplificat. Pentru 0 descriere completé a
tuturor acestor facilitéli vé recomand studierea documentatiei interpretorului de comenzi bash ([3]).

Meruu d9 navigare Lucrm la hnia de comandé in mm, parlea a lV-a: lmerpretoare de comerm mux, partea a \l-a - scripting BA5H 10 / 38

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
Agenda
\nlmducere \mroducere
:2:"':§"1‘;'::a1“‘“' “e Facililélile limbajului de scripting bash
4L9‘ Procedun she” , scr/plrun
Vanabﬂe de she/I EXECUIIB pFOCedLIIHOY she/I
D°"""el°’°a’sls' Demo. un scr/p! ‘HeHoond'
UIWZHYHSUDSIIWUGF Alle 'HCHHEW
\HSVuchunea ﬁe ambmvs
Ahe inrme desubsmuhe Variabile de shell
Gomerm meme m Dehrwe (creare) 5‘ utlhzale [SubSMuUe]
Vanabﬂe Delmwwe 5‘ HM‘ \nstrucuunea de ambwre
“"ab“"”°'a‘e Alte Iorme de subsmuhe
Dem u” “"P' “P'mms' Comenzx meme me
Eeresu anmm s‘ Wee Variabﬂe pozmonale 5‘ aHe vanabﬂe speo\a\e
Structuvl d2 cumm‘ akemahve DEMO UH SLY/pl PHHIAFQS
ﬁpehwe— Expresii arilmelice si lugice
Funcm m” Comenn penlru came anlmeuce
— Comenm pemru expresu condmunaﬂe
Reﬁevmle mbhograhce
Strucluri de conlrol alternalive si repetilive
SULACIUYH anemauvé IF
Structura akernahvé CASE
Structura repemivé WH\LE
Structure repemivé UNTIL
Strucmra repemwa FOR
Strucmra repehtivé SELECT
Alle comenzi meme “we
Funcﬁishe”
Dehmre (declarare) S‘ apemre (execune)
Example de mnnm
Memu d9 navigare Helerime bibliogralice n ma

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Definire (creare) 5i utilizare (substitutie)
tiff b ‘ d O facilitate comuna tuturor interpretoarelor de comenzi disponibile in sistemele UNIX
M este utilizarea de variabi/e, cu mentiunea ca variabilele au, implicit, valori de tipul $ir
Variabile de shell . . _ . . .. . -
Deiii'elm'elﬁ- de caractere. Variabilele mal sunt numlte 5| parametril shell-ulw respectiv.
ullllZare [substitutiel '
35;’,“353133313: Variabilele sunt péstrate intr-o zona de memorie a procesului shell in care sunt
inmailﬁlifilliilliale definite (i.e., create), sub formé de perechi nib/lie =11aloare .
vanabile speciale
“m “"“"”'“P""""gs' O variabila este detinité (i. e., creata) in momentul executiei primei instructiuni de
EeresllaHirnelice slloglce ’ ‘ . I ~ . A A A v I _ .
Simmmemmiaim.“ arr/bu/re ce o implica (/.e., in care apare in partea stanga a semnulul de atnbuire) sau
WW” a pr|me| comen2| read ce o specmca drept argument.
Reiermlebibliogratice Remarcé: asadar, variabilele she/I nu trebuie declarate in avans (i.e., Ia inceputul procedurii sau
functiei in care sunt utilizate), precum in alte Iimbaje de programare de nivel inalt (e.g., C/C++).
Fteferirea Ia valoarea unei variabile (i.e., atunci cénd avem nevoie de valoarea
variabilei intr-o expresie) se face prin numele ei precedat de simbolul '$', efectul fiind
substitutia numelui variabilei prin valoarea ei in expresia in care apare.
Remarca“: si interpretoarele de comenzi din MSeDUS sau Windows au un concept similar de variabile.
Meniu de navigare Lucrul la linia de comandé in UNIX, partea a lV-a: lmerpretoare de comenzr UNIX, partea a ll-a — scripting BASH 12 I38

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
lnstrucﬁunea de atribuire

‘Fieniljmbalmde lnstrucﬁunea de atribuire este comanda interné cu sintaxa urmétoare:

M UNIX> va'r=[ea:p'r]

W unde var‘ este un identificator (i.e., un nume) de variabilé, iar emp'r este 0 expresie

mfgfjxijjgfufj care trebuie sé se evalueze la un sir de caractere (poate ﬁ inclusiv $irul vid).

ﬁggiq§gijjgjg§ggane Atenlie: caracterul ‘=' nu trebuie sé fie precedat ori urmat de spatii albe!

:2?“itm'WM'gS' Céteva exemple de atribuiri si de expresii in care se utilizeazé valorile unor variabile:

4+2?“ UNIX> v=123 # Variabila v primeste valoarea “123"

i‘Z“M— UNIX> echo $v # Se afiseazé pe ecran textul “123"

Remwmgme UNIX> cat xyv # Se afi$eazé confcinutul fi$ierului xyv
UNIX> cat xy$v # Se afi$eaz€1 continutul fi$ieru|ui xy123
UNIX> v=abc${v}xyz # Variabila v prime$te valoarea “abc123xyz”
UNIX> set # Se afi$eazé lista variabilelor definite
UNIX> unset v sau UNIX> v= # v este “distrusé” (i.e., primeste ca valoare “sirul vid“)
Noté: se folose5te sintaxa ${var}sufz'ac pentru a indica substitutia dorité, atunci cénd numele
variabilei este urmat imediat, Tn acea expresie, de alte caractere ce pot face parte dinlr-un identificator.

Meniu de navigare Lucrm la lmia de comandé in umx, parlea a lV-a: lmerpretoare de comerm UNIX, panea a \l-a - scripting BASH 1a I38

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Alte forme de substitutie
geniljmwlde Alte forme de substitutii/expresii ce implica variabile:
W I Use default values: ${ua'r : —sv;'r}
KEQZEZLZZELZL, Elect: rezultatul expresiei este valoarea variabilei ua'r, dacé aceasta este definité,
SETJEZZZZZLZITJLS altfel este valoarea sir (iar daca sir lipseste, atunci se afiseazé un mesaj
SMEJPQAWQ standard de eroare ce spune ca variabila este nedefinité).
Demo “"“””"‘P""“"§S' I Assign default values: ${va'r : =si'r‘}
We Elect: rezultatul expresiei este valoarea variabilei ua'r, dupa ce eventual acesteia
f°‘“‘h”— i se asigneaza valoarea sir (asignarea avénd loo doar daca ua'r era nedefinita).
W We I Display error ll null or unset: ${ua'r : ?si'r‘ }
Elect: rezultatul expresiei este valoarea variabilei var, dacé aceasta este deﬁnité,
altfel se afiseaza sir (sau un mesaj standard de eroare, daca s'L'r lipseste).
I Use alternate value: ${ua'r :+si'r}
Elect: daca ua'r e deja definita, atunci i se asigneaza valoarea sir‘, altfel riméne
fara valoare (deci asignarea are loo doar in cazul in care 'uar era deja definita).
Meniu de navigare Lucrut la lrnia de comandé in UNIX, parlea a lV-a: lmerpretoare de comenzr UNIX, partea a \l-a — scripting BASH 14 I38

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Alte forme de substitugie (cont)

:gsigﬁmawmde Alte forme de substituiii/expresii ce implicé variabile (cont) :

W I Parameter length: o expresie de forma ${#'ua'r}

KFIXZEZLZZKZLZL, Efectul este de a fi substituité cu lungimea cuvéntului/valorii variabilei var.

STITJSEZZZZILZITJLS I Substring expansion: ${va'rzsta'rtzlength} sau ${va'rzstart}

3”::p;.‘?‘ane Efectul este de a ﬁ substituité cu subcuvéntul, din valoarea variabilei 'ua'r, ce

Hm “"“HWP""W§S' incepe de la pozitia start si de lungime Length (respectiv, péné la finalul

W cuvéntului, in cazul celei de-a doua forme).

imm,— laté céteva exemple cu astfel de expresii/substitulii:

Mm‘ UNIX> word:12345 # Variabila word prime$te valoarea “12345”
UNIX> echo $word # Se afiseazé pe ecran textul “12345”
UNIX> echo ${#word} # Se afiseazé pe ecran textul “5”
UNIX> echo ${word : O : 2} # Se afiseazé pe ecran textul “12"
UNIX> echo ${word: 1 :2} # Se afiseazé pe ecran textul “23”
UNIX> echo ${w0rd : 2} # Se afiseazé pe ecran textul “345"

Meniu de navigare Lucrm la lmia de comandé in umx, parlea a lV-a: lmerpretoare de comerm UNIX, panea a \l-a - scripting BASH 15 I38

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Alte forme de substitutie (cont)
Lgcniitjmbanm I Remove matching prefix pattern: ${va'r#wo'rd } sau ${va'r ##wo'rd }
¢% Efect: va fi substituité cu valoarea variabilei var, din care se eliminé cel mai
Vaname de she” _ - , . .
gjjggg'uggjlu; scurt, respectlv lung, preflx al acesteIa, egal cu valoarea expresleI wo'rd.
mfgfjlejjmlf I Remove matching suffix pattern: ${varZword } sau ${va'r ZZword }
$2232$3333§QZEM Efect: va fi substituité cu valoarea variabilei var, din care se eliminé cel mai
vanabiles swab . . - - -
Um un1¢,,,w,.ms- scurt, respectlv lung, suflx al acestela, egal cu valoarea expreSIel wo'r'd.
W? laté céteva exemple cu astfel de expresii/substitutii:
“Em UNIX> v=AbcAbcAbcAbcDEF # Se initializeazé variabila v, cu valoarea “AboAbcAbcAbcDEF”
ML UNIX> echo ${V#A*c} # Se afiseazé pe ecran textul “AboAbcAbcDEF”
mm UNIX> echo ${v##A*c} # Se afiseazé pe ecran textul “DEF”
UNIX> fisieF/thor/profs/vidrascu/subdir/sursa . c # Se initializeazé variabila fisier
UNIX> echo ${fisier#/thor/profs/vidrascu/} # Se afi$eazé pe ecran textul “subdir/sursa.c"
UNIX> echo ${fisier##*/} # Se afiseazé pe ecran textul “sursac”
UNIX> echo ${fisier% . c} . txt # Se afi$eazé pe ecran textul “lthor/profs/vidrascu/subdir/sursa.txt”
Mai putem utiliza si comenzile externe dirname 5i basename ([8]), astfel:
UNIX> dirname $f isier # Se afiseazé pe ecran textul “lthor/profs/vidrascu/subdir"
UNIX> basename $fisier .c # Se afiseazé pe ecran textul “sursa”
Meniu de navigate Lucrut la linia de comandé in UNIX, partea a lV-a: lmevpretoare de comenzt UNIX, panea a \l-a — scripting BASH 16 I38

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Alte forme de substitutie (cont)
:leﬁmawme I Command substitution: o substitutie specialé este expresia $ ( comanda) sau,
M echivalent, ‘ comanda‘ .
Vanabﬂe de she/i
jjjgggg'jbgiluj; Efectul este de a fi substituité, in linia de comandé sau in contextul in care apare,
mfgfjmijjgfjlf cu textul aﬁsat pe iesirea normalé standard prin executia comenzii specificate;
353212;";3333l1: a“? aceasta este executaté Tntr-un subshe/I (i.e., se creeazé un proces fiu al instantei
EQZZIIiSZijZf‘PY.ntAYQS- curente de she/I, ce va rula o alté instanté a she/I»ului respectiv).
M I Arithmetic expansion: o alté substitutie specialé este $ ( (expression) )
w Efectul este de a fi substituité cu valoarea calculaté a acelei expresii aritmetice.
Funcm shell
MW‘ Word splitting: Tn urma interpretérii liniei de comandé (i.e., dupé ce se evalueazé
substitutiile de variabile, de comenzi si cele aritmetice descrise anterior), instanta
curenté de shell “parseazé” rezultatul acestor substitutii, Tmpértindu-l in cuvinte
folosind ca 5i separatori caracterele <space>, <tab> si <new|ine>.
Pathname expansion: dupé Tmpértirea in cuvinte, urmeazé substitutiile sabloanelor
pentru specificarea multiplé de fisiere, descrise in prima parte a acestei prezentéri.
Meniu de navigare Lucrut la ltnia de comandé in UNIX, panea a lV-a: lmerpretoare de comenzt UNIX, panea a \l-a — scripting BASH 17 I38

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
ComenZI Interne utlle
‘"‘mdm'e laté céteva comenzi interne ale interpretorului bash, utile pentru lucrul cu variabile:
Faclméme hmbalwul de
g! gb h . .
it” t: dash H I Comanda de cmre:
W \e es e
Derwercrearels- UNIX> read var ['ua'r2 'uar3 . . . 1
unhzaveIsubsmuhep , - , . . . . . . . . v
\nsmcmnsaneambmre Are ca efect cmrea, de Ia Intrarea standard stdln, de valorl sl atrlbuwea Ior varlabllelor spemflcate.
A“e’“’"““““bs“‘““e Exemplu: UN1X> read ep "Dari numirul n: " n
Comerm \meme ume
Vanabﬂe pozmuna\9 s‘ ENE
vanab-Iespwwe I Comanda de declarare read-only:
Dem “New” WAGS UNIX> readonly 'uar [va'rZ 'ua'r3 . . . ]
S: “is :“mefe‘s“‘° we‘ Are ca efect declararea varlabllelor specmcate ca fund readeonly (1.9., ele nu mal pot fl modlflcate
ﬁpemwe— dupé executia comenzii, ci rémén cu valorile pe care Ie aveau cénd ea executat aceasté comandé)‘
Funcm she”
ReVeHnle mbhugraﬂce I comanda de eXpOffareI
UNIX> export 'uar ['uarZ van? .. . ]
Are ca efect “exportul” variabilelor specificate in toate procesele fii ale procesului shell respectiv (Tn
mod obienuit, variabilele nu sum “vizibile” in procesele fii, ele fiind locale procesului shell respectiv,
fiind péstrate in memoria acestuia). Mai putem utiliza si combinaiia:
UNIX> export var=valoare [var2=valoare2 . . . ]
Are ca efect atribuirea si exportul variabilei printreo singuré comandé.
Tn terminologia UNIX, pentru o variabilé exportaté se foloseste termenul de variabila“ de mediu.
Memu d9 navigare Lucrm la lmia de comandé in umx, parlea a lV-a: lmerpretoare de comerm umx, panea a \l-a - scripting BASH 18 / 38

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Variabile poziiionale $i alte variabile speciale
‘"‘mdm'e Existé o serie de variabile ce sunt modificate dinamic de cétre procesul shell curent. pe parcursul
Z25‘."t,i‘g“i‘i.2?'“‘“'” executiei de comenzi, cu scopul de ale péstra semnificaiia pe care o au:
W I $1,$2, . . . ,$9,${10},${11}, . . . Semnificaiia: parametrii pozitionali cu care afost apelat
insvuciiunsadeainbmre procesul curent (Le. parametrii din linia de apel in cazul unui script)
2::‘xf::y:j:"e I $0 Semnificatia: numele procesului curent (i.e., al script-ului in care este referité).
32223125231" s‘ Hie I $# Semnificaiia: numérul parametrilor pozilionali din linia de apel (iéré argumentul $0).
Demo unscript“Pi|mAigs' I $* Semnificaiia: lista parametrilor pozitionali din linia de comandé (féré argumentul $0).
EinesiiaHimeiicesi mice I $@ Semnificatia: Iista parametrilor pozitionali din Iinia de comandé (féré argumentul $0).
ﬁzmmswmmi3mm Observatie: diferema dintre $© si $* apare atunci cénd sunt folosite intre ghilimele:
Mum” Ia substitutie "$*" produce un singur cuvént ce contine toti parametrii din Iinia de comandé, pe
Remembhu We cénd "$@" produce céte un cuvént pentru fiecare parametru din linia de comandé.
I $$ Semnificatia: PlD»u| procesului shell curent (i.e.. instanta shell-ului ce executé acel script).
I $7 Semnificatia: codul de terminare returnat de ultimul pipeline executat in foreground.
I $! Semnificaiia: PID-ul ultimului proces executat in background.
I $, Semnificatia: optiunile cu care a fost Iansat procesul shell respectiv.
Observaiie: aceste optiuni pot fi manevrate cu comanda interné set.
Shel/—u| posedé si o serie de variabile de mediu predefinite (prin fisierele de iniiializare):
$HDME , susm , $LUGNAME , $SHELL , $MAIL , $PS1 , $PSZ , $TERM , $PATH , $CDPATH , $IFS ,$.a.
Meniu de navigare 19 l 3B

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Comen2| Interne utlle (cont)
tntruduceve laté alte céteva comenzi interne ale interpretorului bash, utile pentru lucrul cu variabile:
Famlltéhte hmbalvtul de _ _ _ . e
M I Comanda de sh/ft-are, cu smtaxa: shlft [n ] , unde n este 1, |n caz ca lipseste. Are ca efect
V btd hI/ tt u h - -- v i ,.
m deplasarea spre stanga cu n p02|t|| a tuturor parametrllor pozmonall (e.g., pentru n - 1, In $1 se
‘unhzavesubsgmhetb copie valoarea Iui $2, in $2 se copie valoarea Iui $3, s.a.m.d.), iar variabilele $#, $© 5i $* se
nstmcttunea Hm we , v A V . v . _ t , . . - .
Me,n,medesubs\,.m.e actuallzeaza In mod corespunzator. Este utlla, de pllda, atunm cand dorlm sa procesam secventlal
ﬁgn'jiebﬂﬁgjajgﬂiww argumentele de apel a procedurii respective (a se vedea exemplul [FirstScript], iii), disponibil aici).
vanablle spectate . _ . . c .. . . . .
Um unscrwrvnmm§ I Comanda eval, cu smtaxa. eval parametm t Efect. se evalueaza parametnl specltlcatl $l se
Ex ,es,,a,,,me,,ces, ,0 ,ce executé rezultatul evaluérii (ca si cum ar fi fost introdus de utilizator Ia prompter).
Structundecummtattemaltve Un exemplu: eval newvar=\$$varname . Efect: valoarea variabilei varname este consideraté
drept Identlflcator de varlablla, lar valoarea acestula d|n urma este atrlbuna varlabllel newvar (I.e.,
“ms e obtlnem practlc o reterlnta mdlrecta). A se vedea 5| exemplul [FIrstScrIpt], |v)+v), dlsponlbll alcl.
Refermje btbhograhce
I Comanda set se utilizeazé pentru a seta valorile optiunilor de executie a procesului shell curent,
sau a variabilelor pozitionale.
Un exemplu: set *0 xtrace sau set ex . Efect: pentru fiecare linie de comandé introdusé
de utilizator, se atiseazé rezultatul interpretérii acelei linii, Tnainte de a o executa efectiv.
Este utilé pentru depanare, ca sé vedem exact ce se va execute, de citre shell, in urma citirii si
interpretz'trii liniei de comandé respective.
Sfat: adéugati comanda set -x Tn script-uri, Ia Tnceput, pentru a v51 ajuta in etapa de scriere si
depanare; iar apoi, cénd ati ajuns Ia forma dorité a script-ului la care lucrati, o puteti elimina.
Meniu de navigare ‘ 20 l 3B

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
I D
I . n . u
Demo. un script PrlntArgs
'""°““"’e Un exemplu, numit PrintArgs . sh, ce ilustreazé valorile parametrilor pozitjonali prin executja sa:
Facilitijile hmbaimui L19
Sclrgﬂng hash
Vanabﬂe de We”
Denmrewears) 5|
UIWZMMSUDSIIIMIGF
Instruclmnsa ﬁe amblms
Ahe (Dime de subshiulie .
_ UNIX> ./Pr1ntArgs.sh hello world
Comerm mleme UIIIE
Va'labll‘e“°z“.‘°‘"a'°$‘a“e Fusatxnna] paramatars are: #1111015, SQZuerld, 82:, 34:.
“"ab'esm'" ‘ma paramenal SD:./Frlntlrgs.sh , the parameter SHZhellc unrld , and the paramenll “:1
Demo unchprPrianrgs' U55“ PID PPID Cm:
, vidrascu 25472 25471 'bash
w vidrascu 30212 25472 [bin/bash ./PrintArgs.sh hello world
gmwﬁdewmu‘auemaWe vidrascu 30214 30212 p5 in user.pid.ppid.cmd
§ireglmve
Funciim” UNIX> dash PrintArgs.sh vali val2 va13
Reienmembhcgraﬂce Palitxona] plrlmltlrﬁ are: Sisvnn, $221.12, 53:"):4, 84:,
ma Pan-m" $0:PrintArgg.!h , the pltnmltl!‘ Sﬂsvlll val} valB , and the plrlmltar “:1
USER PID ppm cm:
vldrascu 25472 25471 'hash
vidrascu 30351 25472 dash Priutlrgs.sh vall val? val!
vidrascu 30352 30351 p5 in user.pm.ppia.cma
UNIX> source PrintArgs.sh p1 p2 p3 p4 p5 p6
Positional parameter: are: :1:p1, s2:p2, sa:pa, s4:p4,
The parametur $0=7blah , the parameter su=p1 p2 pa p4 p5 p5 , and tha par-meter "=5
USER PID PPID CHD
vidrascu 29412 29411 47m
vidrascu sums 25472 p5 in usar,pld,pp:\d,cmd
Memu de navigare 2‘ (38

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
\nlmducere \mroducere
F=°""5""" “'“balmm “e Facililélile limbajului de scripting bash
scrlglrng bash
Procedun she/I , scr/plrun
VaHabHe a; she/I Execuua procedumor she/I
E Demo. un scr/p! 'HeHoond"
xgvesu ammehce s‘ \OQwe .
Comerm pemm calcme Alle lawman
acmmem Variabile de shell
umerm pemm expvesn
summon“ Deﬂrure (creare) 5‘ utlhzare (substitute)
3‘ \ d ( ‘ M ‘ \nstmchunea d9 ambmre
WW. Em m a arm/E
s’ 1e “we Alie Iorme de subsmuhe
_pe— Comenzx ‘meme uhle
Funcm 5'12” Variabne puzmonale s‘ aHe vanabﬂe spemahe
Remnmm mm Demo‘ un scrip! ‘Pr\n(Args‘
Expresii arilmelice si lngice
Comenn penlru came anlmeuce
Comenn pentru expresu condmuneﬂe
Strucluri de conlrol alternalive si repetilive
SWACIUYH anemauvé IF
Structura akematlvé CASE
swam repehtivé WH\LE
Strucmra repemivé UNTIL
Structure repehtlvé FOR
Structura repemivé SELECT
Alle comenzi meme uhle
Funcﬁishe”
Deﬂmre (declarare) S‘ aware (execune)
Example de Vuncm
Memu de navigare Helerime bibliogralice 22 / as

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
Comenzi pentru calcule aritmetice
tiff b ‘ d Expresii/e aritmetice se pot calcula cu comanda interné let, ori cu comenzile externe
Wm ‘m alw- e
M expr sau bc ([6]). laté céteva exemple de calcule:
V n Wed h I/ . _ ..
Ea is Slim ‘o w UNIX> let v:v—1 # Varlablla v este decrementata.
Comm pemrucalcule UNIX> let v+:10 # Valoarea |Ul v este manta cu 10.
acwifpemmww UNIX> let "v += 2 ** 3" # Valoarea lui v este marité cu 8.
condmonale
Strucmﬂdecummlallemalwe UNIX> expr 1 + 2 \* 3 # Se afi5eazé valoarea expresiei, Le. 7.
svvegeuve _ _ . . y
Mme” UNIX> v= expr $v e 1 # Vanablla v este decrementata.
Remmm mm UNIX> v=$(expr $v + 10) # Valoarea lui v esle mama cu 10.
O alta posibilitate este lucrul cu variabi/e de tip fntreg: comanda declare -i n seteazé atribulul “cu
valori Tntregi" pentru variabila n.
Apoi se pot scrie expresii aritmetice Tn mod direct, fara a mai utiliza explicit comanda let. Exemple:
UNIX> n=5*4 # Variabila n primeste valoarea 20 (i.e., 5 Tnmultjt cu 4).
UNIX> n=2**3 # Variabila n primeste valoarea 8 (i.e., 2 ridicat Ia puterea 3).
Putem lucra si cu variabile de tip vector: comanda declare ea v seteazé atributul “array” pentru
variabila v. Heferirea la un elemental vectorului se face prin v [i]. Pentru exemplificare, a se vedea
exemplul [Iterative math #4], disponibil aici.
Meniu de navigare Lucrul la hnia de comandé in UNIX, panea a lV-a: lmerpretoare de comenzx UNIX, panea a \l-a — scripting BASH 23 I38

***************Ending Page***************


***************Beginning Page***************
***************page number:24**************
Comenzi pentru calcule aritmetice (cont)
:;;::;::jmbalu1ulde Comanda bc ([6]) — un limbaj de programare pentru calcule in virgulé mobilé.
scrlglrng bash Example:
W UNIX> echo 3 “ 2 1 bc #Se afiseazé valoarea 9.
@Ummpemam UNIX> echo 3/ 2 | bc # Se afiseazé valoareaTntreagé 1.
(alrowrreexzepemmexpvesﬂ UNIX> echo 3 /2 | bc -1 # Se afiseazé 1.500. . .000 (i.e., cu 20 de zecimale).
22:321....‘mm... UNIX> echo "scale=4; 3/2" 1 bc # Se afiseazé 1.5000 (i.e., cu 4 zecimale).
mpevlwe— UNIX> echo "scale=10; 4*a(1) " | bc ,1 # Se afiseazé 31415926532, Le. numérul W,
M cu 10 zecimale (5i nu cu 20 de zeoimale!); a(1) este apelul funcliei de bibliotecé arctan (x).
W UNIX> echo "sca1e=5; sqrt (2) " | bc # Se afi$eazé1.41421,i.e.\/§ cu 5 zecimale.
UNIX> echo "scale=2; v = 1; v += 3/2; v+10" 1 bc # Se afiseazé valoarea 12.50.
A se vedea si exemplele [FirstScript]. i)-v) si [MyExpr] din suportul de laborator, disponibil aici.
Arithmetic expansion folosind constructiile ((. . .)) $i $( (- - -)) - EXempleI
UNIX> a=$(( 4 + 5 )) # Variabilei a i se atribuie valoarea 9.
UNIX> (( a += 10 )) # Valoarea lui a este mérité cu 10.
UNIX> (( b = a<45?11:22 )) #Variabilei b i se atribuie valoarea expresiei conditionale,i.e.11.
UNIX> echo $( (0xFFFF)) # Se afiseazé 65535, Le. valoarea acelui numér hexazecimal.
UNIX> echo $( (4#1203)) # Se afiseazé 99, ie. valoarea numérului 1203 scris in baza 4.
Memu de navigare Lucru1 la lmia de comandé in umx, parlea a lV-a: lmerpretoare de comerm mux, panea a 1l-a - scripting BASH 24 / as

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
ComenZI pentru expresu condmonale
‘"‘mdm'e Comanda interné de evaluare a unei expresii conditionale ([7]) are sintaxa urmétoare:
Faclméme hmbalwul de _ . . ‘
M test condatze sau [ condine 1 ,
M unde expresia condilionalé conditie poate fi de una dintre urmétoarele forme:
Exgvesu ammehce S‘ \ogwe _ . , . .
Comm pemmcalcwe I Operaton relatlonall pe s|rur| de caractere:
f;gj?;g;:""wwes“ — test -z string # Adevérat dacé string are lungimea 0.
Strucmndecumrmakemalwe — test in string sau test string # Adevéral dacé string nu este sirul vid.
m “we — test st'rmg, 1 = string,2 # Adevarat daca cele doua s|rur| sunt egale.
Funcm she” _ . ., v ., . .
— test strmg_1 != strang_2 # Adevarat daca cele doua slrurl nu sunt egale.
Refennle mbhngraﬂce _ , _ . . . - v
— test str'mg_1 < strmg_2 # Comparalle folosmd ordlnea leXIcograflca.
— test stringJ > stringj # Comparalie folosind ordinea lexicograficé.
I Condilii relationale Tntre doué valori numericei
— test vaZ_ 1 -eq val_2 # Adevérat dacé cele doué valori sunt egale.
— test 'uaL 1 *ne MILZ # Adevérat dacé cele doué valori nu sunt egale.
— test 'uaL 1 *gt 'uaLZ # Testeazé inegalitatea “mai mare strict".
— test vaLl *ge uaLZ # Testeazé inegalitatea “mai mare sau egal".
— test 'ual_ 1 -1t uaLZ # Tesleazé inegalitatea “mai mic strict".
i test 'uaL_1 -1e 'uu.L_2 # Testeazé inegalitatea “mai mic sau egal".
Memu d9 navigare Lucrm la hnia de comandé in umx, parlea a lV-a: lmerpretoare de comerm umx, panea a \l-a - scripting BASH 25 / as

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Comenzi pentru expresii conditionale (cont)
‘"‘mdmm (cont) Alte expresii conditionale utilizabile ca arguments ale comenzii interne test:
Faclmétrie iimbaluiul de
M I Teste referitoare Ia fisiere: test -opt fi$ier , optiunea de testare - apt puténd fi:
V ri biied h i/
a a es e — *e : testeazé existenta acelui tisier (de orice tip);
Exgresiiaritmetiie st iogice . v v . _ y _ . _
Comenzipemrucalcuie — id : testeaza daca t|$|eru| EXIsta 5| este de tlp dlrector;
Comenzi pemmexprw — ,f : testeazé dacé fisierul existé $i este de tip fisier obisnuit;
ndii n l _, V _ . . v . . .
:mﬁimmratemaive — *p : testeaza daca f|$|erul eXIsta $| este de tlp frfo;
mpemwe— — -b / —c : testeazé dacé fisierul existé si este de tip dispozitiv in mod bloc / caracter;
M i —r / —w/ -x : testeazé dacé utilizatorul curent poate citi / modifica / executa fisierul;
WWW‘ — -s : testeazé dacé fisierul are continut nevid; s.at (a se consulta help test 5i
man 1 test )
I O expresie logicé (negatie, conjunctie, sau disjunctie de conditii):
— test ! conditie, 1 # Negatia conditiei conditie, 1.
— test canditz'r-L 1 fa canditiej # Conjunctia celor doué conditii.
— test conditie_ 1 -o conditiej # Disjunctia celor doué conditii.
unde cumii;7;e_ 1 si conditiej sunt conditii de oricare dintre formele specificate anterior.
Observatie: mai existé si comanda compusé [[ canditie 1] disponibilé in interpretorul bash, cu
acelea$i conditii ca Ia test, dar cu anumite diferente la executie (e.g., string} poate fi o expresie
Meniu de navigare regulm Qirraeesataaimiatiawim asimrmeepaamteeemrr (rm, mmmatcpmiaraceaslé situatieka 138

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
Agenda
\nlmducere \mroducere
F=°""5""" “'“balmm “e Facililélile limbajului de scripting bash
scn lm bash
4L9‘ Pmcedun she” i scr/plrun
VaHabHe a; she/I Execuua procedumor she/I
EvaesuammeMe S‘ \ogme Demo. “15mg! 'HeHoond"
Alle iammau
Struchm d2 cumru‘ akemalwe
sv reghlwe Variabile de shell
5mm “mam |F Deﬂrure (creare) 5‘ utlhzare [substltuhe)
5"ch akemawa CASE \nschhunea de ambmre
Structure [Enema WHILE Alle "me de subshwﬂe
Strucmra repehnvé um Comem ‘meme Wle
gnummmpemé FOR Variabﬂe pozmcmale 5‘ aHe vanabﬂe spemahe
Strucmva repetllwé SELECT Demo‘ U" 5WD! ‘Pr\ntArgs‘
Me WNW‘ ‘meme We Expresii arilmelice si lugice
Fm", mu Comenn penlru came anlmeuce
Comenm penlru expresu condmunme
Reﬁevmle bxbhograﬂce
Slrucluri de control alternalive si repetitive
$UUCKUVH ahernauvé IF
Structura anemauva CASE
Strucmra repehhvé WH\LE
Strucmra repehhvé UNTIL
Structura repetmvé FOR
smoma repehhvé SELECT
Alle comenzl meme “we
Funcﬁishe”
Dehmre (declarare) S‘ apewe (execune)
Example de Vunctn
Memu d9 navigare Helerime bibliogralice 27 / as

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Structura alternatlva lF

‘"‘mdm'e 1) Structura alternative? IF este realizaté de comanda interné if , avénd sintaxa urmétoare:

Facnnéme hmbalulul de

5”’ "n has“ 1f lista_ comenzL 1 ; then l15ta_ comenzLZ ; [else IXLStH,_ comenz'b_3 ;] f1

Vanabﬂe de she/I

E Sau, oricare dintre cele Irei aparitii ale caracterului ‘3’ poale fi inlucuité cu <new|ine>. Spre exemplu:

xgvesu ammehce s\ logme

Struchm d2 cumml anemauve if Z 1' 5 t tL_ COMBTLZ'L_ 1

mwlwe

Structuva auemauva IF then

Structuva alternalwé CASE 211.5 t a COmenZ i 2

Structuva repetmvé WHILE _ _

Strucmrarepetmvé um [ else

Svucmra repemwé FOR - -

Strucmra repetmvé SELECT _ LZStOI_ COITIGTLZZ_ 3 1

Aha comerm \meme 1M2 f1

Funcm shell

Raemwmbhowa,“ Semantica: se executé mai Tntéi comenzile din Lista._ comenzi_ 1 5i, dacé codul de terminare al
ultimei comenzi din aceasté Iisté este 0 (i.e., terminare cu succes), atunci se executé comenzile din
Zista_ comenzi_2. Iar Tn caz contrar (dar numai dacé existé si ramura else), se executé comenzile
din Lista_ comenzi_3.
Structura allernalivé “Multiple IFs”— putem avea mai multe if-uri imbricate (cu prescurtarea elif) :

if Zista_1; then Zista_2; [elif Zista_3; then Zista_4 ; ] . . . [else Zista_1V;] fi
Memu de navigare Lucrul la hnia de comandé in umx, parlea a lV-a: lmerpretoare de comerm mux, panea a \l-a - scripting BA5H 28 / 38

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
Structura alternatlva CASE

‘"‘mdm'e 2) Structura alternative? CASE este realizaté de comanda interné case, cu sintaxa urmétoare:

Faclméme hmbalwul de

scnglmg bash

Var\ab\\edeshe// case ezpresie in

Exgvesu “New s\ \ogme ‘sin 'ua Z o'rz', 1 ) lista, comenz i, 1 ; ;

5mm d2 cumru‘ @(Emam $i'r_ 'ua Z on; 2 ) lista_ comenz i_ 2 ; ;

Structuva akemahvé IF - - - - - - - - - - - -

SM“ “ema'wé CASE ‘sin va Z o'rz'_N— 1 ) lista_ comenzL 1|I— 1 ; ;

5mm repetmvé WHILE _ _ v _

StrucmrarepetmvéUNUL ,SML'UQZOThN ) HSM- comenzulll

Svucmra repemwé FOR ES ac

Strucmra repetmvé SELECT

AME comerm meme ume

“mm” Semantica: se evalueazé ewp'resie si se “scaneazé” fiecare linie Tn céutarea primei linii ce o conﬁne:

Revemmwam dacé valoarea expresiei se regéseste Tn Iista de valori $141 ualori_ 1 , atunci se executé
Zista, comenzi, 1 5i apoi executia comenzii case se incheie. Altfel, dacz'l valoarea expresiei se
regéseste Tn lista de valori $irgualo'rLZ, atunci se executé Zista, comenzi,2 5i apoi execulia
comenzii case se Tncheie. Altfel, $.a.m.d.
Observalie: dacé se folose$te “; ;&“ Tn loo de “; ;", atunci se vor execute listele de comenzi asociate
tuturor sirurilor de valori ce contin valoarea expresiei respective (i.e., execulia comenzii case nu se mai
Tncheie dupé gésirea primei linii ce conﬁne valoarea expresiei).

Memu d9 navigare Lucrm la hnia de comandé in umx, parlea a lV-a: lmerpretoare de comerm umx, panea a \l-a - scripting BASH 29 / 38

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Structura repetmva WHILE

‘"‘mdm'e 2) Bucla repetitive" WHILE este realizaté de comanda interné while, avénd sintaxa urmétoare:
meame hmbalwul de
scnglmg bash
Vaname de m” while Z 2's ta_ comenzi_ 1 ; do Zista_ comenz i_ 2 ; done
W Oricare dintre cele doué aparitii ale caracterului ';' poaie fi inlocuité cu <new|ine>. Spre exemplu:
Struchm d2 wmrm akemahve _ _ _
sv reghlwe whlle lista_ comenz z_ 1
Structuva akemahvé IF d0
Structuva ahemalwé CASE
5mm lepehhvé WHILE Ms t a._ camenz 1'_ 2
Strucmra repemwé UNTH. d
Svucmra repemwé FOR one
Strucmra repetmvé SELECT
“WWW ‘"‘emﬂme Semantica: Ia fiecare iteratie a buclei, se executé comenzile din Lista_ comenzL 1 $i, dacé codul de
M terminare al ultimei comenzi din aceasté Iisté este 0 (11a, terminare cu succes), atunci se execute‘!
‘W “we comenzile din Zista_ comenzi_2 si se reia bucla. Altfel, se terminé execulia buclei while‘

Memu d9 navigare Lucrm la lmia de comandé in umx, parlea a lV-a: lmerpretoare de comerm 1mm, panea a \l-a - scripting BASH so / 38

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
Structura repetmva UNTIL
‘"‘mdm'e 4) Bucla repetitive" UNTIL este realizaté de comanda interné until, avénd sintaxa urmétoare:
Faclméme hmbalwul de
scnglmg bash
Vaname d9 m” unt il Z 2's ta_ comenzi_ 1 ; do Zista_ comenz i_ 2 ; done
w Oricare dintre cele doué aparitii ale caracterului ';' poaie fi inlocuité cu <new|ine>. Spre exemplu:
Structun d2 wmrm akemahve _ _ _
sv ~2ng untll lista_ comenz z_ 1
Structuva akemahvé IF d0
Structuva ahemalwé CASE
5mm repetmvé WHILE Ms t a._ camenz 1'_ 2
Strucmra repemwé UNTH. d
Svucmra repemwé FOR one
Strucmra repetmvé SELECT
“WWW ‘"‘emﬂme Semantica: Ia fiecare iteratie a buclei, se executé comenzile din Lista_ comenzL 1 $i, dacé codul de
M terminare al ultimei comenzi din aceasté Iisté este diferit de O (i.e., terminare cu esec), atunci se
m executé comenzile din Zista_comenzi_2 $i se reia bucla. Altfel, se terminé executia buclei while.
Memu d9 navigare Lucrm la hnia de comandé in umx, parlea a lV-a: lmerpretoare de comerm umx, partea a \l-a - scripting BA5H 31 /38

***************Ending Page***************


***************Beginning Page***************
***************page number:32**************
Structura repetltlva FOR

‘"‘mdm'e 5) Bucla iterative? FOR este realizaté de comanda interné for, avénd sintaxa urmétoare:

Faclméme hmbalwul de

5”’ "n has“ ‘for 'ua/r'bab'b la [ 1n L'Lsta._ cu'u'mte ] ; do letzL comen21 ; done

Vanabﬂe de she/I

E Oricare dintre cele doué aparitii ale caracterului ‘;‘ poale fi inlocuité cu <newline>. Spre exemplu:

xgvesu ammehce s\ ‘ogme

Struchmdecumrmakemahve for UaTZﬂbi La. [ in Zista cu'uinte ]

svreghlwe _

Structuva akemahvé IF d0

Structuva ahemalwé CASE List”, COMETLZ'L-

Structuva repetmvé WHILE _

Strucmra repemwé UNTH. done

Svucmra repemwé FOR

31:3:ZE'3TYEVZSSECT Semantica: Lista_ cum'nte descrie o listé de valori pe care le ia 'ua'rz'aln' Lu, Tn mod succesiv si,

WWW” pentru fiecare asemenea valoare, se executé comenzile din lista_ cumenzz'.

m Observafie: aceasté formé a structurii for se foloseste pentru mullimi neordonate de valori, date prin
enumerare. Insé, dacé avem o multime ordonaté de valori, arn putea sé o specificém prin valoarea
minimé, cea maximé si pasul de incrementare. In acest scop se poate folosi comanda seq, astfel:
UNIX> for v in $(seq 1 $n 2) ; do Zista_comenzz' ; done
Alternativ, se mai poate folosi 5i comanda for (( , adicé a doua formé sintacticé a comenzii for:

for (( expl; exp2; expS )); do lista_cumenzz'; done
unde expl, exp2 5i exp3 sum expresii aritmetice, cu aceleasi semnificalii ca in Iimbajul C/C++.
Memu d9 navigare Lucrm la lmia de comandé in umx, parlea a lV-a: lmerpretoare de comerm umx, panea a \l-a - scripting BASH 32 / 38

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
Structura repetltlva SELECT

‘"‘mdm'e 6) Bucla iterative? SELECT este realizaté de comanda interné select, avénd sintaxa urmétoare:

meame hmbalwul de

scnglmg bash

Var\ab\\edeshe// select 'uu/r'mbz' La [ in Listu,_ cu'uz'nte ] ; do Lista_ comenzv; ; done

W Oricare dintre cele doué aparitii ale caracterului ‘;‘ poaie fi inlccuité cu <newline>. Spre exemplu:

Struchm de cumru‘ akemahve

4W—="E “We select 'uu/riabi La [ in Listu._ cmnlnte ]

Structuva akemahvé IF

Structuva anemanva CASE d0

5mm Iepemwé WHILE Li s t a comenzi

5mm Iepemwé um“. _

Svucmra repemwé FOR done

Structura repetlhvé SELECT

News“ ‘"‘emem Semantica: este o combinatie Tntre for si case — Ia fiecare iteratie uariabi La primeste ca valoare

M acel cuvént din lista Zista, cu'uinte ce este selectal prin interactiune cu utilizatorul. Executia buclei

R V l bl)‘ ﬁ ,_ . . . . . . ~ A .

‘9M ‘ ‘D me select se Inchele tot prln Interactlune cu utlllzatorul (apasand tastele CTRL+D, Le. EOF).
Observalie:
Atét Ia bucla select, cét si Ia bucla for, dacé Iipseste partea opiionalé in Zista_ cu'uz'nte ,
atunci drept Iisté de cuvinte se prelucreazé valoarea variabilei speciale $@.

Memu d9 navigare Lucrm la hnia de comandé in umx, parlea a lV-a: lmerpretoare de comerm umx, panea a \l-a - scripting BA5H 33 / 38

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Alte comenzi interne utile
mm“ laté alte céteva comenzi interne, utile atét Tn script-uri, cét si Ia linia de comandé a interpretorului bash:
:Zj'g",‘§g“1l'::a'“‘“'de I Comanda break, cu sintaxa: break [n] , unde n este 1, in caz cé lipseste. Efect: se iese afaré
Vanabﬂedeshe/I din n bucle doedone imbricate, executia continuénd cu urmétoarea instructiune de dupé done.
Exgvesuammehces\ogme I Comanda continue, cu sintaxa: continue [n] , unde n este 1,Tn caz cé lipseste.
WM"dewmﬂmmwe Efect: Tn cazul n, I 1 se reincepe bucla curenté do-done (de Ia pasul de reinitializare), respectiv
m pentru n > l efectul este ca si cum s-ar executa de n ori comanda continue 1.
Structuva akemalwé CASE
5mm Iepemwé WHILE I Comanda exit, cu sintaxa: exit [cod] , unde cod este valoarea variabilei speciale $?, in caz
::::::::::::$1::QQL cé Iipseste. Efect: se incheie executia scripteului (sau instanlei de shell) in care este apelaté, iar
5mm [Epemwg SELECT codul séu de terminare va fi valoarea speciﬁcaté.
A“““'“e"z“"‘e'"e““‘e I Comanda wait, cu sintaxa: wait [pid] . Efect: se suspendé executia script»u|ui (sau instantei
M de shell) Tn care este apelaté, a$tepténdu-se terminarea procesului avénd PID-ul specificat.
m I Comanda exec, cu sintaxa: exec comandii . Efect: se executé comanda specificaté, féré a se
crea un nou proces Tn acest scop. Astfel, she/l-ul ce executé aceasté comandé se va “reacoperi” cu
procesul asociat comenzii (deci nu este reentrant).
I Comanda trap, cu sintaxa: trap comandii euem'ment . Efect: se va executa comanda
specificaté atunci cénd se va produce acel eveniment (i.e., cénd se va primi semnalul respectiv).
Exempm: UNIX> trap ’rm /tmp/ps$$ ; exit ’ 2
Noré: 2 = interrupt signal (semnalul generat prin apésarea 1as1elor CTRL+C ), 3 = quil signal (semnalul general prin
apésarea 1as1elor CTHL+\ ), s.a>
Meniu de navigare Lucrm la hnia de comandé in UNIX, paHea a lV-a: lmevpretoare de comenzx UNIX, panea a \l-a — scripting BASH 34 I38

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
Agenda
\nlmducere \mroducere
F=°""5""" “'“balmm “e Facililélile limbajului de scripting bash
SCH lm bash
4L9‘ Procedun she/I , scr/plrun
VaHabHe a; she/I Execuua procedumor she/I
EvaesuammEME S‘ \ogme Demo‘ “15mg! ‘HeHoond'
Alle 13mm
Struchm d2 cumru‘ akemahve
sv reghlwe Variabile de shell
Deﬂrure (creare) 5‘ utlhzare [substltuhe)
W \nsKruchunea de ambmre
apelare(execuue) Alie Iorme de subshtuhe
Example d9 mm Comenzx mteme uhle
Variabﬂe pozmcmale 5‘ aHe vanabﬂe spemahe
He¢ennle mmgvance Demo‘ u" scrip! ‘anArgs‘
Expresii arilmelice si lugice
Comenn penlru came anlmeuce
Comenm penlru expresu condnluneUe
Strucluri de conlrol alternalive si repetilive
SULACIUYH anemauvé IF
Strucmra akematlvé CASE
Strucmra repemivé WH\LE
Strucmra repemivé UNTIL
Strucmra repehtlvé FOR
Strucmra repehtivé SELECT
Alle comenzi meme uhle
Funcﬁishe”
Deﬂmre [declarave) S‘ apemre (execune)
Example de iuncln
Memu d9 navigare Helerime bibliogralice as / as

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Defmlre (declarare) $| apelare (execulle)

‘"‘mdmm O lunclie shell este un nume pentru 0 secvenlé de comenzi UNIX, analog cu procedurile shell, cu

Fiflllbld . .. . .A .. A . ..

szzlgllijgwbzghalum e deoseblrea ca o funciie nu se scrle lntr-un fl$lel text separat, ca In cazul acestora, 0| se scrle (I.e., se

Variabiledeshell declaré) fie intro proceduré shell, fie direct la prompterul unei instants de she/I, folosind sinlaxa:

EXQleSll arilmelile Si iogice

Slruclundecurilmlallemalive function nume_funcitie O { lista_ comenzi ; }

—;:'y“fn"l'esgge”mfmels Semantica: comanda interné function declare": nume,f1mcjtie ca fiind o variabilé de tip lunclie,

i .

ﬁﬂeiarﬂexeclﬂie) adicé un “alias” pentru secventa de comenzi lista, comenzi.

Example de lUﬂGlll

Helennlebihlingialice Apelul unei funclii inseamné execulia acelei secvente de comenzi si se face similar ca pentru orice
comandé simplé, adicé prin numele séu, plus parametri si eventuale redirectéri.
La fel ca la proceduri, in corpul unei functii (i.e., in Zista, comenzi ) folosim variabilele pozilionale
$1, $2, . . . , $9, ${10}, ${11}, . . . pentru a ne referi la parametrii de apel ai funcliei, iar prin
variabilele speciale $#, respecliv $* 5i $©, ne referim la numérul, respectiv lista, tuturor parametrilor de
apel ai acelei functii.
Observatii: i) in declaratia unei functii, fie function, ﬁe () pot fi omise, dar nu simultan améndoué!
ii) intre perechea de paranteze O nu se scrie niciodaté nimic, chiar dacé dorim sé declarém funclia ca
avénd unul sau mai multe arguments! iii) in concluzie, conceptul de funclie de la shell-uri NU este
similar, dip,d.v. sintactic si semantic, cu cel de functie din limbaje de programare precum C/C++.

Meniu cle navigare Lucrul la linia de comandé in UNIX, panea a lV-a: lnlerpreloare de cornenZi UNIX, parlea a ll-a — scripting BASH 36 I38

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
Exemple de funcjm
mm” 1) Iaté un exemplu de tunctie, declaraté si apelaté direct la Iinia de comandé a she/I-ului:
Facililitile hmbaiutui de
EM UNIX> function myilisting O { echo "Listingul directorului: $1" ; \
M > if test ed $1 ; then ls elA $1 ; else echo "Eroare" ; fi }
W UNIX> my_1isting ~vidrascu/so/
fl",:““'.§:§§°"“"“‘mama“ Etect: se va afisa continutul directorului specificat ca argument al functiei.
Fungiismzll 2) Iaté un alt exemplu de functie, declaraté 5i apelaté Tn interiorul unui script:
Detmlretdectarars) 5|
apelamexscuuep
Exemple do mnqu
Reisnnle bthhagralma
Dacé apelém acest script cu urmétoarea Iinie de comandé, vom obtine ca output:
UNIX> ./scrip1: . sh a b c
Concluzie: mesajele afisate pe ecran ne demonstreazé diterenta dintre modul de evaluare al
variabilelor speciale $* si $@, atunci cénd sunt cuprinse intre ghilimele.
3) Alte example: a se vedea [MchcOrCat] si [Recursive math #1 & #2], disponibile aici.
Mentu de navigare Lucrut la linia de comandé in UNIX, pavtea a lV-a: lntevpretoave de oomenzt UNIX, partea a ll-a — scripting BASH 37 l 38

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Bibliografie obligatorie
‘"‘mdfm [1] Capitolul 2, §2.4 din cartea “Sisteme de operare — manual pentru 1L7‘, autor C. Vidrascu, editura
Z25;"i2‘§“1‘;22a'“‘“'“ UAIC, 2006. Noté: este accesibil, in format PDF, din pagina disciplinei “Sisteme de operare":
M o https : //profs . info . uaic . r0/~vidrascu/SU/books/ManualID-SE] . pdf
EXQYGSH aritmehie Si [ogice
jig“:=°""“‘a‘“='"a“ve [2] Suportul online de Iaborator asociat acestei prezentéri:
Funcmsne/i o https : //pr0fs . info . uaic . ro/"vidrascu/SO/labs/sup0rt_lab4 . html
WWW‘ o https : //profs . info . uaic . ro/"vidrascu/SO/labs/suport_1ab5 .html

[3] Documentatia interpretorului de comenzi bash : man 1 bash , precum $i

http : //www . gnu. org/software/bash/manual /bashref .html

[4] Linux Documentation Project Guides a “Advanced Bash-Scripting Guide”

[5] Cartea “Bash Pocket Reference" (1st edition), by A.Robbins, ‘Reilly Media Inc‘, 2010.

[6] help let , man 1 expr 5i man 1 bc / man 1p bc

[7] help test $i man 1 test

[8] man 1 basename si man 1 dirname

Meniu d9 navigare Lucrui la linia de comandé in umx, pariea a lV-a: lmeipretoaie de comenzi UNIX, pariea a il-a - scrlpting BA5H 38 / 38

***************Ending Page***************

