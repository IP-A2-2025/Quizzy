***************Beginning Page***************
***************page number:1**************
ChaBter 1: Introduction

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
A

“w Chapter 1: Introduction

I What Operating Systems Do

I Computer-System Organization

I Computer-System Architecture

I Operating-System Operations

I Resource Management

I Security and Protection

I Viriualizaiion

I Distributed Systems

I Kernel Data Structures

I Computing Environments

I Free/Libre and Open-Source Operating Systems
Wm, m..." mummy mm t 1 mm.‘ W“ m “View

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
A . .
MW Ob jectwes
I Describe the general organization of a computer system
and [he role 0f inlerrupls
I Describe the components in a modern, multiprocessor
computer system
I Illustrate the transition lrorn user mode to kernel mode
I Discuss how Operalirlg syslems are used in various
oumputing environments
I Provide examples 0f free and Open-Source Operating
systems
OM", sh..." “w.” mm . , “mm W“ m “View

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
t‘
W)? Y Computer System Structure
I Computer system can be divided into four components:
' Hardware — provides basic computing resources
> CPU, memory, l/O devices
Q Operating system
' Controls and coordinates use 01 hardware among various
applications and users
0 Application programs e deﬁne the ways in which the system
resources are used to solve the computing problems of the
users
> Word processors, compilers, web browsers, database
systems, video games
' Users
> People, machines, other computers
emu".5y....ne.m.,.,\.em.,.m .. Memes-m“requiem.

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
“ﬁlbstract View of Com ponents of Computer
app lcatlon programs
(unmrsllersv web bran/um dmlwmem RM 9R)
I ¢ I
I i 1
(CPU, memory, l/O devkes, eh.)
Wmﬂnmmwvwm .5 summum.mmww.

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
A
“W What Operating Systems Do
I Depends on (he porru or view
I Users want oorweruerree, ease of use and guod performance
. Don’! care about resource ulililation
I Bui shared cempuier such as mainframe or minicnmputer musi keep ail users
nanny
0 Qpemung sysiem ls a resource allocakor and conirol program makrng
emorem use oi HW and managmg execuilon of user programs
I Users oi dedicate systems such as worksiaiions have dedicated resources but
irequemly use shared resources from servers
I Mobiie oevrees lrke smanphones and reoles are resource poor, optimized for
useorlrry and battery hie
' Mobile user interiaoes such as (ouch screens, voroe recognition
I Some compulers have lime 0r r10 user \nieriace, such as embedded compuiers in
devices and aulcrrwbiles
0 Run pnmaniy without user Interventrcn
om", ,....n WWW em r s snowmen. W“ .r. Wiser.

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
m
“$9 Deﬁnmg Operatlng Systems
I Term OS covers many roles
' Because of myriad designs and uses of OSes
' Present in toasters through ships, spacecraft, game
machines, TVs and industrial control systems
' Born when fixed use computers for military became
more general purpose and needed resource
management and program comrol
Wm, 5"..." “MW w Em . r mm.‘ W“ m suntan“

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
t‘
W Operating System Defln ltlon (Cont.)
I Nu universally aooepled deﬁnilion
I “Everything a vendorships when you order an operalirig syslem“ is
a good approximation
' Bul varies wildly
I “The onS program running ai all tlmSS on the compuler' is (he
kernel, part loe operating system
I Everything else is eiiher
- a sysiem program (shlps with (he operating sysiem, but HO!
pan al ihe kemel) . or
' an applieaiieri program, all programs rim associated with ihe
operating syslem
I Today's OSes lar general purpose and mobile compuling also
include middleware a a set 0| soﬂware frameworks that provide
addition services to application developers such as dalabases,
muliimedia, gmphlcs

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
“)Fr Computer System Organlzatron
I Computer-system operation
' One or more CPUs, device conirollers connect ihrough common
bus providing awess to shared memory
' Concurrent execution of CPUs and devices comparing (or
memory cycles
mouse keyboard Primer muniiov
disks
9;; <5 w g
h.
u m
system bus
1
Wmmmmmnmm .. sr-hmwm.mmim.

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
t‘
W Computer-System Operation
I l/O devices and the CPU can execute concurrently
I Each device controller is in charge of a particular device type
I Each dewce controller has a local buffer
I Each device controller type has an operating system device
driver to manage it
I CPU moves data from/lo main memory lo/trom local butters
I l/O is from the device to local butler oi controller
I Device controller inlorms CPU that it has ﬁnished its
operation by causing an interrupt
Wm. m..." Ema.’ raw a.” Hi Slim-m W“ m w‘. my.

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
~
W Common Functions of Interrupts
I Interrupt transfers control to the interrupt service routine
generally, through the interrupt vector, which contains the
addresses of all the service routines
I Interrupt architecture must save the address 01 the
interrupted instmction
I A trap or exception is a soﬁware-genemted interrupt
caused either by an error or a user request
I An operating system is interrupt driven
Wm. 5"..." “We w mm i n “mm cm m with“

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
“fr Interrupt Timeline
5 5 5 HE
* ‘ii i Q i 5

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
~
“$35M Interrupt Handllng
I The operating system preserves the state oi the CPU by
storing registers arid the program Counter
I Determines which type oi interrupt has occurred:
I polling
. vectored interrupt system
I Separate segments of code determine what action should
be taken tor each type oi interrupt
0mm sh..." “We” a.“ i it Siam.‘ W“ m mien“

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
w’); Interrupt-drlve lIO Cycle
.

‘

.WW.“ WWW.

MM“ mmmw
7 5
5

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
“3;?
I
._ IIO Structure
I After l/O starts, control returns to user program only upon l/O
completion
i Wait instruction idles the CPU until the next interrupt
0 Wait loop (contention for memory access)
. At most one l/O request is outstanding at a time, n0
simultaneous l/O processing
I After l/O starts, control returns to user program without waiting
for l/O completion
Q System call — request to the OS to allow user to wait tor l/
O completion
. Device-status table Contains entry for each l/O device
indicating its type, address, and state
i OS indexes into l/O device table to determine device
status and to modlfy table entry to include interrupt
0min, 5"..." “WP tar mm its sum-a W“ .nt W“. my.

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
N
“W Storage Structure
I Main memory i pnly large slorage media lhat the CPU can access directly
' Random access
0 Typically volatile
' Typically random-access memory in the lprm oi Dynamic Random-access
Memory (DRAM)
I Seoondan/ storage — extension of main memory that provides large
nonvolatile storage capacity
I Hard Disk Drives (HDD) — rigid metal or glass platters covered with
magnetic recording material
' Disk suriace is logically divided into tracks, which are subdivided into sectors
' The disk mmmllerdemrminee the logical interaclion between the device and lhe
computer
I Non-volatile memory (NVM) devices- faster than hard disks, nonvolatile
~ Various technologies
I Becoming more popular as capamty and performance increases, price drops
We“, 5"..." “We” em i i1 sllhmm-u. W“ m seq-3mm

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
ml.‘

‘1/’ Storage Definitions and Notation ReVIew
The oasic unit pt computer storage is the bit . A hit can contain one of two
values, n and 1. All other storage in a computer is based on collections oi b'its.
Given enough bits, it is amazing haw many things a computer can represent;
numbers, letters, images, movies, sounds, documents, and programs, t0 name
a few, A byte l5 8 bltS, and On mOSt computers It l5 the smallest convement
Chunk of storage, For example, most computers dDrl't have ari ‘instruction t0
move a bit but do have one ta move a byte. A less common term is ward,
which ls a given computer architecture’; native uﬂlt Of data. A word lS made
up bf one or mare bytes. For example, a computer that has 54bit registers and
64rhit memory addressing typically has 64rbit (Srhyte) words. A computer
executes many operations in its native word size rather than a byte at a time.
Computer storage, along Wltl'l most camputer throughput, IS generally
measured and manipulated in bytes and collections of bytes. A kilobyte , or
KB , is 1,024 bytes; a megabyte , or MB, is 1,024z bytes; a gigabyte , or GB , is
1,0241 bytes; a terabyte , orTE , is 1,024‘ bytes; and a petahyle , or Pa , is 1,024;
bytes, Computer manufacturers often ruund Off these numbers and Say that
a megabyte lS l milllOﬂ bytes and a gigabyte l5 1 blllion bytes. Networkmg
measurements are an exception to this general rule; they are given in bits
(because networks move data a bit at a time).

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
t‘
“W Storage Hlerarchy
I Storage systems organized in hierarchy
' Speed
' Cost
i Volatility
I Caching — copying information into faster storage system;
main memory can be viewed as a cache for secondary
storage
I Device Driver for each device controller to manage l/O
' Provides uniform interface between controller and
kernel
0mm, sh"... Cum,“ e in?‘ mm t w Sllhvumu. Bllvln m m". em

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
‘ff Storage-Device Hierarchy
smrage capacity axes: ‘ime
y%
g cache my 5
vulnlh Fiil—ﬂ
m. "WW
W W
, -- W
.._—‘
-'V
. __‘
a m g
2- -- MW e
2 . —‘ W i
MMMCBWVMM m “Inﬂammammuu

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
*4}; How a Modern Computer Works
.
“"“WW'M Mmm ' g; '
CPU ‘N
g g g m
5 s é / mm
A van Neumann architecture

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
“yr Direct Memory Access Structure
I Used for high-speed l/O devices able to transmit
information al close l0 memory speeds
I Device controller translers blocks oi data lrom butler
storage directly l0 main memory without CPU
intervention
I Only one interrupt is generated per block, rather than
the one interrupt per byte
Wm. m..." “We w a.” l u “mm W“ m swim.

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
'Q
“W Computer-System Architecture
I Most systems use a single general-purpose processor
i Most systems have special-purpose processors as well
I Multiprocessors systems growing in use and importance
' Also known as parallel systems, tightly-coupled systems
' Advantages include:
1. Increased throughput
z. Economy 0| scale
a. Increased reliability — graceiul degradation or fault tolerance
0 Two typeSI
I. Asymmetric Multiprocessing — eacn processor is assigned a
specie task,
2. Symmetric Multiprocessing — each processor performs all tasks
om“. 5"..." “We” a.“ i z: Home W“ m animal‘

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
9w‘ Symmetric Multiprocessing Architecture
m E

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
“W A Dual-Core Design
I Mulii-chip and multicore
I Systems comaining all chips
. Chassis containing multiple separate systems
pm»
OPUm ovum.
mam l mllln
I I ‘
M. | i M.
i m"
‘ "W" A
0mm, syn-m Cum,“ 7 w mm i zs Sllhvmhu. Gllvin v.4 5.“. emu

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
“43$, 7 Non-Uniform Memory Access System

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
ﬁ
“W Clustered Systems
I Like multiprocessor systems, but multiple systems working together
' Usually sharing storage via a storage-area network (SAN)
' Provides a high-availability service which survives laiiures
> Asymmetric clustering has one machine in hot-standby mode
t Symmetric clustering has multiple nodes running applications,
monitoring each other
' Some clusters are for high-performance computing (HPC)
> Applications must be written to use parallelization
' Some have distributed lock manager (DLM) to avoid conﬂicting
operations
OM", sh..." “We.” a.“ i 2'1 mm.‘ W“ m “View

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
W Clustered Systems
e
Mk

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
MP
My) PC Motherboard
Consxdcl lhc dcsklop PC motherboard \vim a pmccssor sackct shnwn below
WM WWW
I: % ,
‘ i
\ ‘ ‘ / Pmbusnous \
. v "- ' ' ".7, ,/
> W i \ . y '/
' I I I ' -— ‘
O a E<,- - 1 y ‘ ~.
- mﬁ-L F5» -
/ \
Thls mm |s a Iully'funchQnmg mmpmer, \mce us gm; are populamd,
ll consists a! a pwcrssol sockcl (onlamilu; a CPU, DRAM sackcs, l'Clc bus
slots, and 1/0 connectors of \‘anmAs types, Even u» lowestfosl general’
pulpose cw cvnlams mulhple tore; Some moﬂmrboanis conlam mulhple
pnxreemw “Eh-b, Mum advanml (lvmpuwv! alluw mom lhan (m! mm
[www.mgmm gym A

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
t‘
sew Operati ng-System Operations
I Bootstrap program e simple code to initialize the system, load
the kernel
I Kernel loads
I Starts system daemons (sen/ices provided outside of the
kernel)
I Kernel interrupt driven (hardware and software)
° Hardware interrupt by one oi the devices
' Software interrupt (exception or trap):
t Software error (e.g., division by zero)
t Request for operating system service — system call
> Other process problems include inﬁnite loop, processes
modifying each other or the operating system
Wm, 5"..." “WP w mm W, Slim-a W“ m W‘. my.

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
A
W Multiprogramming and Multitasking
I Multiprogramming (Batch system) needed for elliciency
I single user cannol keep CPU and IIO devices busy at all times
0 Multiprogramming organizes jobs (code and data) so CPU always has one
lo execute
I A subset of total yobs in system is kept in memory
' Onejoh selected and run viajob scheduling
I Wnen it has to wait (lor l/O lor example), 05 switches lo another job
I Timesharing (multitasking) is logical extension in whicn CPU switches iobs
so lrequently mat users can interact with eacn job while it is running, creating
interactive computing
' Response time should be < l second
' Each user has at least one program execuling in memory uprocess
° If severaljobs ready to run slthe same time n CPU scheduling
' ll processes don't ﬁt l|’l memory, swapping moves them in and outto run
i Virtual memory allows execution of processes not complelely in memory
em", an..." “We law am in snowmen. can“ .xa W‘. my.

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
WMemory Layout for Multiprogrammed System
max
0

WMWWBMWWW m “mumWWW.

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
ﬁ
“3} ‘Y Dual-mode and Multlmode Operatlon
I Dual-mode operation allows OS to protect itself and olher syslem
components
i User mode and kernel mode
. Mode bit provided by hardware
t Provides ability to distinguish when syslem is running user
code or kernel code
t Some instructions designated as privileged, only
executable in kernel mode
> System call changes mode to kernel, return from call resets
it to user
I Increasingly CPUs supporl multi-mode operations
i i.e. virtual machine manager (VMM) mode for guest VMs
Wm,Synmcwmwsmdm in sum-a “MMHNNJW.

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
t‘
W Trans|t|on from User to Kernel Mode
I Timer to prevent infinite loop l process hogging resources

' Timer is set to interrupt the computer after some time period

' Keep a counter that is deoremented by the physical clock

. Operating system set the counter (privileged instruction)

Q When counter zero generate an interrupt

. Sel up belure scheduling process t0 regain control 0r terminate

program that exceeds allotted time
umrmodn

Wm,5y...mcm.,..em-E.,.m w Slum-e summariw.

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
t‘
NW Process Management
I A process is a program in execution. n is a unit of work within the
system. Program is a passive entity, process is an active entity.
I Process needs resources to accomplish its task
' CPU, memory, l/O, files
° Initialization data
I Process termination requires reclaim of any reusable resources
I Single-threaded process has one program counter specifying
location of next instruction to execute
. Process executes instructions sequentially, one at a time,
until complelion
I Multi-threaded process has one program counter per thread
I Typically system has many processes, some user, some
operating system rurlrlirlg concurrently 0n one 0r more CPUS
Q Concurrency by multiplexing the CPUs among the
processes / threads
om",s"..mc.m.=.mierm.m is gram-a “Mr-"dwiwr.

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
t‘
“$9 Process Management Actlvmes
The operating system is responsible lorthe lollowing activities in
connection with process management:
I Creating and deleting both user and system processes
I Suspending and resuming processes
I Providing mechanisms lor process synchronization
I Providing mechanisms for process communication
I Providing mechanisms lor deadlock handling
Wm, 5"..." Cum.’ w mm is Slim-s W“ m W‘. W.

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
r‘
W Memory Management
I To execute a program all (or part) oi the instructions must be in
memory
I All (or part) of the data that is needed by the program must be in
memory
I Memory management determines what is in memory and when
. Optimizing CPU utilization and computer response (D users
I Memory management activities
i Keeping track of which parts of memory are currently being
used and by whom
i Deciding which processes (or parts thereof) and data to
move into and out of memory
0 Allocating and deallocating memory space as needed
om“, 5"..." “We w m l a1 “Wm W“ m wig,”

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
r‘
W File-system Management
I OS provides uniform, logical view of information storage
. Abstracts physical properties t0 logical storage unit - tile
° Each medium is controlled by device (i.e., disk drive, tape drive)
t Varying properties include access speed, capacity, data-
transter rate, access methcd (sequential 0r random)
I File-System management
0 Files usually organized Into d|rectones
. Access ccntrol 0n most systems t0 determine who can access
what
0 OS activities include
t Creating and deleting files and directories
> Primitives to manipulate files and directories
t Mapping ﬁles onto secondary storage
t Backup ﬁles onto stable (non-volatile) storage media
amt.“ 5m... Wm“ e In.‘ mm t u sllhvszhu. GIM“ m m:- mil

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
A
‘W Mass-Storage Management
I Usually disks used to store data that does not fit in main memory or data that
must be kept tor a “long' period oi time

I Proper management IS uicentral importance
I Entire speed of oomputeroperaiion hinges on disk subsystem and its algorithms
I OS activities

i Mourning and unmounting

. Freespace management

' Storags alienation

' Disk scheduling

i Partitioning

' Protection
I Some sturage need not. be fast

' Tertiary storage includes optical storage‘ magnetic tape

0 Stili must be managed e by 0s or applications

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
t‘
“W Caching
I Important principle, performed at many levels in a computer
(in hardware, opemiing system, software)
I Information lrl use copied from slower to faster storage
temporarily
I Faster storage (cache) checked ﬁrst to determine if
informaliorr ls lhere
° If if is, information used directly from the cache (fast)
. If not, data Copied to cache and used there
I Cache smaller than storage being cached
' Cache management important design problem
. Cache size and replacement policy
OM",showmawsmdm W amnesia“Mariam

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
WCharacterlstlcs of Varlous Types of Storage
m-mmw“
llnplemmlalinn (‘m-mm" mm“ (mossmn llaslmlemnry magneticdisk
technoluqy Wilhlnulliple olkhip

mums cumsnm
M
“WWW mmmw
——M
—m-———
Movement between levels ol storage hierarchy can be explicit or implicit
0mm", Sm... Cum,“ 7 w mm m Sllhvuzhn. Gllvin m 5-“. mu

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
t‘
MW Migration of data “A” from Disk to Register
I Multitasking environments must be carelul to use most recent
value, no mailer where ii is siored in the storage hierarchy
magnetic main hardware
disk I memory I E. register
I Multiprocessor environment musi provide cache coherency in
hardware such that all CPUs have the most recent value in their
cache
I Distributed environment situation even more complex
' Several copies ofa datum can exist
° Various solutions covered in Chapter 19
0mm, 5m... Cum,“ e w mm m new.‘ elm-i m m". mm

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
ﬁe
‘4} 9 lIO Subsystem
I One purpose of OS is to hide peculiarities of hardware devices
from the user
I l/O subsystem responsible for
0 Memory management of l/O including buffering (storing data
temporarily while it is being transferred), caching (storing pans
0f data in (aster storage tor performance), spooling (the
overlapping of output of one job with input of other jobs)
. General device-driver interface
Q Drivers tor speciﬁc hardware devices
OM",mummmmmmm m “mum-vi“.mmimm

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
r‘
“3?; Protectlon and Securlty
I Protection e any mechanism for controlling access of processes or
users to resources deﬁned by the OS
I Security — defense of the system against internal and external attacks
' Huge range, including denial-of-service, worms, viruses, identity
theft, theft of service
I Systems generally ﬁrst distinguish among users, to determine who
can do what
° User identities (user IDs, security IDs) lnclude name and
associated number, one per user
. User ID then associated with all files, processes of that user lo
determine access control
i Group identiﬁer (group ID) allows set of users to be deﬁned and
controls managed, then also associated wllh each process, lile
° Privilege escalation allows user to change to effective ID with
more rights
Wm.s,,...,c,,.§.,,,sm.,.m m “Mme-v‘,“denim.

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
r‘
‘43¢ Virtualization
I Allows operating systems to run applications within other OSes
i Vast and growing industry
I Emulation used when source CPU type different from target
type (i.e. PowerPC lo Intel x86)
. Generally slowest method
i When computer language not compiled lo nalive code e
Interpretation
I Virtualization , 05 natively compiled for cpu, running guest
OSes also natively compiled
' Consider VMware running WinXP guests, each running
applications, all on native WinXP host OS
. VMM (virtual machine Manager) provides virlualizalion
services
OM",shamammmmm us WMMMmartian“

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
r‘
“43$; Virtualization (cont.)
I Use cases involve laptops and desktops running multiple OSes
for exploration or compatibility
0 Apple laptop running Mac OS X host, Windows as a guest
i Developing apps for multiple OSes without having multiple
systems
0 QA testing applications wilhoul having multiple systems
. Executing and managing compute environments within data
centers
I VMM can run natively, in which case they are also the host
i There is no general purpose host then (VMware ESX and
Citrix XenServer)
Wm, 5"..." Emma w a.“ W silhvmn-u. W“ m W“. my.

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
MW‘ Computing Environments - Virtualization
mm“;
Processes Processes
I I I
/'
, mummy
‘1M!
vvmlal machme
mm,
ha'dwm hardware
(a) (bl
Wm.IMMIWHIEIIM ‘I, IIMMM“II-MW.

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
|\
MW Distributed Systems
I Distributed computiing
' Collection of separate, possibly heterogeneous, systems
networked together
> Network is a communications path, TCPIIP most common
- Local Area Network (LAN)
- Wide Area Network (WAN)
, Metropolitan Area Network (MAN)
, Personal Area Network (PAN)
' Network Operating System provides leatures between
systems across network
> Communication scheme allows systems to exchange
messages
t Illusion of a single system

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
“($33? Kernel Data Structures
I Many similar to standard programming data structures
I Singlylinkedll'sl
am am am null
T T T T T T T T
I Doublyllnkedllsl
T T l T T T T T
m. m.“ dam m. _ _ v dam Mu
T T T T T T T T
I Circularlinkedlist
data data data data
T T T T T T T T A
ownﬂnmmmmmmmm us WMMM.mmiem

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
9;}; Kernel Data Structures
I Binary search tree
leﬂ <= right
' Search performance is 0(n)
I Balanced binary search tree is 0(Ig n)
oéé}
6 14 31 40
/
Wm", sh"... 5mm 7 w Wm ¢ so Sllhvmnlu. DIM“ m m". @zuu

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
w)’; Kernel Data Structures
I Hash function can create a hash map
hashjuncnomkeyl
hash ma;
0 1 . . n
“We
I Bitmap , string of n binary digi's representing me status of n items
I Linux data structures deﬁned in include files <linux/list . h>,
<11nux/kfifo ‘ h>, <linux/rbtree ,h>
WWW..."mwpmm m WMMMmum“

***************Ending Page***************

***************Beginning Page***************
***************page number:51**************
t‘
“W Computing Environments - Traditional
I Stand-alone general purpose machines
I But blurred as most systems interconnect with others (i.e.,
the lntemel)
I Portals provide web access to internal systems
I Network computers (thin clients) are like Web terminals
I Mobile computers interconnect via wireless networks
I Networking becoming ubiquitous e even home systems use
lirewalls to protect home computers from Internet attacks
Wm,5,...mmmxmemtm in summit““requiem

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
A
W Computing Environments - Mobile
I Handheld smartphones, tablets, etc
I What is the lunctional difference between them and a
“traditional” laptop?
I Extra feature — more OS leatures (GPS, gyroscope)
I Allows new types of apps like augmented reality
I Use IEEE 802,11 wireless, or cellular data networks for
connectivity
I Leaders are Apple iOS and Google Android
Wm, 5"..." “We.” a.“ i s: mm.‘ W“ m “View

***************Ending Page***************

***************Beginning Page***************
***************page number:53**************
M Computing Environments - Client-Sewer
I Client-Sewer Computing
. Dumb terminals supplanted by srnarl PCs
Q Many systems now servers, responding to requests generated
by clients
> Compute-server system provides an inlerface l0 Clienl 10
request services (i.e., database)
> File-server system prowdes interface ior clients to store
and retrieve ﬁles
client
desktop
chem
nliem
imanphv
OM", sh..." “We” a.“ l 54 Slim.‘ W“ .M animal‘

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
l‘
‘43$’ Computing Environments - Peer-to-Peer
I Another model oi distributed system
I P2P does not distinguish clients and servers
' Instead all nodes are considered peers
i May each act as client, server or both A‘
clwnt clllnt
' Node mustjoin P2P network ‘.7 /
> Registers its service with central
lookup service on network, or -
> Broadcast request for sen/ice and CW“ “m
respond to requests for servioe via
discovery protocol
. Examples include Napster and Gnutelle,
Voice over lP (VOIP) such as Skype
Wm.n,=,i..mc.,n.,.mmwa.“ is; Snowman-u. G.~r."¢=.J.W.

***************Ending Page***************

***************Beginning Page***************
***************page number:55**************
A
w Computing Environments — Cloud Computing
I Dellvers oompuling, slorage, even apps as a saruloa aoross a network
I Logical exlension of vlnualizaliun because it uses virtualizatiun as lhe base
[or lt functionallty
Q Amazon ECZ has thousands 0i servers, millions 01 virtual machlnes,
pelaoyles ol slorage available across me Internet‘ pay based on usage
I Many lypes
i Public cloud , available vla lmernel lo anyone willing lo pay
0 Privale cloud , run by a company (orlne company's own use
' Hybrid cloud - includes both puollo and priuale cloud oomponenls
O Software as a Servloe (SaaS) - one or more applicatlons available vla
me lnlernsl (Mew word processor]
. Plst'orm as a servlee (FaaSI - sollware slack ready lorapplloallon use
via lne lnlernel (rev, a dalaoase server)
0 lnnaslruolure as a Service (IaaS) , servels or storage available over
lnlernel (i.e., slorage avallable lor backup use)
am", an..." “may la a.” l so sllhmm-lz. W“ .a Emma

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
W Computing Environments — Cloud Computing
I Cloud computing environments composed of traditional OSes,
plus VMMs, plus cloud management tools
° Internet connectivity requires security like ﬁrewalls
l Load balancers spread lraﬂic across multiple applications
\Qw.
Im-
‘m.
i MM
1mm”!
1 Mm“
“MM
Dammit..."“WNW.” in “mum-vi““minim”

***************Ending Page***************

***************Beginning Page***************
***************page number:57**************
W!‘ Computing Environments — Real-Time Embedded Systems
I Real-time embedded systems most prevalent form oi computers
° Vary considerable, special purpose, limited purpose OS,
real-time OS
' Use expanding
I Many other special computing environments as well
° Some have OSes, some perform tasks Without an OS
I Real-time OS has well-deﬁned fixed time constraints
° Processing must be done within constraint
' Correct operation only if constraints met
Wm. 5"..." Emmy” Em l s1 mm.‘ W“ m “View

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
t‘
MW Free and Open-Source Operatmg Systems
I Operaling systems made available In source-code rprrnat ratherthan
just binary closed-source and proprietary
I Counter to the copy protection and Digital Rights Management
(DRM) movement
I Staned by Free Software Foundation (FSF), which has “oopyleft'
GNU Public License (GFL)
. Free software and open'souroe software are MO diﬂererlt ideas
championed by drﬂerent groups pr people
r http:/ignu org/prrrlosoprry/operrsource-mieses-trre-ppirrtrrtrrri/
I Examples inciude GNU/Linux and BSD UNIX [includlng core uf Mac
os X), and many more
I Can use VMM like VMware Piayer (Free on Windows), Viﬂualbox
(open source and (ree on many platforms - hﬂp:/Iwww.vir\ualbox.oom)
' Use to run guest operating systems (or exploration
ppm", Syn-m pump“ e ml mm t so snowmen. errvr-r Ind e-r-r. em

***************Ending Page***************

***************Beginning Page***************
***************page number:59**************
m1!‘ .

My’ The Study of Operatlng Systems
The WWW MM has Wake“ mm gym, mm my of m m be
made avavlable m bum source and bmarv (executable) format. The hsl of Overatmﬁ
mm Mum m m mm We; UM, BSD W, SM, m WINDS
The Mm." a. 5m m arm “s w My qu Wm M me mm M
Quesuuns mat we could once answer only by lookmg at documentatlnn or me benavmr of an
mm systems M m m We, comm mm rm been mmm a; we“, Wm
us w study haw Sysbems operaked m a Mme of fewer CPU, memﬁry, iﬂd sxorege resources‘

An extensrve buK Incumwete lrst of Wen-source Weratmg-System Drolem vs avallable

1mm thsJ/(urlle.org/Computers/Saﬂware/Gperaﬂngisystems/OperLSuurce/

In addmon, the rlse of vrrtuahzauon as a mamsxream (and frequenﬂv free) oomvumr runctmn
We; r: mm 1., my mm mm M m M Wm, m “We, Wm
(htw l/wwwvvmwaremcm) vamesa free “Player” for Wmdows rm whvch hundreds of free
"vrrtual awhances' can run. Vrrtuamnx (hm: //Www vrrtualbnxsnm) arm/mes a free, Oven-source
mar mm MW" my mam Wm Um W We 5mm m M
hundreds of Overalmq SVStems wrlhnul dedvrzted hardware.

The mm or 0mm mm Wm; has m We n w make ‘he m m
sludem (u Overatmq-System devewuer. Wlth some knowledge, some effort, and an Internet

\l was mfﬁcuk or lmpossrble m qek access lo source wdev NOW, such access vs hmrted onlv by
m m were“, “we. m m 5m a mm m.

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
End of Chapter 1
—

***************Ending Page***************

