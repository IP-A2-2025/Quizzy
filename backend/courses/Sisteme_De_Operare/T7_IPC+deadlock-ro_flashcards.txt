[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What are the two primary models for inter-process communication (IPC)?
--InteriorSeparator--
Shared memory and message passing
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are primitives used in message passing systems?
--InteriorSeparator--
(right) send(message)
(right) receive(message)
(wrong) create(message)
(wrong) delete(message)
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does a blocking send operation mean in IPC?
--InteriorSeparator--
The sender is blocked until the message is received.
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a rendezvous in the context of inter-process communication?
--InteriorSeparator--
A combination of blocking send and blocking receive operations.
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are potential solutions for exceptions in inter-process communication?
--InteriorSeparator--
(right) Timeouts and confirmation protocols
(right) Notifications of termination sent to the other process
(wrong) Ignoring the exception
(wrong) Always restarting the entire process
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What type of inter-process communication does a pipe in UNIX provide?
--InteriorSeparator--
Anonymous communication
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following UNIX System V mechanisms are used for inter-process communication?
--InteriorSeparator--
(right) Shared memory
(right) Message queues
(wrong) Threads
(wrong) File descriptors
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Define deadlock in the context of processes.
--InteriorSeparator--
Two or more processes are waiting indefinitely for an event that can only be caused by one of the waiting processes.
--InteriorSeparator--
hard
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following conditions are required for a deadlock to be possible (Coffman conditions)?
--InteriorSeparator--
(right) Mutual exclusion
(right) Hold & wait
(wrong) Priority inversion
(wrong) Resource sharing
--InteriorSeparator--
hard
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does a cycle in a resource allocation graph (RAG) indicate?
--InteriorSeparator--
A necessary, but not always sufficient, condition for deadlock.
--InteriorSeparator--
hard
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which strategy aims to resolve deadlock by assuming that deadlock will never happen?
--InteriorSeparator--
(right) Ignoring
(wrong) Prevention
(wrong) Avoidance
(wrong) Detection and recovery
--InteriorSeparator--
easy
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main disadvantage of deadlock prevention strategies?
--InteriorSeparator--
Poor resource utilization and potential for starvation.
--InteriorSeparator--
hard
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In deadlock prevention, how can circular wait be addressed?
--InteriorSeparator--
By imposing an ordering on resource requests.
--InteriorSeparator--
medium
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a "safe state" in the context of deadlock avoidance?
--InteriorSeparator--
A state in which the system can allocate resources to all processes in some order without causing a deadlock.
--InteriorSeparator--
hard
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the Banker's Algorithm?
--InteriorSeparator--
To keep the system in a safe state and avoid deadlocks.
--InteriorSeparator--
medium
--InteriorSeparator--
33
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the Banker's Algorithm, which data structures are used to represent the state of the system?
--InteriorSeparator--
(right) Max
(right) Allocation
(wrong) Queue
(wrong) Semaphore
--InteriorSeparator--
medium
--InteriorSeparator--
35
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Define the Need matrix in the Banker's Algorithm.
--InteriorSeparator--
The current requirement of each resource for each process (Max - Allocation).
--InteriorSeparator--
hard
--InteriorSeparator--
36
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if the Banker's Algorithm determines that granting a resource request would lead to an unsafe state?
--InteriorSeparator--
The request is denied, and the process waits.
--InteriorSeparator--
medium
--InteriorSeparator--
39
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `isSafeState()` algorithm used in Banker's Algorithm?
--InteriorSeparator--
To test whether the current state of the system is safe or not.
--InteriorSeparator--
medium
--InteriorSeparator--
40
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the complexity of the deadlock detection algorithm for resources with multiple instances?
--InteriorSeparator--
O(n^2 * m), where n is the number of processes and m is the number of resources.
--InteriorSeparator--
hard
--InteriorSeparator--
46
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which factors influence how often the deadlock detection algorithm should be run?
--InteriorSeparator--
(right) How often deadlocks are likely to occur
(right) The overhead of running the algorithm
(wrong) The amount of free memory
(wrong) The CPU speed
--InteriorSeparator--
medium
--InteriorSeparator--
52
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are potential strategies for breaking a deadlock once it has been detected?
--InteriorSeparator--
(right) Aborting all deadlocked processes
(right) Preempting resources from some processes
(wrong) Increasing CPU priority of deadlocked processes
(wrong) Compressing memory to free up resources
--InteriorSeparator--
medium
--InteriorSeparator--
53
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is process starvation?
--InteriorSeparator--
A situation where a process is perpetually denied access to a resource.
--InteriorSeparator--
hard
--InteriorSeparator--
57
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which strategies can be used to resolve process starvation?
--InteriorSeparator--
(right) FIFO scheduling
(right) Aging
(wrong) Shortest Job First
(wrong) Always giving priority to the newest process
--InteriorSeparator--
medium
--InteriorSeparator--
58
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is "aging" in the context of resolving starvation?
--InteriorSeparator--
Increasing the priority of a process that has been waiting for a long time.
--InteriorSeparator--
medium
--InteriorSeparator--
58
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.14203504320386645}]