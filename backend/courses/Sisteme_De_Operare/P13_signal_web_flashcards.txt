[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary function of UNIX signals?
--InteriorSeparator--
To handle asynchronous events and facilitate communication between processes.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are categories of events that generate UNIX signals?
--InteriorSeparator--
(right) Errors in the target process
(right) External events to the target process
(wrong) System reboots
(wrong) Scheduled tasks
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does a synchronous signal mean?
--InteriorSeparator--
It is generated by a specific action within the program and delivered during that action.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the possible actions a process can take upon receiving a signal?
--InteriorSeparator--
(right) Execute the default signal handler
(right) Ignore the signal
(right) Execute a custom user-defined handler
(wrong) Crash the program
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the term for setting a custom handler for a signal?
--InteriorSeparator--
Corrupting the signal
--InteriorSeparator--
easy
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which signals cannot be ignored, corrupted, or blocked?
--InteriorSeparator--
SIGKILL and SIGSTOP
--InteriorSeparator--
hard
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What actions can be specified as an argument to the signal function?
--InteriorSeparator--
(right) SIG_DFL
(right) SIG_IGN
(wrong) SIG_BLOCK
(wrong) SIG_SUSPEND
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of `SIG_DFL` when used with the `signal` function?
--InteriorSeparator--
Specifies the default action (established by the operating system) upon receiving the signal.
--InteriorSeparator--
easy
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What data type is the `action` argument of the `signal` function?
--InteriorSeparator--
sighandler_t
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the return value of the `kill` function upon success?
--InteriorSeparator--
0
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of the `kill(pid, 0)` call?
--InteriorSeparator--
(right) Verify the validity of the PID
(wrong) Terminate the process with the given PID
(wrong) Suspend the process with the given PID
(wrong) Send a null signal to the process
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What function can a process use to send a signal to itself?
--InteriorSeparator--
raise
--InteriorSeparator--
easy
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the effect of the `raise(int id-signal)` function?
--InteriorSeparator--
It is equivalent to calling `kill(getpid(), id-signal)`.
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does "blocking signals" mean?
--InteriorSeparator--
It means that the process tells the OS not to deliver certain signals to it until unblocked.
--InteriorSeparator--
easy
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What function is used to block signals?
--InteriorSeparator--
sigprocmask
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What data structure is used with `sigprocmask` to represent a set of signals for blocking?
--InteriorSeparator--
sigset_t
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How can you verify the existence of blocked signals in the signal queue?
--InteriorSeparator--
Using the `sigpending` function.
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are typical strategies used in writing custom signal handlers?
--InteriorSeparator--
(right) Notifying signal reception by setting a global variable
(right) Terminating the process execution
(wrong) Allocating large memory blocks
(wrong) Starting new threads
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why should special measures be taken when writing signal handlers?
--InteriorSeparator--
Because they can be called asynchronously at unpredictable times.
--InteriorSeparator--
hard
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What could happen if a signal handler is interrupted by another signal?
--InteriorSeparator--
The execution of the first handler can be interrupted, or even a system call made by the program at that moment can be interrupted.
--InteriorSeparator--
hard
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the effect of the `pause()` function?
--InteriorSeparator--
Suspends the execution of the program until a signal arrives.
--InteriorSeparator--
easy
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the recommended function for waiting for a specific signal (or a set of signals)?
--InteriorSeparator--
sigsuspend
--InteriorSeparator--
medium
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the `sigsuspend()` function do?
--InteriorSeparator--
(right) Replaces the process's current signal mask with the one specified
(right) Suspends the execution of the process until a signal is received
(wrong) Terminates the process
(wrong) Ignores all signals
--InteriorSeparator--
hard
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When does the signal mask revert to its original value after using `sigsuspend()`?
--InteriorSeparator--
Automatically when the `sigsuspend()` function returns.
--InteriorSeparator--
hard
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are some possible error return values and corresponding errno values for sigsuspend?
--InteriorSeparator--
0 on success, -1 on failure with errno set to EINVAL, EFAULT or EINTR
--InteriorSeparator--
hard
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens to blocked signals when a process unblocks them?
--InteriorSeparator--
They are delivered to the process.
--InteriorSeparator--
medium
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are valid categories of predefined UNIX signals?
--InteriorSeparator--
(right) Standard error signals
(right) Process termination signals
(right) Asynchronous I/O signals
(wrong) Memory allocation signals
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How can you list the predefined UNIX signals and their corresponding integer values?
--InteriorSeparator--
Using the command `kill -l`.
--InteriorSeparator--
easy
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What factors can affect the specific implementation and availability of UNIX signals?
--InteriorSeparator--
(right) The hardware architecture of the computer
(right) The operating system running on the computer
(wrong) The programming language used
(wrong) The network configuration
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why is it generally not advisable to ignore signals?
--InteriorSeparator--
Because they often represent important events that the program should handle.
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When is it acceptable to block signals?
--InteriorSeparator--
Only during the execution of critical sections of code, to prevent interruption.
--InteriorSeparator--
hard
--InteriorSeparator--
20
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.16268570717983027}]