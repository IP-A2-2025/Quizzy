***************Beginning Page***************
***************page number:1**************
Sisteme de Operate
Administrarea informagiilor :
Sisteme de ﬁ§iere
Cristian Vidra§cu
https://profs,infmuaicxo/widrascu

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cuprins
" Conceptele de ﬁgier 5i de sistem de ﬁ§iere
' Interfaga sistemului de ﬁgiere
" Implementarea sistemului de ﬁ§iere
lb‘

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Conceptul de ﬁ§1er /1
' Figier: zoni de stocare contigué d.p.d.v. logic
(nu neaparit contigué §i d‘p‘d‘v‘ ﬁzic)
' Continutul unui ﬁgier:
i dale (numerice, de tip caracler, binare)
i program
' Structura unui ﬁgier:
i nestructurat (Las o secvengé dc octeti oarecare)
i structuri simpli de tip inregistrare (Las linii/inregistrﬁri, de
lungime ﬁxzi sau variabilé)
i structuri complexi (mg, document formatat, ﬁsier executabil cu
incircare relocabilé, etc)
i Cine decide Structural (i.e,, modul de interpretare a conﬂnutului) ‘T
programul (UNIX) vs. sistemul de operare (Windows, 05/2)
I M

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Conceptul de ﬁ§1er/2
' Structura unui ﬁgier (c0nt.)

i Cine decide structura (Le, modul de interpretare a cominutului) ?
programul (UNIX) vs. sistemul de operate (Windows, 05/2)
In a1 dollea caz (mlrodus o data cu
trecerea la interfege GUI), decizia "m “WWW”

Se ia pe baza extensieiv Le. suﬁxul
din numele ﬁ$ierului: --—
m-uz-_
m Inna;
mm-
mum-
w-
mmmw
mm
“w-
mlin WWW
mum“
Mim-

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
. Conce tul de ﬁsier /3
' Rolul figlerelor: P ’
i Persistenyé i date cu viagé lungi, pentru posteritate
' medii de stocare nevolatile
' nume cu ingeles semantic (d.p.d.v. al utilizatorului)
. “ ' u u‘ '
AbStract“ ﬁ§ler UL‘: (‘if Amlm~lmok mam m mm. SmHh
I ‘I Amvlmuuu
m - :ulzll'ﬁlc and, hylu mnpc‘
‘lnm ‘ m- Syn-m
um- \lc\ m. Mm =
Fﬁ{ljli\wr am rm. (yhndu, wcku
~ ‘Vi-W 77-77;’ < M

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Atributele ﬁ$ierului (metadate)
' Nume i singura informayie pistrati in formé inteligibili uman
' Tip i neccsar pcntru sistemclc ce suporté diverse tipuri
' Locagie i pointer la locagia undc este stocal ﬁ$ieml pe disc
(i.c., pcrifcricul dc stucarc al sistcmului dc ﬁ5icrc din carc facc part0
accl ﬁ5icr)
' Dimensiune i dimensiunea curenlé a ﬁ$ieru1ui
' Protectie i contrclcazé cine poate citi, scrie, executa,
ﬁ§ierul
' Timp, daté 5i identiﬁcatorul de ulilizalor i informagii pentru
protectie, securilale $i monitorizarea ulilizérii
' Informagiile despre ﬁ$iere sunt pistrate in structura de
directoare, ce esle menginutﬁ pe disc
(a M

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Operagii asupra ﬁ§ierelor
' Create i creat() sau open(..., OiCREAT ...)
' Citire i read()
' Scricrc i writc()
' Repoziﬁonare in ﬁ$ier (Lew céutare in ﬁsier) i lseekO
' $tergere i unlink()
' Trunchiere — truncate() sau ftruncateO
' Deschidere (i.e_, céutarea in stmctura dc directoare de pe disc a
intrérii ﬁ$ieru1ui 5i copierea cominutului intrérii in memorie) i 0136110
' inchidere (i.c.‘ mutarca conginutului intrim'i ﬁ$icrului din momoric in
structura dc dircctuarc dc pc disc) i 010560
" m

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Accesul la ﬁgiere /1
' Acces sscvengial i acces de 1a inceput spre sférgit,
posibilitate de intoarcere la inceput (rewind) pentru
reluarea parcurgerii secvengiale; se pot face citiri 5i
scrieri, dar nu ambele simultan in timpul aceleagi
deschideri i metafora benzii magnetice
' Acces direct (acces aleatoriu) i acces dupé numﬁrul
(Le, adIesa) inregistrérii; se pot face citiri §i scrieri in
0ric6 combinagii dorite i metafora discului de vinyl
' Acces indexat i acces direct prin conginut, folosind
diverse tehnici (e.g. ﬁgiere de index, ﬂ$iere multilisté,
hashing, B-arbori, g3‘)
X M

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
Accesul la ﬁgiere /2
' Acces secvenpial
begmning current posmon end
_ rewind :\:
read or wrile _
9 M

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Accesul la ﬁgiere /3
' Simularea accesului secvengial pe un ﬁ§ier cu acces direct
acces secvengial ‘ implementarea cu acces direct
reset cp = 0;
read cp;
readnext cp=cp+1;
write next writ-e cp; _
CD - CD + 1,
mm

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
Accesul 1a ﬁ§1ere /4
' Exemplu dc acces indexat — ﬁ$iere index 5i relative
lugacm Ieoum
last name number
——
——
—— Smi'h-M"
-- /
——
indEK hie félallve lile
l \ bl

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
C1as1ﬁc€1r1 ale ﬁ§1€f€10f

' Clasiﬁcarea dupi posibilitatea de tipérire (aﬁ$are) ASCII:

i ﬁsiere text
i ﬁsjere binare
° Clasiﬁcarea dupi suportul pe care sunt rezidente:
ﬁ$iere pe disc magnetic (HDD, FD, ZIP, ..) sau tambur magnetic
i ﬁ$iere pe bandé magnetic?! sau caseté magneticé
ﬁsiere pe suport optic (CD, DVD)
i ﬁ$iere pe suport memorii NAND (stick USB, card SD/MMCI... , SSD, etc.)
i ﬁ$iere pe imprimanté sau plotter
i ﬁ$iere pe cartele perforate sau band?! de hértie perforaté
i ﬁ$iere pe ecran, ﬁsiere tastaturé, $.21.

' Suportul inﬂuenteazﬁ operatiile §i modurile de acces posibile
Fug. suportul disc accepté acccsul direct. suportul bandé magneticé acceptz'i
dour accesul secventia]; ﬁ$ierele pe cartels sau tastaturé accepté dour citiri, iar
cele pe imprimanté, plotter sau ecran accepti numai scrieri 1: M

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Sisteme de ﬁ§1ere/1

' Deﬁnigie: un sistem de ﬁgiere esle 0 colecgie oarecare de ﬁ$iere,
iinprcunz'i cu structura dc directoarc in care sunt accstca organizatc

' Existé mai multe tipuri de sisteme de ﬁ$iere de uz general, e.g. NTFS
(speciﬁc Windows) sau ethﬁY/exrif's/exM/E, bIr/S, z/S, $.21. (speciﬁcs Linux/UNIX),
ce diferé prin stnlcturile de date folosite pentru stocarea lor $i prin modul
de implementare a operagiilor asupra ﬁ§ierelor 5i directoarelor.

' ln plus, existé 5i diverse tipuri de sisteme de ﬁ$iere de uz particularizat,
egi tmpfs (RAM disk), objfs (kemel debugging), proofs (inierfayﬁ structuri procese), gia.

' Cluster: unitatea de mésuré pentru alocarea spagiului necesar memorﬁrii
unui ﬂgier, la nivelulﬁleesystemeuluii Cu alte cuvinte, dimensiunea unui
ﬁ$icr (ivev informaiia ulilé slocaié in e1) cslc un alribul cxprimal in nclcli. ins?!
spaliul oeupat de conlinutul ﬁ$ierului pe disc este un multiplu de clustere.

° Dimensiunea unui (‘lusteri 0 putere de forma 2", cu n:0,l‘2,.,. , in termeni de
sectoare (sau blocuriedisc, iiei unitatea de stocare la nivelul discului)

ll Ivl

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Slsteme de ﬁslere/Z

- Pentru persistengi, sistemele de ﬁsiere se pistreazé pe dispozitive
de stocare nevolatihi (Qg. disc IIDD, stick USE: CD/DVD, disc ssu cm),
in entitégi numite volume.

- Un volum poate ﬁ (in multc awn; , in cursul dcsprc pcrifcricclc dc stocarc)1

' i opurtiyie a unui disc (schema clasicz'i, MBR/GPT, ce permits
stocarca mai multor volume per disc)

- i un disc intreg (avg. slick USB, (TD/DVD» em)

— un ansamblu de mai mulre discurz' (ansamblu ce stocheazi un
singur sistem de ﬁsiere, prin tehnici precum RAID)

' Formatarea logic?! a unui volum I “crearea sistemului de ﬁsiere“
rezidenl pe ace] volum, prin inigializarca (p0 disc) a structurilor dc
date speciﬁcs tipului acclui sistcm dc ﬁsicrc; upcragia arc ca paramotri:
tipul sistemului de ﬁsiere, numele volumului creat (ix:q o cticheté) si
dimonsiunca clustcrului (dcﬁnité in tcnncni dc blocuri disc) 14 M

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Sisteme de ﬁ§iere/3
° Un exemplu de organizare a sistemului de ﬁgiere
pavtilmn A msk 2
diE-k 1
partition c was

panitiun B

thik 3

M

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Interfaga sistemului de ﬁ§iere
° Funcgii
' Structura de directoare
' Organizare
' Partaj are
° Montare
' Protecgie

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
Func'giile sistemului dc ﬁsiere
' (Subsistcmul dc directoare) Mapcazé numelc de ﬁsiere
in identiﬁcamri dc ﬁsierc prin primitiva open (sau creat).
Crecazé structurilc dc date din nucleu
' Meniine slructura dc numc (unlink, mkdir, rmdir)
' Dcterminé plasarea ﬁsicrclor (si a metadatelor) pc disc,
in termcni dc clusters‘ Gestioneaze'l alocarca clusterclor
( l clustcr: 2" scctoarc conscculivc) Gcslioncazé cluslcrclc
cronalc (ic, cclc cc coniin had sectors)
' Gestioneazé apclurilc dc sistcm read si write
' Inigiazé operagiile I/O pcnlru transfcrul blocurilor dinspre
disc spre RAM, respectiv dinsprc RAM spre disc
' Gestioneazé tampoanelc cache pentru disc
1" M

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Structura dc directoare /1

° Director i 0 colecgie de ﬁgiere, inclusiv sub-directoare
(rcfcrilc prin slrucluri dc dale specializalc cc conlin inlbrmmii dcsprc accslca)

' Atét ﬁsierele propriu-zise, cét §i structura de
directoare sunt pistrate pe disc

° Copiile de sigurangﬁ ale acestora sunt pistrate (dc
obicei) pe benzi, CD-ROM-uri, $.21.

' La inceput: director unic (e.g. CP/M, SIRIS - '60), iar
apoi director pe 2 nivele (Qgr RSX 470180, un SO. in
timp real pemru DEC PDP-l 1)

° in prezent: directoare cu structura arborescenté sau
cu structuré de graf aciclic

M

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Structura dc directoare /2
' Cum este organizaté structura de directoare?
' Listé inléntuité
' Vector sonat
' Tabelé hash
(a se vedea la lmplementarea sistemului dc ﬁ$iere)
W

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Operagii asupra directoarelor
' Céutarea unui ﬁ§ier
' Crearea unui ﬁsier
' $tergerea unui ﬁgier
' Redenumirea unui ﬁgier
' Listarea unui director
' Traversarea sisternului de ﬁgiere
' cg‘ salvarea/restaurarea unui sistem de ﬁgiere

l‘ M

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
Numirea ﬁgierelor
° Scopuri:

i Pentru a identiﬁca ﬁgierele (la deschidere, SO-ul
mapeazé numele de ﬁgiere in obicctc de tip ﬁ§ier
utilizate intern pentru accesul 1a ﬁ§iere)

i Pentru a permite utilizatorilor sé-§i aleagi propriile
nume de ﬁgiere firﬁ problems de conﬂict de nume

i U§urin§a de utilizare: nume scurte, grupéri de ﬁ$iere

l1 M

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Organizarea directoarelor / 1
' Organizarea (logici a) directoarelor, pentru a
objrine:
— Eﬁciengﬁ — localizarea rapidé a unui ﬁgier
— Nume i numele sunt utile pentru utilizatori
' Doi uiilizatori pot avea acela$i nume pentru ﬁsiere diferite
' Acela$i ﬁ$ier poate avea mai multe nume diferite
— Grupare — gruparea logicé a ﬁgierelor dupé
proprietégi (c.g. toatc programclc C, toatc jocurilc, etc.)
l‘) M

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
Organizarea directoarelor /2
' Director unic pentru togi utilizatorii:
I I E n n a m a»
Hes....'....
Probleme (dezavanlaje):
i conﬂict dc numc
i imposibilitate de grupare
24le

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Organlzarea dlrectoarelor /3
' Director ssparat pentru ﬁecare utilizator:
£222?) H". H data I. ‘M a
O O O Q O Q O O I U '
Avantaje:
i cale (path name) i cz'autare eﬁciemé
i acela$i nume de ﬁ$ier pentru utilizalori diferigi
Dezavantaje:
i imposibilitatea de grupare
23 Ivl

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Organlzarea dlrectoarelor /4
' Directoarc cu structuré arborescenté:
Avantaje- mm w m pmgrams
i cale (path name)
i ciutarc cﬁcicnté
, posibimmea de m- IIIM III
gruparcaﬁ5icrclor . a *) \ t, ~. ~) = \ g
i director curem (de \ ‘ ' " ‘ " v‘ ’ ‘ ’ W
lucnl) :>
speciﬁcarea de cii PW “u CW"
relative vs absolute \Q, ’ ‘ e , ‘
Dczavantajc: v V ‘J a i‘)
, imposibilitatea de m u- u
partajare (prin nh'm- ‘ ‘ ‘ ‘
uri) let'Y.‘ f Lil?

lfvlvl

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Organizarea directoarelor / 5
' Directoare cu structuri de graf aciclic:
vODl GK‘! 599M
{D Q)
I.) K j: i J m

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
Organizarea directoarelor /6
° Directoare cu structuré de graf aciclic (com)
i Pot exista subdirectoare §i ﬁgiere partajate
i Pot avea douﬁ nume difcrite
— linking hard/ soft — link() , symlink()
i Problemﬁ: $tergerea unui ﬁ$icr partajat
— Solutii:
' Back-pointers, pentru a putea gterge toate referintele
Problemi: inregistréri cu lungime variabilé
' Solugia cu contor de referinge pﬁslrat in intrarea ﬁgierului
lN M

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Organlzarea dlrectoarelor / 7
' Directoare cu structuré de graf general:
i Problemi: cum garantém
inexistenga circuitelor?
i S oluﬁi: mo! avl m 1m
° Permitem link-uri dual‘ .
cétre ﬁgiere, nu §i cétre ,5," m. M mum M
subdirectoare
' De ﬁecare daté cénd se . . .
adaugé un nou link, sé se
utilizeze un algoritm de mum m,- i mx
detecgie a circuitelor pentru
a decide dacé 55 se pemmé . ‘ .
acea adéugare sau nu
' Garbage collection
Z4) Ivl

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
Montarea /1
' Un sistem de ﬁgiere trebuie s5 ﬁe montat inainte
de a putea ﬁ accesat
' Un sistem de ﬁ§iere nemontat se montcazﬁ 1a un
punct de montare (un director de montare)
' Auto-montarea (la immducerea unei dischete, CD, Stlck USB, $48.)
' in UNIX/ Linux: mount() , umount()
:0le

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Montarea /2
' Exemplu:
/ ' /
, m.“ mm <_
m: | u {ml W W k _ ,
"ll - ‘m mu:
All III . W .m A
‘WIN _
m (b1
(a) Sistcmul existent (b) Partilic 11cm0ntati Punctul dc mnntarc
I‘ M

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
Partajarea ﬁgierelor

' Partajarea ﬁ§ierelor in sisteme multi-utilizator este 0

facilitate de dorit
' Partajarea se poate face printr-o schemé de protecgie
' in sisteme distribuite, ﬁgierele pot ﬁ partajate prin

intermediul regelei
' Protoeoale 5i tehnologii de reyea folosite:

i NFS (Networked File System), cc utilizcazi RPC i SUN

i CIFSZ prolocolul standard din Windows penlru partajarea ﬁ§ierelor

i Active Directory-ul din regele Windows

i Yellow Pages —> NIS —> NIS+ —> LDAP, folosite in regele

UNIX/ Linux
i sistemul DNS I; M

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Protectia ﬁgierelor
' Proprietarul (creatorul) unui ﬁ§ier trebuie $5 poaté
controla:
i ce operatii pot ﬁ ﬁcute asupra ﬁgierului
i 5i de citre cine
- Drepturi de acces:
i Read
i Write (dear modiﬁcarc, nu $i append sau delete)
i Execute
i Append (adéugarc dc articolc noi la sférsitul ﬁ§icrului)
i Delete
i List
I‘) M

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
Implementarea sistemului dc ﬁ$iere
' Structura sistemului dc ﬁ§iere
' Implementarea ﬁ§ierelor 5i directoarelor
' Metode de alocare
' Gestiunea spagiului liber
' Eﬁcienga $i performanga
' Recuperare
' Sisteme de ﬁgiere jumalizate
' Networked File System (NFS)
' Sisteme de ﬁgiere “next-generation”

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Structura sistemului de ﬁ$iere
' Structura ﬁ$ierului
i Unitatea logicé de stocare a informagiilor (date sau programs)
i O colecgie de informatii inrudite prin ingelesul lor semantic
' Sistemul de ﬁ§iere se péstreazé pe memoria secundaré
(i.e., periferice de stocare i discuri: HDD, SSD; FD, CD/DVD, $.21.)
° Sistem de ﬁgiere organizat ierarhic, pe nivele
' Blocul de control a1 ﬁgierului — FCB (File Control
Block) i structura dc date, stocaté pe disc, ce conﬁne
anumite informagii despre un ﬁgier
' Deschiderea unui ﬁgier pune 1a dispoziyie un handle de
referingé la FCB, utilizat pentru accesele 1a ﬁgier M

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
Sistem de ﬁgiere pe nivele

Programf de aplicatie

Sistemul iogic de ﬁ$iere
Modulul de organizare

a ﬁsierelor
Sistemu] (1e bazé de ﬁ$iere
I/O cinnol FCB-ul unui ﬁgier
Periferice de stocare
36%|

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Structun 1nterne
StrucQunle Slstemulul - - \:|
de ﬁslere necesare, _ El |:|
fumizate de SO-uri: I mm'ynw“
- ﬁg‘ (a): deschiderea “Mme MM] I
‘ . mow-u mock
- ﬁg. (b): cmrea
4 .1 t . ) usevspme “m memory semndaryslnmge
(51ml ar pen ru scnere (a,
Structuri de dale in memorie:
- tabela de montare a - U EU
sisternelot de ﬁ$iere — “ML:
- tabela de ﬁ$iere deschise I —" a
er roces mama; - I
P P ~ perpm“ syslulwwne mama black
- tabela globalé de ﬁ$1ere “Wm” We “W'ﬁ'a "M"
deschise use! space kemel memovy sew-nary swung
(m
31 6|

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Sisteme de ﬁgiere virtuale /1
' VFS furnizeazé 0 modalitate orientaté-obiect
d6 implementare a sistemelor dc ﬁgiere
° VF S permits utilizarea acelea§i interfege a
apelurilor dc sistem pentru operagii I/O (Lew
API-ul I/O din POSIX) pentru diferite tipuri de
sisteme de ﬁgiere
(eig. ext3fs, ext4fs, vfat, fatlé, hpfs, ntfs, nfs, m)
' VFS este o componenté din nucleul Linux
1N M

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Sisteme dc ﬁ§iere virtuale /2
unui VFS:
We ‘ IypaE type ‘
H ‘ "QWWK
WM

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
Implementarea directoarelor
' Listi liniaré de nume de ﬁ$iere cu pointeri cétre
blocurile de date
i simplu dc programat
i consumator de timp 1a execugie
' Tabelﬁ hash i listé liniari cu structuré de date hash
i micgoreazé timpul de ciutare in director
i coliziuni i situagii in care doui nume de ﬁ§iere au prin
funcgia hash aceea§i locagie
— dimensiune ﬁxaté
' B+ tree
4M

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Metode de alocare /1
' Metoda de alocare se referi 1a modul in care
blocurile disc sunt alocate pentru ﬁ§iere (is,
penlru a stoca conginurul propriu-Zis al ﬁgierului, nu 5i
metadalele sale i acestea sum stccate in FCB-ul ﬁgierului)
— Alocare contiguz'l
— Alocare inlﬁnguitﬁ
— Alocare indexatﬁ
4‘ M

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
Metode de alocare /2
' Alocarea contiguﬁ
i Fiecare ﬁsier ocupé o multime contigué de blocuri pe disc
i Simplé i sum necesare doar Iocatia de start (numérul blocului
de inceput) si lungimea (numérul de blocuri ocupate)
i Acces aleatoriu (direct)
i Risipé de spatiu (problema alocirii dinamice a spatiului de
stocare)
i Fisierele nu pot crests in dimensiune
i Alocarea bazati pe extindere i Veritas File System
41 M

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Mctodc dc alocarc /3
' Alocarea inlﬁnguiti
i Fiecare ﬁ$icr cstc 0 listi liniaré simplu inlénluité dc
blocuri disc; ﬁccare bloc conlinc o parts din datelc
ﬁsierului $i o rcferinlé (un pointer) citrc urmitorul bloc
i Blocurile pot ﬁ “impréstiate” oriunde pe disc (nu mai sum
intr-o zoné contigué)
i Blocuri adigionalc sum alocalc pc mésuré ce coniinulul
ﬁ$ierului cre$te in dimensiune
i Acccsul sccvcngial nu ridicé nici o problemé, in schimb
accesul dircct nu se poalc face eﬁcient
i Coruperca lantului dc pointeri provoacé problems majors
i Tabela dc alocare a ﬁgierclor (FAT) i alocarc utilizati dc
sistemul de ﬁ$iere FAT (: sislemul de ﬁ5iere principal din MS-DOS,
Windows 9x gi OS/2<3.0) 4; m

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
Metode de alocare /4
' Alocarea inlﬁnguitﬁ w Wm
NS SIB" ﬁnd
0U 1112B 3U IEQP 9 25
4K] I iI TD
85 - IE WE 11B
12.1 [11.I15B
16“ |7E|1eﬂ19ﬂ
20B21'22E 23E
24E 25: 25E 27E|
211E zsﬂanﬂmﬂ
J4 (1|

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Metode de alocare /5
' Alocarea inlﬁnguité
dIIBClOfY 9"er
mag-“-
name slaﬂ block
0 —
File Allocation Table -
(FAT) 217
numbevuldlsk blocks fl !
FAT
43 6|

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
Metode de alocare /6
' Alocarea indexatﬁ
i Punc laolalté togi pointcrii intr-un bloc dc index
(alocarea indexati grupeazé referingele impreuné $i 1e
asociazé cu un ﬁ$ier panicular)
i Se ulilizeazé 0 labelé de indecsi
écl
El
El
ém
El
index table
4f» Ivl

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Metode de alocare /7
' Alocarea indexatﬁ (c0nt.)

i Acccs alcatoriu (direct)

i Acccs dinamic ﬁré m will“
fragmentare extemz'l 0E1 m6: 3E1
(optimizat pentru situagia in 4U 55 f YB k
care in sistemul de ﬁsiere sum "U P "QQH K 9\
multe ﬁgiere mici) ‘121%\ € :2 \

i overhead-ul implicat de ‘6 " J ‘ '9 é ‘
accesul suplimentar la jig/:62‘ Ky
blocul de index zaUzeDsoImlIl

i i-noduri i alocare utilizaté
de familia SO-urilor UNIX,
inclusiv Linux §i Mac OS X

4" Ivl

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
Metode de alocare /8
' Alocarea indexati (c0nt.)
i i-noduri i alocarc utilizaté
dc Linux, Mac OS X §i a‘
celelalte UNIX-uri M‘
FCB_ul (Lei, i-nodul) unui HI win idii
ﬁsier conﬁne toate atributele, M‘ [I Elm
inclusiv locaiia i aslfel: MEL. [m E]:
- 12 adrese directs ET: HIM
- l adrcsé dc simplé indirectarc ill: g
- l adresé de dublé indirectare El: IE
- l adresé de triplé indirectare El: g
File pointers (adresele): 32*bits E: W‘
vs 64 bits (ZFS suporié l28-bits)
4X Ivl

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Gestlunea spapulul hber /1
° Metode folosite pentru evidenga blocurilor libere:
i Vectorul dc bigi
' Instrucgiuni magini pentru gisirea primului bit setat
' Pentru eﬁcienyi este nevoie de pistrarea vectorului de
bigi in memorie, nu pe disc
' Exemplu: Mac OS
i Lista inlinyuiti Z exemplu pe urmétorul slide
i Gruparea : exemplu peste doué slide_uri
i Pistrarea unei liste cu zonele libere contigue i perechi de
forma (numérul blocului liber de Tnceput, dimensiune)
4‘) M

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
Gestiunea spagiului liber /2
' Lista inlinguité
ligaiicumi liber Iree'speoe llsl head olj ‘U 2- a.
4- 5- 6E] 7|]
BI BI ‘ﬁlm-
12-13. 14E||s|j
IBEIWI la. IHEI
zoljalgzzlazlj
24|j25 ‘"26. 2?‘
2a|jas|jan|js1|j
50M

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Gestiunea spagiului liber /3
' Gruparea spagiului liber pe disc
3\ 3
5 9 ll 28
I3 I7 18
20 2] 22 55 59 61
23 24 25 62 63 64
26 27 28 65 66 67
68 71 72
74 75 76
um

***************Ending Page***************

***************Beginning Page***************
***************page number:51**************
Eﬁc1en§a s1 performanya /1
' Eﬁciellta i depindc dc:
i Algoritmii dc alocarc a discului si pentr'u directoare
i Tipurile dc date pastratc in inlrarea ﬁsierului din director
° Performanga i tehnici dc imbunitégire folosite:

i Disk cache i 0 secyiune separata a mernorici principals
utilizaté ca memorie cache a blocurilor dc disc utilizate
frecvent

i Free-behind si read-ahead i tehnici de optimizare a
accesului secvengial

i Dedicarea unei secyiuni a memorici principals drept disk
virtual (numit uncori si RAM disk)

‘I M

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Eﬁcienga §i performanga /2
' Localizarea cache-ului dc disc
1-_ _r;m-di_5k_ _ _i
|—I
I i f Hal; :
| I
CPU i 0DEW"e ‘able i conlloHeI msk
L__°l“_°'iE"_"§’__J
mam memory
u bl

***************Ending Page***************

***************Beginning Page***************
***************page number:53**************
Recuperare

° Veriﬁcﬁri de consistengé — comparﬁ datele din structura de
directoare cu blocurile de date de pe disc §i incearcé sé
remedieze inconsistengele gésite; dezavantaj: poate dura mull limp.
Unealta consistency checker: fsck (in UNIX) sau chkdsk (in Windows)

° Folosirea unor utilitare de sistem pentru backup-ul datelor
de pe disc pe un alt periferic de stocare (disc extem, CD/DVD,
bandi magnetici, $41.), operayie ce trebuie realizati periodic!

+ Rccupcrarca unor ﬁsicrc “picrdutc”/ unui disc “picrdut”
prin restaurarea daielor dc pe un backup realizat anterior!

' O alti solugie interesanté este fumizati de sistemele de ﬁ§iere
jurnalizate, respectiv, mai nou, de sistemele de ﬁ§iere “next-
generation" <4 H

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Slsteme de fi$l€f€ Jurnallzate
' Sistemele de ﬁ§iere jurnalizate inregistreazé ﬁecare
actualizare a sistemului de ﬁgiere ca pe 0 tranzacﬁe
° Toale lranzacgiile sunl scrise intr—un jurnal (log) O
tranzacgie este consideratz'i comisi atunci cénd este scrisé in
jurnali Totu$i, se poate ca sistemul de ﬁ$iere 55 nu ﬁ fost
incﬁ actualizat
' Tranzacpiile din jumal sunl operate asincron in sistemul de
ﬁgierei Dupé ce sistemul de ﬁgiere este modiﬁcat, tranzactia
este $tears2'1 din jumal
' Dacé sistemul “crapé”, toate tranzacgiile rémase in jurnal
trebuie si ﬁe operate dupé repornirea sistemului
- Exemple: NTFS (Windows) sau ext3fs/ext4flv (Linux)
<< M

***************Ending Page***************

***************Beginning Page***************
***************page number:55**************
Networked File System

' NFS = o implementare a ﬁrmei Sun Microsystems
(in SO-urile Solaris, SunOS) §i 0 speciﬁcagie a unui
sistem software pentru accesarea ﬁ$ierelor de la
distangﬁ in regele LAN (sau WAN)

' Stagiile de lucru interconectale prin inlermediul regelei sunl
privite ca 0 mulrime de magini independente, cu sisteme de
ﬁgiere independente, ce permit partajarea ﬁgierelor inlre
aceste sisteme de ﬁ§iere, intr-o manieré transparenti pentru
utilizator (folosind protocaale de montare, RPC, UDP/IP, 5i
modelul client-server)

' Speciﬁcagiile NFS sunt independente de hardware,
sistem de operare 5i tehnologia de regea {I H

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
Sisteme de ﬁsiere “next-generation”

' Sistemele de ﬁsiere “next-generation" incearcé $5 ofere
tolerantd la tipuri de erori ce nu sunt prevenite de tehnologiile
anterioare: sistemele de ﬁsiere jurnalizate (0e ofera protectie doar la
nivelul strueturiiﬁle»system-ului, nu 5i pentru continutu] ﬁsierelor) sau tehnicile
RAID (ce oferé protectie dear in anumite situatii, dar nu 5i contra “hit rot”)

‘ “Bit-rot” = “the silent corruption of data on disk; one at a time, from
time t0 time, a random bit here or there gets ﬂipped.“

Referintér —

' Exemple: ZFS (Solaris), btrfs (Linux) sau, mai nou, ReFS (Windows)
si APFS (for Apple‘s devices)

' Protectia contra “bit-mt”: ZFS stocheazé checksums pentru toate datele si
metadatele unui volum, si astfel poate detecta (si corecta) coruperea acestora

' Alte facilitéti: uperatii COWatomice, snapshots, built-in handling o/disk

failures and redundancy, integration 0f RAID functionality, $.ai s" m

***************Ending Page***************

***************Beginning Page***************
***************page number:57**************
Bibliograﬁe
' Bibliografie obligatorie

capitolele despre sisteme deﬁ§iere din
i Silberschatz : “Operating System Concepts”

(cap.13 §i cap.l4 dm [oscum
sau
— Tanenbaum : “Modern Operating Systems”

(capA di1\[MOS4])

4N M

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
Exercigii de seminar
' Aplicagii 1a: Sisteme de ﬁsiere i structurile de date FCB
i Enunt: Se d5 un sistem dc ﬁsiere UNIX ce are caracteristicile
urmétoare: sector size I 4K8, ﬁle pointers I 32bils.
Un ﬁsier stocat in acest sistem are lungimea L=l .073.76l .780 octegi.
Care este “amprenta” sa pe disc, i.e, cét spatiu ocupé ﬁsierul pe disc
(cxprimat in unitigi de alocare a discului,
folosil penu'u acelasi concepl)) 7 g
i Rezolvare: ‘I “"1
. . _ M‘ K tun.‘
Indicaile. Em...‘ - W
L I1i073i761i780:(12*4096>+ Jlftiﬁi
(1024*4096)+ (261.112*4096+3572) 7;‘ “[331
Iar261.112+1:254*1024+IOI7 TBIPFﬁ
Mina‘
WI

***************Ending Page***************

***************Beginning Page***************
***************page number:59**************
Exercigii dc seminar
' Aplicagii 1a: Sisteme de ﬁsiere i structurile de date FCB
i Enunt: Se d5 un sistem de ﬁsiere UNIX ce are caracteristicile
urmétoare: sector size I 4KB, ﬁle pointers I 32bits.
U11 ﬁsier stocat in acest sistem are lungimea L=l.073.761.780 octegi.
Care este “amprenta” sa pe disc, i.e, cét spatiu ocupé ﬁsierul pe disci7
i Rezolvare: u
u“ hm dc date 001111116 40% (16 oclegi (4KB).
1111 “11 bloc dz indecgi cunpne 4KB/32b11s : 1024 adrese dc E
blucuri-disc (gi ucupé pe disc 1014096 omen!) I
A se 11211211 ﬁll/"14111 d2 141 [adieu/[e => numsml total de 0......“ .._
blocuri dc date pcnlru a sloca doar coniinutul ﬁ5icrulu| M I E I -
cslc: 12 blocuvi dime + 1024 dc blocuri dc simplé [I .w E
indlrccture (plus 1 bloc 115 \ndec51; pnmul nrbore este compiel Mm 1“ 1E E
111110111) + 251.1 13 11: blncun dc 11111115 lndlfeclﬂfe (al 111111“ "°'“ BI E1: E
albore esle pariml aiocxl: 1 hm de mam‘ i“ ladacina sa‘ plus dear E1: 1E
255 bloc1|ndemdec$1pe mvelul 1101]. Arborele lemar es1e “111 E E
Total Spam! ocupal pe disc : <12+1024+261v1 13 hlocuri de g: E1: 1%
date) + (1+1izss blncuri dc indccsn : 262.406 dc blncuri. E1: ii
1.1 care se 111m adaugii spﬂliul necesar pelllnl FCB. x1zeuf(1rnod) 110111

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
Sumar
> Conceptele de ﬁgier §i de sistem de ﬁgiere
* Interfaga sistemului de ﬁgiere
> Implementarea sistemului de ﬁgiere
intrebiri ? H M

***************Ending Page***************

