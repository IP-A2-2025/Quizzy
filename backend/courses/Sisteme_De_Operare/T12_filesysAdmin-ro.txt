***************Beginning Page***************
***************page number:1**************
Sist6m€ d6 Op6rar6
Administrarﬁa inf0rma§iilor :
Sistemﬁ: d6: ﬁgiﬁm
Cristian Vidragcu
https://pr0fs.inf0.uaic.r0/~vidrascu

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Cuprins
> Concﬁptelﬁ d6 ﬁ§ier §i de sisterm d6: ﬁgierﬁ
> Int6rfa§a sistﬁmului d6 ﬁ§i6r6
> Implevmerntarera sistamului d6 ﬁ§i€r6
2/61

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Conceptul de ﬁ§1er/1
' Figier: zoné de stocare contigué d.p.d.v. logic
(nu neaparét contigué §i d.p.d.v. ﬁzic)
' Continutul unui ﬁgier:
— date (numerice, de tip caracter, binare)
— program
' Structura unui ﬁgier:
— nestructurat (i.e., o secventé de octeti oarecare)
— structuréi simplé de tip inregistrare (i.e., linii/ inregistréri, de
lungime ﬁxéi sau variabilé)
— structuré complexé (e. g. document formatat, ﬁ§ier executabil cu
incércare relocabilé, etc.)
— Cine decide structura (i.e., modul de interpretare a continutului) ?
programul (UNIX) vs. sistemul de operate (Windows, OS/Z)
3/61

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
ptul do ﬁ§1€f /2
' Structura lllllll fi§1er (c0nt.)

— Clnc ClcCldc structura (Le. modul do interpretare a oontinutului) ?
programul (UNIX) vs. 51stemul do operare (Wlndows, OS/Z)
treoerea la 1nterfete GUI), dealzla 0b. We ‘angufgepmgraim
so 1a pe baza extens1e1, 1.6. suﬁxul _ 'anguage’ "OF "nkéd
d1n numele ﬁ§1611111111 asm, a languages

batch bat, sh commands to the command
--—
doc formats
programmers
format for printing or
Viewrng
one file, sometimes com-
pressed, for archiving
or storage
mp3, avi audio or A/V information 4/61

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
. Concerptul d6 ﬁsim" /3
' Rolul ﬁglerelor: ’
— Persist6n§é — dam cu viagé lungé, pentru posteritate
° medii de stocam nevolatilﬁ:
' nume cu ingeles s6mantic (d.p.d.v. a1 utilizatorului)
. AbStl'aCtll ﬁ§l€r “EL-411:3’ Aulalrureahuuk. l'ucm'd fur Juhn Smith
D I?‘ Appl iL'; Minn
ml - | £ znlqlrﬁlu —r:'l'|al. lay-n: rungui"
lljm-a- ‘ Fill: Til-r'r-ittm
+ llck'i-Et. |_‘l-IHIL'|-|; ﬁ
"-5-- ___----- 5/61

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Atributele ﬁsierului (metadate)
' Nume — singura informagie péstraté in formé inteligibilé uman
' Tip — necesar pentru sistemele ce supcrté diverse tipuri
' Locagie — pointer 1a lccagia unde este stocat ﬁsierul pe disc
(i.e., perifericul de stocare a1 sistemului de ﬁsiere din care face parte
acel ﬁsier)
' Dimensiune — dimensiunea curenté a ﬁsierului
' Protecgie — contrcleazé cine pcate citi, scrie, executa,
ﬁsierul
' Timp, daté si identiﬁcatorul de utilizatcr — infonnagii pentru
protecgie, securitate si monitorizarea utilizérii
' Informagiile despre ﬁsiere sunt pistrate in structura de
directcare, ce este menginuté pe disc
6/61

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Operagii asupra ﬁ§i€r€lor
' Cmare — creat() sau 0pen(..., O_CREAT ...)
' Citire — read()
' Scriere — write()
' Repozigionare in ﬁ§ier (i.e., céutara in ﬁ§ier) —1seek()
' $tergere — unlink()
' Trunchiere — truncateO sau ftruncateO
' D€SChid6r€ (i.e., céutarea in structura de directoare de pe disc a
intrérii ﬁ§ierului §i copierea conyinutului intrérii in m6m0rie) — Op€n()
' inchid€r€ (i.e., mutama conginutului intrérii ﬁ§ieru1ui din memorie in
structura de directoare de pe disc) — ClOS€O
7/61

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Accesul la ﬁgiere /1
' Acces secvengia1— acces de 1a inceput spre sfér§it,
posibilitate de intcarcere la inceput (rewind) pentru
reluarea parcurgerii secvenyiale; se pct face citiri §i
scrieri, dar nu ambele simultan in timpul aceleagi
deschideri — metafora benzii magnetice
' Acces direct (acces aleatcriu) — acces dupé numéirul
(i.e., adresa) inregistrérii; se pct face citiri §i scrieri in
orice ccmbinaiii dorite — metafora discului de vinyl
' Acces indexat — acces direct prin conginut, fclosind
diverse tehnici (e. g. ﬁ§iere de index, ﬁ§iere multilisté,
hashing, B-arbcri, $.a.)
8/61

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Accersul 1a ﬁ§ier6 /2
' A0065 secvengial
, _ current poaition
begmnmg end
_ rewind :l:
read or write —~
9/61

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Accezsul la ﬁ§ie>re /3
' Simularﬁa accesului s6cven11ia1pe un ﬁgier cu acces direct
read next read cp;
CP = Cp + 1;
CD = Cp + 1;
10/61

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Accezsul 1a ﬁ§1er6/4
' Exemplu de acces indexat — ﬁ§iere index §i relative
logical record
lﬂSt name HUITIIZ'IEIII'
——
——
——
Hr‘:
-}*.
*-
indEx file relative filE
11/61

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Clasﬁicari ale ﬁglerelcr

' Clasiﬁcarea dupa posibilitatea de tiparire (aﬁgare) ASCII:

— ﬁ§iere teXt
— ﬁgiere binare
' Clasiﬁcarea dupa suportul pe care sunt rezidente:
— ﬁ§iere pe disc magnetic (HDD, FD, ZIP, ...) sau tarnbur magnetic
— ﬁ§iere pe banda magnetica sau caseta magnetica
— ﬁ§iere pe supcrt optic (CD, DVD)
— ﬁgiere pe suport memorii NAND (stick USB, card SD/MMC/ﬂ. , SSD, etc.)
— ﬁ§iere pe imprimanta sau plotter
— ﬁ§iere pe cartele perforate sau banda de hartie perforata
— ﬁ§iere pe ecran, ﬁgiere tastatura, $.a.

' Suportul inﬂuenteaza operatiile §i modurile de acces posibile
E. g. suportul disc accepta accesul direct, suportul banda magnetica accepta
doar accesul secvential; ﬁgierele pe cartele sau tastatura accepta doar citiri, iar
cele pe imprimanta, plotter sau ecran accepta numai scrieri 12/61

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Sisteme de ﬁsiere/ 1

' Deﬁnigie: un sistem de ﬁsiere este 0 eoleeiie oareeare de ﬁsiere,
impreuné cu structura de directoare in care sunt aeestea organizate

' Existé mai multe tipuri de sisteme de ﬁsiere de uZ general, e.g. NTFS
(speciﬁc Windows) sau ethfS/ extSfS/ ext4fs, btrfs, ZfS‘, $.21. (speciﬁee Linux/ UNIX),
ee diferé prin structurile de date folosite pentru stoearea lor si prin modul
de implementare a operagiilor asupra ﬁsierelor si directoarelor.

' in plus, existé si diverse tipuri de sisteme de ﬁsiere de uz partieularizat,

6. g. tmpfS (RAM disk), Obij (kernel debugging), prOCfS (interfa'gé structuri procese), s.a.

° Cluster: unitatea de mésuré pentru alocarea spagiului necesar memorérii
unui ﬁsier, la nivelullee-system-ului. Cu alte euvinte, dimensiunea unui
ﬁsier (i.e. infonnagia utilé stoeaté in e1) este un atribut exprimat in octegi, insé
spagiul ocupat de eonginutul ﬁsierului pe disc este un multiplu de clustere.

' Dimensiunea unui cluster: 0 putere de forma 2n, cu n:0,1,2,... , in termeni de
sectoare (sau blocuri-disc, i.e. unitatea de stoeare 1a nivelul discului)

13/61

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Sisteme de ﬁsiere/ 2

' Pentru persistengé, sistemele de ﬁsiere se péstreazé pe dispozitive
de stocare nevolatilii (e.g. disc HDD, stick USB, CD/ DVD, disc SSD, etc.),
in entitégi numite volume.

' Un VOhlIn poate f1 (mai multe detalii — in cursul despre perifericele de stocare) I

' — 0 partiﬁe a unui disc (schema clasicéi, MBR/GPT, ce permite
stocarea mai multor volume per disc)

' — 1111 diSC intreg (e.g. stick USB, CD/DVD, etc.)

— un ansamblu de mai multe discuri (ansamblu ce stocheazé un
singur sistem de ﬁsiere, prin tehnici precum RAID)

' Formatarea logicé a unui volum I “crearea sistemului de ﬁsiere”
rezident pe acel volum, prin inigializarea (pe disc) a structurilor de
date speciﬁce tipului acelui sistem de ﬁsiere; operagia are ca parametri:
tipul sistemului de ﬁsiere, numele volumului creat (i.e., 0 etichetéi) si
dimensiunea clusterului (deﬁnité in termeni de blocuri disc) 14/61

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
SlSt€II1€ d6 ﬁ§1€r@/3
° Un exemplu de organizara a sist6mului de ﬁ§ier6
partition A ﬁlas disk. E
diEk 1
parlitiﬁn G files

partiiiun E

dial’; 3

15/61

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Interfaga sistmnului d6: ﬁ§i€r€
' Funcgii
' Structura d6 directoare
' Organizare:
' Partaj am
' Montaré:
' Protecﬁﬁ

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Functiile sistemului de ﬁsiere
' (Subsisternul de directcare) Mapeazéi numele de ﬁsiere
in identiﬁcatcri de ﬁsiere prin primitiva open (sau creat).
Creeazé structurile de date din nucleu
' Mentine structura de nume (unlink, mkdir, rmdir)
' Determiné plasarea ﬁsierelcr (si a metadatelcr) pe disc,
in tenneni de clustere. Gesticneazé alccarea clusterelcr
(1 cluster = 2n sectcare consecutive). Gesticneazé 01118161616
eronate (i.e., cele ce contin bad sectors)
' Gesticneazéi apelurile de sistern read si write
' Initiazé operatiile I/O pentru transferul blccurilcr dinspre
disc spre RAM, respectiv dinspre RAM spre disc
' Gesticneazéi tampcanele cache pentru disc
17/61

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Structura d6 directoare: / 1

' Director — 0 0016c§i6 d6 ﬁ§i6re, inclusiv sub-directoare
(referite prin structuri de date specializate ce congin informagii despre acestea)

' Atét ﬁ§i6r616 propriu-Zise, cét gi structura de
diractoara sunt péstrate pe disc

' Copiile d6 sigurangé ala acestora sunt péstram (de
obicei) pe b6nzi, CD-ROM-uri, $.21.

' La incﬁput: director unic (e.g. CP/M, SIRIS — '60), iar
apoi dimcth pe 2 niv616 (e.g. RSX — '70-'80, un S.O. in
timp real pentru DEC PDP-l 1)

' 1n prezent: directoare cu structura arborescenté sau
cu structuré de graf aciclic

18/61

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Structura d6 directoare: /2
' Cum este organizaté structura d6 directoam?
> Listé inlényuité
> V€ct0r sortat
> Tab6lé hash
(a se vedea la Implementarea sistemului de ﬁgiere)
19/61

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Op6ra§ii asupra direrctoarelor
' Céiutareza unui ﬁ§i6r
' Cmama unui ﬁgier
' $tergerea unui ﬁgiﬁr
' R6d6numir6a unui ﬁ§ier
' Listarﬁa unui dirﬁctor
' Trav6rsarea sistﬁmului de ﬁgiﬁre
' e. g. salvarea/restaurarea unui sistem de ﬁgiere

21/61

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Numirea ﬁ§ierelor
' Scopuri:

— Pﬁntru a idﬁntiﬁca ﬁ§ierele (1a d6schid6re, SO-ul
mapeazé numele d6 ﬁgiﬁre in obiectﬁ de tip ﬁ§i6r
utilizatﬁ intern pentru accesul la ﬁgiere)

— Pentru a permitﬁ: utilizatoriIQr $51-$i alaagé propriile:
nume d6 ﬁgiere ﬁré probleme d6 conﬂict d€ nume

— U§urin§a d6 utilizarﬁ: numﬁ scurte, grupéri d6 ﬁ§iere

22/61

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Organizama dimctoarelor /1
' Organizama (logicéi a) directhrelor, pentru a
0b§in61
— Eﬁcientii — localizama rapidé a unui ﬁ§i6r
— Nume — numele sunt utile: pentru utilizathi
' Doi utilizatori pot avea acela§i nume pemtru ﬁ§ie:re diferitﬁ
' Acdagi ﬁgier poate avea mai multe nume diferite
— Grupare — grupareva logicé a ﬁgierelor dupéi
pmpriﬁtﬁﬁ (e. g. toatﬁ programele C, t0at6 j 0curi16, etc.)
23/61

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Organizama directoamlor /2
' Director unic pentru togi utilizatorii:
m®ElEEEEE%
Probleme (dazavantaj e):
— conﬂict de nume
— imposibilitat6 de grupare
24/61

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Organlzarea d1ract0arelor/3

' Director s6parat pentru ﬁecare: utilizator:
maisl'geCrtglj USEFT USEFQ US€f3 USQI'4
$535551‘; u". n. n- IIn
Avantaje:
— cale (path name) — céutare eﬁciemté
— acelagi num6 de ﬁ§ier pentru utilizatori diferigi
Dezavantaje:
— imposibilitatea de grupare
25/61

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Organlzarea d1ract0ar610r/4
' Dir6ct0are cu structuré arboreswnté:
Avantaj 6: rue-t spa-Ii Elm mugrams
— Gale (path name)
— céutare eﬁcienté
_pOsibi1itat€a d6 ﬂ- Mr
grupare a ﬁgierelor .- --"--:| l, a] .1 ‘1- --
— director cur6nt (de " " “ " "
lucru) :>
Speciﬁcama d6 céi Pm? II“ m
relative vs absolute 1;} ,- M __ ,. H
Dezavantaje: U a" "x ,» U
— imposibilitataa de m --m-T.r
partajare (prin alias- , 5 _ a . ,. 5 . 5

26/61

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
()rganizaraa diréctoamlor /5
' Directoam cu structuré de graf aciclic:
mull dict spell
if} :j
a. ,1 l; .J I; J 27/61

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Organizarera directoar610r/6
' Diractoare: cu structuré de graf aciclic (cont)
— Pot axista subdirectoare §i ﬁ§ier€ partaj ate
— Pot avea douii nume diferite
— linking hard/ soft — 1ink() , symlink()
— Problemii: §t6rgerea unui ﬁ§ier partaj at
— Solugii:
' Back-pointers, pﬁntru a putea gterg€ toate r6ferin§ele
Problemé: inregistréri cu lungirne variabilé
' Solugia cu contor de referinge péstrat in intrarea ﬁgierului
28/61

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
()rganlzama d1r6ct0am10r / 7
' Directoam cu structuré d6: graf g€n6ral:
— Probleméi: cum garantém
inﬁxist6n§a circuit610r?
— Solugii:
' P6rmitem link-uri doar Q1
cétra ﬁ§iere, nu §i cétm
subdirﬁctoare
' De ﬁecare daté 05nd s6 Q‘ Q Q
adaugé un nou link, s51 s6 _
utilizeze un algoritm de
detecgie a circuitelor pentru _
a decide dacéi s51 se permitéi Q ‘ ‘
acea adéugare sau nu
' Garbage collection
29/61

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
M0ntar6a /1
' Un sisterm d6 ﬁ§i6r€ trebuie s51 ﬁe montat inainte:
d6 a putea ﬁ accﬁsat
' Un sistem d6 ﬁ§iare nﬁmontat s6 monteazé 1a un
punct de montare (un director de montare)
' AlltO-IIIOHtZIIBEI (la introducerea unei dischete, CD, stick USB, $.a.)
' In UNIX/ Linux: m0unt() , umount()
30/61

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Mentama /2
' Exemplu:
f I
I
l M“ rrs-e'rs q_
h'l'l'l i I ‘II-"Inf ."-||'|.' ll'n'L'g' -
“ll _ .- .~1.'.-* mm
IIH'II'}:
{m [n1
(a) Sistemul existent (b) Partigie nemontaté Punctul de montare
31/61

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Partaj area ﬁsierelor

' Partaj area ﬁsierelor in sisteme multi-utilizator este o

facilitate de dorit
' Partaj area se poate face printr-o schema de protectie
' ln sistenie distribuite, ﬁsierele pot ﬁ partaj ate prin

intermediul retelei
' Protoooale si tehnologii de retea folosite:

— NFS (Networked File System), ce utilizeaza RPC — SUN

— CIFSZ protocolul standard din Windows pentru partaj area ﬁsierelor

— Active Directory-ul din retele Windows

— Yellow Pages —> NIS —> NIS+ —> LDAP, folosite in retele

UNIX/ Linux
— sisteInul DNS 32/61

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Protectia ﬁ§iere10r

' Proprietarul (ereatorul) unui ﬁ§ier trebuie s51 poaté

eontmla:

— ee operatii pot ﬁ féeute asupra ﬁ§ierului

— §i de eétre cine
' Drepturi de aeees:

— Read

— Write (dear modiﬁcare, nu §i append sau delete)

— Execute

— Append (adéiugare de artieole noi la sfér§itu1 ﬁgierului)

— Delete

— List

33/61

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Implementarea sistemului de ﬁ$iere
' Structura sistemului de ﬁ§iere
' Implementarea ﬁ§iere10r §i directoareler
' Metode de aloeare
' Gestiunea spagiului liber
' Eﬁcienya §i performanya
' Reeuperare
' Sisteme de ﬁgiere jumalizate
' Networked File System (NFS)
' Sisteme de ﬁgiere “next-generation”

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Structura sistemului de ﬁeiere
' Structura ﬁgierului
— Unitatea logieé de stoeare a informagiilor (date sau programe)
— O eeleegie de infonnagii inrudite prin ingelesul lor semantic
' Sistemul de ﬁgiere se péstreazéi pe memoria seeundaré
(i.e., periferiee de stoeare — diseuri: HDD, SSD; FD, CD/ DVD, $.21.)
' Sistem de ﬁ§iere erganizat ierarhic, pe nivele
' Bloeul de eontrel a1 ﬁ§ierului — FCB (File Control
Block) — structura de date, stoeaté pe disc, ce eongine
anumite informagii despre un ﬁgier
' Desehiderea unui ﬁ§ier pune 1a dispozigie un handle de
referingii la FCB, utilizat pentru aeeesele 1a ﬁ§ier 35/61

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Sistﬁm d6 ﬁ$i6m p€ niverlé

Programe de aplicagie

Sistemul logic de ﬁgiere
Modulul d6 organizare

a ﬁ§ierelor
Sistemul cie bazé de ﬁ§iere
I/O cintrol FCB-ul unui ﬁgier
Periferice de stocare
36/61

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Structurl 1ntcrnc
t t ril i t m 1 i
Sruou esse uu - ED
dc ﬁcslere necesarci — E E
furnlzatc dc SO-un: I directory structure
. open (file name)
— ﬁg. (a): deschldcrca directorystruaure f-Comrol block
- ﬁg. (b): citirea
- - - user space kernel memory secondary storage
(s1m11ar pentru scnere) (a)
Structuri de date in memorie:
- tabela dc montare a - G CU
sistemelor de ﬁsiere — I U
. . data blocks
- tabela dc ﬁ§16f6 deschlse I —"
€I‘ I'OCﬁS read (index) - -
p p per-process system-Wide file-control block
_ tabgla globalé d6 ﬁsiare open-file table open-file table
d6SChi86 user space kernel memory secondary storage
(b)
37/61

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Sistenw d6 ﬁ§ie>re virtuale: /1
' VFS furnizeazéi 0 modalitatn orinntaté-obinct
d6 implemﬁntam a sistﬁmalor de ﬁ§ier6
' VFS p6rmit6 utilizama a0616a§i interf6§6 a
apelurilor de sistem pentru 0p6ra§ii I/O (i.e.,
API-ul I/O din POSIX) pantru diferité: tipuri d6
sisteme de ﬁ§iere
(e.g. ext3fs, ext4fs, vfat, fat16, hpfs, ntfs, nfs, ...)
' VFS 6st6 0 componernté din nuclﬁul Linux
38/61

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Sist6m6 d6 ﬁgiere virtua16/2
' Sch6ma
unui VFS:
H'FIEI 1 TEE-$2 type 1
H E 4r
39/61

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Implementarsa directoaralor
' Lista liniara d6 numa de ﬁsiere cu pointari catre
blocurile d6 data
— simplu d6 pmgramat
— consumator de timp 1a execugie
' Tabala hash — lista liniara cu structura d6 date hash
— micsoreaza timpul de cautara in director
— coliziuni — situagii in care doua nume de ﬁsiera au prin
funcgia hash aceeasi locagie
— dimansiune ﬁxata
' B+ tree
40/61

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
M€t0d€ d6 alocare /1
' Metoda de alocare s6 refaré 1a modul in cam
blocurilﬁ disc sunt alecatﬁ pentru ﬁ§iere (i.e.,
pentru a stoca conginutul propriu-Zis a1 ﬁgierului, nu §i
metadatek sale — aC6st6a sunt stocate in FCB-ul ﬁ§ierului)
— Alocare contiguﬁ
— Alocare inlﬁntuitz'l
— Alocare indexaté
41/61

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
M€t0d€ d6 alocare /2
' Alocarea contiguz'l
— Fiecare ﬁgier ocupé 0 mulyime contigué de blocuri p6 disc
— Simpléi — sunt necesare doar locagia d6 start (numéirul blocului
de incﬁput) §i lungimea (numérul de blocuri ocupate)
— Accas alaatoriu (direct)
— Risipéi de spagiu (problema alocéirii dinamicﬁ a spagiului de
stocare)
— Fi§ier6le nu pot cregte in dimensiune
— Alocarea bazaté p6 extindere — Veritas File System
42/61

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Mctodc dc alocarc / 3
' Alocarea inliinguitii
— Ficcarc ﬁsicr cstc o listéi liniaréi simplu inléinguitéi dc
blocuri disc; ﬁccarc bloc conginc o partc din datclc
ﬁsicrului si o rcfcrinﬁx (un pointcr) cétrc urinétorul bloc
— Blocurilc pot ﬁ “impréstiatc” oriundc pc disc (nu mai sunt
intr-o zon'Zl contigué)
— Blocuri adigionalc sunt alocatc pc mésuré cc conginutul
ﬁsicrului crcstc in dimensiunc
— Acccsul sccvcniial nu ridicé nici o problcmé, in schimb
acccsul direct nu sc poatc facc cﬁcicnt
— Corupcrca laniului dc pointcri provoacéi problcmc maj orc
— Tabcla dc alocarc a ﬁsicrclor (FAT) — alocarc utilizatﬁ dc
sistcmul dc ﬁsicrc FAT (I sistcmul dc ﬁsicre principal din MS-DOS,
Windows 9X si OS/2<3.0) 43/61

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Mertode: de: alocare /4
'Alocarea inlz'lnguitz'l ‘v direﬂww

filEl 515111 and

GB 1m EB 3U iBElp El 25
4E1 I =I rm
a|:| = EE 112E11|I|
12.1 Grimm
11%|] IT|:|1B|:|1EI|:|
EBEEWIEEUEBU
24E 25E EEEI ETEI
Eaﬂaaﬂanﬂmﬂ

44/61

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
M€t0d€ d6 alocare /5
' Alocarea inlﬁnguitz'l d t t
lrec ory en ry
Ila-alu-
name start block O —
File Allocation Table -
(FAT) 217
339 la
number of disk blocks —1 !
FAT
45/61

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
M€t0d€ d6 alocare / 6
' Alocarea indexatii
— Pune laolalté togi pointerii intr-un bloc de index
(alocarea indexaté grupeazé referingele impreuné §i le
asociazé cu un ﬁ§ier particular)
— Se utilizeazé 0 tabelé de indecgi
étl
U
ém
€El
B
index table
46/61

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
M€t0d€ d6 alocare / 7
' Alocarea indexatii (c0nt.)

— Acces aleatoriu (direct)

— Acc¢s dinamic féré - ﬁle direiCtdyblock
fragmentare extﬁrné 0U aka 3U
(optimizat pentru situagia in 4U 5B 7m
care in sistemul de ﬁgiere sunt 85 “SSW 9
multa ﬁgiere mici) ‘25135141§\". E

— overhead-ul implicat de 16' WU 19 E?
accasul suplimentar la 2:52:35;ng 31
blocul d6 indﬁx 285295305315

— i-noduri — alocare utilizatéi
d6 familia SO-urilor UNIX,
inclusiv Linux gi Mac OS X

47/61

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Mntodn d6 alocare / 8
' Alocarea indexatii (cont.)
— i-noduri — alocare utilizaté
d6 Linux, Mac OS X §i
C€1€1alt6 UNIX-uri d"e“b'°““ I
FCB-ul (i.e., i-nodul) unui B:
ﬁ§ier conﬁne toate atributele, E: E:
inclusiv locagia — astfel: “2:2:2:t E:
- 12 adrese directe E: E]:
- 1 adresé de simplﬁ indirectare: E]:
- l adreséi de dubléi indirectare E]:
- 1 adreséi de triplé indirectam E:
File [winters (adreselﬁt): 32-bits E]:
vs 64 bits (ZFS suporté 128-bits)
48/61

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
G6stiun€a spagiului 1ib€r /1
' Metode folosite pentru evidenga blocurilor libere:
— Vectorul de bigi
' Instrucgiuni ma§iné pentru gésirea primului bit setat
' Péntru 6ﬁcien§51, est6 nevoie d6 péstrarea vectorului de
bigi in memorie, nu pe disc
' Exemplu: Mac OS
— Lista inlénliuité : exemplu pe unnétorul slide
— Gruparea : ex6rnplu peste doué slide-uri
— Péistrarea unei liste cu zonele lib6re contigue — perechi de
forma (numéirul blocului liber d6 inceput, dimensiune)
49/61

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
G6stiun€a spagiului libér /2
'Lista inlénguité ' .. .. _. . ..
' ' ' [FEE-B {b-EIEEl h-EELEI
1a3 sgeililculul hber "1'5 nljl IEI E. 3-
4- 5- 5|] Tl]
E-I Elm-Im-
IE.1E|.14|:|15|:|
15EI1FI15I15|II
Eulj 21|:|22 El 2:3|:|
24E 25 ‘£25 I 2? ﬁ-
EBEIEQIIIBBEIBHII
50/61

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
G6stiun€a spagiului 1ib6r / 3
' Grupama spagiului liber pe disc
3\ 3
5 9 11 28
13 17 18
2O 21 22 55 59 61
23 24 25 62 63 64
26 27 28 65 66 67
68 71 72
74 75 76
51/61

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
Eﬁcienga si perfcrmanga /1
' Eficienta — depinde de:
— Algoritmii de alccare a discului si pentru directcare
— Tipurile de date péstrate in intrarea ﬁsierului din director
' Performanga — tehnici de imbunéitéigire fclcsite:

— Disk cache — 0 secgiune separaté a memoriei principale
utilizaté ca memorie cache a blccurilcr de disc utilizate
frecvent

— Free-behind si read-ahead — tehnici de cptimizare a
accesului secvengial

— Dedicarea unei secgiuni a memoriei principale drept disk
Virtual (numit unecri si RAM disk)

52/61

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Eﬁcmnga $1 performanga /2
' Localizama cache-ului d6 disc
:__ ‘FQin-EE - 'i M
l—l
: : : track :
- g : I huﬁer I
| | '- — — — l
l—l
CPU I wen-"1E tame I cunrrmler disk
l—l
LPPEE EEﬁE". __I
main memuryr
53/61

***************Ending Page***************


***************Beginning Page***************
***************page number:53**************
Recuperare

' Veriﬁcari de consistenta — compara datele din structura de
directcare cu blccurile de date de pe disc si incearca sa
remedieze inconsistentele gasite; dezavantaj: poate dura mult timp.
Unealta consistency checker: fsck (in UNIX) sau chkdsk (in Windows)

' Fclosirea uncr utilitare de sistem pentru backup-ul datelor
de pe disc pe un alt periferic de stccare (disc extern, CD/DVD,
banda magnetica, s.a.), cperatie ce trebuie realizata periodic!

+ Recuperarea uncr ﬁsiere “pierdute”/ unui disc “pierdut”
prin restaurarea datelcr de pe un backup realizat anterior!

' O alta solutie interesanta este furnizata de sisternele de ﬁsiere
jurnalizate, respectiv, mai ncu, de sistemele de ﬁsiere “next-
generation” 54/61

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Sisteme de ﬁ$iere jurnalizate

' Sistemele de ﬁgiere j urnalizate inregistreazé ﬁeeare
aetualizare a sistemului de ﬁeiere ea pe 0 tranzacﬁe

' Toate tranzaegiile sunt serise intr-un j urnal (log). O
tranzaegie este eonsideraté comisﬁ atunei eénd este serisé in
jurnal. T0tu§i, se poate ea sistemul de ﬁgiere sé nu ﬁ fest
ineé aetualizat

' Tranzaegiile din jurnal sunt operate asineron in sistemul de
ﬁ§iere. Dupé ee sistemul de ﬁ§iere este modiﬁeat, tranzaegia
este §tears€1 din jurnal

' Daeé sistemul “erapé”, toate tranzaegiile rémase in jurnal
trebuie s5 ﬁe operate dupéi repornirea sistemului

' Exemple: NTFS (Windows) sau ext3f9/ext4ﬁv (Linux)

55/61

***************Ending Page***************


***************Beginning Page***************
***************page number:55**************
Networkad Fila Systam

' NFS I 0 implementara a ﬁrmei Sun Microsystems
(in SO-urile Solaris, SunOS) gi 0 spaciﬁcagie a unui
sistem software pantru accasaraa ﬁgierelor d6 1a
distanga in re§616 LAN (sau WAN)

' Stagiile de lucru interconectate prin intermadiul regelai sunt
privita ca 0 mulgime de ma§ini indapendante, cu sisteme de
ﬁ§iere independenta, ca pannit partaj area ﬁ§iere10rintre
aceste sistema de ﬁ§iere, intr-o maniera transparenta pentru
utilizat0r (folosind protocoale d6 montara, RPC, UDP/IP, §i
modelul chant-server)

' Speciﬁcagiile NFS sunt indapandante de hardwara,
sistam de oparara §i tehnelogia d6 r6§6a 56/61

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
' ° CC ' 99
S1steme de ﬁsiere next-generation
' Sistemele de ﬁsiere “next-generation” incearca sa ofere
tolerantd la tipuri de erori ce nu sunt prevenite de tehnologiile
anterioare: sistemele de ﬁsiere jumalizate (ce ofera protectie doar 1a
nivelul structuriiﬁle-system-ului, nu si pentru continutul ﬁsierelor) sau tehnicile
RAID (ce ofera protectie doar in anumite situatii, dar nu si contra “bit rot”)
' “Bit-rot” I “the silent corruption of data on disk; one at a time, from
time to time, a random bit here or there gets flipped.”
R6 f6fin§§ll https:// arstechnica.com/ information-technolo gy/ 20 14/0 l/bitrot-and-atomic-cows-inside-next-gen-ﬁlesystems/
' Exemple: ZFS (Solaris), btrfs (Linux) sau, mai nou, ReFS (Windows)
si APPS (for Apple’s devices)
' Protectia contra “bit-rot”: ZFS stocheaza eheeksums pentru toate datele si
metadatele unui volum, si astfel poate detecta (si corecta) coruperea acestora
' Alte facilitati: operatii COW atomice, snapshots, built-in handling 0f disk
failures and redundancy, integration 0f RAID functionality, s.a. 57/61

***************Ending Page***************


***************Beginning Page***************
***************page number:57**************
Bibliograﬁe
' Bibliograﬁe obligatorie

capitolelﬁ: despre sisteme deﬁsiere din
— Silberschatz : “Operating System Concepts”

(cap.l3 si cap.14 din [OSC10])
sau
— Tanenbaum : “Modern Operating Systems”

(cap.4 din [MOS4])

58/61

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
Exereitii de seminar
> Aplieatii la: Sisteme de ﬁ§iere — structurile de date FCB
— Enunt: Se déi un sistem de ﬁgiere UNIX ee are earaeteristicile
urméteare: sector size I 4KB, ﬁle pointers I 32bits.
Un ﬁ§ier stoeat in aeest sistem are lungimea L21 073.761 .780 octeti.
Care este “amprenta” sa pe disc, i.e. eét spatiu oeupé ﬁ§ieru1 pe dise
(exprimat in unitﬁti de alocare a diseului, ﬁle
i.e. blocuri-disc (sau sectoare, alt termen
folosit pentru aeelagi eoneept)) ? _ _
— Rezolvare: ? '
BI
double indirect a a BI:
. . EB
Indicaﬂe: 53- E1:-
L :1.073.761.780 I (12*4096) + 5:5:-
(1024*4096) + (261.112*4096+3572) 59L
Iar261.112+1 =254*1024+ 1017 E135:-
513
59/61

***************Ending Page***************


***************Beginning Page***************
***************page number:59**************
Exerc1t11 de semlnar
> Aplicatii la: Sisteme de ﬁsiere — structurile de date FCB
— Enunt: Se da un sistem de ﬁsiere UNIX ce are caracteristicile
urmatoare: sector size I 4KB, ﬁle pointers I 32bits.
Un ﬁsier stocat in acest sistem are lungimea LI1.073.761.780 octeti.
Care este “amprenta” sa pe disc, i.e. cat spatiu ocupa ﬁsierul pe disc?
— Rezolvare:
Un bloc de date contine 4096 de octeti (4KB).
Iar un bloc de indecsi contine 4KB/32bits I 1024 adrese de _ _
blocuri-disc (s1 ocupa pe disc tot 4096 octeti!). d"e“b'°‘k‘ 5
A se vedea formula de la indicatie I> numarul total de singleindirect
blocuri de date pentru a stoca doar continutul ﬁsierului E: B:
este: 12 blocuri directe + 1024 de blocuri de simpla E:
indirectare (plus 1 bloc de indecsi; primul arbore este complet E:
alocat!) + 261.113 de blocuri de dubla indirectare (a1 doilea E13 5:
arbore este partial alocat: 1 bloc de indecsi in radacina sa, plus doar E:
255 blocuri de indecsi pe nivelul doi). Arborele tertiar este nul.
Total spatiu ocupat pe disc : (12+1024+261.113 blocuri de E]: E:
date) + (1+1+255 blocuri de indecsi) I 262.406 de blocuri. El:
La care se mai adauga spatiul necesar pentru PCB: sizeof (i-nod). 60/61

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
Sumar
> Concﬁptelﬁ de ﬁ§i6r §i d6 sistem d6 ﬁ§ier6
> Interfaga sistermului d6: ﬁ§i€r6
> Implenmntaraa sistemului d6 ﬁ§i€re
intmbéri ? 61/61

***************Ending Page***************

