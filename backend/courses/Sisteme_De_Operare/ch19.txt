***************Beginning Page***************
***************page number:1**************
Chapter 19:
Network and Distributed
Systems
—

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
“4} i Chapter 19: Distributed Systems
I Advantages of Distributed Systems
I Network Structure
I Communication Structure
I Network and Distributed Operating Systems
I Design Issues of Distributed Systems
I Distributed File Systems
Wm", sh"... Cum,“ 7 in! mm i5 2 Silhvmnlu. elm“ m m". mm

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
~

‘4} I Chapter Objectlves

I Explain the advantages oi networked and distributed systems

I Provide a nigh-level overview of the networks that interconnect

distributed systems

I Define the roles and types oi distributed systems in use today

I Discuss issues concerning the design of distributed ﬁle systems
OM",mummwemdm m “em-“Mnae-“km

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
t‘
‘4,. _ OverVIew
I A distributed system is a collection oi loosely coupled nodes
inlercorviecled by a communications network
I Nodes variously called processors, computers, machines,
hosls
. Site is location of the machine, node relers to speciﬁc system
. Generally a server has a resource a client node al a different
site wants to use
m- A Si. c
I k .w U U
U U
< m lmml
mmnmnlcamzn
m: a A
0mm slim... Cum,“ e w Wm t5 t Sllhvmhlu. Bllvln "a m". @zuu

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
ﬁe
“w; .
. _ Overwew (cont.)
I Nodes may 5Xi5( in a client-server, peer-to-peer, or hybrid
configuraiion.
. In client-server conﬁguration, server has a resource that a
client would like to use
0 In peer-to'peer conﬁguration, each node shares equal
responsibilities and can act as both ciienis and servers
I Communication over a network occurs through message passing
. All higher-level functionS 0f a standalone system can be
expanded to encompass a distributed system
om",“ammmumkmdm is; Sllhvmhu. G.M“."¢=.‘;W.

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
y‘
‘W Reasons for Distributed Systems
I Resource sharing
i Sharing ﬁles or printing at remote sites
' Processing information in a distributed database
i Using remote specialized hardware devices such as
graphics processing units (GPUs)
I Computation speedup
' Distribute suboomputations among various sites to run
concurrently
' Load balancing — moving jobs to more lightly-loaded sites
I Reliability
' Detect and reoover from site failure, function transfer,
reintegrate failed site
om",5,‘...ncmmismm M Slim-a W“ .nr W181“.

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
r‘
“$er
._ Network Structure
I Local-Area Network (LAN) — designed to cover small geographical
area
0 Consists of multiple computers (workstations, laptops, mobile
devices), peripherals (printers, storage arrays), and routers
providing acoess to other networks
. Ethernet and/0r Wireless (WiFi) most common way t0 construct
LANs
t Ethernet deﬁned by standard IEEE 802.3 with speeds typically
varying from 10Mbps to over 10Gbps
t WiFl defined by standard IEEE 802.11 with speeds typically
varying from 11Mbps to over 400Mbps.
t Both standards oonstantly evolving
Wm,“ammmxmmmm a, “Wham-vi““minim.

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
¢i 1E! §
Q m :5
\—Uwé |_MN—

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
t‘
‘4);’ Network Structure (Cont.)
I Wide-Area Network (WAN) — links geographically separated sites
' Point'to'point Connections Vie links
> Telephone lines, leased (dedicated data) lines, optical cable, microwave
links, radio waves, and satellite channels
' Implemented via routers to direcl traffic lrorn one network l0 another
. Internet (World Wide Web) WAN enables hosts world wide to communicate
' Speeds vary
> Many backbone providers have speeds at 40-1006bps
> Local Internet Service Providers (lSPs) may be slower
> WAN links constantly being upgraded
' WANs and LANS inlernonneot, slmiler l0 Cell phone network:
> Cell phones use radio waves to cell towers
> Towers connect to other lowers and hubs
Wm, 5"..." “more w mm o, sllhvmh-iz. cm .o cm‘. mull

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
“WV Wide-Area Network (WAN)
WW
O O O
nelworkhosl
wmmunianon
subsystem
(network!
'5‘
u netwolkhnsl
II II n1
‘_ ‘ n
III
p router
III

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
'4} i Nam| ng and Name Resolutlon
I Each computer system in the network has a unique name
I Each process in a given system has a unique name (process-id)
I Identify processes on remote systems by
<host-name, identifier) pair
I Domain name system (DNS) — speciﬁes the naming structure
of the hosts, as well as name lo address resolution (Internet)
‘Th-0 m. animal/r <1, nun
Z,‘ . ,m mm“, m my
at.“ n... Baum/p l
'“KLLZ;.‘;.‘.‘.‘.Y.‘.1II.‘.'J.’.‘.“"‘“ "‘" ‘
"Guam. > l.........- ..‘.yl...t.v.-uh
5,"- m wuuﬂhm..." “mum-m.
l
(m. tuhmuﬂwlm. M l
5,"- .r. yum-MM m. ~ Hulhh
l
I l
Wm", sh..." Cum,“ 7 w mm t, u Sllhmzhlu. Bllvln "a a“... out:

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
r‘
i_ Communication Protocol
The communication network is partitioned into the following
multiple layers:

I Layer 1: Physical layer e handles the mechanical and
electrical details of tne physical transmission ol‘ a bit
stream

I Layer 2: Data-link layer — handles the frames, or ﬁxed-
length parts of packets, including any error detection and
reoovery that oocurred in the physical layer

I Layer 3: Network layer — provides connections and
routes packets in the communicalion network, including
handling the address ol outgoing packets, decoding the
address of incoming packels, and maintaining routing
information for proper response to changing load levels

0min, 5"..." mm“ n» am i, i, snow-a W“ n4 an“. W.

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
VJ,‘
“#7 Commun Icatlon Protocol (Cont)

I Layer 4: Transport layer — responsible lor low-level network
access and for message transfer between clients, including
partitioning messages into packets, maintaining packet order,
controlling ﬂow, and generating physical addresses

I Layer 5: Session layer e implements sessions, or process»to-
process communications protocols

I Layer 6: Presentation layer a resolves the differences in
iormats among the various sites in the network, including
character conversions, and half duplex/full duplex (echoing)

I Layer 1: Application layer — interacts directly With the users,
deals with ﬁle transfer, remote-Iogin protocols and electronic
mail, as well as schemes for distributed databases

I 0mm, M..." “We n» an“, n, r; new“ W, m at; W.

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
q} OSI Network Model
Logical communication between two compuiers, with the three lowest-
level layers implemented in hardware
wmnuletA mmnulev e
‘at "*3
———
——=
mam-—l-
‘BEBE-———
m 1 I
\ 3 i \
aiimb'm
newm ehvunnmenl
reel MSWIEEVMNIIMI'I
0mm 5m... Cum,“ 7 w mm w u Sllhvmh-u. GM m sq" emu

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
“f a‘ OSI Protocol Stack
WEDMW.‘
.wmwmm
1 WWW. 1
¢.;::::r.r;:r:ﬁ:‘::m, w-Mw-w
mm“
*m-WW
WWW

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
~ng i OSI Network Message
daw-‘ink-layer header
nelwomayer header
lransporl-layer header
sessionelayer header
presenmion layer
appllcalion layer
message
damehnkelayel trarler

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
r‘
W;
._ The OSI model
I The OSI model lorrnalizes some of the earlier work done in
nelwork prolocols bul was developed in the late 19703 and i5
currently not in widespread use
I The mosl widely adopted protocol stack is the TCP/IP model,
which has been adopted by virtually all Internet sites
I The TCP/IP protocol slack has lewer layers than the OSI
model. Theoretically, because it combines several functions in
each layer, it i5 more difﬁcult to implement but more efficient
than OSI networking
I The relationship between the OSI and TOP/IF models is
shown in the next slide
em.n,=,i..me.m.=.miewe.“ m, slam-e ewes-Jew.

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
—'?WJW'W>M
PM“ Imam.“
0mm", mm" WW“ ’ ‘“' WM‘ w H sllhmm-u. elm“ m Glyn! mu

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
A
*4} TCP/IP Example
I Every host has a name and an associated IP address (host-id)
i Hierarchical and segmented
I Sending system checks routing tables and locates a router to send
packet
I Router uses segmented network part oi host-id to determine where to
transfer packel
. This may repeat among multiple routers
I Destination system receives the packet
' Packet may be complete message, or it may need to be
reassembled into larger message spanning multiple packets
0mm, sh"... Cum,“ , w a.“ t! t! sllhmmu. elm“ "a m". em

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
t‘
“43$;
._ TCP/IP Example (Cont)
I Within a network, how does a packet move from sender (host or
router) lo receiver’?
. Even/ Ethernet/WiFi device has a medium access control
(MAC) address
0 Two devices on same LAN communicate vla MAC address
. Ii a system needs t0 send data to another system, it needs t0
discover the IP to MAC address mapping
> Uses address resolution protocol (ARP)
. A broadcast uses a special network address to signal that all
hosts should reoeive and process the packet
> Not forwarded by routers to different networks
om", 5"..." “We w a.“ tun Slim-a W“ m W‘. W.

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
“3? v Ethernet Packet
bylas
1 mummmer paltemlmmml
2 or s Elhsmet address m lunaﬂmsl
2 a s m8. am
2 lenqm ol dam swam length in bytes
H 5w - mg! Ma
0-46 nun (optimal) "wage must be > s3 bytes long
~ ‘Newman
0mm sh..." Cum,“ 7 w 5.1mm m1 51mm"; elm“ m mm mu

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
t‘
my? )l
‘_ Transport Protocols UDP and TCP
I Once a host with a speciﬁc IP address receives a packet, it must
Somehow pass il l0 lhe Correcl waiting process
I Transport protocols TCP and UDP identify receiving and sending
processes through lhe use of a porl number
0 Allows host with single lP address to have multiple server/client
processes sending/receiving packels
° Well-known port numbers are used lor many services
> FI'P e port 21
> ssh — port 22
> SMTF' e port 25
> HTTP - port so
I Transport prolocol can be simple or can add reliability to network
packet stream
Wm, 5"..." “MW m» mm ‘,2, Slum-a W“ m W‘. W.

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
A
\gy/l
._ User Datagram Protocol
I UDP is unreliable — bare-bones extension t0 IP with addition OI
purl nu mber
. Since there are no guarantees of delivery in the lower network
(IP) layer, packets may become lost
0 Packets may also be received out-out-order
I UDP is also COIIIIBCII'OI'IIBSS , rlD connection setup at the
beginning ol the transmission to set up state
. Also no Connection tear-down at the end 0f lraﬂsmission
I UDP packets are also called datagrams
Wm, 5"..." mum.’ w mm w mum-a W“ m W‘. W.

***************Ending Page***************


***************Beginning Page***************
***************page number:24**************
iiEitiLlim“
server starts sending
data to client
time dropped packet!
client server
0mm, sh..." Cum,“ 7 w Wm w» Sllhvmnlu. DIM“ m m". mun

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
r‘
._ Transmission Control Protocol
I TCP is both reliable and connection-oriented
I In addition lo porl number, TCP provides abstraction to allow in-
order, uninterrupted byte-stream across an unreliable network
i Whenever host sends packet, the receiver must send an
acknowledgement packet (ACK). ll ACK not received belore
a timer expires, sender will resend‘
° Sequence numbers in TCP header allow receiver to put
packets in order and notice missing packets
° Connections are initiated with series of control packets called a
three-way handshake
> Connections also closed with series of control packets

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
‘"3’ i TCP Data Transfer Scenario
IBIKK
retransmit
lovACK
mnnsmk
(liem my A

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
y‘
“3} "Transmrssron Control Protocol (Cont.)
I Receiver can send a cumulative ACK to acknowledge series of
packels
. Server can also send multiple packets before wailing lor ACKs
' Takes advantage of network throughput
I Flow ol packets regulated through ﬂow control and congestion
Control
. Flow control — prevents sender lrorn overrunning capacity of
receiver
. Congestion control — approximates congestion of the
network to slow down or speed up packel sending rale
om", 5"..." “We w am ‘,2, stem-a W“ .nt em; W.

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
W1“ i Network-oriented Operating Systems
I Two main types
I Network Operating Systems
' Users are aware of multiplicity of machines
I Distributed Operating Systems
' Users not aware of multiplicity of machines
Wm", sh"... Cum,“ 7 raw mm r921 Sllhvumu. elm“ m m". mun

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
A
‘W Network Operating Systems
I Users are aware oi multiplicity of machines
I Access to resources of various machines is done explicitly by:
' Remote logging into the appropriate remote machine (ssh)
> ssh kristenxzseyaleeedu
' Transferring data from remote machines to local machines,
via the File Transfer Protocol (FTP) mechanism
' Upload, download, access, or share iiles through cloud
storage
I Users must change paradigms — establish a session, give
network-based commands, use a web browser
. More difﬁcult for users
Wm.“ammmmpmdm ‘,2, Slim-a alimmeqﬁw.

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
l‘
t ‘$7 ) . . .
‘_ Dlstrlbuted Operatlng Systems
I Users not aware ol multiplicity oi machines
' Access to remote resources similar to access to local
resources
I Data Migration e iransler data by translerring entire ﬁle, or
transferring only those portions ol the ﬁle necessary for the
immedlale lask
I Computation Migration — transfer the computation, rather than
the data, across the system
° Via remote procedure calls (RPCs)
' Via messaging system
0mm, 5m... may“ e w 5.1.th l! :0 Sllhvmhu. GIlvln "a 5.“. 82M!

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
avg?’
“*7? Dlstrlbuted-Operatlng Systems (Cont.)
I Process Migration — execute an entire process, or parts of it, at
different SlleS
. Load balancing — distribute processes across network to even
the workload
0 Computation speedup — subprooesses can run concurrently
on different sites
° Hardware preference — process execution may require
speciallzed processor
° Software preference — required software may be available at
only a particular site
Q Data access e run process remotely, rather than transfer all
data locally
I Conslder the World Wide Web
om“, at..." “may m» mm w M “mm W" m sq; W.

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
mi"
“"57 Design Issues of Dlstrlbuted Systems
I We investigate three design questions:
' Robustness e Can the distributed system withstand tailures?
' Transparency- Can the distributed system be transparent to
the user both in terms of where files are stored and user
mobility?
. Scalability’ Can the distributed system be scalable t0 allow
addition of more computation power, storage, or users?
I 0mm, 5w..." Emmy m Em w s2 mm.‘ Wt m sq; W.

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
W”
. _ Robustness
I Hardware lailures can include failure ofa link, failure of a site, and
loss 0f a message.
I A fault-tolerant system can tolerate a certain level of lailure
i Degree of fault tolerance depends on design oi system and
the speciﬁc fault
. The more fault tolerance, the better!
I Involves failure detection, reconfiguration, and recovery
0mm sh..." Cum,“ , w mm w :1 Sllhvuznlu. Bllvln m m". owl

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
r‘
t 6;‘) . .
._ Failure Detectlon
I Detecting hardware iailure i5 difficult
I To delecl a link failure, a heartbeat protooel can be used
I Assume Site A and Site B have established i link
i At ﬁxed intervals‘ each site will exchange an Lam-up
message indicating that they are up and running
I If Site A does not receive a message within the ﬁxed interval, it
assumes either (a) the other site is not up or (b) the message was
IOSl
I Site A can now send an Are-you-up? message to Site B
I If Site A does not receive a reply, il can repeat the message or try
an alternate route to Site B
Wm. 5"..." Cum.’ tar a.“ i, it mm.“ W“ m W“. W.

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
y‘
“if i Fallure Detectlon (Cont.)
I If Site A does not ultimately receive a reply tram Site B, it
concludes some lype 0f failure has Occurred
I Types of failures:
- Site B is down
- The d|rect link between A and B is down
- The alternate link trorn A to B is down
- The message has been lost
I However, Site A cannot determine exactly why the failure has
occurred
Wm,=y....nc.m.,.m.rm.,.m was “imam-vi““delimit

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
t‘
y Q? j . .
‘_ Reconflguratlon and Recovery
I When Site A deterrnines a failure has occurred, it must
reconfigure the System:
. It the link from A to B has failed, this must be broadcast to
every site in the system
. It a site has tailed, every other site must also be notified
indicating that the services offered by the failed site are no
longer available
I When the link or the site becomes available again, this information
must again be broadcast to all other sites
om", 5"..." “We raw am t, a‘ Slim-a W“ m w‘. W.

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
W!‘
._ Transparency
I The distributed system should appear as a conventional,
centralized system i0 the user
. User interface should not distinguish between local and
remote resources
> Example: NFS
. User mobility alluws users t0 log into any machine in the
environment and see his/her environment
> Example: LDAP plus desktcp viriualizaiion
0mm", Syn-m Cum,“ , tar mm t9 t1 Sllhvumu. Bllvin m m". @zutl

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
W”
._ Scalablllty
I As demands increase, the system should easily accept the addition
0f new resources l0 accommodate the increased demand
. Reacts gracefully to increased load
i Adding more resources may generate additional indirect load
on other resources if not careful
. Data compression 0r deduplication can cul down 0n slowge
and network resources used
0mm, sh"... Camp‘. e raw mm l! u Sllhvmnnu. Bllvln "a m". mu

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
‘4} i Dlstrlbuted F||e System
I Distributed ﬁle system (DFS) — a ﬁle system whose clients,
servers, and slorage devices are dispersed among the machines
of a distributed system
' Should appear to its clients as a conventional, cenlralized lile
system
I Key distinguishing lealure is management of dispersed storage
devices
OM",=y....nc.m.,m.sm.,.m was SIMMMM.mqnimm

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
r‘
i_ Distributed File System (Cont.)

I Service — software entity running on one or more machines and
providing a parlicular type oHunction to a priori unknown clients

I Server — service software running on a single machine

I client e prooess that can invoke a service using a sei of
operations that iorrns its client interiace

I A clienl inlerface for a ﬁle service is formed by a set of primitive ﬁle
operations (create, delete, read, write)

I Client inlerface 01a DFS should be transparent; i.e., not
distinguish between local and remote ﬁles

I Sorrielirries lower level inter-machine interface need for cross-
machine interaction

0min.s"...ic.m.,.m.e.ni.,.m im Siam-a mininieqﬁw.

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
Wk i Dlstrlbuted F||e System (Cont.)
I Two widely-used architectural models include client-server
model and cluster-based model
I Challenges include:
i Naming and transparency
' Remote ﬁle access
i Caching and cache consistency
W.n.=l..mc.m.,.wem.,.m M “imam-vi““minim”

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
r‘
“W Client-Server DFS Model
I Server(s) store both ﬁles and metadata on attached storage
i Clients contact the server to request files
' Sever responsible for authentication, checking ﬁle
permissions‘ and delivering the file
. Changes client makes to file must be propagated back to
the server
I Popular examples include NFS and OpenAFS
I Design suffers from single point oi lailure if server crashes
I Server presents a bottleneck (or all requests of data and
meladala
. Could pose problems with scalability and bandwidth
Wm.“ammmmwemdm i“, Slim-e “litmus-“1mm.

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
(lien!
5.]

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
t‘
W’
._ Cluster-based DFS Model
I Built to be more lault-tolerant and scalable than client-sewer DFS
I Examples include the Google File System (GFS) and Hadoop
Distributed File System (HDFS)
i Clients connected to master metadata server and several
data sewers that hold “chunks” (portions) of files
. Metadata server keeps mapping 0f which dala servers hold
chunks of which ﬁles
> As well as hierarchical mapping of directories and ﬁles
. File chunks replicated n times
em“,5,...memwmm l,“ memes-Ml“denim.

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
“3, ‘i Cluster-based DFS Model (Cont.)
:5‘ ® ﬁlﬁchunk
dataserver \
(Hem ﬁlechunk
El<—
a w ® 5
ﬁlecM
u
® dataerver

***************Ending Page***************


***************Beginning Page***************
***************page number:46**************
r‘
a}? fl
r_ Cluster-based DFS Model (Cont.)
I GFS design was inﬂuenced by following ohservalinns:
' Hardware component failures are the norm ratherthan the
exception and should be routinely expected.
~ Flies stored un such a system are very large‘
' Most ﬁles are changed by appending new data to the end
rather than overwriting existing data.
~ Redesignlng the applicatlons and me system API increases
syslem ﬂexibilily
P Requrres applications to be programmed specially with
new API
I Modularized suﬂware layer MapReduce can sit on top uf GFS to
carry out large-scale parallel oompulations while utilizing beneﬁts
0f GFS
. Hadoop framework also stackable and modularized
ere-amen"... eemetiemeem is“ sue-mm GIIvlnlndG-gmﬁzull

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
t‘
g ‘w; .
._ Naming and Transparency
I Naming — mapping between logical and physical objects
I Multilevel mapping e abstraction of a ﬁle that hides the details of
how and where on the disk the ﬁle is actually stored
I A transparent DFS hides the location where in the network the
ﬁle is stored
I For a file being replicated in several sites, the mapping relums a
set of the locations oi this ﬁle's replicas; both the existence of
multiple copies and their location are hidden
em",enmemmieimm r“, “em-e “Wide-iniew.

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
r‘
“$1; .
._ Naming Structures
I Location transparency — ﬁle name does not reveal the ﬁles
physical Siorage localiun
I Location independence — ﬁle name does not need to be
changed when ‘he ﬁle's physical storage location Changes
I In practice most DFSs use static, location-transparent mapping for
user-level names
° Some support ﬁle migration (e.g. OpenAFS)
0 Hadoop supports file migration bul wilhoui following POSIX
standards; hides information from clients
' Amazon $3 provides blocks 0f storage 0n demand via APIS,
placing storage dynamically and moving data as necessary
om",“amamumklmm l,“ Slim-a Gin-Mamiw.

***************Ending Page***************

***************Beginning Page***************
***************page number:49**************
r‘
._ Nammg Schemes
I Three approaches:

i Files named by combination of their host name and local
name; guarantees a unique system-wide name. This
naming scheme is neither location transparent nor location
independent.

. Attach remote directories t0 local directories, giving the
appearance ofa coherent directory tree: only prev|ously
mounted remote directories can be accessed transparently

i Single global name structures spans all files in the system.
It a sen/er is unavailable, some arbitrary set of directories
0n different machines also becomes unavailable

......... m... ......... ... E..... M. am... ..... ... .J-W

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
ﬁe
t ‘g’ .
._ Remote Flle Access
I Consider a user who requests access to a remote ﬁle. The server
Storing the file has been located by the naming scheme, and now
the actual data transler must take place.
I Remote-Service mechanism is one transfer approach.

0 A requests for accesses are delivered to the server, the
server machine performs the accesses, and their resulls are
lorwarded back to the user.

' One of the most common ways of implementing remote
service is the RF'C paradigm

0mm 5m... Cum,“ , w mm t! so Silhvuzhu. em m sq" mm

***************Ending Page***************

***************Beginning Page***************
***************page number:51**************
t‘
r_ Remote Flle Access (Cont.)

I Reduce network trafﬁc by retaining recently accessed disk blocks
in a cache, so that repealed accesses to the same iniormation
can be handled locally

' l1 needed data not already cached, a copy 0f data is brought
lrom the server to the user

' Accesses are performed on the cached copy

° Files identiﬁed with one master copy residing at the server
machine, but copies of (parts of) the file are scattered in
different caches

I Cache-consistency problem — keeplng the cached copies
consistent with the master ﬁle

' Could be called network virtual memory
om", 5"..." Emma we em l, it Slam-a W“ m W‘. W.

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
t‘
my )l . . .
t_ Cache Locat|on — D|sk vs. Mam Memory
I Advantages oi disk caches
i More reliable
' Cached data kept on disk are still there during recovery and
don't need to be fetched again
I Advantages oi main-memory caches:
i Permit workstations to he diskless
' Data can be accessed more quickly
Q Performance speedup in bigger memones
' Server caches (used to speed up disk l/O) are in main
memory regardless of where user caches are localed; using
main-memory caches on the user machine permits a single
caching mechanism for Servers and users
Wm.mummmmminmm tssz Slim-e altimnﬂqﬁw.

***************Ending Page***************

***************Beginning Page***************
***************page number:53**************
A
r ‘$1; .
._ Cache Update Polrcy
I Wrire-rhrengn - Write data \hrough to disk as soon as ihey are placed
on any cache
0 Reiiable, but poor performance
I Delayed-write (write-back) - modiﬁcaliuns are written to the cache and
then wnllen through to (he server later
0 Write accesses complete quickly: some data may be overwritten
before they are written back. and so need never be written ai ali
' Poor reiiabilily; unwnhen data will be lust whenever a user machine
crashes
' Variation i scan cache at regular intervals and ﬂush biocks that have
been modiﬁed since \he last scan
. Variaiiorr i write-on-closev writes data back to (he server when the
ﬁie ls closed
v Best for ﬁles that are open for long periods and frequenily
modified

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
“W”
._ Conslstency
I ls locally cached copy of the data consistent with the master
copy?
I Client-initiated approach
i Client initiates a validity check
. Server checks whether the local data are consistent with the
master copy
I Server-initiated approach
' Server records, for each client, the (parts of) ﬁles it caches
' When server detects a potential inconsistency, it must react
OM",smmmwmmm is“ WMMM“Mimi

***************Ending Page***************

***************Beginning Page***************
***************page number:55**************
A
“if I Conslstency (Cont.)
I In cluster-based DFS, cache-consistency issue more complicated
due l0 presence 0f meladala server and replicated ﬁle data Chunks
. HDFS allows append-only write operations (no random writes)
and a single file writer
. GFS allows random writes with concurrent wnlers
I Compllcales wrile consislency guarantees for er while
simplllylng it for HDFS
0mm=y....nc.m.,.m.im.,.m “is summum.mmimm

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
End of Chapter 19
—

***************Ending Page***************

