[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is a process?
--InteriorSeparator--
A program in execution.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are stored in the OS process table?
--InteriorSeparator--
(right) PID
(right) PPID
(wrong) File size
(wrong) CPU temperature
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of `getpid()`?
--InteriorSeparator--
To obtain the process ID of the calling process.
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the `exit()` function do?
--InteriorSeparator--
Terminates the calling process normally.
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the only way to create processes in UNIX/Linux?
--InteriorSeparator--
Using the `fork()` system call.
--InteriorSeparator--
easy
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the return value of `fork()` in the child process?
--InteriorSeparator--
(right) 0
(wrong) A positive integer
(wrong) -1
(wrong) The parent's PID
--InteriorSeparator--
easy
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens to a child process if the parent process terminates before it?
--InteriorSeparator--
It is adopted by the init process (PID 1).
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `wait()` system call?
--InteriorSeparator--
To suspend execution of the calling process until one of its child processes terminates or is stopped.
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens when a process terminates normally?
--InteriorSeparator--
(right) The process enters a finished state
(right) Opened files are closed
(wrong) All memory allocated to other processes is deallocated
(wrong) The process table entry is immediately deallocated
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a synchronization point in concurrent programming?
--InteriorSeparator--
A point from which two processes have simultaneous execution.
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the status value returned by `exit` truncated to?
--InteriorSeparator--
(right) `status & 0xFF`
(wrong) status
(wrong) 0
(wrong) 255
--InteriorSeparator--
hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if the `fork()` call fails?
--InteriorSeparator--
It returns -1 in the parent process, and no child process is created.
--InteriorSeparator--
medium
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the two ways a process can terminate?
--InteriorSeparator--
(right) Normal termination
(right) Abnormal termination
(wrong) Suspension
(wrong) Waiting
--InteriorSeparator--
easy
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the term "zombie" process refer to?
--InteriorSeparator--
A process that has terminated but its parent hasn't yet collected its exit status.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `abort()` function?
--InteriorSeparator--
To cause abnormal termination of a process by raising the SIGABRT signal.
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does EUID stand for?
--InteriorSeparator--
(right) Effective User ID
(wrong) Extended User ID
(wrong) Executable User ID
(wrong) Encrypted User ID
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does COW stand for in the context of Linux `fork()` implementation?
--InteriorSeparator--
Copy-on-Write.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which function allows launching UNIX commands from a C program?
--InteriorSeparator--
(right) system()
(wrong) exec()
(wrong) run()
(wrong) launch()
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the significance of `status & 0xFF` when retrieving the exit code of a child process?
--InteriorSeparator--
It retrieves the lower 8 bits of the status, which contain the exit code.
--InteriorSeparator--
hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If a process calls wait and has no children, what happens?
--InteriorSeparator--
(right) wait returns -1 and errno is set to ECHILD
(wrong) The process hangs indefinitely
(wrong) wait returns 0
(wrong) A new child process is created
--InteriorSeparator--
hard
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why isn't there a primitive to get the PID of a child process directly from the parent?
--InteriorSeparator--
A parent process can have multiple children.
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the `nanosleep` function do?
--InteriorSeparator--
(right) Suspends execution for a specified time with nanosecond precision.
(wrong) Terminates the process after a specified number of nanoseconds.
(wrong) Executes a function in a separate thread after a specified number of nanoseconds.
(wrong) Measures the elapsed time with nanosecond precision.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the role of the `init` process (PID 1)?
--InteriorSeparator--
(right) It is the root of the process tree.
(right) It adopts orphaned processes.
(wrong) It is created by the fork() system call.
(wrong) It is responsible for memory management.
--InteriorSeparator--
medium
--InteriorSeparator--
12, 18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the 'Token Ring' pattern used for in concurrent programming?
--InteriorSeparator--
Synchronizing the execution of multiple processes in a specific order.
--InteriorSeparator--
medium
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What information is NOT included in the operating system's process table?
--InteriorSeparator--
(wrong) PID
(wrong) UID
(right) Memory Usage of other processes
(wrong) Process state
--InteriorSeparator--
medium
--InteriorSeparator--
4-5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary benefit of using copy-on-write (COW) in the `fork()` system call?
--InteriorSeparator--
It optimizes the creation time of the child process, especially when it immediately calls an `exec` function.
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the "Supervisor/Workers" or "Master/Slaves" pattern suitable for?
--InteriorSeparator--
(right) Parallelizing a complex problem into independent sub-problems.
(wrong) Ensuring only one process can access a shared resource at a time.
(wrong) Creating a deadlock-free system.
(right) Aggregating partial results to obtain the final result.
--InteriorSeparator--
hard
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When the wait function returns because a child process was stopped by a signal, what is stored in the stat_loc pointed to by the wait function?
--InteriorSeparator--
(right) The signal number in the low byte of the integer.
(wrong) The high byte of the integer contains the exit code.
(wrong) 0
(wrong) The PID of the process
--InteriorSeparator--
hard
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the 'Supervisor/Workers' pattern, what happens after the worker processes solve their sub-problems?
--InteriorSeparator--
The supervisor aggregates the partial results to obtain the final result.
--InteriorSeparator--
medium
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the key characteristic of the fork primitive as a point of synchronization?
--InteriorSeparator--
(right) The processes continue their execution simultaneously.
(wrong) The processes wait on each other.
(right) It is a static concept predetermined in the algorithm.
(wrong) It causes processes to terminate.
--InteriorSeparator--
hard
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Regarding primitive `waitpid`, what does the `WNOHANG` option do?
--InteriorSeparator--
(right) It tests without waiting if a child already terminated.
(wrong) Forces waiting on a specific child process.
(wrong) Prevents child processes from terminating.
(wrong) It causes abnormal termination of child process.
--InteriorSeparator--
hard
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Assuming the setuid bit is set, and the program is executed by a different user, what happens to the effective user ID?
--InteriorSeparator--
(right) The effective user ID of the process becomes the owner of the file, not the user who executed it.
(wrong) The effective user ID of the process remains the user who executed it.
(wrong) Program won't execute.
(wrong) Setuid bit is reset.
--InteriorSeparator--
hard
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the difference between `getuid()` and `geteuid()`?
--InteriorSeparator--
(right) `getuid()` returns the real user ID, `geteuid()` returns the effective user ID.
(wrong) They return same value.
(wrong) `getuid()` returns the effective user ID, `geteuid()` returns the real user ID.
(wrong) `getuid()` returns groupID, `geteuid()` returns the real user ID.
--InteriorSeparator--
hard
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Explain the implications of the statement: "Immediately after a fork call, the child process will have the same values of variables and the same open files as the parent."
--InteriorSeparator--
Both processes initially share the same memory space, but subsequent modifications are independent.
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why might the actual pause time in `sleep` or `usleep` exceed the specified duration?
--InteriorSeparator--
The actual pause time depends on the precision of the system clock and the hardware support available.
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.2088665945627827}]