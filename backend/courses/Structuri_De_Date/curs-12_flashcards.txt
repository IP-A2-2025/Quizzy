[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary advantage of using a digital tree for storing a dictionary?
--InteriorSeparator--
Reduced memory space due to shared common prefixes.
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following is/are a key characteristic(s) of digital trees?
--InteriorSeparator--
(right) They are based on the digital representation of elements.
(wrong) They are limited to storing numerical data.
(right) They are k-ary trees, where k is the number of digits or letters in the alphabet.
(wrong) They always have balanced structures.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a digital tree, what do frontier nodes store?
--InteriorSeparator--
The information associated with the keys.
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What determines the height of a digital tree that stores a collection of words?
--InteriorSeparator--
The length of the longest word in the collection.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the characteristics of a digital tree that stores a collection of n words from an alphabet of size k?
--InteriorSeparator--
(right) Any internal node has at most k children.
(wrong) The tree has k external nodes.
(right) The tree has n external nodes.
(wrong) All internal nodes have exactly k children.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity for searching for an element in a digital tree in the worst-case scenario?
--InteriorSeparator--
O(m), where m is the length of the element being searched for.
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
During the insertion of a word into a digital tree, what happens when a node is missing for a particular digit/letter of the word?
--InteriorSeparator--
A new node is added to the tree.
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
During the deletion of an element from a digital tree, what condition must be met for a node to be removed?
--InteriorSeparator--
All of the node's successors must be nil.
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What data structure is used during the deletion process in digital trees, and what is its purpose?
--InteriorSeparator--
(wrong) Queue; to store the nodes in breadth-first order.
(right) Stack; to store the path traversed during the deletion process.
(wrong) Linked List; to link the deleted nodes for garbage collection.
(wrong) Hash table; to quickly identify nodes for deletion.
--InteriorSeparator--
hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What distinguishes digital trees from other tree-based data structures?
--InteriorSeparator--
Digital trees use the digital representation of elements to determine the tree's structure.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does the space complexity of a digital tree change when storing many elements with common prefixes?
--InteriorSeparator--
The space complexity is reduced due to the shared prefixes.
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the context of digital tree insertion, what happens if the word to be inserted is a prefix of an existing word in the tree?
--InteriorSeparator--
(right) The insertion process will still complete, creating a new branch for the existing word.
(wrong) An error will be thrown because duplicate prefixes are not allowed.
(wrong) The existing word is updated to match the new word.
(wrong) The new word is discarded.
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the potential drawbacks of using digital trees compared to other data structures?
--InteriorSeparator--
(wrong) Digital trees are always more memory-intensive
(right) The height of the tree can be large if there are words with differing lengths.
(wrong) Insertion and deletion operations always have a time complexity of O(1).
(right) Can be inefficient if there are few common prefixes among the stored words.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Explain the purpose of the `succ` array in the node structure of a digital tree.
--InteriorSeparator--
It stores pointers to the node's children, indexed by the digits or letters of the alphabet.
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When considering memory usage, what is the most critical factor for digital trees?
--InteriorSeparator--
(wrong) The number of nodes in the tree, since each node takes a constant amount of memory.
(right) The size of the alphabet (k), as it determines the size of the child pointers array in each node.
(right) The length of the strings being stored, as it influences the height of the tree.
(wrong) The programming language used to implement the tree.
--InteriorSeparator--
hard
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
During deletion, why is it important to traverse the path backward (using a stack)?
--InteriorSeparator--
To efficiently remove nodes that no longer have any successors after the key is deleted.
--InteriorSeparator--
hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the main operations that can be performed on a digital tree?
--InteriorSeparator--
(right) Insertion
(right) Deletion
(wrong) Balancing
(wrong) Compression
--InteriorSeparator--
easy
--InteriorSeparator--
6, 7, 8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does 'k' represent in the context of k-ary digital trees?
--InteriorSeparator--
The number of digits or letters in the alphabet.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the role of the parameter 'm' in the search function for a digital tree?
--InteriorSeparator--
It represents the length of the element being searched for.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the search function `cauta(a, m, t)`, what does 'p' represent?
--InteriorSeparator--
(wrong) The index of the current character in the search string.
(right) The current node being examined during the search.
(wrong) The total number of nodes visited during the search.
(wrong) The search string itself.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the return value of the `cauta` function when the element is not found?
--InteriorSeparator--
NULL
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following scenarios would benefit most from using a digital tree?
--InteriorSeparator--
(wrong) Storing a small set of random integers.
(right) Storing a large dictionary of words with many shared prefixes.
(wrong) Storing floating-point numbers with no common patterns.
(wrong) Storing unique identifiers that are randomly generated.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the initial value of `i` in the `cauta` function?
--InteriorSeparator--
0
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When inserting a new element in a digital tree, what happens if a node `p` already has a child for the corresponding digit `a[i]`?
--InteriorSeparator--
(right) The algorithm proceeds to that child node (p -> succ[a[i]]).
(wrong) The algorithm replaces the existing child with a new node.
(wrong) The algorithm throws an error indicating a duplicate key.
(wrong) The algorithm stops, indicating that the element is already present.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
During deletion, what is the purpose of checking `p != NULL AND i < m` in the search function?
--InteriorSeparator--
To ensure that the search stays within the bounds of the tree and the search string.
--InteriorSeparator--
hard
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which data structure is suitable for information retrieval and benefits from structural properties of character strings?
--InteriorSeparator--
(right) Digital Trees
(wrong) Linked Lists
(wrong) Hash Tables
(wrong) Binary Search Trees
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In digital trees, what happens if all successors of a node are nil during deletion?
--InteriorSeparator--
The node is eliminated.
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Considering the trade-offs, when would using a hash table be more appropriate than a digital tree?
--InteriorSeparator--
(wrong) When storing a large set of words with many shared prefixes.
(right) When insertion and deletion speed is crucial and memory usage is less of a concern, with minimal shared prefixes.
(wrong) When requiring ordered traversal of elements.
(wrong) When memory usage must be absolutely minimized.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the role of the variable `i` in the `cauta` function?
--InteriorSeparator--
Index of the current character being processed in the input string `a`.
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How does the structure of a digital tree reflect the data it stores?
--InteriorSeparator--
(right) The path from the root to a node represents a prefix of the stored data.
(wrong) The order of insertion determines the structure, similar to a binary search tree.
(wrong) The structure is randomly generated to ensure balanced distribution.
(right) Common prefixes are represented by shared paths in the tree.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a prefix common in the context of digital tree deletion?
--InteriorSeparator--
The part of the key that is shared with other elements in the tree.
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does `p -> succ[a[i]]` represent in the `cauta` function?
--InteriorSeparator--
(wrong) The value stored at index `i` in array `a`.
(right) The child node of `p` corresponding to the digit `a[i]`.
(wrong) The index of `p` in array `a`.
(wrong) The successor of node `p` in the general tree structure.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does `|S| = n` mean in the context of digital trees?
--InteriorSeparator--
The cardinality (number of elements) of set S is n.
--InteriorSeparator--
easy
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which statement is true about the height of the digital tree?
--InteriorSeparator--
(wrong) It is independent of the length of the input words.
(wrong) It is always equal to log base k of n, where k is the alphabet size and n is the number of elements.
(wrong) It is always equal to the number of elements stored in the tree.
(right) It is equal to the length of the largest element in the set.
--InteriorSeparator--
hard
--InteriorSeparator--
5
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.2666503626821554}]