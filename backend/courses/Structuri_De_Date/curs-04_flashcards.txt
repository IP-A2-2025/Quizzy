[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the 'listaVida()' operation in the context of the abstract data type LLin?
--InteriorSeparator--
It creates a list with zero elements.
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following operations are typically associated with the abstract data type LLin?
--InteriorSeparator--
(right) insereaza()
(right) elimina()
(wrong) sortare()
(wrong) cautare()
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In LLin, what happens if you call elimina(L, k) where k is not a valid index?
--InteriorSeparator--
An error occurs.
--InteriorSeparator--
easy
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following operations can be used to process each element of a LLin list?
--InteriorSeparator--
(right) parcurge()
(wrong) alKlea()
(wrong) elimina()
(wrong) lung()
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the `lung()` operation return for a LLin list?
--InteriorSeparator--
The number of elements in the list.
--InteriorSeparator--
easy
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When implementing LLin with arrays, what are the key components of the data structure?
--InteriorSeparator--
(right) A tab array for storing elements.
(right) An 'ultim' field to track the position of the last element.
(wrong) A 'prim' field to track the position of the first element.
(wrong) A 'lung' field to store the length of the array
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the `insereaza()` operation in an array-based implementation of LLin?
--InteriorSeparator--
O(n)
--InteriorSeparator--
medium
--InteriorSeparator--
23
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In linked list implementation of LLin, what are the two fields of the structure L?
--InteriorSeparator--
(right) L.prim
(right) L.ultim
(wrong) L.tab
(wrong) L.varf
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the exceptions that can occur when using `insereaza()` on a linked list implementation of LLin?
--InteriorSeparator--
Lista vida, k < 0, k > n.
--InteriorSeparator--
hard
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the context of a LLin implemented with linked lists, what actions are taken in the `insereaza` function for a general case?
--InteriorSeparator--
(right) Parcurge elementele de pe pozitiile 0, 1, ..., k-1.
(right) Insereaza un nou element dupa pozitia k-1.
(wrong) Inlocuieste elementul de pe pozitia k cu noul element.
(wrong) Sterge elementul de pe pozitia k-1.
--InteriorSeparator--
hard
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of LLin implemented using linked lists, what should the `insereaza()` operation do if the list is empty?
--InteriorSeparator--
Creates the new node, stores the information and sets both `L.prim` and `L.ultim` to point to the new node.
--InteriorSeparator--
hard
--InteriorSeparator--
33
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When implementing LLin with linked lists, what are the possible cases for the 'insereaza()' operation?
--InteriorSeparator--
(right) General Case
(right) Inserarea la inceputul listei
(right) Lista vida
(wrong) Inserarea la sfarsitul listei
--InteriorSeparator--
hard
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When using array implementation of a LLin, what happens if the array is already full before inserting a new element?
--InteriorSeparator--
A "eroare-spatiu insuficient" exception is thrown.
--InteriorSeparator--
hard
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the key characteristics of a LLinOrd (ordered linear list)?
--InteriorSeparator--
(right) Elements are stored in a specific order.
(right) The order is defined by a comparison relation between elements.
(wrong) Duplicates elements are now allowed.
(wrong) Elements are stored in a random order.
--InteriorSeparator--
medium
--InteriorSeparator--
48
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In a LLinOrd, what condition must be met when inserting a new element 'e' into the list?
--InteriorSeparator--
ek-1 <= e <= ek (e_1 = -infinit, e_n+1 = +infinit)
--InteriorSeparator--
hard
--InteriorSeparator--
48
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the time complexity of searching for an element in LLinOrd, when implemented with arrays, using the `poz` function provided?
--InteriorSeparator--
(right) O(log2 n)
(wrong) O(n)
(wrong) O(1)
(wrong) O(n log n)
--InteriorSeparator--
hard
--InteriorSeparator--
50
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of searching for an element in LLinOrd, when implemented with linked lists?
--InteriorSeparator--
O(n)
--InteriorSeparator--
hard
--InteriorSeparator--
51
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following represents a LIFO data structure?
--InteriorSeparator--
(right) Stiva (Stack)
(wrong) Coada (Queue)
(wrong) LLin
(wrong) LLinOrd
--InteriorSeparator--
easy
--InteriorSeparator--
55
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the core operations associated with the abstract data type Stiva (Stack)?
--InteriorSeparator--
push(), pop(), top(), stivaVida(), esteVida()
--InteriorSeparator--
medium
--InteriorSeparator--
56
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are considered direct applications of Stiva (Stack)?
--InteriorSeparator--
(right) History of visited web pages in a browser.
(right) "Undo" functionality in a text editor.
(wrong) Print queue management
(wrong) CPU Scheduling
--InteriorSeparator--
medium
--InteriorSeparator--
54
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of Stiva (Stack) implementation, what does the `top()` operation do?
--InteriorSeparator--
Returns the last element inserted into the stack (the one with the smallest age).
--InteriorSeparator--
medium
--InteriorSeparator--
56
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If you implement Stiva using LLin, which LLin operations can be used for push and pop?
--InteriorSeparator--
(right) insereaza(S, 0, e)
(right) elimina(S, 0)
(wrong) insereaza(S, lung(S), e)
(wrong) elimina(S, lung(S)-1)
--InteriorSeparator--
hard
--InteriorSeparator--
57
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
When implementing Stiva with arrays, what does the `push` operation do if the stack is full?
--InteriorSeparator--
Throws an "eroare" exception.
--InteriorSeparator--
hard
--InteriorSeparator--
58
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When implementing a stack using linked lists, what does the pop operation do?
--InteriorSeparator--
(right) Throws an error if the stack is null
(right) Sets S to S->succ
(wrong) Sets S->succ to null
(wrong) Moves the last element to the top of the stack
--InteriorSeparator--
hard
--InteriorSeparator--
60
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the core operations associated with the abstract data type Coada (Queue)?
--InteriorSeparator--
coadaVida(), esteVida(), insereaza(), elimina(), citeste()
--InteriorSeparator--
medium
--InteriorSeparator--
65
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following represents a FIFO data structure?
--InteriorSeparator--
(right) Coada (Queue)
(wrong) Stiva (Stack)
(wrong) LLin
(wrong) LLinOrd
--InteriorSeparator--
easy
--InteriorSeparator--
64
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of Coada (Queue) implementation, what does the `citeste()` operation do?
--InteriorSeparator--
Returns the first element inserted into the queue (the one with the greatest age).
--InteriorSeparator--
medium
--InteriorSeparator--
65
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are considered direct applications of Coada (Queue)?
--InteriorSeparator--
(right) Waiting lists/threads.
(right) Access to shared resources.
(wrong) Managing function calls.
(wrong) Implementing undo functionality.
--InteriorSeparator--
medium
--InteriorSeparator--
63
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If you implement Coada using LLin, which LLin operations can be used for 'insereaza()' and 'elimina()'?
--InteriorSeparator--
insereaza(C, lung(C), e) and elimina(C, 0)
--InteriorSeparator--
hard
--InteriorSeparator--
66
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When implementing a queue using linked lists, what does the insert operation do?
--InteriorSeparator--
(right) Create a new node
(right) Set C.ultim->succ to point to the new node
(wrong) Set C.prim->succ to point to the new node
(wrong) Shifts existing element
--InteriorSeparator--
hard
--InteriorSeparator--
71
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the notation "a b +" an example of?
--InteriorSeparator--
Postfix notation.
--InteriorSeparator--
easy
--InteriorSeparator--
73
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In infix notation of arithmetic expressions, what are some of the most important rules?
--InteriorSeparator--
(right) Rules of precedence
(right) Rules of association
(wrong) Rules of length
(wrong) Rules of complexity
--InteriorSeparator--
medium
--InteriorSeparator--
73
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the algorithm for converting infix to postfix notation, what data structure is typically used?
--InteriorSeparator--
A stack.
--InteriorSeparator--
medium
--InteriorSeparator--
74
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What data structures are used for the `convInfix2Postfix` procedure?
--InteriorSeparator--
(right) Cozi
(right) Stiva
(wrong) Liste
(wrong) LLinOrd
--InteriorSeparator--
hard
--InteriorSeparator--
92
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the algorithm for evaluating postfix expressions, what data structure is used?
--InteriorSeparator--
A stack.
--InteriorSeparator--
medium
--InteriorSeparator--
93
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the `valPostfix(postfix)` function do?
--InteriorSeparator--
(right) Evaluates an arithmetic expression in postfix notation.
(wrong) Converts an expression from infix to postfix notation.
(wrong) Checks if an arithmetic expression is valid.
(wrong) Converts an expression from postfix to infix notation
--InteriorSeparator--
hard
--InteriorSeparator--
111
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.1760211415933027}]