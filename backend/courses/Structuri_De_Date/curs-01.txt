***************Beginning Page***************
***************page number:1**************
SD 2021/2022
<E|> <ﬁ>4IE>4IE> IE OQO

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Conjui n ut
Algoritmi. lntroducere
El r51 ' _= IE J) Q0
Cm 1 5D 2021/2022 2/ 55

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Exemplu
> o secventé de numere: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34,
El r51 i E :5 QQG
CHM 5D 2021/2022 3/55

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Exemplu
> o secvenfa’ de numere: O, 1, 1, 2, 3, 5, 8, 13, 21, 34,
> secventa Fibonacci
O, if n : 0
definitia matematicé': Fn : 1, if n : 1
Fnil —|— Fnig, if I7 > 1
Curs 1 SD 2021/2022 3/55

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Exemplu
> o secventé’ de numere: O, 1, 1, 2, 3, 5, 8, 13, 21, 34,
> secventa Fibonacci
O, ifn:0
definitia matematicé’: Fn : 1, if n I 1
Fnil —|— Fnig, if I7 > 1
> implemetare C
int F( int n) {
if (n I 0) return O;
else if (n I 1) return 1;
else
return F(n—1)+ F(n—2);
}
Curs 1 SD 2021/2022 3/55

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Algoritmi: etimologie
i HIUBWK'I'IQL'IQ‘ i
‘ ‘If > 14x I 3' ‘a’ . .
‘ ‘#2:! ‘ 'H P04 -
' 5% "<11 1+3 ;
’ 12 0 - ' ’
. . n91 uuxauuen ;
: {5* Aanhmeamu ¢
Muhammad ibn Musa al-Khwarizmi - matematician persan; a scris prima
carte de algebré (cca. 830).
V metode pentru adunarea, Tnmultirea 5i Tmpértirea numerelor.
El r51 i E :5 QQQ
Cursl SD2021/2022 4/55

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Algoritmi: definitie

> Nu exista o definitie standard pentru notiunea de algoritm.

P Cambridge Dictionary:
“A set of mathematical instructions that must be fol/owed in a fixed
order, and that, especially if given to a computer, will help to
calculate an answer to a mathematical problem.”

V Schneider and Gersting 1995 (Invitation for Computer Science):
“An algorithm is a well-ordered collection of unambiguous and
effectively computable operations that when executed produces a
result and halts in a finite amount of time. ”

> Gersting and Schneider 2012 (Invitation for Computer Science, 6nd
edition):
“An algorithm is ordered sequence of instructions that is guaranteed
to solve a specific problem. ”

Cm 1 SD 2021/2022 5/ 55

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Algoritmi: definitie
> Wikipedia:
“In mathematics and computer science, an algorithm is a step-by-step
procedure for calculations. Algorithms are used for calculation, data
processing, and automated reasoning. An algorithm is an effective
method expressed as a finite list of well-defined instructions for
calculating a function. Starting from an initial state and initial input
(perhaps empty), the instructions describe a computation that, when
executed, proceeds through a finite number of well-defined successive
states, eventually producing “output” and terminating at a final
ending state. The transition from one state to the next is not
necessarily deterministic; some algorithms, known as randomized
algorithms, incorporate random input. ”
Curs 1 SD 2021/2022 6/55

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Algoritmi: model de calcul, problema rezolvata’
Toate definitiile au ceva Tn comun:
V dateIe/informatia $i procesarea acestora/acesteia Tn pa$i. Acestea
sunt descrise Tn general de un model de calcul.
Un model de calcul este format din:
P memorie - modul de reprezentare a datelor.
> instructiuni
sintaxé - descrie sintactic pa$ii de procesare;
semantica“ - descrie pa$ii de procesare realizati de executia unei
instructiuni; Tn general este data de o relatie de tranzitie peste
configuratii (sistem tranzitional).
> un algoritm trebuie 55 produca un rezultat, adica un algoritm trebuie
sa rezolve o problema.
O problema’ este Tn general reprezentata de o pereche
(input, output), uncle input reprezinta descrierea datelor de intrare
(instanta) iar output descrierea datelor de ie$ire (rezultatul).
Cm 1 SD 2021/2022 7/55

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Algoritmi $i Structuri de date
P Algoritm: metodﬁ de rezolvare a unei probleme.
> Structuré de date: metodé de a péstra/reprezenta informatia.
CHM SD2021/2022 8/55

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Algoritmi si Structuri de date

P Algoritm: metoda de rezolvare a unei probleme.

> Structura de date: metoda de a pastra/reprezenta informatia.

Algorithms + Data Structures : Programs. — Niklaus Wirth
I will, in fact, claim that the difference between a bad programmer and a
good one is Whether he considers his code or his data structures more
important. Bad programmers worry about the code. Good programmers
worry about data structures and their relationships. — Linus Torvalds
Cm 1 SD 2021/2022 8/ 55

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Algoritmi: proprietéti

> input (intrare) — zero sau mai multe entitﬁti de date furnizate din
exterior.

V output (ie$ire) — algoritmul produce informatie.

> terminare — pentru orice intrare, algoritmul executé un numﬁr finit
de pasi.

V corectitudine — algoritmul se terminé’ 5i produce ie$irea corecté
pentru orice intrare; spunem c5 algoritmul rezolvﬁ problema daté.

Cm 1 SD2021/2022 9/55

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Algoritmi: eficienjcé
> Un algoritm trebuie 55 foloseasci un volum rezonabil de resurse de
calcul: [spatiu de] memorie 5i timp [de executie].

> Avem nevoie de algoritmi eficienti pentru:
F a salva timpi de a5teptare, spatiu de depozitare, consum energie, etc.;
P scalabilitate: putem rezolva probleme de dimensiuni mari cu acelea$i

resurse (CPU, memorie, disc, etc);
F solutii optimizate.
Cm 1 5D 2021/2022 10/55

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Algoritmi: eflcienjca
60 f
— Ruby J‘
— Scheme /
— Python 5
A _ C °
w 40
E — Java ‘
3
§ — C-gcc /
‘g ‘
E 20 ,
0 ' ‘-
20 25 3O 35 4O 45 50
n
Figura: Executia algoritmului recursiv F (Fibonacci).
Observatie: Comportamentul este diferit Tn functie de tipul implementérii; totu$i diferentele nu
sunt atét de substantiale :> Problema e algoritmul! (complexitate exponentialé)

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Proiectarea algoritmilor
Rezolvarea algoritmicé a problemelor presupune urmétoarele etape:
V definirea problemei
V abstractizeazé detaliile irelevante;
V identificarea clasei din care face parte problema 5i a unui algoritm de
constructie a solutiei;
V analiza corectitudinii $i a eﬁcientei algoritmului;
V implementarea algoritmului;
V (optimizare 5i generalizare).
Curs 1 SD 2021/2022 12/55

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Descrierea algoritmilor
> informal: limbaj natural.
V formal:

V notatie matematica (masini Turing, lambda-calcul (Church), functii
recursive, etc.);

F limbaje de programare: de nivel inalt, de nivel jos, declarative (e.g.,
programare functionala, programare logica). Acesta poate fi si un
model informal daca nu exista o semnatica formalé pentru Iimbaj.

V semiformal:

V pseudo-cod: combina notatia formala a Iimbajelor de programare cu
limbajul natural;

F notatie grafica: scheme logice, automate (state machines), diagrame
de activitati.

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Continut
Limbaj algoritmic
El r51 ' _= :E @QG
Cm 1 SDZO21/2022 14/55

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Limbaj algoritmic
Avem nevoie de un limbaj care este
V simplu: pentru a ﬁ u$or de Tnteles;
> expresiv: pentru a descrie algoritmi;
P abstract, Tn descrierea algoritmului accentul cade pe géndirea
algoritmicé' 5i nu pe detaliile de implementare;
> un model de calcul adecvat pentru analiza complexitéjcii algoritmilor,
Tn special complexitatea timp.
CUM 9920210022 15/55

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Variabilé
> Nume
> Adresé
> Atribute (tip de date asociat valorilor memorate)
- adr
> lnstantﬁ a variabilei
cl 51 i E :2 @va
Cm 1 SD2021/2022 16/55

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Modelul de calcul
V Memoria: structuré liniarﬁ de celule
> variabile
---
a r
o ®
> pointeri
-—-
adr
o ®
dz» E
U 51 i E :2 0&0
Cursl SD2021/2022 17/55

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Continut
Algoritmi. Introducere
Limbaj algoritmic
Tipuri de date
Tablouri 5i structuri
E1 ﬁ ' _= :E ‘)‘KO
Cursl 5D 2021/2022 18/55

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Tip de date
> Domeniu (colectia de obiecte)
> Operatii
> Categorii de tipuri de date:
> Tipuri de date elementare
P Tipuri de date structurate de nivel jos
P operatiile la nivel de componenta
V Tipuri de date de nivel Tnalt
> operatiile implementate de algoritmi utilizator

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Tipuri de date elementare
> Numere Tntregi
P valori: numere Tntregi
P operatii: +, -,
> Numere reale
P valori: numere rationale
F operatii: +, -,
> Valori booleene
V valori: true, false
> operatii: and, or, not, xor

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Tipuri de date elementare

> Caractere
F valori: 'a', 'b',
P operatii: —

> Pointeri
> valori: adrese de variabile apartinénd altui tip, valoarea NULL
F operatii: —
P referire indirecta: *p

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Tipuri de date elementare
> Operatori pentru numere Tntregi:
P aritmetici: a+b, a-b, a*b, a/b, a%b
> relationali: a::b, a!:b, a<b, a<:b, a>b, a>:b
operatie . t|mp(operat|e)- .
0(1) O(max(/oga,/ogb))
Curs 1 SD 2021/2022 22/55

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Instructiuni
> Expresii
> Compuse (bloc): {instructiuni}
> Conditionale: if if-else
V Iterative: while repeat for
> Tntreruperea secventei: return
Cursl SD2021/2022 23/55

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Instrucjuunl
> Atribuirea
P Sintaxa: < variabi/a ><—< expresie >
> Sematica:
P se evalueazi < expresie > 5i rezultatul obtinut se memoreazé Tn locatia
desemnaté de < variabila >
P este singura instructiune cu ajutorul céreia se poate modiﬁca continutul
memoriei
F cost uniform 0(1), cost logaritmic O(/og < expresie >)

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Atribuirea
Exemplu:
> lnainte de atribuire:
o int
> Dupé' atribuirea u <- —v * u:
o ¢
o int
cl 51 i E :2 0&0
Cursl 9920210022 25/55

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Instrucjuunl
V Atribuirea Tn cazul pointerilor
P Sintaxa:
>i< < variabi/aipointer ><—< expresie >
> Sematica:
P se evalueazé < expresie > 5i rezultatul obtinut se memoreazé Tn locatia
de Ia adresa stocatﬁ Tn < variabilaipointer >
V Exemplu: *p <— 10
adr
m
V \ /

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Instrucjuunl
> if
P Sintaxa:
if < expresie > then
< secventa — instructiunil >
else
< secventa — instructiunig >
if < expresie > then
< secventa — instructiunil >
Observatie: < expresie > este 0 expresie cu rezultat boolean dupé
evaluare
P Semantica:

P Se evalueazé < expresie >. Dacé rezultatul este true, atunci se executé
< secventa — instructiunil > iar dacé rezultatul este false, atunci se
executé < secventa i instructiunig > dupi care instructiunea if se
termini

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Instructiunea if
P cost uniform 0(1), cost logaritmic 0(1)
V Exemplu: calcululul minimului a douﬁ numere:
if a < b then
min <— a
else
min <— b
sau
min <- a
if b < a then
min <— b
Cursl SD2021/2022 28/55

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Instrucjuunl
> while
> Sintaxa:
while < expresie > do
< secventa — instructiuni >
P Semantica:
P Se evalueazé < expresie >
> Dacé rezultatul este true atunci se executé < secventa — instruct/uni >
dupé care se reia procesul Tncepénd cu pasul 1. Daci rezultatul este
false atunci executia instructiunii while se terminé.

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Exemplu while
V cel mai mic k astfel Tncﬁt 7k >2 n pentru un n dat

k + 0

sapteJaik <— 1

while sapteJaLk < n do
k <— k + l
sapteJaik <— sapte2/a2k >|< 7

Curs 1 SD 2021/2022 30/55

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Instructiuni
> repeat
> Sintaxa:
repeat
< secventa — instruct/uni >
until < expresie >;
P Semantica:
lnstructiunea:
repeat
S
until e;
simuleazé' executia urmétorului program:
5
while not e do
S

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Exemplu repeat
> cel mai mic k astfel Tncét 7k >: n pentru un n dat

k <— 0

sapteJaik <— 1

repeat
k e k + 1
sapte2/a2k H sapte,la,k >x< 7

until sapteilaik >: n;

Curs 1 SD 2021/2022 32/55

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Instructiuni
> for
V Sintaxa:

for < variabi/a ><—< expresiel > to < expresieg > do
< secventa i instructiuni >

sau

for < variabi/a ><—< expresiel > downto < expresieg > do
< secventa i instructiuni >

Observatie: < variabi/a > este 0 variabilé’ de tip Tntreg, iar

< expresiel > 5i < expresieg > sunt expresii cu rezultat Tntreg dupé

evaluare

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Instructiuni
> for
> Semantica:
for i <— e1 to e2 do
S
este echivalentﬁ cu:
i <— e1
temp <— e2
while i <= temp do
S
i <— i + 1
El 5' i E :5 QQCV

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Instructiuni
> for
P Semantica:
for i <— e1 downto e2 do
S
este echivalentﬁ cu:
i <— e1
temp <— e2
while i >= temp do
S
i <— i — 1
El 5' i E :5 0Q‘?

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Subprograme
V Limbajul este modular: un program conﬁne un numér de module
> Un modul Tn limbajul prezentat este identificat cu un subprogram
V Subprograme:
V Proceduri
P Functii
CHM SD2021/2022 36/55

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Su bprogra me
> Proceduri:
> Sintaxa:
Procedure nume (lista-parametri-forma/i)
begin
secventa-instructiuni
end
> Apel: NUME(lista-parametri-actuali)
P interfajca Tntre 0 proceduré 5i modulul care 0 apeleazé se realizeazﬁ doar
prin intermediul parametrilor $i a variabilelor globale

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Proceduri
> Exemplu:

Procedure SWAP (x,y)

begin
aux <— x
X <— y
y e aux

end

Apel:

SWAP(a, b)

SWAP(b, c)

Curs 1 SD 2021/2022 38/55

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Subprograme
> Functii:
> Sintaxa:
Function nume (lista-parametri-forma/i)
begin
secventa-instructiuni
end
secventa-instructiuni conﬁne mﬁcar 0 instructiune return < eXpr >
V Apel: NU|\/|E(|ista-parametri-actuali)
utilizat Tntr-o expresie: valoarea Tntoarsﬁ de functie este cea objdnuté
prin evaluarea < expr >

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Functii
V Exemplu:
Function max3(x,y,z)
begin
temp <— x
if y > temp then
temp <— y
if z > temp then
temp <- z
return temp
end
Apel:
max3(a, b, c)
2*max3(a, b, c) > 5
Curs 1 SD 2021/2022 40/55

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Continut
Tablouri 5i structuri
El 5' ' _= IE @QG
Cm 1 SDZO21/2022 41/55

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Tablouri
V Ansamblu omogen de variabile numite componentele tabloului
V Toate componentele apartin aceluia$i tip
V Componentele sunt identificate cu ajutorul indicilor
V Tablourile sunt utilizate pentru a reprezenta multimi, secvente
(ordinea elementelor este importanté’), matrici
V Tablourile pot fi:
V unidimensionale (1-dimensi0nale)
V bidimensionale (2-dimensionale)
Cm 1 9920210022 42/55

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Tablouri unidimensionale
cl 51 2 E :2 QQG
Curs 1 SD 2021/2022 43/55

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Tablouri unidimensionale
> Memoria este 0 secventé contigué de locatii
> Ordinea de memorare — ordinea indicilor
> Operatiile se realizeazi prin intermediul componentelor
Exemple:
fori<—0ton—1do
a[i] + 0
fori<—0ton—1d0
c[i] <- a[i] + b[i]
Cm 1 9920210022 44/55

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Tablouri
Costul operatiilor:
operatie It|mp(operat|e) . .
0(1) 0(i + 1029,)
0(1) O(i + logv)
unde a este un tablou de dimensiune n, cu valorile a[O], ..., a[n — 1]
Curs 1 SD 2021/2022 45/55

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
Tablouri bidimensionale
W IIIIII

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Tablouri bidimensionale
W III-II
‘o
‘@
‘o

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
Tablouri bidimensionale
Curs 1 SD 2021/2022 46/55

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Tablouri bidimensionale
V Memorie contigué de mxn locatii
V Componentele sunt identiﬁcate cu ajutorul a 2 indici:
P primul indice are valori {0, 1, . . . , m — 1}
V al doilea indice are valori {0, 1, . . . , n — 1}
> variabilele componente :
a[0,0],a[0,1],. . . ,a[0, n i 1],a[1,0],a[1,1],. . . ,a[1, n i 1], . . . , a[m i
1,0],a[m— 1,1],...,a[m— 1,n— 1]
> Ordinea de memorare a componentelor este daté de ordinea
lexicograﬁcﬁ a indicilor
Curs 1 SD 2021/2022 47/55

***************Ending Page***************


***************Beginning Page***************
***************page number:53**************
Tablouri bidimensionale
V Cu analogia de Ia matrici, un tablou 2-dimensional poate ﬁ privit ca
un tablou l-dimensional Tn care fiecare componenté este un tablou
l-dimensional.
> Notatie: a[0][0],a[0][1], . . . ,a[0][n — 1], . . . , a[m — 1][0], a[m —
1][1], . . . , a[m — 1][n — 1]
H——
E@
t®
Curs 1 SD 2021/2022 48/55

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Tablouri bidimensionale
P Operatiile cu tablori 2-dimensionale se realizeazé’ prin intermediul
componentelor
fori<—0tom—1d0
forj + 0 to n-l do
CliJ] <— 0
forkeOtop-l do
C[i,j] <— CUJ] + 8U, k] * b[/<,j]
Curs 1 SD 2021/2022 49/55

***************Ending Page***************


***************Beginning Page***************
***************page number:55**************
Siruri de caractere

V Pot ﬁ considerate ca ﬁind tablouri unidimensionale cu elemente de tip
caracter

P Constantele $ir de caracter se noteazé’ utilizénd “ "1
“Sir-de-caractere"

> Operatii: Concatenarea, notaté' cu +:
“un sir" + “alt sir" I “un siralt sir"

Cursl 9920210022 5O/55

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
Structurl

V Structura: ansamblu eterogen de variabile numite cémpuri.

> Structura are un nume 5i ﬁecare cémp are propriul nume 5i propriul
tip.

> Exemple: o structurﬁ pentru a reprezenta puncte Tn plan are doué
cémpuri: x 5i y; o structuré pentru a reprezenta o persoané poate
avea trei cémpuri: nume, vﬁrsté, adresé;

> Numele complet al unui cémp:
punctx, punct.y
persoananume, persoana.varsta, persoana.adresa.strada
dacﬁ p este pointer la persoana: p- > varsta

Cursl 9920210022 51/55

***************Ending Page***************


***************Beginning Page***************
***************page number:57**************
Structurl
> Memoria alocaté este o zoné contigué; elementele sunt memorate Tn
ordinea declarérii Tn structuré
Cm 1 9920210022 52/55

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
Structuri si pointeri
GED ® III
(EB o
emu @
(EB o
KI 5' 2 E :2 vwmv
Curs 1 SD 2021/2022 53/55

***************Ending Page***************


***************Beginning Page***************
***************page number:59**************
Structuri
Costul operatiilor:
operatie Itlmp(operat|e) . .
0(1) Wags»
0(1) ovogv)
Curs 1 SD 2021/2022 54/55

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
Executla unul algorltm

O x<—O — —

1 [H1 - 0

2 1<6 1 0

x<—0 3 X<~X>k10+i 1 0

[51 4 i<—i+2 1 1

. . 5 3<6 3 1
WhIIEI<6dO _ 6 x<—x*10+i 3 1
X<—X>l<10+l 7 i<—i+2 3 13

;<_,'+2 8 5<6 5 13

9 x<—x*lO+i 5 l3

10 fei+2 5 135

11 7<6 7 135

12 7 135

Curs 1 SD 2021/2022 55/55

***************Ending Page***************


***************Beginning Page***************
***************page number:61**************
Executla unul algorltm
P Calcul: succesiunea de pa$i elementari determinati de executia
instructiunilor ce compun algoritmul.
> Configuratie: starea memoriei + instructiunea curenté;

-—-II

O x <- O — —

1 [e 1 — 0

2 1 < 6 1 0

x <— O 3 X <~ X >1 10 + i 1 0

i + 1 4 i<— i+2 1 1

. . 5 3 < 6 3 1

WhIIEI<6dO _ 6 x<—x*10+i 3 1

X<—X>l<10+l 7 i<—i+2 3 13

,- <_ ,-+ 2 8 5 < 6 5 13

9 x <- x * lO +i 5 l3

10 ie i+ 2 5 135

11 7 < 6 7 135

12 7 135

Cm 1 5D 2021/2022 55/ 55

***************Ending Page***************



***************Beginning Page***************
***************page number:62**************
Executla unul algorltm
P Calcul: succesiunea de pa$i elementari determinati de executia
instructiunilor ce compun algoritmul.
> Configuratie: starea memoriei + instructiunea curenté;
> In exemplul de mai jos calculul este dat de secventa de conﬁguratii
(COI—>C1 I—>~--I—> C12).
-—-II
O x <- O — —
1 I‘? 1 — 0
2 1 < 6 1 0
x <— O 3 X <~ X >1 10 + i 1 0
i + 1 4 i<— i+2 1 1
. . 5 3 < 6 3 1
WhIIEI<6dO _ 6 x<—x>1<10+i 3 1
X<—X>l<10+l 7 i<—i+2 3 13
,-<_ ,-+ 2 8 5 < 6 5 13
9 x <- x * lO +i 5 l3
10 ie i+2 5 135
11 7 < 6 7 135
12 7 135
Cm 1 9920210022 55/55

***************Ending Page***************



