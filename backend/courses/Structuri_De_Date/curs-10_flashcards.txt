[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
Who introduced the concept of symmetric binary B-trees, which are also known as red-black trees?
--InteriorSeparator--
Rudolf Bayer
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following properties are characteristics of red-black trees?
--InteriorSeparator--
(right) A node is colored either red or black.
(wrong) All nodes must be black.
(right) All paths from a node to its descendant leaves contain the same number of black nodes.
(wrong) If a node is black, then its children must be red.
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What color are the root and leaf (nil) nodes in a red-black tree?
--InteriorSeparator--
Black
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If a node in a red-black tree is red, what color must its children be?
--InteriorSeparator--
Black
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does bh(v) represent in the lemma related to red-black trees?
--InteriorSeparator--
The number of black nodes on a path from v to a leaf, excluding v.
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the minimum number of internal nodes in any subtree of a red-black tree with root 'v' and black-height 'bh(v)'?
--InteriorSeparator--
2<sup>bh(v)</sup> - 1
--InteriorSeparator--
hard
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the height (h) of a red-black tree with n internal nodes?
--InteriorSeparator--
h â‰¤ 2 * log<sub>2</sub>(n + 1)
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the search operation in a red-black tree with 'n' nodes?
--InteriorSeparator--
O(log n)
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
When inserting a new node into a red-black tree, which of the following steps are typically performed?
--InteriorSeparator--
(right) Insert the new node as in a regular binary search tree.
(wrong) Color the new node black.
(right) Restore red-black tree properties via recoloring and rotations.
(wrong) Always rotate the root.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What color is the newly inserted node initially colored in the red-black tree insertion operation?
--InteriorSeparator--
Red
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if the newly inserted node becomes the root of the red-black tree?
--InteriorSeparator--
It is recolored to black.
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which red-black tree property might be violated after inserting a red node?
--InteriorSeparator--
(right) If a node is red, then its children are black.
(wrong) The root node must be black.
(wrong) All paths from a node to its null nodes must contain the same number of black nodes.
--InteriorSeparator--
hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of red-black tree insertion, what is the "uncle" of the inserted node?
--InteriorSeparator--
The sibling of the inserted node's parent.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In red-black tree insertion, if the "uncle" of the inserted node is red (Case 1), what recoloring steps are taken?
--InteriorSeparator--
(right) The "parent" and "uncle" are recolored to black.
(wrong) The inserted node is recolored to black.
(right) The "grandparent" is recolored to red.
(wrong) Only the root node is recolored.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In red-black tree insertion, if the "uncle" is black and the inserted node is the right child of a left child (Case 2), what operation is performed?
--InteriorSeparator--
A left rotation between the current node and the parent node.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In red-black tree insertion, if the "uncle" is black and the inserted node is the left child of a left child (Case 3), what operations are performed?
--InteriorSeparator--
A right rotation between the "parent" and "grandparent", the "parent" is colored black and the "grandparent" is colored red.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
After a Case 3 rotation and recoloring in red-black tree insertion, what color is assigned to the former grandparent?
--InteriorSeparator--
Red
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the pseudocode for red-black tree insertion, what does `x -> pred` represent?
--InteriorSeparator--
The parent of node x.
--InteriorSeparator--
easy
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the pseudocode for red-black tree insertion, under what condition does the `while` loop continue?
--InteriorSeparator--
While x is not the root and x's parent is red.
--InteriorSeparator--
hard
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the pseudocode for red-black tree insertion, what is the purpose of the `y` variable in the `if (x -> pred == x -> pred -> pred -> stg)` block?
--InteriorSeparator--
`y` stores the uncle of node `x` (the right child of x's grandparent).
--InteriorSeparator--
hard
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the pseudocode for red-black tree insertion (Case 1), what happens to the value of `x` after the recoloring?
--InteriorSeparator--
`x` becomes the grandparent of the original `x`.
--InteriorSeparator--
hard
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What function is called in Case 2 of the insertion algorithm?
--InteriorSeparator--
rotatie-stanga(t, x)
--InteriorSeparator--
medium
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What function is called in Case 3 of the insertion algorithm?
--InteriorSeparator--
rotatie-dreapta(t, x -> pred -> pred)
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of insertion and deletion operations in red-black trees?
--InteriorSeparator--
O(log n)
--InteriorSeparator--
easy
--InteriorSeparator--
25, 26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does it mean for a class of red-black trees to be O(log n)-stable?
--InteriorSeparator--
Insertion and deletion operations maintain the O(log n) time complexity.
--InteriorSeparator--
medium
--InteriorSeparator--
25, 26
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are real-world uses of Red-Black Trees?
--InteriorSeparator--
(right) Kernel Linux (Completely Fair Scheduler)
(wrong) Microsoft Word
(right) Java's TreeMap
(wrong) Adobe Photoshop
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the provided pseudocode, what does `insArbBinCautare(t, val)` likely do?
--InteriorSeparator--
Inserts the value `val` into the binary search tree `t` following standard binary search tree insertion rules.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which programming languages' standard libraries utilize red-black trees?
--InteriorSeparator--
(right) C++ STL (map, multimap, multiset)
(wrong) Python
(right) Java (TreeMap, TreeSet)
(wrong) Javascript
--InteriorSeparator--
easy
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the key goal of recoloring and rotations during the insertion operation in a red-black tree?
--InteriorSeparator--
To maintain the balanced properties of the tree and ensure O(log n) time complexity.
--InteriorSeparator--
hard
--InteriorSeparator--
7, 25
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What data structure is a red-black tree a specialized form of?
--InteriorSeparator--
(right) Binary Search Tree
(wrong) Hash Table
(wrong) Linked List
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the significance of the 'nil' nodes in the context of Red-Black Trees?
--InteriorSeparator--
They represent the leaves of the tree and are considered part of the tree's structure, ensuring consistent black-height property.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the provided code examples, what is the variable 't' used to represent?
--InteriorSeparator--
The root of the red-black tree.
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which situations trigger Case 2 (rotation left) and Case 3 (rotation right + recoloring) in the red-black tree insertion algorithm?
--InteriorSeparator--
(right) Violations of red-black tree properties due to a red node having a red parent.
(wrong) When the root node turns red.
(right) Different arrangements of the inserted node, its parent, and its grandparent when the uncle is black.
(wrong) Always after the initial insertion of a node.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which property of red-black trees ensures a balanced tree structure, preventing worst-case O(n) search times?
--InteriorSeparator--
The black-height property, which requires all paths from a node to descendant leaves to have the same number of black nodes.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.14360809599724925}]