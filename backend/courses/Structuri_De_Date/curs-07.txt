***************Beginning Page***************
***************page number:1**************
SD 2021/2022
<E|> <ﬁ>4IE>4IE> IE OQO

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Continut

Tipul abstract Graf

Tipul abstract Digraf

lmplementarea cu matrici de adiacenta

Implementarea cu liste de adiacenta Tnlantuite

Algoritmi de parcurgere (DFS, BFS)

Determinarea componentelor (tare) conexe

4E1r<ﬁ>4ifb4IE> :E QQG

CUPS’ —

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Grafuri
> c I (v, E)
P V multime de vérfuri
F E muljcime de muchii; o muchie I o pereche neordonatfa' de vérfuri
distincte
V : {O,1,2,3}
0 1 E I {{0,1}’{072},{1,2}7{2,3}}
u I {0,1} I {1,0}
0 k"° 1
0,1 - extremitétile lui u
3 2 u este incidentﬁ Tn O 5i l
0 5i 1 sunt adiacente (vecine)
Curs 7 SD 2021/2022 3/51

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Grafuri

> Mers de la u la v (walk): u : i0,{i0,i1}, i17 ' ~ ,{ik_1, ik}, ik : v

> parcurs (trail): mers Tn care oricare dou5 muchii sunt distincte

> circuit : parcurs Tnchis Tn care oricare doué muchii intermediare sunt

distincte

V drum (path): mers Tn care oricare doué’ vérfuri sunt distincte

V ciclu (cycle): drum Tnchis i0 : ik
O 1
3 2

CHM SD2021/2022 4/51

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Subgraf indus
> G : (V, E) — graf, W — submuljcime a lui V
> Subgraf indus de W: G’(W7 E’), unde
El I {{I'JHUJ} Q E 5i i€ W7] € W}
v = {0,1,2,3,4} w : {0,2,4} w : {1,2,3}
O 1 0 1
3 2 2 3 2
Curs 7 SD 2021/2022 5/51

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Grafuri - Conexitate
Orice graf poate fi exprimat ca ﬁind reuniunea disjuncté de subgrafuri
induse, conexe 5i maximale (componente conexe).
> i Rj dacé 5i numai dacﬁ existé drum de la i Iaj
> R este relajcie de echivalenté
> V1, - -- , Vp clasele de echivalenté
> G1, - -- ,Gp componente conexe, G,- : (V,-7 E,-) subgraful indus de V,-
5
4
V1 = {2, 4, 7}
E1 = {{2, 4}, {4, 7}, {2, 7}}
V2 I {3, 5, 8}
2
8 E2 I {{3, 5}, {5, 8}, {8, 3}}
V graf conex I graf cu o singuré componenté conexé
CHM SD2021/2022 6/51

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Tipul de date abstract Graf
P obiecte:
P grafuri G:(V,E), V:{O,1,--- ,n—1}
P operatii:
P graf\/id()
P intrare: nimic
P ie$ire: graful vid (QM)
P esteGrafVid()
P intrare: G I (V, E),
P ie$irez true daca G I ((3,0), false Tn caz contrar
P insereazaMuchie()
P intrare: G : (V,E), i,j G V
P ie$ire: G : (V, E U {i,j})
P insereazaVarfO
P intrare: G: (V,E), V: {O,1,--~ 7n—1}
P ie$ire: G I (V’,E), V’ I {0,1,~~ ,ni 1,n}
Curs 7 SD 2021/2022 7/51

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Tipul de date abstract Graf
V eliminaMuchie()
F intrare: G I (V, E), i,j E V
P ie$ire: G : (V, E\ {i,j})
> eliminaVarf()
P intrare: G:(V,E), V:{O,1,--- ,n—1}, k
P ie$ire: G : (V’,E’), V’ : {0,1,--- 7n—2}
{/4714} E El <I> (EH/.71.} Q 15)"?é k7] $£ k7
I" : if (i < k) then i else i— 17
j’:if(j<k) thenje/sej-l
0 1
3 2
CUM 5D 2021/2022 8/51

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Tipul de date abstract Graf

> |istaDeAdiacenta()
P intrare: G : (V,E), i€ V
V ie$ire: lista vérfurilor adiacente cu i

> |istaVarfurilorAccesibi|e()
P intrare: G : (V,E), i6 V
P ie$irez lista vérfurilor accesibile din i

CHM SD 2021/2022 9/51

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Continut

Tipul abstract Graf

Tipul abstract Digraf

lmplementarea cu matrici de adiacenta

Implementarea cu liste de adiacenta Tnlantuite

Algoritmi de parcurgere (DFS, BFS)

Determinarea componentelor (tare) conexe

4E1r<ﬁ>4ifb4IE> :E QQG

CUPS’ —

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Digraf (graf orientat)
> D I (WA)
P V multime de vérfuri
F A multime de arce; un arc I o pereche ordonaté de vﬁrfuri distincte
V I {O,1,2,3}
0 1 A: {(011)7(210)1(1>2)1(312)}
a I (0,1) 75 (1,0)
0 ‘,4” 1
0 — sursa lui a
3 2 1 — destinatia lui a
Curs 7 SD 2021/2022 11/51

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Digraf

> mers (WEI/()2 i0, (i0, i1), i1, ' - - 7(ik—1aik)7ik

V parcurs (trail): mers Tn care oricare doué arce sunt distincte

V circuit I parcurs Tnchis Tn care oricare douﬁ arce intermediare sunt

distincte

V drum (path): mers Tn care oricare dou‘a’ vérfuri sunt distincte

V ciclu (cycle): drum Tnchis i0 : ik
0 1
3 2

CHM SD2021/2022 12/51

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Digraf - Conexitate
V i Rj dacé 5i numai dacé existé drum de la i laj 5i drum de Iaj Ia i
V R este relatie de echivalenté
V V1, - ~ , Vp clasele de echivalenté’
V 61,- ~ ,Gp componente tare conexe, G,- : (\/,-,A,-) subdigraful indus
de V,-
V digraf tare conex : digraf cu o singurﬁ componentﬁ tare conex‘a’
V digraf conex
V1 : {0,1,2}
0 1 A1 : {(0, 1), (1,2), (2,0)}
V2 : {3}
A2 : (Z)
3 2
Curs 7 SD 2021/2022 13/51

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Tipul de date abstract Digraf
V obiecte: digrafuri D I (V,A)
> operatii:
P digrafVidO
P intrare: nimic
P ie$irez digraful vid ((3,9))
> esteDigrafVidO
P intrare: D I (V,A),
P iegire: true daca D I (U), (D), false Tn caz contrar
P insereazaArc()
P intrare: D I (V,A), i,j G V
> ie$ire: D I (V,A U (i,j))
V insereazaVarf()
P intrare: D I (V,A)7 V I {O,1,-~ 7n— 1}
P iegire: D I (V',A)7 V’ I {0,1,~' ,ni 1,n}
Curs 7 SD 2021/2022 14/51

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Tipul de date abstract Digraf
> eliminaArc()
P intrare: D I (V,A)7 i,j G V
V ie$ire: D : (V,A \ (i,j))
> eliminaVarf()
P intrare: D: (V,A)7 V: {O,1,~-~ ,n-l}, k
> ie$irez D z (V’,A’), v’ z {0,1,--- ,n_2}
{1%qu A’ a (HM/1» e A) 1% m ¢ k,
I" : if (i < k) then i else i— 17
j’:if (j<k) thenje/sej—1
Curs 7 SD 2021/2022 15/51

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Tipul de date abstract Digraf
> listaDeAdiacentaExterioara()
P intrare: D I (V,A)7 i€ V
F ie$irez lista varfurilor destinatare ale arcelor care pleaca din i
> listaDeAdiacentalnterioara()
P intrare: D : (V,A)7 iE V
V ie$ire: lista varfurilor sursa ale arcelor care sosesc Tn i
> |istaVarfurilorAccesibi|e()
P intrare: D : (V,A)7 i6 V
P ie$irez lista varfurilor accesibile din i

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Reprezentarea grafurilor ca digrafuri

G I (V, E) :> D(G) I (V,A)

{Ill} G E :> (IE/)7 (11") € A

> topologia este pé'straté
F lista de adiacenjcé a lui iTn G : lista de adiacenjcé exterioarﬁ
(:interioaré) a lui iTn D
0 1 0 1
E = E
3 2 3 2
Curs 7 SD 2021/2022 17/51

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Conjunut
lmplementarea cu matrici de adiacenté
El r51 i E :5 QQG
CHM SD2021/2022 18/51

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Implementarea cu matrici de adiacenjcﬁ a digrafurilor
V reprezentarea digrafurilor
V n numérul de vérfuri
P m numﬁrul de arce (optional)
F 0 matrice (a[i,j]| 1 g i, j g n)
a[i,j] : if (i,j) G A then 1 else O
V dacé digraful reprezinté un graf, atunci a[i,j] este simetricé
> lista de adiacenté exterioari a lui ig linia i
F lista de adiacenjcé interioaré a lui i Q coloana i

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Implementarea cu matrici de adiacenjcé
0 1 2 3 0 1
0 O 1 0 O
l O 0 1 0
2 1 0 0 O
3 O l 1 0
3 2
El 5' i E :5 QQQ
Curs 7 SD 2021/2022 20/51

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Implementarea cu matrici de adiacenjcé
> operatii
P digrafVid
n <— 0; m <- 0
P insereazaVarf: O(n)
V insereazaArc: 0(1)
> eliminaArc: 0(1)
:1 a] 2 E :5 QQG
Curs 7 SD 2021/2022 21/51

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Implementarea cu matrici de adiacenjcé
> eliminaVarf()
Procedure eliminaVarf(a, n, k)
begin
for/+0t0n—1do
forj<—0to n—1do
if (i > k) then
a[i — 1,j] <— a[i,j]
if (j > k) then
n <— n — 1
end
timp de executie: O(n2)
Curs 7 SD 2021/2022 22/51

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Implementarea cu matrici de adiacenjcé
> listaVarfurilorAccesibi|e()
P Dacé' izj atuncij este accesibil din i
Dacé' iyéj atunci existé’ drum i->j dacé existé arc i —>j sau existé k:
EII' W k, k Wj
cl 51 i E :2 @va
CUM 5D 2021/2022 23/51

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Lista vérfurilor accesibile
Procedure inchRef/Tranz(a, n, b) // (Warsha/l, 1962)
begin
fori<—0ton—1do
forj<—0to n—1d0
bliJ] <— a[i7j]
if (i :j) then
b[i, j] <- 1
fork<—0ton—1do
fori<—0to n—1d0
if (b[i, k] : 1) then
forje0t0n—1do
if (b[k7j] : l) then
b[i, j] <- 1
end
timp de executie: O(n3)
Curs 7 SD 2021/2022 24/51

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Conjunut
lmplementarea cu liste de adiacenté Tnléntuite
El 5' i E :5 QQG
CHM SD2021/2022 25/51

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Implementarea cu liste de adiacenté
V reprezentarea digrafurilor cu liste de adiacenté exterioaré
O 1
0 I In In III
1 E II: ?
2 E I: f
2 3 3 E ?
> un tablou a[0..n — 1] de liste Tnléntuite (pointeri)
F a[i] este lista de adiacenjcé exterioaré corespunzétoare lui i
CHM 9920210022 26/51

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Implementarea cu liste de adiacenté
> operatii

F digrafVid

F insereazaVarf: 0(1)

P insereazaArc: 0(1)

V eliminaVarf: O(n+m)

P eliminaArc: O(m)
0 I In In III
1E II: ?
2E In ?
3 E ?

Curs 7 SD 2021/2022 27/51

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Continut
Algoritmi de parcurgere (DFS, BFS)
El 5' i E :5 QQG
Curs 7 SD 2021/2022 28/51

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Digrafuri: explorare sistematicé
> se gestioneazé doué multimi
F S I multimea vérfurilor vizitate deja
P SB Q 5 submultimea vérfurilor pentru care existé ganse 55 gésim vecini
nevizitati Tncé
> lista de adiacenté’ (exterioaré) a lui i este divizaté Tn doué:
procesate lista de asteptare
/—/% /—/%

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Digrafuri: explorare sistematicé
> pasul curent
> cite$te un vérf i din SB
F extrage unj din lista de “a5teptare” a lui i (dacé este nevidé)
P dacéj nu este in S, atunci TI adaugé Ia S 5i Ia SB
P dac§ lista de “a$teptare" a lui i este vidé, atunci eliminé i din SB
> initial
> S I SB : {i0}
P lista de “agteptare a lui i" : lista de adiacenta a lui i
> terminare SB I 0)

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Digrafuri: explorare sistematicﬁ
Procedure explorare(a, n, i0)
begin
fori<—0t0n—1d0
PU] <— all']
SB <- (i0)
viziteaza(i0); S <— (i0)
while (SB 75 ®) do
i <- citeste($B)
if (p[i] I NULL) then
SB e SB \ {i}
else
j <- p[i] —> varf
p[i] <— p[i] —> succ
if (j g S) then
SB <— SB U {j}
viziteaza (j)
S <- S LJ {j}
h Curs 7 SD 2021/2022 31/51

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Explorare sistematicé: complexitate
Teorema
In ipoteza c5 operaﬂi/e peste S 5i SB precum ‘SI. viziteaza() se realizeazé’ Tn
0(1), comp/exitatea timp, Tn cazul ce/ mai nefavorabil, a algoritmu/ui
exp/orare este O(n + m).

Cm 7 5D 2021/2022 32/ 51

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Explorarea DFS (Depth First Search)
> SB este implementaté ca stivé
SB <- (iO) @SB <- stivaVida()

push(SB7 i0)

i <— citeste(SB) (EH + top(SB)

SB k SB \ {i} ®p0p(SB)

SB <— SB U {j} @push(SB,j)

Curs 7 SD 2021/2022 33/51

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Explorarea DFS: exemplu
0 1 Stiva 0
6 2 1 7
4 8
5 5
3 3 3 3
1 1 7
0 0 0
5 5
4
4 8
8
2 6 6 2
Arborele DFS
Curs 7 SD 2021/2022 34/51

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Explorarea BFS (Breadth First Search)
> SB este implementaté ca o coadé
SB <- (iO) @SB <— coadaVida();
insereaza(SB, i0)

i + citeste(SB) @citeste(SB, i)

SB <— SB \ {i} @e/imina(SB)

SB k SB U {j} @insereaza(SB,j)

Curs 7 SD 2021/2022 35/51

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Explorarea BFS: exemplu
O 1
y‘ °
1
3 7
3
2
5
5 4 4 8
A. 6
2 6 Arborele BPS
\:| 51 2 E :5 V’) Q "v
Curs 7 SD 2021/2022 36/51

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Conjunut
Determinarea componentelor (tare) conexe
El 5' i E :5 ‘)QG

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Determinarea componentelor conexe (grafuri neorientate)
Function CompConexeDFS(D)
begin
for/+Oton—1d0
culoare[i] H O
k k 0
fori<—0ton—1d0
if (cu/oare[i] : 0) then
k k k + 1
DstecCompConexe(i, k)
return k
end
Curs 7 SD 2021/2022 38/51

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Determinarea componentelor conexe (grafuri neorientate)
Procedure DstecCompConexe( i, k )
begin

cu/oare[i] <— k

for (fiecare vérf j Tn listaDeAd/ac(i)) do

if (culoare[j] I 0) then
DstecCompConeer7 k)
end
Curs 7 SD 2021/2022 39/51

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Componente tare conexe (digrafuri)
O componenté tare conexé este o multime maximalé de vérfuri a.T. pentru
ﬁecare u, v: u -> v, v -> u.

Curs 7 SD 2021/2022 40/51

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Componente tare conexe: exemplu
1%(2,3,4) 1-
1 4 5 2_>(1, 4) /\
6 3—>(2,4) 2. 3-
4%(5) i
5%(7) 4-
2 3 7 6_>(5) 1
D 7->(6) 5@
1 4 5 i
4 5
1 i 1 7|
6 2 6 l
i 1 GI
2 3 7 3 7
DT
Curs 7 SD 2021/2022 41/51

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Determinarea componentelor tare conexe
Procedure DfsCompTareConexe(D)
begin
fori<—0ton—1do
culoare[i] <— O
tata[i] e —1
timp H O
fori<—0ton—1d0
if (cu/oare[i] : 0) then
DstecCompTareConexe(/)
end
Curs 7 SD 2021/2022 42/51

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Determinarea componentelor tare conexe
Procedure DstecCompTareConexe( i )
begin
timp e timp + 1
cu/oare[i] <— l
for (fiecare vérf j in /istaDeAd/ac(i)) do
if (cu/oare[j] : 0) then
tataLi] P i
DstecCompTareConeer)
timp <- timp + 1
timpFina/[i] e timp
end
Curs 7 SD 2021/2022 43/51

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Determinarea componentelor tare conexe
Notatie: DT I (v,AT), (i,j) e A 41> (j, i) e AT
Procedure CompTareConexe(D)
begin
1. DFSCompTareConexe(D)
2. calculeazﬁ DT
3. DFSCompTareConexe(DT) dar considerénd Tn bucla for
principalé vérfurile Tn ordinea descrescétoare a timpilor ﬁnali de
vizitare timpF/nal[i]
4. returneazé fiecare arbore calculat la pasul 3 ca ﬁind o
componenté tare conexé separate
end
Curs 7 SD 2021/2022 44/51

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Determinarea componentelor tare conexe: complexitate
V DFSCompTareConexe(D): O(n+m)
V calculeazé DT: O(m)
V DFSCompTareConexe(DT): O(n+m)
V Total: O(n+m)
Curs 7 SD 2021/2022 45/51

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Ap|lC3’,Ell
Problema celor sapte poduri din Konigsberg (1736): identiﬁcarea unui
drum, pornind dintr-o zoné a ora$u|ui pentru a traversa cele 7 poduri 0
singuré daté?
. l§&a¥:hl*'€ @mgikg
Zonele: vérfuri, podurile: muchii
Este posibil $5 alegem un vérf, 55 parcurgem muchiile 5i $5 ne intoarcem Tn
varful ales, acoperind toate muchiile o datﬁ?
CHM SD2021/2022 46/51

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Aplicatii
Algoritmicé, inteligenté artiﬁcialé (satisfacerea restrictiilor), etc.
Probleme de planiﬁcare
P Digrafurile aciclice pot modela precedenta Tntre evenimente
> O sortare topologicé a unui digraf D : (V,A) este o ordonare a
vérfurilor sale aﬁ. dacﬁ (i,j) € A, atunci i apare Tnaintea luij.
CUM 9920210022 47/51

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Aplicatii
> Motorul de céutare Google: algoritmul PageRank - pentru a
determina cét de importanti este o anumité paginﬁ
> Sistem informational geograﬁc (G/S): Goog/e Maps, Bing Maps
gagﬁwwsﬁg
ugliéiﬁ'ev ‘glag'iéiﬁﬁ
Maggy?
Q Q» 1
=2 °°%W‘K§&°35?i\f ﬁ 4Q,"
> Retele sociale
m-
2'3."- é:~'::‘.‘
My.‘ ~.;=...="
\“uu
H“ 1 51 i E :2 A“
CHM SD2021/2022 48/51

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
DNA word design
> Proiectarea de coduri ADN care satisfac anumite restrictii
combinatoriale; utilizare: Tn calculul biomolecular pentru a memora
informatii sau pentru manipularea moleculelor
> Determina cea mai mare multime S de cuvinte de lungime n peste
alfbetul {A, C7 G7 T} a.T.:
P GC Content Constraint: ﬁecare cuvant are 50% simboluri din {C7 G}
V Hamming Distance Constraint: ﬁecare pereche de cuvinte W1 75 W2
diferé Tn cel putin d pozitii: H(w1, W2) Z d
P Reverse Complement Hamming Distance Constraint:
H(R(W1), C(W2)) Z d, unde R(w) inversul cuvantului w si C(w)
complementul lui W (C <—> G, A <—> T)
CHM SD2021/2022 49/51

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Modelare
V pentru ﬁecare cuvﬁnt ADN asignﬁm un vﬁrf v,-
> E : EHD U ERC (EHD perechi de cuvinte care au un conflict HD, ERC
perechi de cuvinte cu un conflict RC)
> solutie: o multime independenté maximalé'
Figura: Grafurile pentru cuvinte de dimensiune 2 5i distanta Hamming d : 2
(sténga) si d I 3 (dreapta)
AG
)szWK
CA 55'92'5? Ac
CA AC \ A A f
\vv’
CT GT CT GT
GA GA
Curs 7 SD 2021/2022 50/51

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
Solutle de 136 cuvmte pentru mstanta n I 8, d I 4
AAACCACC ACCAGTGT ACCCAAGA ACGTAGTG ACTGACGT AGGAAGCT
AGTCCTCT AGTTGGCA ATCCCGTT ATGGGCTT CAAACCTC CAAGAGAC
CAAGCAGT CACAGTTG CACCAATC CAGATGGT CAGGATCT CATCGTGT
CATGACTG CATTCGCT CCAGTCTT CCCTGATT CCGACTTT CCTCAGTT
CGAAGGTT CGACACAT CGATTTGG CGCACAAT CGCCTTTT CGCTAGTA
CGGTGTAT CGTAAAGG CGTGTGAT CTATGCCT CTCGTACT CTGAAGAG
CTGCAAGT CTTACCGT CTTCCTAG GAAAGCGT GAACAGCT GAACGTAG
GAAGGATC GACATGAG GACCTAGT GACTGTCT GAGAAGTC GAGACACT
GAGTACAG GATGCAAG GATGTCCT GCAATAGG GCAGCTAT GCCTAGAT
GCGATCAT GCGGAATT GCTCGAAT GCTTATGG GGAAATGC GGACCATT
GGATAACG GGCAACTT GGGTTGTT GGTATTCG GGTTCCAT GGTTTAGC
GTAACCAG GTAGAGTG GTATCGGT GTCAGTAC GTCCAAAG GTCGATGT
GTGAGATG GTGCTTCT GTTAGGCT GTTCTCTG GTTGACAC TAACACGC
TAAGCTCG TACACAGC TACCGCTT TAGATCCG TAGGAAGG TAGGCGTT
TAGTGTGC TATCGACG TATGTGGC TCAACGTG TCACGTCT TCAGACAG
TCATGCTC TCCATGCT TCCCATTG TCCGTATC TCCTCAAG TCGAAGGA
TCGAGTAG TCGCAAAC TCGGTTGT TCGTACCT TCTACCAC TCTCCTGA
TCTCTGAG TCTGCACT TGAACCCT TGACCTAC TGAGAGGT TGATGGAG
TGCAGTCA TGCGTTAG TGCTACAC TGCTCTGT TGGAGAGT TGGATGAC
TGGCTATG TGGGATTC TGTAGCTG TGTCTCGT TGTGACCA TGTGGAAC
TGTTCGTC TTAAGGGC TTACCAGG TTAGTCCC TTCAACGG TTCCTTGC
TTCGCCAT TTCGGGTA TTCTGACC TTGACTCC TTGCCCTA TTGCGGAT
TTGTTGGG TTTCAGCC TTTGGTGG TTTTCCCG

Curs 7 SD 2021/2022 51/51

***************Ending Page***************





