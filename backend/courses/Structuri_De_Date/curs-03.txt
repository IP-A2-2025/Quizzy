***************Beginning Page***************
***************page number:1**************
SD 2021/2022
<E|> <ﬁ>4IE>4IE> IE OQO

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Conjunut
Analiza eficienfcei algoritmilor
El 5' ' _= :E ‘)QG
CHM S'32021/2022 2/40

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Clase de eficienté
Clasa Exemplu
logaritmic O(|0g n) c5utare binaré
liniar O(n) céutare secventialé
pétratic O(n2) sortare prin insertie
cubic O(n3) Tnmultirea a doué matrici n >< n
exponential 0(2”) prelucrarea submulfcimilor unei multimi cu
n elemente
factorial O(n!) prelucrarea permutﬁrilor de ordin n
Curs 3 SD 2021/2022 3/40

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Analiza empiricé a eﬁcientei algoritmilor
> Utilizatﬁ atunci cénd analiza teoretici a eﬁcientei este dificilé.
> Scop:
P formularea unei ipoteze initiale privind eficienta algoritmului;
V veriﬁcarea unei aﬁrmatii (ipoteze) privind eficienta;
> compararea algoritmilor;
F analiza eficientei unei implementﬁri.

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Analiza empiricé a eﬁcientei algoritmilor

> Se stabi|e$te scopul analizei.

> Se alege o masuré a eﬁcientei
Exemplu: numérul de executii ale unor operatii, timpul, etc.

V Se stabilesc caracteristicile setului de date de intrare.

> Se implementeazé algoritmul.

> Se genereazﬁ datele de intrare.

> Se executé programul pentru toate datele de intrare; se anegistreaz§
rezultatele.

> Se analizeazé rezultatele.

Curs 3 SD 2021/2022 5/40

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Continut

Analiza funcfciilor recursive
Functii recursive
Metoda substitutiei
Metoda iteratiei
Arborele de recursie
Teorema Master

CHM SD 2021/2022 6/40

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Conjunut
Analiza functiilor recursive
Functii recursive
El 5' i E :5 QQG
CHM 5D 2021/2022 7/40

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Functii recursive

> Functia f() apeleazﬁ direct functia g() dacé Tn definitia Iui f() existé
un apel la g0.

> Functia f() apeleazﬁ indirect functia g() dacé f() apeleazé direct 0
functie h() iar h() apeleazé direct sau indirect functia g0.

> Functia f() este definité recursiv dacé ea se auto-apeleazé direct sau
indirect.

CHM SD 2021/2022 8/40

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Functll recurswe
Deﬁnitia unei functii recursive cuprinde:
> Testarea cazului de ba25 — conditia de oprire a apelului recursiv.
> Apelul recursiv (cazul general): o variabilé (Tntreagé) este
transmisé ca parametru functiei Tns§$i, Tn 25a fel ca dupé un numér de
pa$i 55 se atingé cazul de bazﬁ.
Observatie: Existé $i functii recursive féré parametri.
CHM SD2021/2022 9/40

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Functii recursive
Exemplul 1. Definitia functiei factorial:
> Cazul de baza: 0!: 1;
> Cazul general: n! : n >< ((n — l)!), n > O.
Function factoria/(n)
begin
if n <: 1 then
return 1
else
return (n >l< factoria/(n — 1))
end
Curs 3 SD 2021/2022 10/40

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
factorial(4) - apel recursiv

4*6 = 24
\

3*2 = 6
\

2*1 = 2
\
1

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
factorial(4) - apel recursiv
1
> algoritmii recursivi: u$or de implementat;
> costuri suplimentare: Ia ﬁecare apel recursiv se plaseazé o serie de
informatii Tntr-o zoné de memorie speciﬁcﬁ (stiva programului).
CUM 9920210022 11/40

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
factorial(n) - varianta iterativé
Function factoria/(n)
begin
produs + 1
while n > 1 do
produs k produs >l< n
n <— n — l
return produs
end
Observatie: Valoarea returnatﬁ de factoria/(n) este corecté doar pentru
valorile Iui n pentru care n! este mai mic sau egal decét cea mai mare
constanté Tntreagﬁ pe care o putem reprezenta !
CHM SD2021/2022 12/40

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Recursie vs. iteratie. Fibonacci recursiv
Exemplul 2. Sirul lui Fibonacci:
> f(0) I 0, f(1) I 1,
> f(n) : f(n—l)+f(n—2),n> 1.
Function fib(n)
begin
if n <: 1 then
return n
else
return fib(n — 1) + fib(n — 2)
end
Curs 3 SD 2021/2022 13/40

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Fibonacci recursiv: arbore apeluri
O(¢")
El r51 ' _= :E 0R0
Curs 3 SD 2021/2022 14/40

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Numér de apeluri
n fib(n) apeluri
2 1 3
24 46'368 150'049
42 267'914'296 866'988'873
43 433'494'437 1'402'817'465
KI ﬁ' 2 E :5 02v
Curs 3 SD 2021/2022 15/40

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Recursie vs. iteratie: Fibonacci iterativ
Function ifib(n)
begin
f0 <- 0
f1 e 1
if n <: 1 then
return n
else
for k e 2 to n do
temp <— f1
f1 e f1 + f0
f0 <— temp
return f1
end
Curs 3 SD 2021/2022 16/40

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Comparatie Fibonacci recursiv/iterativ
60 _____
— Ruby
'5 — Scheme
E — Python
D
§ 40 — C
v — Java
g — C-gcc
§ — (Python) Fibonacci iterativ
G)
w 2O
‘U
Q.
E
0
20 4O 6O 8O 100 120 140 160 180 200
n
Curs 3 SD 2021/2022 17/40

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Eficienta algoritmilor recursivi
V Pentru estimarea timpului de executie:

V se stabi|e$te relatia de recurenté' care exprimé legatura dintre timpul de
executie corespunzétor problemei initiale si timpul de executie
corespunzétor problemei reduse;

P se rezolvé relatia de recurenté.

> Exemplu: pentru calculul factorialului, relatia de recurenté pentru
timpul de executie este:
O n I 0
T01) I ’
T(n*l)+17 n21

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Rezolvarea recurentelor

1. Metoda substitutiei. Se ghice$te o Iimit‘a’ $i apoi se utilizeazé
inductia matematicé pentru a demonstra corectitudinea.

2. Metoda iteratiei. Se itereazé recurenfca $i se exprimé ca 0 sumé de
termeni care depind doar de dimensiunea problemei $i de conditiile
initiale.

3. Arborele de recursie. Converte$te recurenta Tntr-un arbore (nodurile
reprezintﬁ costuri).

4. Metoda master. Furnizeazé limite pentru recurente de forma

T(n) : aT(n/b) + f(n)
CHM 9920210022 19/40

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Conjui n ut
Analiza funcfciilor recursive
IVIetoda substitutiei
El 5' i E :5 Q Q0
Cm 3 5D 2021/2022 2o/ 4°

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
1. Metoda substitutiei
V Se ghice$te solutia.
> Se utilizeazé inductia matematicé pentru a determina constantele $i
pentru a demonstra c5 solutia este corecté’.
CHM SD2021/2022 21/40

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Metoda substitutiei - exemplu
Determinarea unei limite superioare pentru relafcia T(n) : 2T( Ln/ZJ) + n
El [5' i E :5 QQQ
Curs 3 SD 2021/2022 22/40

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Metoda substitutiei - exemplu
Determinarea unei limite superioare pentru relatia T(n) : 2T( Ln/ZJ) + n
V Ghicim solutia: T(n) I O(n|og n).
V Demonstrim prin inductie c5 T(n) g cn log n, pentru c > O.
Curs 3 SD 2021/2022 22/40

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
IVIetoda substitutiei - exemplu
Determinarea unei limite superioare pentru relatia T(n) : 2T( Ln/ZJ) + n

V Ghicim solufcia: T(n) I O(n|og n).

V Demonstrim prin inductie c5 T(n) g cn log n, pentru c > O.
Presupunem c5 limita are Ioc pentru toate valorile pozitive m < n, Tn
particular pentru m : Ln/2J: T( Ln/Zj) g an/2J |og( Ln/2l).

T(n) S 2(CLn/2J |Og(L"/2J)) + n
g cn loan/ZJ) + n
: cnlogni cnlog2+n
: cnlogn- cn+n
g cnlog n, pentru c Z l
Curs 3 SD 2021/2022 22/40

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Metoda substitutiei - exemplu
Determinarea unei limite superioare pentru relatia T(n) : 2T( Ln/ZJ) + n

V Ghicim solufcia: T(n) I O(n|og n).

V Demonstrim prin inductie c5 T(n) g cn log n, pentru c > O.
Presupunem c5 limita are Ioc pentru toate valorile pozitive m < n, Tn
particular pentru m : Ln/2J: T( Ln/Zj) g an/2J |og( Ln/2l).

T(n) S 2(CLn/2J |Og(L"/2J)) + n
g cn loan/ZJ) + n
: cnlogni cnlog2+n
: cnlogn- cn+n
g cnlog n, pentru c Z l
Trebuie $5 arétém c5 solutia este validé 5i pentru conditiile limité.
T(l) : 1 g cllogl :0
Cazuri de bazé: T(2) 5i T(3) ( no I 2 )
T(2) : 4 $i T(3) : 5, T(2) § c2|og2 $i T(3) § c3|og3 i c Z 2.
Curs 3 SD 2021/2022 22/40

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Metoda substitutiei - subtilitéfci
P Scﬁderea unui termen de ordin inferior (pentru a consolida ipoteza
inductivi).
Exemplu: T(n) : T(Ln/21) + T( [n/21) + 1
P Ghicim solutia: T(n) I O(n).
F Demonstrﬁm prin inductie c5 T(n) g cn, pentru c > O.
T(n) g an/Zj + c[n/2] + 1
: cn + 1
V Demonstrém prin inductie c5 T(n) g cn — d, d >: O const.
T(") S (CM/21 — d) + (61/1/21 — d) + 1
: cn 1 2d + 1
g cn- d7 pentru d Z 1
Trebuie $5 alegem constanta c suficient de mare pentru a satisface
conditiile limité.
Curs 3 SD 2021/2022 23/40

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Metoda substitutiei - subtilitéfci
> Evitarea capcanelor
Exemplu: T(n) : 2T( Ln/2J) + n
Demonstrém "fals" ca T(n) : O(n) ghicind T(n) g cn 5i
argumentﬁnd:
T(n) § 2(an/2J) + n
§ cn + n
I 0(n), <: fals!!
Eroarea: nu am demonstrat forma exactcli a ipotezei inductive.
Curs 3 SD 2021/2022 24/40

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Metoda substitutiei - subtilitéfci
> Schimbare de variabilé.
Exemplu: T(n) : 2T(qurt(n)j) + log n
Simpliﬁcém recurenta printr-o schimbare de variabilé m : log n.
T(2'") z 2T(2’"/2) + m
Redenumim 5(m) : T(2m), $i avem 5(m) : 25(m/2) + m.
5(m) : O(m|og m),
T(n) : T(2m) I 5(m) : O(m|og m) : O(|ogn|og|og n).
Curs 3 SD 2021/2022 25/40

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Conjunut
Analiza functiilor recursive
Metoda iteratiei
El 5' i E :5 QQG
CHM SD2021/2022 26/40

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Iterarea unei recurente
IVIetoda substitutiei: implica ghicirea solutiei (I)
Iterarea relatiei de recurenta:
P directé
P se porneste de Ia cazul particular 5i se construiesc termeni succesivi
folosind relatia de recurenta;
P se identiﬁca forma termenului general T(n);
P se verifica prin calcul direct sau inductie matematicé.
P inversa
P se p0rne$te de Ia cazul T(n) $i se inlocuieste T(h(n)) cu valoarea
corespunzatoare, apoi se inlocuieste T(h(h(n))) $i asa mai departe,
péna se ajunge la cazul particular;
P se efectueaza calculele $i se obtine T(n).

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Iterarea unei recurente - exemplu n!
O n : 1
T = ’
(”) {T(n—l)+l, n>1
\Il r5‘ ' _= IE ‘)QO
Curs 3 SD 2021/2022 28/40

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Iterarea unei recurente - exemplu n!
O, n : 1
T(”)_{ T(n—1)+1, n>1
Iterare directé
T(1) I 0
T(Z) = l
T(3) : 2
T(n) : n — 1
El 5' i E :5 QQQ
Curs 3 SD 2021/2022 28/40

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Iterarea unei recurente - exemplu n!
O, n : 1
T(”)_{ T(n_1)+1, n> 1
Iterare directé Iterare inversé
T(1) :0 T(n) I T(n—1)+1
T(2):1 T(n—1):T(n—2)+1
T(3) I 2
T(2):T(1)+1
T(n):n—l T(1):0
T(n) : n — l
Curs 3 SD 2021/2022 28/40

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Iterarea unei recurente - exemplu
T01): 3T(L%l) + n
n n
T I i T i
(n) n+ 3(L4l + 3 0160)
n n n
- n+ all + 901? + 3M6?»
n n n
s @031)’ + @<n’°g43xT<1)>
: 4n + @(n/og43xT(1))
I 0(n)
Observatie: utilizarea seriilor geometrice:
1+x+x2+...+x" : 1_1+':1,pentru x75 1
1+x—|—x2 + : é, pentru Ix‘ < 1
Curs 3 SD 2021/2022 29/40

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Conjunut
Analiza funcfciilor recursive
Arborele de recursie
El 5' i E :5 ‘)QG
CHM SD2021/2022 30/40

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
2. Arborele de recurSIe

> Arborele de recursie:
F permite vizualizarea ieterérii unei recurente;
P fiecare nod reprezintz“: costul unei subprobleme;
V se calculeazé suma costurilor pe nivele 5i apoi se Tnsumeazé aceste

costuri pentru a determina costul total al recursiei.
V Arborele de recursie poate fi utilizat pentru a genera o valoare pentru
metoda substitutiei.

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Arborele de recursie - exemplu
T(") I 3T(L"/4J) + 9012)
\Il 5' ' _= IE QQO
Curs 3 SD 2021/2022 32/40

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Arborele de recursie - exemplu
T(n) I 3T(L"/4J) + 9012)
> Cre‘a’m arborele de recursie pentru T(n) : 3T(n/4) + cn2, c > 0
T(n) cnl cnz
TG) 1(2) Tia) Calf M2? def
T(FT.) T(FT.) T(ﬁ) T(ﬁ) T(ﬁ) T(ﬁ) T(ﬁ) T(ﬁ) TU?)
cl 51 2 E :2 QQG
Curs 3 SD 2021/2022 32/40

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Arborele de recursie - exemplu
CB2 —)* 6'31
7(1) 1(1) T(ll) rd) 7(1) ﬂu T(|1J nil) 1(1) Th) 1(1) 1(1) T(ll) -> 6(n'w31
‘*———_—-—V-————J“
El r51 2 E :5 QQG
Curs 3 SD 2021/2022 33/40

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Arborele de recursie - exemplu

> Dimensiunea unei subprobleme corespunz§toare unui nod de
adéncime i: n/4' :> dimensiunea subproblemei ajunge la n I 1 cand
n/4' : 1 (i) i: log4n :> arborele are log4n + 1 nivele.

> Numé'rul de noduri de Ia nivelul i: 3".

> Fiecare nod de pe nivelul i are costul: c(n/4i)2.

V Costul total al nodurilor de la nivelul i: 3"c(n/4")2 : (3/16)"cn2
(Ultimul nivel log4n: nlog43 T(1).)

Curs 3 SD 2021/2022 34/40

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Arborele de recursie - exemplu
T(n) : cn2 + 3cn2 + (3)2cn2 + + (3),‘)ganilcn2 + @(n'og43)
16 16 16
log4nil 3
_ i 2 / 3
_ Z (13)“ +e(n°g4)
1:0
< 33(3)’.an + (9(n/og43)
. 16
1:0
1 2 / 3
I 9 0E4
1 _ (3/16)cn + (n )
_ 16 2 log43
_ 13cn +6(n )
I O(n2)
Curs 3 SD 2021/2022 35/40

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Arborele de recursie - exemplu
V Utilizém metoda substitutiei pentru a veriﬁca c5 T(n) I O(n2) este o
limité superioarﬁ pentru relatia T(n) : 3T( Ln/4J) + @(nz).
P Arétém ca T(n) g dn2, pentru d > O
T(n) g 3T( Ln/4J) + cn2
g 3dLn/4J2 + cn2
g 3d(n/4)2 + C(n2)
_ 3 2 2
_ 16dn + cn
g dn27 pentru d Z (16/13)c
Curs 3 SD 2021/2022 36/40

***************Ending Page***************


***************Beginning Page***************
***************page number:44**************
Conjunut
Analiza functiilor recursive
Teorema Master
El r51 i E :5 QQG
CHM SD2021/2022 37/40

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
3. Teorema Master
V Furnizeaza o metoda de rezolvare a recurentelor de forma
T(n) : aT(n/b) + f(n) unde a Z 1 si b > 1 sunt constante, iar f(n)
este 0 functie asimptotic pozitiva’.
> Teorema Master:
Fie a Z 1 si b > 1 constante, f(n) o functie si T(n) deﬁnité pe
numere Tntregi nenegative prin relatia de recurenta:
T(n) : aT(n/b) + f(n). Avem:
1. Dacé f(n) : O(n'°gba_€) pentru 6 > O constant, atunci
T(n) : @(n'ogba).
2. Daca f(n) I 6(n'ogba), atunci T(n) I 9(n'0gba log n).
3. Dacé f(n) : Q(n/°gba+€) pentru 6 > 0 constant, si daca
af(n/b) g cf(n) pentru c < 1 si n suﬁcient de mare, atunci
T(n) I 90%))-
Curs 3 SD 2021/2022 38/40

***************Ending Page***************


***************Beginning Page***************
***************page number:46**************
Teorema Master - exemple

> T(n) : 9T(n/3) + n
a : 9, b : 3, f(n) : n si n/ogba I n/Og39 : 6(n2).
Cum f(n) I O(n'°g39’6), cu e I 1, putem aplica cazul 1 al teoremei
master :> T(n) : @(n2).

> T(n) : T(2n/3) + 1
a : 1, b : 3/2, f(n) : 1 si nlogba : nlog3/21 : n0 : 1.
Cum f(n) I @(n'ogba) I 6(1), putem aplica cazul 2 al teoremei
master i T(n) : 9(log n).

Curs 3 SD 2021/2022 39/40

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Teorema Master - exemple

V T(n) I 3T(n/4) + nlogn
a I 3, b I 4, f(n) I nlog n $i nlogba I nlog43 I O(n0'793)
Cum f(n) I Q(n/°g43+6), cu e Q1 0.2, putem aplica cazul 3 al teoremei
master dacé are loc conditia:
af(n/b) I 3(n/4) |og(n/4) g (3/4)n|ogn I cf(n) pentru c I 3/4 $i
n suﬁcient de mare. Rezulté T(n) I @(nlog n).

V IVIetoda master nu se poate aplica pentru T(n) I 2T(n/2) + nlogn
a I 2,bI 2,f(n) I nlogn 5i nlogba I n
Cum f(n) I n logn este asimptotic mai mare decét nlogba I n, putem
aplica cazul 3 (fals!!).
f(n) nu este po/inomia/ mai mare.
f(n)/n'°gba I (nlog n)/n I log n este asimptotic mai mic decét n6,
pentru orice constanté pozitivé e.

Curs 3 SD 2021/2022 40/40

***************Ending Page***************

