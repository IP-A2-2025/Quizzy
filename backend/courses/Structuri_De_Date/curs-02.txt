***************Beginning Page***************
***************page number:1**************
SD 2021/2022
<E|> <ﬁ>4IE>4IE> IE OQO

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Contlnut
Analiza eficienfcei algoritmilor
El 5' ' _= :E ‘)QG
CHM S'32021/2022 2/52

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Timp de executie
“As soon as an Analytic Engine exists, it will necessarily guide the
future course of the science. Whenever any result is sought by
its aid, the question will arise—By what course of calculation can
these results be arrived at by the machine in the shortest time?”
Charles Babbage (1864)

___ 7;.‘ g >
Masina analitica
CHM SD2021/2022 3/52

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Provocare
Pentru date de intrare de dimensiuni mari, programul rezolva problema?
Why i5 my program Soil-JD Why does it ruw
“W ‘R 7/

I?‘ ‘I!

1;“ [AT-k

‘ ‘ a I

1‘ U
Knuth (1970): 55 utilizﬁm metode stiintiﬁce pentru a Tntelege
performanta algoritmilor.

CHM SD2021/2022 4/52

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Analiza eflcientei algoritmilor
> Analiza complexititii.
> Estimarea volumului de resurse de calcul necesare executiei
algoritmului:
> spaﬁu de memorie: spatiul necesar stocérii datelor;
P timp de executie: timpul necesar executiei algoritmului.
> Algoritm eficient: necesité un volum rezonabil de resurse de calcul:
> eficienta se miscarﬁ Tn raport cu spatiul de memorie, sau cu timpul de
executie;
V Utilitate:
P pentru a stabili performanta algoritmului $i a furniza garantii asupra
acesteia;
> pentru a compara algoritmi.

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Analiza eﬁcientei timp

“It is convenient to have a measure of the amount of work involved
in a computing process, even though it be a very crude one. We
may count up the number of times that various elementary opera-
tions are applied in the who/e process and then given them various
weights. We might, for instance, count the number of additions,
subtractions, multiplications, divisions, recording of numbers, and
extractions of figures from tables. In the case of computing with
matrices most of the work consists of multiplications and writing
down numbers, and we shall therefore only attempt to count the
number of multiplications and recordings. "

— Alan Turing, Bounding-off errors in matrix processes, 1947

Cm 2 SD 2021/2022 6/ 52

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Anallza efICIentel tlmp
Trebuie 55 stabilim
l. Un model de calcul.
Modelul von Neumann — RAIVI (random access machine):
P prelucrarile sunt executate secvential;
P memoria constﬁ dintr-o muljcime infinita de celule;
P timpul pentru accesarea datelor este ace|a$i (nu depinde de locatia
acestora Tn memorie);
P celulele de memorie pastreaza valori "mici" (Iimitate polinomial Tn
dimensiune)
P timpul de executie al unei prelucrari nu depinde de valorile operanzilor.
CHM SD2021/2022 7/52

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
l\/lodelul de calcul
> lmplicé o abstractizare, o simplificare brut5.
> lVlemoria externé:
F Tntr-o maginé realé existﬁ o ierarhie complexé a memoriei;
P existé algoritmi special proiectati pentru seturi de date mari care
trebuiesc pistrate Tn memoria externé;
V memoria rapidé — de dimensiune limitaté / memoria externé —
nelimitatﬁ;
F existﬁ operatii speciale de intrare/iegire care transferé informatie Tntre
cele doué tipuri.
> Procesare paralelé:
> (S/MD (Sing/e Instruction, Multiple Data) - executie paralelé a unei
instructiuni, pe date diferite;
P multithreading simultan - rularea mai multor fire de executie pe un
procesor;
V procesoare multiple, procesoare multicore, etc.;
> sisteme distribuite.
Curs 2 SD 2021/2022 8/52

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Analiza eflcientei timp
ll. O unitate de masurﬁ a timpului de executie
> Pseudocod (curs 1):
P variabile 5i tipuri elementare de date; instructiuni; proceduri $i functii.
> Timpul necesar executiei unei prelucréri elementare:
V operatii elementare: atribuire, operatii aritmetice, comparatii, operatii
logice;
F fiecare operatie elementaré necesité’ o unitate de timp pentru a fi
executaté.
> Timpul total de executie este egal cu numirul prelucrérilor elementare
executate.

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Dlmen5|unea problemel
V Ipotezé: volumul resurselor de calcul necesare depinde de volumul
datelor de intrare.
> Dimensiunea problemei: volumul de memorie necesar stocérii datele
de intrare.
F Este exprimaté Tn:
> numérul de componente ale datelor de intrare sau
P numérul de biti necesari stocérii datelor de intrare.
> Numérul de biti necesari stocérii valorii n este [loggn] + 1.

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Dimensiunea problemei - exemple
> Testul de primalitate pentru un numér n: n ( sau loggn ).
> Minimul unui tablou: X[O..n — 1]: n.
> Suma a douﬁ matrici (m >< n): m >< n.
CHM SD2021/2022 11/52

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Continut
Analiza eﬁcientei algoritrnilor
Exemple de calcul
Ordin de crestere
Notatie asimptoticé
E1 ﬁ ' _= :E ‘)‘RO
Cur” SI"021/2022 12/52

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Exemplul 1. Suma primelor n numere Tntregi
lntrare: n >= 1
|e$ire: sumas:1+2+---+n
Dimensiunea problemei: n
cl 51 2 E :2 QQO
Curs 2 SD 2021/2022 13/52

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Exemplul 1. Suma primelor n numere Tntregi
Intrare: n >: 1
|e$ire: sumas:1+2+~-+n
Dimensiunea problemei: n
Function suma(n) Operatie Cost Nr. repet‘a’ri
begin 1 c1 1
1 s + 0 2 c2 1
2 i H 1 3 c3 n+1
3 while i <: n do 4 C4 n
4 s <— s + i 5 c5 n
5 i k i+ 1
6 return s T(n) : (c3+ c4+c5)n+(c1+c2+ c3)
end : a * n + b
Curs 2 SD 2021/2022 13/52

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
Exemplul 1. Suma primelor n numere intregi
Considerém c5 toate prelucrarile elementare au ace|a$i cost unitar.
V T(n) I 3(n + 1);
V Constantele ce intervin Tn expresie nu sunt importante.
> Timpul de executie depinde liniar de dimensiunea problemei.
> Algoritm echivalent:
s <— 0
for i + 1 to n do
s k s + i
> gestiunea contorului: 2(n + 1) operatii;
P calculul sumei: (n + 1) operatii (initializarea $i actualizarea lui s).
CUM SD2021/2022 14/52

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Exemplul 2. lnmultirea a doué matrici
lntrare: A(m >< n), B(n >< p)
|e$irec C:A*B, CiJzzzzlAikBkﬂ i:1,...,m,j:1,...,p
Dimensiunea problemei: mnp
cl 51 2 E :2 QQG
Curs 2 SD 2021/2022 15/52

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Exemplul 2. lnmultirea a doué matrici
Intrare: A(m >< n), B(n >< p)
|e$ire: C:A*B, CIJIZZZ1AikBkj7 i:1,...,m,j:l,...,p
Dimensiunea problemei: mnp
Function produs(a[0..m — 1, 0..n — 1], b[0..n — 1, 0..p — 1])
begin
1 fori<—0tom—1do
2 forj<—0t0p—1do
3 c[i,j] <— O
4 fork<—0ton—1do
5 c[i,j] k c[i,j] + a[i, k] >|< b[k,j]
6 return c[0..m — 1,0..p — 1]
end
Curs 2 SD 2021/2022 15/52

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Exemplul 2. lnmultirea a doué matrici
Operatie Cost Nr. repetéri
1 2(m+1) 1
2 2(p+1) m
3 1 mp
4 2(n+1) mp
5 2 mpn
T(m, n7 p) : 4mnp+ 5mp+ 4m+ 2
El 5| i E :5 6Q‘?
Curs 2 SD 2021/2022 16/52

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Exemplul 2. lnmultirea a doué matrici
Operatie Cost Nr. repetéri
l 2(m+1) 1
2 2(p+l) m
3 1 mp
4 2(n+l) mp
5 2 mpn
T(m, n, p) I 4mnp + 5mp + 4m + 2
Observatie: nu este necesar 55 se completeze Tntreg tabelul; este suficient
55 se contorizeze operatia dominanté.
> Cea mai frecventé (costisitoare) operatie: a[i, k] >w< b[k,j].
> Estimare timp de executie: T(m7 n, p) : mnp.
Curs 2 SD 2021/2022 16/52

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Exemplul 3. |\/|inimu| unui tablou
Intrare: x[0..n — 1]7 n Z 1
le$ire: m : min(x[0..n — 1])
Dimensiunea problemei: n
cl 51 2 E :2 QQO
Curs 2 SD 2021/2022 17/52

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Exemplul 3. |\/|inimu| unui tablou
lntrare: x[O..n — 1], n Z l
|e$ire: m : min(x[0..n — 1])
Dimensiunea problemei: n
Function minim(x[0..n — 1]) _—V_
begin Operafue Cost Nr. repetarl
1 m e x[O] 1 1 1
2 i <— 1 2 1 1
3 while i < n do 3 1 n
4 if x[i] < m then 4 1 "'1
5 m <— x[i] 5 1 1(n)
6 i <— i+ 1 6 1 "-1
end
Curs 2 SD 2021/2022 17/52

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Exemplul 3. |\/|inimu| unui tablou
Timpul de executie depinde de:
V dimensiunea problemei;
V proprietéfcile datelor de intrare.
Trebuie analizate cazurile extreme:
V cazul cel mai favorabil
V x[O]<:x[i],i:0,...,n—1:>t(n):O:> T(n):3n
V cazul cel mai nefavorabil
V x[O] >X[1] > >x[n*1]@ t(n):n*1§ T(n):4n*1
V 3n <: T(n) <2 4n — 1
Limita inferioarﬁ $i limita superioaré depind liniar de dimensiunea
problemei.
V Dacé se ia Tn calcul doar operatia de baza (comparatia x[i] < m):
T(n) : n — 1
Curs 2 SD 2021/2022 18/52

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Exemplul 4. Céutarea secventialé
lntrare: X[O..n — 1], n >: 1 $i v o valoare (cheie de cﬁutare)
|e$ire: valoarea de adevér a afirmatiei “v face parte din x[0..n — 1]"
Dimensiunea problemei: n
CHM 9920210022 19/52

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Exemplul 4. Céutarea secventialé
lntrare: X[O..n — 1], n >: 1 $i v o valoare (cheie de cﬁutare)
|e$ire: valoarea de adevé'r a afirmatiei “v face parte din x[O..n — 1]"
Dimensiunea problemei: n
Function
cauta(x[0..n — 1], v)
1 I <- 0 . ﬁ
2 wihile x[l]! I v and 2 2 t(n)+1
3 I <— I + 1 4 1 1
4 if x[i] f: v then 5 1 1
5 gaSIt <— true 6 l 1
else —
6 gasit <— false T(”) : 1 + 3t(”) + 4
return gas/t
end
Curs 2 SD 2021/2022 19/52

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Exemplul 4. Céutarea secventialé
Timpul de executie depinde de:
V dimensiunea problemei;
> proprietétile datelor de intrare.
> Cazul cel mai favorabil
P x[O]:v:>t(n):O:> T(n):5
> cazul cel mai nefavorabil
> x[n—1]: vsau
(v! I ><[O],...7 v! I X[n i 1]) i t(n) I n i 1 i T(n) I 3n+ 2
V Dacé’ se consideré ca operatie dominanté comparatia x[i]! : v:
P cazul cel mai favorabil: T(n) : 2;
V cazul cel mai nefavorabil: T(n) : n+ 2.
Curs 2 SD 2021/2022 20/52

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Exemplul 5. Sortarea prin insertie
lntrare: o secventé’ de numere (a1, ...,a,,)
le$ire: o permutare (361,...,a0”) astfel Tncét a‘,1 5 a02 5, . . . , g at,”
Dimensiunea problemei: n
cl 51 i E :2 @va
CHM SD2021/2022 21/52

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Exemplul 5. Sortarea prin insertie
Intrare: o secventé de numere (21, ...,a,,)
|e$ire: o permutare (am, ..., a0") astfel Tncét ac,1 g ac,2 g, . . . , g a0”
Dimensiunea problemei: n
Procedure insertion-sort(a[0..n — 1]7 n )
begin
1 forj<—1ton—1do
2 key H aLi]
3 i ej — 1
4 while i >2 0 and a[i] > key do
5 a[i + 1] e a[i]
6 i <- i— l
7 a[i + 1] <— key
end
1 i j n
F _
—a
sorted key
Curs 2 so 2021/2022 21/52

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Sortare prin insertie - exemplu
8 1 4 9 2 6

E1 ﬁ ' _= IE ‘)RO

Curs 2 SD 2021/2022 22/ 52

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Sortare prin insertie - exemplu
8 1 4 9 2 6
I I 4 9 2 6

El r51 ’ E :5 QQG

Curs 2 SD 2021/2022 22/52

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Sortare prin insertie - exemplu
8 1 4 9 2 6
I I 4 9 2 6
I I I 9 2 6
El 5' ’ E :5 QQG
Curs 2 SD 2021/2022 22/52

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Sortare prin insertie - exemplu
8 1 4 9 2 6
I I 4 9 2 6
I I I 9 2 6
I I I I 2 6
Curs 2 SD 2021/2022 22/52

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Sortare prin insertie - exemplu
8 1 4 9 2 6
I I 4 9 2 6
I I I 9 2 6
I I I I 2 6
I I I I I 6
Curs 2 SD 2021/2022 22/52

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Sortare prin insertie - exemplu
8 1 4 9 2 6
I I 4 9 2 6
I I I 9 2 6
I I I I 2 6
I I I I I 6
I I I I I I
Curs 2 SD 2021/2022 22/52

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Sortare prin insertie - exemplu
8 1 4 9 2 6
I I 4 9 2 6
I I I 9 2 6
I I I I 2 6
I I I I I 6
I I I I I I
I I I I I I
1 2 4 6 8 9
Curs 2 SD 2021/2022 22/52

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Exemplul 5. Sortarea prin insertie
Operatie Cost Nr. repetéri
1 C1 n
2 c2 n 1 1
3 C3 n — 1
4 C4 217:2 tj
n
5 C5 21:20)‘ — 1)
n
6 C6 2j:2(tj — 1)
7 C7 n — 1
T(n) : c1n + c2(n — 1) + C3(n — 1) + C4 257:2 tj + C5 257:2(13- — 1) +
C6 217:2(tj — 1) + C7(I1 — 1)
Curs 2 SD 2021/2022 23/52

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Exemplul 5. Sortarea prin insertie
> Timpul de executie depinde de:
P dimensiunea problemei;
P proprietétile datelor de intrare.
El 5' i E :5 {JQCV
CHM 5D 2021/2022 24/52

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Exemplul 5. Sortarea prin insertie
> Timpul de executie depinde de:
P dimensiunea problemei;
V proprietétile datelor de intrare.
> Cazul cel mai favorabil: tabloul este sortat.
tj:1, j:2,...,n
T(n):(c1+c2+C3+C4+C7)n—(c2+C3+C4+C7)
Curs 2 SD 2021/2022 24/52

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Exemplul 5. Sortarea prin insertie
> Timpul de executie depinde de:
P dimensiunea problemei;
V proprietétile datelor de intrare.
> Cazul cel mai favorabil: tabloul este sortat.
tj:1, j:2,...,n
T(n):(c1+c2+C3+C4+C7)n—(c2+C3+C4+C7)
> Cazul cel mai nefavorabil: tabloul este sortat Tn ordine inversé.
tjzj, j:2,...,n
T(n) : c1n+(n—1)(c2+C3+C7)—|-C4(w—1)+C5@+c6@
I (%+%+%)n2+(C1+C2+C3-F%—%—%+C7)H—(C2+C3+C4+C7)
Curs 2 SD 2021/2022 24/52

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
Exemplul 5. Sortarea prin insertie
> Timpul de executie depinde de:
V dimensiunea problemei;
V proprietétile datelor de intrare.
> Cazul cel mai favorabil: tabloul este sortat.
tj:1, j:2,...,n
T(n):(c1+c2+C3+C4+C7)n—(c2+C3+C4+C7)
> Cazul cel mai nefavorabil: tabloul este sortat Tn ordine inversé.
tjzj, j:2,...,n
T(n) : c1n+(n—1)(c2+C3+C7)—|-C4(w—1)+C5@+c6@
I (%+%+%)n2+(c1+cz+C3+%—%—%+C7)n—(c2+C3+64+C7)
> Cazul mediu: toate permutérile au aceea$i probabilitate de aparitie.
> Este sortarea prin insertie un algoritm rapid?
Curs 2 SD 2021/2022 24/52

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Anallza algorltmllor
P Cazul cel mai favorabil
P O margine inferioaré a timpului de executie;
P Identificarea algoritmilor ineficienti:
P dacé un algoritm are un cost ridicat Tn cazul cel mai favorabil, atunci el
nu reprezinté o solutie acceptabilé.
P Cazul cel mai nefavorabil
P Cel mai mare timp de executie Tn raport cu toate datele de intrare
posibile;
P O margine superioaré a timpului de executie;
P Marginea superioaré este mai importanté decét cea inferioaré.

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Analiza In cazul mediu
P Existé’ situatii cénd cazul cel mai favorabil $i cel mai nefavorabil sunt
cazuri rare (exceptii):
P analiza Tn cele doué cazuri nu furnizeazé’ suﬁcienté informatie.
P Analiza in cazul mediu furnizeazé informatii privind comportarea
algoritmului Tn cazul unor date de intrare arbitrare.
P Se bazeazé pe cunoasterea distributiei de probabilitate a datelor de
intrare.
P Cunoasterea (estimarea) probabilitﬁtii de aparitie a fiecéreia dintre
instantele posibile ale datelor de intrare.
P Timpul mediu de executie este media timpilor de executie
corespunzatori instantelor datelor de intrare.

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Analiza Tn cazul mediu
V Ipoteze privind distributia de probabilitate a datelor de intrare:
V datele de intrare pot fi grupate Tn clase (timpul de executie este ace|a$i
pentru datele din aceea$i clasé);
V avem m clase cu date de intrare;
P probabilitatea de aparitie a unei date din clasa k este Pk;
F timpul de executie pentru date din clasa k este Tk(n).
> Timpul mediu de executie este:
Ta(n) I P1 T1(n) + P2 T2(n) + + Pm Tm(n)
V Dacé toate clasele au aceea$i probabilitate de aparitie:
Ta(n) : (T1(n) + T2(n) + + Tm(n))/m

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Exemplul 4. Céutarea secventialé (revizitat)
P lpoteze:
P probabilitatea ca v $5 se afle Tn tablou: p
P v apare cu aceeasi probabilitate pe ﬁecare pozitie din tablou;
P probabilitatea ca v 55 se afle pe pozitia k: p/n;
P probabilitatea ca v sé’ nu se afle Tn tablou: 1 — p.
1+2+..+ +1
> Unpwﬂhmn:%+(1_p)n:(1_g)n+g
P dacé p : 0.5, atunci Ta(n) : in + %;
P timpul mediu depinde liniar de dimensiunea datelor de intrare.
P Observatie: timpul mediu nu este Tn mod necesar media aritmeticé a
timpilor de executie corespunzatori cazurilor extreme.

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Etapele analizei algoritmilor
1. ldentiﬁcarea dimensiunii problemei.
2. Identificarea operatiei dominante.
3. Estimarea timpului de executie (determinarea numirului de executii
ale operatiei dominante).
4. dacé timpul de executie depinde de proprietﬁjcile datelor de intrare,
atunci se analizeazé’:
P cazul cel mai favorabil;
V cazul cel mai nefavorabil;
> cazul mediu.
5. Se stabi|e$te ordinul (clasa) de complexitate.
CHM 9920210022 29/52

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Analiza eficientei algoritmilor
> Scopul principal: determinarea modului in care timpul de executie
cre$te odaté cu cre$terea dimensiunii problemei.

> Nu e necesar $5 se cunoasca expresia detaliaté a timpului de executie

> Este suficient 55 se identifice:
> ordinul de cre$tere al timpului de executie;
P clasa de eficienté (complexitate) céreia ii apartine algoritmul.

CHM SD2021/2022 3O/52

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Continut
Analiza eﬁcientei algoritrnilor
Exemple de calcul
Ordin de crestere
Notatie asimptoticé
E1 ﬁ ' _= :E ‘)‘KO
Cur” S'92021/2022 31/52

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Ordin de cre$tere
V Termen dominant: termen care devine semniﬁcativ mai mare decét
ceilalti atunci cénd dimensiunea problemei cre$te.
V Dicteazé comportarea algoritmului cénd dimensiunea problemei cre$te.
Timp de executie Termen dominant
T1(n) : an + b an
T2(n) : a/ogn + b a/ogn
T3(n) : an2 + bn + c an2
T4(n) : a” + bn + c a"
(a > 1)
CHM 9920210022 32/52

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Ordin de cre$tere
> Ordin de crestere: caracterizeazé' cre$terea termenului dominant al
timpului de executie Tn raport cu dimensiunea problemei.
CHM SD2021/2022 33/52

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
Ordin de cre$tere

> Ordin de crestere: caracterizeazé' cre$terea termenului dominant al
timpului de executie Tn raport cu dimensiunea problemei.

P Ce se Tntémplé cu termenul dominant cénd dimensiunea problemei
cre$te de k ori?

T1(n) I an T1’(kn) I akn I kT1(n) liniar

T2(n) I a/ogn T2’(kn) I alog(kn) I T2(n) + a/ogk logaritmic

T3(n) : an2 T3’(kn) : a(kn)2 : k2T3(n) pétratic

T4(n) I a” Tﬂkn) I ak” I (a”)k I T4(n)k exponential

Curs 2 SD 2021/2022 33/52

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Ordin de cre$tere
Permite compararea a doi algoritmi:
V algoritmul cu ordinul de cre$tere mai mic este mai eﬁcient;
> comparatia se realizeazé pentru valori mari ale dimensiunii problemei
(cazul asimptotic).
Exemplu: g '
T1(n) : 10n + 10 é 5 _'
T2(n) : n2 g -
Cl 1U 20 30 4D
CHM SD2021/2022 34/52

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
O comparatie a ordinelor de crestere

Dependenta timpilor de executie a diferifci algoritmi Tn raport cu

dimensiunea problemei (considerém un procesor ce realizeazé 106

instructiuni pe secundé); dacé timpul de executie depa$e$te 1025 ani,

aﬁ$§m “nu”.
10 < 1 sec < 1 sec < 1 sec < 1 sec < 1 sec 4 sec
3O < 1 sec < 1 sec < 1 sec < lsec 18 min nu
50 < 1 sec < 1 sec < 1 sec < lsec 36 ani nu
102 < 1 sec < 1 sec < 1 sec 1 sec 1017 ani nu
103 < 1 sec < 1 sec 1 sec 18 min nu nu
104 < 1 sec < 1 sec 2 min 12 zile nu nu
105 < 1 sec 2 sec 3 ore 32 ani nu nu
106 < 1 sec 20 sec 12 zile 31710 ani nu nu

Curs 2 SD 2021/2022 35/52

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Ordin de cre$tere
Pentru a compara ordinele de cre$tere a doi timpi de executie Tl(n) $i
u - T1(n)

T2(n), calculam llmn—>ooT(n)

> dacﬁ lim : 0: Tl(n) are un ordin de cre$tere mai mic decét T2(n);

> dacé lim : c, c > O constantﬁ: T1(n) 5i T2(n) au ace|a$i ordin de

cre$tere;
> dacﬁ lim : 00: T1(n) are un ordin de cre$tere mai mare decét T2(n).
Curs 2 SD 2021/2022 36/52

***************Ending Page***************


***************Beginning Page***************
***************page number:53**************
Conti n ut
Notatie asimptoticé
El r51 ' _= :E J) Q9
Cm 2 5D 2021/2022 37/ 52

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Analiza asimptoticé

> Analiza timpilor de executie pentru valori mici ale dimensiunii
problemei nu permite diferentierea Tntre algoritmi eficienti si
ineficienti.

> Diferentele dintre ordinele de cre$tere devin din ce Tn ce mai
semniﬁcative pe masuré ce dimensiunea problemei cre$te.

> Analiza asimptoticﬁ: studiul proprietétilor timpului de executie
atunci cénd dimensiunea problemei tinde cﬁtre inﬁnit (probleme de
dimensiune mare).

V algoritmul poate ﬁ Tncadrat Tn diferite clase identiﬁcate prin notatii: O,
Q, G)
CHM SD2021/2022 38/52

***************Ending Page***************


***************Beginning Page***************
***************page number:55**************
Ordine de cre$tere asimptoticé. Notatia O
Fie f,g : N —> R+ doué functii care depind de dimensiunea problemei.
Definitie
O(g(n)) : {f(n) : Elc > O, Elng E N af. Vn >: n0,0 <: f(n) <2 cg(n)}.
Notatie: f(n) : O(g(n))
(f(n) are un ordin de cre$tere cel mult egal cu cel al lui g(n).)

Curs 2 SD 2021/2022 39/52

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
Notatia O
6"‘ng
ﬁn)
|
|
|
|
|
l1
n0
Pentru valori suficient de mari ale lui n, f(n) este marginité superior de
g(n) multiplicaté cu o constanté pozitivé.
cl 51 i E :2 0&0
W52 SD2021/2022 40/52

***************Ending Page***************


***************Beginning Page***************
***************page number:57**************
Notatia O
Exemple:
1. T(n) I 3n+ 3 ¢ T(n) G O(n)
4n >: 3n+3,c:4,n0 :3,g(n) : n
III 5' i E :5 QQQ
Curs 2 SD 2021/2022 41/52

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
Notatia O
Exemple:
1. T(n) I 3n+ 3 => T(n) G O(n)
4n >: 3n+3,c:4,n0 :3,g(n) : n
2. 3,12 _ 100” + 6 z 0(n2)
3,12 > 3,12 - lOOn + 6
El r51 i E :5 ‘JQCV
Curs 2 SD 2021/2022 41/52

***************Ending Page***************


***************Beginning Page***************
***************page number:59**************
Notatia O
Exemple:
1. T(n) I 3n + 3 i T(n) 6 0(n)
4n >: 3n+37c:4,n0 :3,g(n) : n
2. 3,12 _ 100” + 6 z O(n2)
3n2 > 3n2 — lOOn + 6
3. 3n2 — lOOn + 6 I O(n3)
0.01n3 > 3n2 — lOOn + 6
Curs 2 SD 2021/2022 41/52

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
Notatia O - proprietﬁfci
1. f(n) € O(f(n)) (reflexivitate).
2. f(n) 6 O(g(n)),g(n) € O(h(n)) :> f(n) € O(h(n)) (tranzitivitate).
3. Dacé T(n) : adnd + ad_1nd_1 + + aln + an atunci T(n) E O(nk)
pentru orice k >: d.
P exemplu: n € O(n2)
4. Dacé pentru cazul cel mai nefavorabil obtinem T(n) <: g(n), atunci
T(n) Q O(g("))-
F Céutarea secvenfcialﬁ: 5 g T(n) g 3n + 2 :> algoritmul este din
clasa O(n).
Curs 2 SD 2021/2022 42/52

***************Ending Page***************


***************Beginning Page***************
***************page number:61**************
Notatia Q
Definijcie
Q(g(n)) : {f(n): Elc > O, no € N af. Vn >: n0 : f(n) Z cg(n)}
Notatie: f(n) : Q(g(n))
(f(n) are un ordin de crestere cel putin la fel de mare ca cel al lui g(n).)
Exemple:
1. T(n) : 3n + 3 :> T(n) E Q(n)
3n <: 3n+3,c:3,n0 : 1,g(n): n
2. 5 <: T(n) <: 3n + 2 :> T(n) e 9(1)
c:5,n0 : l,g(n) : l
Curs 2 SD 2021/2022 43/52

***************Ending Page***************

***************Beginning Page***************
***************page number:62**************
Notatia Q
ﬁn)
11*ng
|
|
I
|
|
n
n'lf]
Pentru valori mari ale |ui n, funcfcia f(n) este marginité inferior de g(n)
multiplicaté eventual cu oconstanté’ pozitivé. U a, i E :5
CHM SD2021/2022 44/52

***************Ending Page***************


***************Beginning Page***************
***************page number:63**************
Notatia Q - proprietéti
1. f(n) G Q(f(n)) (reflexivitate).
2. f(n) G Q(g(n)),g(n) G Q(h(n)) :> f(n) G Q(h(n)) (tranzitivitate).
3. Dada’ T(n) I adnd + adilndil + + a1n + a0 atunci T(n) G Q(nk)
pentru orice k <2 d.
V exemplu: n2 G Q(n)
Curs 2 SD 2021/2022 45/52

***************Ending Page***************

***************Beginning Page***************
***************page number:64**************
Notatia 6
Definitie
9(g(")) I
{f(n) : Elcl,C2 > O, no G N 3.1”. Vn Z no : c1g(n) g f(n) g c2g(n)}.
Notatie: f(n) : @(g(n))
(f(n) are ace|a$i ordin de cre$tere ca 5i g(n).)
Exemple:
1. T(n) : 3n + 3 :> T(n) G @(n)
Cl :27C2 :47n0 :31g(n) I n
2. Determinarea minimului unui tablou:
3n <2 T(n) <2 4n — 1 i T(n) G 9(n)
C1 :37c2:4,n0:1
Curs 2 SD 2021/2022 46/52

***************Ending Page***************


***************Beginning Page***************
***************page number:65**************
Notatia 6
cl*g{n]
tin]
c2*g[n)
|
|
|
|
|
n
n0
Pentru valori suﬁcient de mari ale Iui n, f(n) este marginité, atﬁt superior
cét $i inferior de g(n) multiplicaté cu ni$te constante pozitive.
CHM SD2021/2022 47/52

***************Ending Page***************

***************Beginning Page***************
***************page number:66**************
Notatia 6 - proprietéti
1. f(n) € 9(f(n)) (reflexivitate).
2. f(n) G @(g(n)),g(n) E 9(h(n)) :> f(n) G @(h(n)) (tranzitivitate).
3. f(n) € 9(g(n)) :> g(n) G @(f(n)) (simetrie).
4. Daci T(n) : adnd + ad_1nd_1 + + aln + a0 atunci T(n) 6 9(nd).
5. 9(cg(n)) : @(g(n)) pentru orice constanté c.
Cazuri particulare:

> 9(c) : 9(1)

P @(logah(n)) : 6(logbh(n)) pentru orice a, b > 1
6- 9W") + $01)): 9(maX{f("),g(n)})

Curs 2 SD 2021/2022 48/52

***************Ending Page***************


***************Beginning Page***************
***************page number:67**************
Notatia 6 - proprietéti

7- e(5501))C 0(g("))-
Exemplu: f(n) I lOnlgn + 5, g(n) I n2
f(n) g g(n) pentru orice n Z 36 :> f(n) 6 O(g(n))
Dar nu existé constante c 5i n0 astfel Tncét cn2 g 10nlgn + 5 pentru
orice n Z no.

8- 9(g(n)) C Q($01))-
Exemplu: f(n) : lOn/gn + 5, g(n) : n
f(n) Z 10g(n) pentru orice n Z 1 :> f(n) E Q(g(n))
Dar nu exists”; constante c $i no astfel Tncét lOn/gn + 5 g cn pentru
orice n Z n0.

9- @(g(")) I 0(g(")) O Q(g("))-

Curs 2 SD 2021/2022 49/52

***************Ending Page***************

***************Beginning Page***************
***************page number:68**************
Notatia 6 - exemple

1. Tnmulfcirea a doué matrici: T(m, n, p) I 4mnp + 5mp + 4m + 2.
Extinderea deﬁnitiei (Tn cazul Tn care dimensiunea problemei depinde
de mai multe valori):
f(m, n, p) E 6(g(m, n,p)) dacé’ existé’ c1, c2 > 0 $i m0, n0,p0 G N
astfel Tncét c1g(m7 n,p) g f(m7 n, p) g c2g(m, n,p) pentru orice
m 2 m0,” 2 n01PZ P0-
Astfel T(m, n,p) G (9(mnp).

2. Céutare secventialé: 5 g T(n) g 3n + 2.
Dacé T(n) : 5 atunci nu se poate gési c1 astfel Tncét 5 Z c1n pentru
valori suficient de mari ale lui n i T(n) nu apartine lui @(n).

Curs 2 SD 2021/2022 50/52

***************Ending Page***************


***************Beginning Page***************
***************page number:69**************
Notatia 9 - exemple
T(n) %
n "0
Cénd n este suﬁcient de mare, un algoritm cu o complexitate 9(n2) este
mai eficient decét unul cu complexitatea @(n3).
CHM SD2021/2022 51/52

***************Ending Page***************

***************Beginning Page***************
***************page number:70**************
Clasiﬁcarea algoritmilor folosind notatia O

0(1) c O(|og n) c 00ng n) c 0(n) c O(n2) c c O(nk+1) c 0(2")
{A |TA(n) : 0(1)} : clasa algoritmilor constanti;
{A |TA(n) : O(|og n)} : clasa algoritmilor logaritmici;
{A |TA(n) : O(/ogkn)} : clasa algoritmilor polilogaritmici;
{A |TA(n) : O(n)} : clasa algoritmilor liniari;
{A |TA(n) : O(n2)} : clasa algoritmilor pétratici;
{A |TA(n) I 0(nk+1)} I clasa algoritmilor polinomiali;
{A |TA(n) : O(2”)} : clasa algoritmilor exponentiali.

(k 2 2)

Curs 2 SD 2021/2022 52/52

***************Ending Page***************

