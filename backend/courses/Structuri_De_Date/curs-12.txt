***************Beginning Page***************
***************page number:1**************
SD 2021/2022
<E|> <ﬁ>4IE>4IE> IE OQO

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Arborl dlgltall (Tr/es)
P Information retrieval
> O structuré de date pentru a lucra cu $iruri de caractere care
beneﬁciazé de proprietﬁtile structurale ale acestora
> Spatiul de memorie necesar reprezentérii unui dictionar este redus:
rédécina comuné este reprezentaté o singuré’ daté
> Economie de memorie cand existé multe prefixe comune
i S
n a e u
i r r I n
e e C I;
i
Cm 12 SD2021/2022 2/8

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Arbori digitali
P Structurﬁ de date care se bazeazﬁ pe reprezentarea digitalﬁ a
elementelor
> Un arbore cu rédacinﬁ ordonat k-ar, unde k este numirul de cifre
(litere din alfabet)
V Se presupune c5 elementele sunt reprezentate prin secvente de cifre
(litere) de aceea$i lungime m (\U| : mk)
1 2
0 2 1
2 0 1 0 2
102 120 121 210 211 212
Cm 12 SD2021/2022 3/8

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Arbori digitali - Structura de date
> O colectie de noduri, ﬁecare nod avénd k ﬁi
> Presupunem alfabetul {O7 . . . , k — 1}; elementele din 5 sunt chei, iar
nodurile de pe frontieré memoreazi informatiile asociate acestor chei
O 1 2
gliil€\ 0 1 2
o 1 ,2 0 1I 2 @K 12
E S E E S E
Cm 12 SD2021/2022 4/8

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Arborl dlgltall
Un arbore digital care memoreazé 0 colectie de cuvinte S, |S| I n dintr-un
alfabet de mérime k, are urmétoarele proprietﬁfci:
> orice nod intern are cel mult k fii
V arborele are n noduri externe
V Tnélfcimea arborelui este egalé cu lungimea celui mai mare cuvént din S
Cm 12 SD2021/2022 5/8

***************Ending Page***************


***************Beginning Page***************
***************page number:6**************
Arbori digitali - Céutarea
> Cauté un element a Tn structura t: parcurge drumul descris de
secvenfca zi[O]7 . . . a[m — 1]
Function cauta(a, m, t)
begin
i <— 0
p <— t
while (p yé NULL AND i < m) do
p <— p —> succ[a[i]]
i <— i+ 1
return p
end
> Complexitatea timp pentru cazul cel mai nefavorabil: O(m)
Curs 12 SD 2021/2022 6/8

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Arbori digitali - Inserarea
> Inserarea unui cuvant xTn structura t: simuleazé parcurgerea
drumului descris de secventa x[0], . . .x[m — 1]; pentru componentele
pentru care nu existé noduri Tn t, adaugé un nod nou
O 1 2
€§€l\ 0 1 2
0 1 ‘ﬁfz W 12
Figura: Inserarea cheii 110
Cm 12 SD2021/2022 7/8

***************Ending Page***************


***************Beginning Page***************
***************page number:8**************
Arbori digitali - Stergerea
> Un element x care trebuie eliminat este Tmpértit Tn:
P un prefix comun
V un sufix care nu mai apartine niciunui element
> Se parcurge drumul descris de x 5i se memoreazé Tntr-o stivé
> Se parcurge acest drum Tnapoi $i dacé pentru un nod toti succesorii
sunt nil, atunci se elimini nodul
0 l 2
|?1?€l\\ 0 1 2
£0 1 2‘\ W
Figura: Eliminarea cheii 102
Cm 12 SD2021/2022 8/8

***************Ending Page***************

