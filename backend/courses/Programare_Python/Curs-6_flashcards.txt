[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the base class from which all exceptions in Python are derived?
--InteriorSeparator--
BaseException
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following exception types are built-in exceptions in Python?
--InteriorSeparator--
(right) ArithmeticError
(right) IndexError
(wrong) MyCustomError
(wrong) FileNotFoundError
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What keyword is used to define a block of code that will always be executed after a `try` block, regardless of whether an exception occurred?
--InteriorSeparator--
finally
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of the `else` block in a `try-except` statement?
--InteriorSeparator--
(right) It contains code that is executed only if no exceptions were raised in the `try` block.
(wrong) It contains code that handles specific exceptions.
(wrong) It is equivalent to the `finally` block.
(wrong) It is used to define custom exceptions.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens when a `raise` keyword is used without any parameters inside an except block?
--InteriorSeparator--
The current exception is re-raised.
--InteriorSeparator--
hard
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What keyword in Python is used to raise an exception based on the evaluation of a condition?
--InteriorSeparator--
(right) assert
(wrong) raise
(wrong) except
(wrong) try
--InteriorSeparator--
medium
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `pass` keyword in an `except` block?
--InteriorSeparator--
To catch an exception but do not process it.
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the `dir()` function return when used with a module?
--InteriorSeparator--
(right) A list of all the functions and objects that a module exports.
(wrong) The documentation for the module.
(wrong) The source code of the module.
(wrong) A dictionary of all the variables defined in the module.
--InteriorSeparator--
medium
--InteriorSeparator--
19
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of `sys.argv`?
--InteriorSeparator--
A list of all parameters sent to the python script.
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the first element (index 0) of `sys.argv`?
--InteriorSeparator--
(right) The name/path of the script.
(wrong) The first argument passed to the script.
(wrong) The current working directory.
(wrong) The Python interpreter's version.
--InteriorSeparator--
easy
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which `os` module function is used to list the contents of a folder?
--InteriorSeparator--
os.listdir
--InteriorSeparator--
easy
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which `os.path` function returns the directory name of a path?
--InteriorSeparator--
(right) os.path.dirname
(wrong) os.path.basename
(wrong) os.path.join
(wrong) os.path.splitext
--InteriorSeparator--
medium
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Which `os` function allows you to execute a system command?
--InteriorSeparator--
os.system
--InteriorSeparator--
medium
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are ways to work with I/O in Python?
--InteriorSeparator--
(right) via keyboard (with input)
(right) via the `print` keyword
(wrong) via the `console` keyword
(wrong) via `socket`
--InteriorSeparator--
easy
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In Python 3.x, what data type is returned by the `input()` function?
--InteriorSeparator--
string
--InteriorSeparator--
easy
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the `open()` function's mode "x" do?
--InteriorSeparator--
(right) exclusive creation (fail if file exists)
(wrong) write
(wrong) append
(wrong) read
--InteriorSeparator--
medium
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What file object method returns the current file position?
--InteriorSeparator--
f.tell()
--InteriorSeparator--
medium
--InteriorSeparator--
33
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which file object method is used to read a single line from a file?
--InteriorSeparator--
(right) f.readline()
(wrong) f.read()
(wrong) f.readlines()
(wrong) f.readall()
--InteriorSeparator--
medium
--InteriorSeparator--
33
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a good practice to embed file operations in?
--InteriorSeparator--
try block
--InteriorSeparator--
easy
--InteriorSeparator--
35
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
If a file is opened in "rb" mode in Python 3.x and the read() method is called, what will be the return type?
--InteriorSeparator--
(right) a buffer or string depending on how the file is opened
(wrong) string
(wrong) character
(wrong) integer
--InteriorSeparator--
hard
--InteriorSeparator--
34
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the `from <exception_var>` clause in `raise Exception("Error") from e` do?
--InteriorSeparator--
Chains the current exception to the original exception.
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the proper way to handle multiple exception types in a single `except` block?
--InteriorSeparator--
(right) `except (Type1, Type2, ..., Typen):`
(wrong) `except Type1 or Type2 or ... or Typen:`
(wrong) `except Type1, Type2, ..., Typen:`
(wrong) `except Type1: except Type2: ... except Typen:`
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why must a generic exception handler be the last `except` block?
--InteriorSeparator--
Because it will catch all exceptions and prevent more specific handlers from being executed.
--InteriorSeparator--
hard
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What output will the following code produce?
```python
try:
    x = 5 / 0
except Exception as e:
    print(str(e))
```
--InteriorSeparator--
(right) division by zero
(wrong) Exception
(wrong) Error
(wrong) 0
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If the 'newline' parameter is set to None when opening a file in text mode, what character will be considered a new line?
--InteriorSeparator--
The character that is specific for the current operating system.
--InteriorSeparator--
hard
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens if `SystemExit` exception is raised (and not handled)?
--InteriorSeparator--
(right) It will immediately terminate your program.
(wrong) It will print an error message to the console.
(wrong) It will continue execution from the next line.
(wrong) It will restart the program.
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How do you import all names from a module into the current namespace?
--InteriorSeparator--
from module import *
--InteriorSeparator--
easy
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which `os` module function is used to create a new directory (folder)?
--InteriorSeparator--
(right) os.mkdir
(right) os.mkdirs
(wrong) os.newdir
(wrong) os.createdir
--InteriorSeparator--
medium
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
If a file "a.py" is opened in "rb" mode using `f = open("a.py","rb")`, what will `f.closed` return before calling `f.close()`?
--InteriorSeparator--
False
--InteriorSeparator--
hard
--InteriorSeparator--
36
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.12352006787696655}]