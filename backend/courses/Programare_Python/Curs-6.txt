***************Beginning Page***************
***************page number:1**************
\I\I\I\I\I\I\I\
I Qﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ \
I \ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ§ﬂ\ﬂ\ﬂ \
I\I\I\I\I\I\I\l
PROGRAMMING IN PYTHON ‘ ifﬂffw‘

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Exceptions in Python have the following form:

Python a“ Python 3.x

uy: try:
trod; X : 5 / D

except : except:
mmp rm wn' be Merged u print("Except1<>n")
M:a:& of ar'; exception

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Exceptions in Python have the following form:
Python 3.x Pylhon 3.x
tzy: cry:
‘mode x = 5 / 1
except: except:
"code tut mi, be ExeCJted 1r print("EXcepthn")
#:nsw w my PM?!» m‘ .15.:
else: print("All 0k"!
#c'ode mac ww he‘ eXeWJJted w
Hkrro ,s r1, oxcrpluwn
Ouapuv
Allok

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
All exeepliens in pyvllen are derived from BuseExcepIion class‘ There are mulnple
types of exceptions including: AriIhmelicError, BuffelErmr, AmibuIeEIror,
FloulingPoinlElror, lndexErIor, Keybacrdln'errupl, Nollmplemenledirror,
OverflowError, lndenIalionErrol, and many more‘

A list of all the exceptions can be found on:

- hngm[deeslgxlhemrg[3.8[library1exeegvienmmwsxeegllen

' hﬂgsjldocsvgyihonprg [3.9 [library [excegfionshlmWExcegll'on

A custom (user-deﬁned) exception lype can also used lmere on this topic el
“Clusses'l

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Exceptions in Pyihon have the following form:
Pthon 3.x Python 3.1
try: dai Test (y):
try:
except ExceptionTypel: x : 5 / y
\ except ArithlneticError:
except Exceptien'rypez: print("ArlthmetlcError")
\ ~ except:
except: print("Generic exceptlon")
~ else:
else: print("All 0k") ompm
' ArilhmeﬁcError
‘ TESUO) Generic exce ﬂan
w w P
Test( aaa ) Allok
Test(1)

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Exceptions in Python have the following form:
Python a,‘ Python 3.x
try: def Test (y):
try:
except ExceptionTypel: x = 5 /
except:
excep - 1 i 1 trot:
except: print1"A1‘th'r\eL,uE:ror")
else:
else: print1"All o'<"}
Test (0) Generic excepﬁnn m-‘m be
Test ("dam") the lasI one. c914; Wu "0|
Test (1» compxle.

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Python also have c finally keyword that can be used to executed something at the
end of the try block.
Python 3.x Python 3.x
try: def Test (y):
“y; Outpul
except: x Z 5 / y IeaLQh
t t except: Em,
else: print ("Error") Hm
t else:
print("All ck") 19511:
finally: finally: All ok
t t print ("Final") Hm
t Test (0t
t Test (1t

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Python cllso have d ﬁndlly keyword that CU" be used to executed something ev the
end of the try block.
Python 1X Pyllwn 3.x
try: def Test 1y):
“Y: Finally musl he lhe lusl
except: X Z 5 / Y slu'emenl
except:
else: , I _ "
finally:
finally: e sex
printi"All 0k")
Test (U)
Tesul)

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Exceptions in Pyihon have the following form:
Pyihun 3.x Pylhon 3.x
try: def Test (y):
x try:
except (Typen'fypezpl'ypen): x : 5 / y
\ ~ excepc (ArithmetidEzzoz,TypeErzor)z
' , , pnnc (“Anchmeticlsnorw
except: except:
x \ ~ print("Generic exception")
else: else:
\ prlnt("All 0k") Ouipuo
' ArithmeticError
Test (U) ArithmeticEVVOr
Test ("eee'W A" 0k
Test (1i

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Exceptions in Pyihon have the following form:
Pyihon 3.x Pylhon 3.:
try: try:
r -: x : 5 / O
except Typex as <variname>: except Exception as e:
, - \ ~ , i print‘ acne» >
except:
else: Ovlpul
' ‘ dMsIon by 0

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
Exceptions in Python have the following form:

Pylhan 3.x

my:

excepc (Typev'ly'pezwlypen) as <vaz>1
‘r:ocx% m1 excegrilcri :1 tyie 1,2, :1

my;
x : 5 / D

excapt (Exception,Aricmciczzzoz,TypaEzzuz) a: e:
princ1 str(eh typﬂe) )

Ouipvi

P10hon3: dlvlslon by zero <clnss 'ZeroDMslmErrol'>

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Python also has another keyword (raise) the" can be used m creme / throw on
exception:
Python 34x
raise BxceptionType 1parameters)
raise Bxception'l'ype (parameters) from <excsptionivar>
try:
raise Excaption("Testing {Else command")
except Exception as e:
print (e)
Ou'pu!

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
Each exception has a list of arguments (parameter args)

Pthon 3.x
cry:

rais. EXCIPCiBnU'Paraml", 10, "Param3")
emepc Exception as e:

params = e.args

prim: (1en(params)|

print (Params [01)

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
raise keyword can be used without parameters. In this case it indicates that the
current exception should be re-ruised.
Pytlwn 3.x
try:
try:
X : 5 / O
except Exception ac e:
print ie)
raise z
except Exception as e;4...............'
printi"Return {mm :aise —> “, e)
Output (Pythen 3.x)
division by zero
Retum from raise -> division by zero

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Python 1x supports chaining exception via from keyword.
Python 3.!
1 try:
2 x : 5 / U
3 except Exception as e:
4 raise Exception(“Erhor") from e
Oulpu'
Truceback [mniv reoenvoull km):
Flln Hwy‘: Im- 2, n- <Ilwdlﬂe>
x=5/n
ZlmDivilinnEnw: diviﬁun by {m
Wmnmuhlmnmmm
Truceback {mm reoemoull Ion]:
Flln "mPY-v Ilne A4 In <Mu\e>
In!“ Exaepﬁlnﬂ'ﬁm") am .
Exceptiun: Elm!

***************Ending Page***************


***************Beginning Page***************
***************page number:16**************
Python has a special keyword (asserl) that can be used to raise an exception based
on the evalua'ion of a condi'ion:
Pyﬂmn 3.x
age : -1
try:
assert (age>0) , "Age should be a positive number“
except Exception as e:
print 1e!
owpm
Age should b8 a pusiﬁve number

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
puss keyword is usually used if you wcmt to catch an excepiion but do not wan. ho
- rocess iI.
Python 34x
try:
X : 10 / 0
except:
pass
Some eXCeplions [if not handled) CG" be used for various purposes.
Python 34x W _ ( )‘r
., _ “ IS excephun | OW?"
PPM‘ TE“ ' . nol handle will imediaielly _
‘alga SYSteMX1t Ierminuie your program Te“
print ("TestZ")

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
l MODULES
Modules are pyvhon‘s libraries and extends python functionality. Python has a special
l<e word im-orl lhat can be used la lm-ort modules.
Formal (Python 3.x)
Classes or items from a module can be imported separately using lhe following
Syntax.
Formal (Python 3.x)
from module import *
When importing a module aliases can also be made using “as” keyword
Formal (Python 3.x)

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Python has u lot of default modules (as, sys, re, mth, etc)‘
There is else e keyword (dir) rhel eeri be used re elsreiri e lisl el ell lhe hirielieris errd
ob'ecls that a module ex-orls.

Former lelheri 3.x)

import math

purl: ( dix-(maLh) )

Quip“! [Python 3.x)

Lew; 'ilcaderi', ‘file-ref‘. 'Jﬂckaqei‘r use‘; ‘deer’, 'uwsh', ‘esih'. 'esihh', 'd'an', 'amnT, ‘elem’, 'eeil', Envysiyn', ‘ms',
'wsh', deems‘, ‘e', ‘m’. 'nrk', ‘up’, ‘mi-ll‘, Webs‘, ‘leeeriel', 'Hooi', 'lmod', ‘imp', 'lwm', 'gumma', ‘eed', 'hypcl', 'lnl', 'lsdesey 'lsﬂnhi',
'iilhi'. 'hhehl, ‘Id-1p‘, lgemrhe', 'log', 'lnglﬂ', 'legi pl, 'lugZ', 'mndf‘, he"; 'pl', ‘peel, 'mdlﬂlls', ‘ilh', ‘ilhh', 'seh', were, 'lullh', whim-l
The lisi of functions/items from e module may vary from Pylhon 2.x to Python 3.,‘ and
irerri version le version, er from diiiererrl versions ei Pylheri.

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Python disﬁribuﬁon modules:
i; Pyvhon 30K 9 hllgszl [dOCSQXVHOmOrg QZQj-modindethll
Mm I'm-m-
aHlainn: lmpllmlmulinn =6 din-"m mm" I. quulnl lxprnﬂun imphmlmdﬁan
my,” Fading and unpuking bym am =-m<. lundum Random mmbln
"'""“'=‘ Mm law-Inn‘ "mm inlnfunl
imam um Ma Tim: mm“; “pm-n PM.“
mi‘ “PPM '°' "M" WM‘ “""5 m syn“. ‘Wm Maw (ndhwdum,
ham, Implemﬂndliun a dillerem mm, lMDS, 5m, lug-mm‘, lauded mm“ _..)
"'1 Imaebrxk mum trunebuck
i‘°" 5°" MM" “"1 “*M“ mm; Hanlenq um / um "qmu, =0:
mm Morhemaviwl ﬁmians ml XML m: WW
a: nirmm fvrminns os wed": [make div,
deleve rues, rsnume me» pm, ."1

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
l MODULES - svs
Python documenlalion page:
a; Pylhon 3ux 9 hllgszl [docsgylhonrorg 3 libmryfsysuhlmmsysmodules
IM——
sysargv A lisl of on parameters send to the python script
sys.plu"orm Curler" plottorrn (wtndows / Llnux / MAC 05x1
sys.sldin Handlers tor defoull l/O operulions
syslﬂdoln,
:ys.!lderrr
sys.paih A lisl of airings that repreyen' polhs irom where module will be loaded
syslmodules A dlcﬂonury ot modules mot have been loaded

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
sywrgv provides u lisl of all parameters mm have been send from lhe command line
to u pyahon script. The firs| parameter is Ihe name/path of the script

File‘ '(Fy'hon 3.x)

import sys

print (“First parameter is", sys.argv[0]l

Oulpu'

>>> pyﬁlbn.exe G\|esr.py

Flrsl Wrumnlu ls C1\vesuvy

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Pyﬂwn 3.x (File: 1
import sys
sums = 0
try:
Ea: val in sys.azgv[l:]:
suma += intWal)
print ("Sum:“rsuma)
except:
print1"In\/alld parameters")
Ouvpm
>>> Wm.“- C:\wm.py ‘ 2 3 A
Sum = ID
>>> pythonmxe G\sum.py ‘ 2 3M
Invalid Forum's

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
\ M 0 o u LES - os
Python documentation page:
o Python 3rx 9 hligszudocsnghonarg Kllibrmyfossmml
Includes funnions ‘on
c Environmem
r: Processes (m0, Groups, etc)
e File system (change av, enumerule mes, delete ﬁles or directories, etc)
e File descripmr functions
O Terminal informcﬂons
o Process management (spawn processes, fork, etc]
Q Wcrking with me poms

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
\ M 0 nu LES - os
Listing me contents of c folder (chisvdir 9 returns u list of child files and folders).
Pyihon 34x
print (os.llstc(1r(".”) >
Quip-n
‘Pymcn27', 'Py'honlﬂ‘, 'Sysvem Volume Marmoﬁan', 'Users‘, 'Wlndaws‘, ,..]
File and folder operations:
o osmkdir / osemkdirs -) Io creme folders
Q os.chdir —) Oo change current puih
o os.r|ndir / osJemovedirs -) ve deleie a folder
o os.remove / osiunlink -) Io delete u me
o owenume / oserenemes -) rename/move operuvien;

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
as has a submodule (puihl ‘hut can be used to perform different operations with
file directories -cihs.

Python air

import 05

print (os.path. 70in 1"C:”,”W1ndows”,"System32")i cuipur

prlnt (05>P5Chidlrnﬁm6 1"CZ\\W1ndows\\abc.tXt”)i C:\Vﬂndamx\5ynlm32
print (ospaLleasename ("C2\\W1nd0ws\\abcit><t”ii @WMM
print (Os.path.splltsxt ("C:\\Windows\\abc.txt"i) ligiwndmvwnmq
prlnt (os,pathiexists (”C:\\Windows\\abc,txt")) False ‘
print (os,path.cxlsts ("Ct\\Wlndow5\\abc.txt")) Yrul

prlnt (OSqJEJZhilSdiI (”C:\\Windows”i) :2’;

print (OSJIQLhilSIlle (”c:\\windows”))

print (os.path.1sflls ("C:\\W1ndcws\\abc.txt"))

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
Listing me contents of a folder recursively.
Pyihon 1X
import OS
for (Icot,d1rector1e$, E1155) in cs‘ walki" - "i:
for fileName in files:
fullifileName = c5.path.joln1:oot, fileName)
prlnt (full_fileNamE)
Ouipui

os module can also be used to execute u system ‘\n
command or run an application via syslem function “FY
Pyihon 34x .\n-|.bm
_ .\Fo|derl\n|siml.6.0.0.|x|
I-IHPOR OS ‘\Folderl\versiml.é.0.i.Ix'
cs . system ( “di: * . * /a") .\Fo|devI\Fuldnr2\versim,l.5.0‘8im

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
\ INPUT/OUTPUT
Python has 3 implieii ways m work with l/O:
A) IN: vie keyboard (wiih inpuI or Iawjnpu' keywords)
- Tirere are several differencei between pviirerr 2.x Grid pvmeri 3.x regarding reedirrg from sldin
B] our: via plinI keyword
C) lN/OUT= via open keyword (Q0 access files]

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
In Pthon 1x, Ills content read from Ihe :an is considered m be a string and returned
annno (Python 1x) Pyihon 3.x
input n >>> Enver: w
input (message) 1o <cluss 's||'>
PM“ 1X >>> Enter: 1+2*a.o
‘ Hm» <clcss 's'r'>
X : 1nput("Enter: ">
print 1x, tyPe 1x) a >>> Em" ‘23
"123" <cluss 'm'>
° >>> Emer: Vest
vesv <cluss 'svr'>

***************Ending Page***************


***************Beginning Page***************
***************page number:30**************
prim CGI'I be used io prim u string or an obied/vcricble ihui can be convened iriio a
string.
Format {Python 3.x)
pzint (whims, sep=' ', end= '\rr‘, {ile=sysrxldnvl, ﬂush=Fulxe)
Pyllion 3.x
>>> prirri (“mi”) >>> prlnf(“12:1",‘|0]
lest test 10
>>> prim {“|es|",| O,sep:“---"] >>> prim ("ten");prinl(“1est2"]
lest-“10 fest
resiz
>>> prim {“Ie$|",endI“***");print[“|es|2“)
aesr'”iesi2

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
A ﬁle can be open in python using the keyword open.
Formal (Py'hon 3.x)
Fileobject I open (fllePach, mode: 'r‘, bufferlng:—l, encodingINone,

Where mode is a combination of the following:

o "r" - read (defunli)

o "w" - wrile

J "x" - exclusive creuﬂcn (fun if file exists!

<1 "a" - append

n "b" -bmmy mode

o "a" even mud:

<1 "+" - updﬂie (read and wriie)

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
‘ FILE MANAGEMENT
Python 3 also supports some extra parcmelers such as:
c enzuding —> if me file is Open in iexi mode and you need Vrclrislution from diiiereni encodTngs (UTF, erei
r: error —> specify Ihe Wdy COnVeISiGn errors rd’ dwe'eni encodings should be processed
e newline 9 also idi iexi mode, speciﬁes Whul should be consider d new line. if viii; value is set IO Ndne
me chowder Ihu' is specific for iiie :urrem operuiing system wiii be used
Documentation for open function:
o Pyrhon 3.x -) hﬂgyZZgggegxihgrigrgLQLIiQIQYXZE ngignehnnigggen

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
‘ FILE MANAGEMENT
A file obiect has llie following methods:
Ci ﬁclose -) closes amen! ﬁle
0 hell —) remms'he cuvven' file position
c (seek —> sets lhe currem file position
r: Mead -) leads a number of byles from ‘he ﬁle
a; (wile —> write u number of bytes lmo ihe file
0 ﬁreudllne -) reads a lIne from Ihe ﬁle
Also - ihe me nb'ecv is iterqble and remrrls ull Iex' lines 6mm c ﬁle.
Pylhnn 3.x
prlnt ‘liﬂe>5f77p(,l
Lines rend using this method contain Ihe line-feed lerminolor. To remove il, use strip or
rsIIip melhods.

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Functional programming can also be used:

Python 3.x

X : [llne for line in Opani"f1.lectxt") if "Gen" in llne.stripii]

print (lenixli

To regd the entire content ot the file in o buffer:

Python 3.x

data : open("flle4txt“, "rb") . reaa'tt

print (LenidataU

print (data [Oit

read method relurns u string in Python 2.x and o buffer or string depending 0n how the
file is opened (“rt" vs “rb") in Pylhon Six 9 The output of lhe previous code will be u
character (in Python 2.x) and a number representing the cscii code at that character in
Python 3.x

To obtain a string in Python 3.x use “r0” instead of “rh”

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
TO Creme G ﬁle and write cement in it:
Pyllmn 3.x
open("file.txt", "WC") ‘ WZZEE‘ ("A new file ‘ ‘ . "i
It is a good policy to embed file operation in a \‘ry block
Pylllun 3.x
my:

f : open("abc,txt")

fa: line in f:

print (line,5trip())

f . 01059 (h
except:

print1"Unable to open flle abcxxt")

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Once u file is open, the file Obiecf handle can be used to retrieve different information
regarding ohm file:

Pylhon a‘:

f Z Open‘..a_pyny..rb",

print ("File name z imame)

prlnt (“File open mode = ", Lined?)

print ("15 1: closed ? = ", f.closed)

***************Ending Page***************

