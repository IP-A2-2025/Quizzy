***************Beginning Page***************
***************page number:1**************
\I\I\I\I\I\I\I\
I Qﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ \
I \ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ§ﬂ\ﬂ\ﬂ \
I\I\I\I\I\I\I\l
PROGRAMMING IN PYTHON ‘ if;j;“';"°g°‘

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Python classes suppcrls both simple and multiple inherlluncel
Pylhon 3.x (slmple lnllel'lkmce]
class <name>(Basel :
<statelllerlt1>
<statelllentn>
Where slulemenli is usually a declaration of a method or data memben
Python 31x [mulﬁple 'lrlllelilnnce)
class <name>llaaseulaase2hn Base") :
<stacement,>
<statementn>

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Python has Mo keywords (issubcluss and isinslunce) the. can be used 00 check if an
obicci is c subclass of an insmnce cf- q speciﬁc iypc.
Pyincn 3.x isinipic inher'imrize)
class Base:
X : 10 cuipui
class DerivedHBase): dsX - m
s d.Y s 20
y e 20
inscsncc of Derived: True
Instance of Base: True
cl : DerivedU Derived is a subclass of Base: Txue
print ("d.X Z u,d.x) sass is s subclass of Derived: False
print 1"diy Z ",diy)
print ("Instance of Derived:",isinstance(diDeri\/ed)l
print ("Instance of Ease:",isinscance(d,izssc)i
print “Derived is a subclass of Base:",issubclass1Derived,Base))
print ("Ease is a subclass of Derived:",i.ssu.bclass(Base,Derived))

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Inheritances does not assume that the iinitf function is automatically culled for the
base when the derived object is created‘
Python 3.x (stmpte Inheritance)
class Base:
def illllti(self):
salf.x e 10
Exezmion error - d.X dos: mt
Cl“: DenvemBase" em'SISbecm/EE base. that
def "Ht (self) = ~55 never can; i
sel£.y : 20
d I DerivedO
prlrt 1"@1_>< , ",d.XJ
prtrt t"d.v :",d.y1

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Inheritances does n00 assume Ohm ‘he _init_ function is uutomqﬁcully culled for Ihe
base when Ihe derived obiect is created.
Pymn 3.x (Emma inherimnce)
1218!! Base:
def iinitfbselfl:
self.x = 10
class Derivedmase) = \n Python 3 you can also write
dnf _1nit (“up = superﬂix'niliﬂ
Base. iinitfiself)
:e .y = a
d = Derived() °"'P"'
print was; : ",d.y) ‘H’ 2°

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Inheriﬂng from u class will overwrile all base class members (melhods or dale members).
when 3.x (Emma inherimnze)
class Base:
d2: Print(se1f):
prlnt("Base class")
class Denvecusase) :
def Prian-lf):
print("Der1ved clasS“l
d : DerivedU 0mm"

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Inheriﬂng from a class will overwrite all base class members (methods or dam members)‘
who" 3.x (simyﬂe Inherimnce)
class Base:
def 3r1nifself,valu0):
prlEt{"Bd5€ class",value)
class DerlveCHBase):
def 7r\ni[5elf)i
prlrt{"!jf‘rl
Prim mmm mm Bose class ms (amplevely
<1 Z DerivedO cverwr'men by Prim function frcm "we derived smsss
i Pun: 0 The code “in plcduce a mmms sum,
d. Prfntﬂoo)

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Inheriﬂng from u class will overwrile all base ClDSS members (mellleds 0r dam members).
In Ihis case member “x” from Base class will be overwrillen by member “x” from the
derived class.
Pyrhon 3.» (Slmple Inherlrunce)
class Base:
x : 10
class DerlveCHBasel :
x : 2U
d : DerivedU
prlnt 111.20 OWN‘

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
Polymorphism works in u similar way‘ l“ reolily the inheritance is not necessary to
accomplish polymorphism in Pyiliom
Python 3.x (simple l'nher'lrurlce)
class Fotma:
dEf PrintNanle (self) = pass 0MP",
class Square (Formal ; Wm
def PrintName (self) I printi"$qu3r€") czxcle
class Circle (Formal : Rem-wig
def PrintName (self): print1"C1rCle")
class Rectangle(Fornlal =
def Prinmomels-lil; print1"Rectangle")
f0! form in [SquaIeU , CircleH ,RectangleU ]:
form‘ PYl FltNamel)

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Polymorphism works in u similar way‘ In reqlily the inheritance is not necessary to

accomplish polymorphism in Python‘

Python 3.x (simple Inheritance)

class Square:
def PrintName(aelfl: printl"$quare") oulpul

class Circle: square
def PrintName(selfl: print1"C1rCle") Clxcle

class Rectangle: Rectangle
def PrintName(selfl: printl"Rectangle“)

£0: form in [Square() ,CircleU ,RectangleU 1:
form4Pz1ntNamPi)

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
In case of mulliple inheritance, Python derives from lhe right most class to the left most
class from lhe inheritance list.
Python 3.x (muliiple inheritance)
class BaseA:
def MyFunctionlself): OWN"
prlnt ("Base A") Base A
def MyFunctionlself):
print ("Ease B")
class Derived(BaseA, Basel?!) :
pass
d Z DerivedU
dsMyFu'iCtionU

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
In case of multiple inheritance, Python derives from the right most class to the left most
class from the inheritance list.
Pythan 3.x (multiple inheritance)
class BaseA:
def MyFunctioniself) 1
print 1"Base A")
class BaseB:
at MyFunCtion we“) z m MyFunclian fvom BuseB
print 1"Ease B") is added to Derived dais
class DerivECHEaseA,
pass <—
d = DerivedU
d.MyFunction(l

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
In case of mulliple inheritance, Python derives from Ihe right most class to the left most
class from lhe inheritance list.
Pyrhcm 3.x (muliiple inheritance)
class BaseA:
def MyFunctiQniself) 1
print 1"Base A")
class BaseB: . The" MyFunzlion 6mm class
a! MyFunctw“ ‘5°19 = BuseA will overwrite
'nnt "'Ease B") MyFunclion from Basal
class Derived_ 7.
pass <—-
d = DerivedU
d.MyFunction(l

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
If we reverse lhe order [BuseB will be ﬁrst and BaseA wil be lhe lush one], MyFuncﬁon
will print "Base B" instead of "Base A"
Python 3.x (mulliple lnherlrunce)
class BaseA:
def MyFunctionlself): OWN"
prlnt ("Base A") Base B
def MyFunctionlself):
print ("Ease B")
class DerlvedlBaseB, Basel-U ;
pass
cl : DerivedU
d.Myb'Llnc[lon(l

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Python defines a special set of functions that can be use do add additional properties to
a class‘ Just like the initialization function (_init_) , these functions start and end with
_repr_ _st|_ Called when the ohieet needs to be converted into string
‘it; ‘leg Aeqy Arte‘, Aw‘, Operators used to eornpure instances et the sorne elass.
igei
ibooli To evaluate the truth value of an obiect iinetanee of a class)
igetattrg igetattributei For attribute lookevps
_setonr_ _delattr_ For attribute operations
feet‘, igeti
flan‘, idol; For len / del operators
isetitemg, igetitemg icontainsg Iterator operators
ireversedg ii'erg inexti

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Python alsa defines a set of mathematical functions that can be used for the some
purpose:
ti- AcddA, Am‘! ‘mm’, ‘mam-m‘, AVruedivA, Aﬂwrdiv‘, ‘modA, Adm/mod‘,
ipowg ilshiﬂg irshiﬂg fund‘, img fori
~1- iraddg irsuby irmulg irmavmuty irfruedivA, irfloordivg irmodg irdivmody
_rpow__, illsmtkq vmmmq _rcndv, vrxcl__4 va,
~:- iiaddi, iisubal iimul‘, iimmmuli, iiimediv‘, iiﬂoordival iimodg iipowal
iﬂshiitA, iirshiﬂy fiat-d2 fixer‘, iiori
t2~ AnegA, ‘my ‘Houid Around‘

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
Converting u class to u string. It is recommended to overwrite boih Ash‘ and
_repr_
Pyrhon 3.x
l T 2
° a“ :3: 10 OuipuHPyihon a)
<__main_r'l‘est object at 0X.» = <_maln__.Tes\: object at ox.»
TestZ Hm‘ >< Z 10 = Tam with x Z 10
class Test2:
X : 10
def istiwelf): return “Test2 With x : “+stx'1se1f,x)
c = TeStU
:2 : TestZU
print (t, at: m»
pzlnt (c2, ”:", sthZH

***************Ending Page***************


***************Beginning Page***************
***************page number:18**************
Converting Io an integer value.
Python 3.x
class TesL:
X , ,0
class TestZ:
X Z ;0
def femiwelf); xetuxn self.x
c , Test 0
t; Z T9512 0 This code will prod-“e a rumime error bemuse
ValLe Z intm Fyihon don't know how's "enslave an obiecl of
lype Tesl In en inleger

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
\ CLASSES (SPECIAL METHODS)
Converting w an integer value.
mm 3.x
6185! Test:
x = 1o
61555 TestZ:
X = 10
daf vintihiilf): raturn 5-1:.x
t = TEStU
t2 : Test21)
Value = 111cm) Thiszode works,Vu|\|e will be IO

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
lterating through a class instance
Python 3.x
class CatList:
def 1m (self):
w;
selﬂpos : -1 “yum
return salf
def inexLi (self):
sel£.pos +: 1
if salf,p<vs==lcn(salfrcars): raise StopIteration
return self . cars [self.pos]
c : carLlstU
Ea: i in c:
prlnt 1i)

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
Using cluss operators‘ In this case we overwrite Aqu (II) operator.

M10“ 3.x

class Number: o | '
def finitimelf, value): " F"

v r5156
def igqimelf, Obj):
return salsxmbjw I 0

n1 I Number(-5)

n2 = Number15)

n3 : Number(6)

prlnt (n1::n2)

prlnt 1n1::n3>

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
‘ ([ASSES (SPECIAL METHODS)

Overwriﬂng the “in” opeﬂutor (‘containsA)‘

Python 3.x

class Numbez: ow
def lﬂlt (self, value): F“

i lelgx : value
def izrontalnsiwelf, value): True
return SCIWaluE) in stznselrm

n : Number1123)

prlnt 112 in m

plint 15 in n)

print 13 in n)

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
‘ (LASSES (SPECIAL METHODS)
Overwriﬂng the “len" operquor [_|en_).
Python 3.x
class Numbez: ow
M Jaime“, mm:
"15m = value
def ileniwelfﬂ
return 1an1=cz1self.xn
n1 : Numberuzs)
n2 = Number<99999b
n3 : Number<2>
print 11en1n1),len1n2a.1en1n3l)

***************Ending Page***************


***************Beginning Page***************
***************page number:24**************
Building your own dicﬁonury (overwrite AsetifemA and Ageﬁtemg
Python 3.x
class Mycht:
def ilnltilself): selﬂdata = [1
def Setitem (self,key,value): self.data += [(key,str(value))]
def igetlremi(self,key)é
£0: i in selﬂdata:
if i[0]::key:
return iIl]
Oulpm
d : MyDictU Pythcn 123
d["numat"] I 123
print (d["test"]yd["numar"])

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
Building u bit set (overloading operator [1)
Python 3.x
class BitSet:
def ilﬂltilself)! sel£_value = 0
def setltem (self,lndeX,value):
if value: self.value \: (1 << (index a 31H
else: selflvaiue i: (selflvalue a 11 << (“1an & 31))
def igeLlLe/wihelfﬂcey) = 0m,“
return (se1£_value & (1 << (index & 31)))1:0 Eh u ,5 True
b = Bltsetn Bit 1 is False
hm] Z Ttue Eu 2 ls True
M2] Z True El: 3 15 False
an 4 ls True
b[4] : True Bit 5 ,5 False
Ea: i in zanyE1D,B): Bit 6 is False
prlnt("B1t "'1'.- ls "'bu], En 1 ls False

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
A context manager is a mechanism where an ebiect is created an notification about the
moment that object is being access and the moment that object is being terminated.
Context managers are used along with with keyword. The abieats that available in a
context manager should implement ienteri and iexiti methods,
with item, as alias,’ [item2 as alias, , item" as ciius" 1:

<statemeht l>

<statemeht 2>

<slutemertt rt>
with item‘, [item,, itemJ:

<statemeht l>

<statentent 2>

<statehteht ti>

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
Whenever a with cemmend is encaunter, the following steps happen:

ll All items are evaluated

2. For all items venterv is called

3. If aliases are provided, the result ct the ienteri method is store inta the alias

4i The block within the with is executed

5‘ lt en exceptien eppeers, _exit_ is called end intermetien releted te the exceptian
(type, value and tracebuck) are provided as parameters. it the iexitv methed
returns false, the exception is re-ruised. If the iexiti method returns true, the
exception is ignored‘

6‘ lt ne exceptian eppeer, AexitA is celled with None peremeters ter (type, value and
tracechk), The result from the _exit_ method will be ignored,

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
File context manager
Pyvhnn 3.x
C1!!! CBChEdFllE:
def 10ft (self,fileName>:
exn ls called
lalfuflleName : flleName i i
an fennel/iwelﬂi
printU'ienteri lS called")
return self
an icxltibself, excitype, excivalue, traceback):
printU'iexlti lS called")
open (self. [LleNaméu "Wt") ‘Write {5915,0131 r3)
return False
with CachedFlleUTestht") as f:
f.da[a : "Python course"

***************Ending Page***************

