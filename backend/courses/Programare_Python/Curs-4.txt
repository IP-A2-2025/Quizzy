***************Beginning Page***************
***************page number:1**************
\I\I\I\I\I\I\I\
I Qﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ \
I \ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ§ﬂ\ﬂ\ﬂ \
I\I\I\I\I\I\I\l
PROGRAMMING IN PYTHON ‘ ifﬂfif'w“

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Classes exists in Python but have a different understanding about their functionality than
the wcly classes are deﬁned in C-like languages. Classes ccln be deﬁned using a special
keyword: class
Python 3.x
class <rlame>:
<statelllent1>
<statelllentn>
Where statementi is usually a declaration of a method or data member.
Documentation for Python classes can be found on;
O Python 3: https:Z[docsgythorlsorg[filwtoriullclassesshtml

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Classes have a special keyword (self) that resembles the keyword llris from c-like languages.
Whenever you relererree a alata memlser [variable ltrar belongs re a clclss) within the class
definition the self keyword must be used‘
Constructors can be defined by creating a “Aiﬂi|A“ func'ion, “AinilA” funetian must have lhe
first parameter self‘
Python 3.x
class Point:
def ilnltiwelf):

selfsx I O

self s y e 0
p e Point (l om“,
Class Point lras two members (X and y]

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
For u fundion deﬁned wiihin (I class to be u meihcd of ahm class it has to have the ﬁrst
parameter self.
Pyvhon 3.x
class Point:
an AmitAu-u):
selﬂx : O
"15.3; = 0
dif GetXLiIlfD z
retuxn sel£.x
p : Point ()
print (p. GetX[)) amp.“

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Defining c: function within u class wiihcut having the ﬁm parameter self means that mm
function is u sauﬁc function for ohm clclss.
Python 3.x Python 3.x
class Point: class Point:
def ilnitiuelﬂz def ilﬂlfi1ﬂelfli
selflx : 0 self.x : 0
se1£.y = 0 sel£.y = 0
def GetY()= def GetYU:
return sel£.y print(”Test”)
p : PointH Polnt.GeLY()
print (P.65tl/U)
0MP"!
26w n. nnm

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
A dam member can also be deﬁned diredly in Ihe class definiﬁon. However, if muicible
ebieei are used me behavior is different (similar in iemis of behavior to c eieiie
Pynioii 3.x Py'hcﬂ 3i‘
class Point: class Point:

x Z 0 numbers Z [1,2,3]

y : 0 def AddNumber(self,n) ;

se1£.numbers += [n]
pl = Pen-mi) p1 = POlntH
p2 : Pointi) p2 : PointU
plix Z 10 pliAddNumbenA)
p2.x : 20 00",", plAddNumberiS)
print 1p1.x,p2.x) 10 2n print (p1_numbEXS) OUIFIII
n,2,3,4,51

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
To avoid problems with muiuble obiects i0 is beﬁer 00 defined them in u constructor
(_init_] function:
Pym" 3.x
C185! Point:
def i1n'tf1self):
self.nurnbcrs : [1,2,3]
def AddNumber1salf,n) 1
self.numbers +: [n]
p1 Z Point‘)
p2 : PointU
p1.AddNu.-nbcr(4)
p2 ,Addrvumber (5)
print (pl-numbers) °“'P“'
print (pznumbezs)
[1, 2, 3,5]

***************Ending Page***************


***************Beginning Page***************
***************page number:8**************
It is not required for two instances of the some class lo have lhe some members. A class
instance is more like a diclionary where each key represent either a member function or
a dam member
Pylhon a"
class Pomc:
def ilnltiwelfl:
selfsx Z O
Belf.y : 0
p1 e Point 0
p2 : PointU
pl.z : 10
prlnt (lenplyydilsz) 0MP".

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
It is not required for two instances of the same class m have ihe same members. A class
instance is more like u dictionary where eclch key represeni eiiher a member fundion or
a data member
Pyinnn 3.x
class Point:
def . 1m: iselfi;
self.x : 0
selfiy e 0
p1 : PomL ()
P2 ’ P091“) Error during rurif'irié. “pr doesnofhu/e a
Pl'z * ~0 dam membev “1"(0niv "p|"|ins(1 dam

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
It is not required for two instances of the some class to have the some members. A class
instance is more like a dictionary where each key represent either a member function or
c1 data member
Python 3.x
class Point:
def . inl: (self):
self.x : O
selfry e 0
pl : PointU
p2 = Point 0
pl , z = 10
print ("X" in dirlplll
print ("z" in dizlpll) Output
print ("2" in dirlp2tt
True
@155

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
We een write en equivalent tepiesentetien of the funcﬁonclify done by classes by using
dicﬁoncries:
Pytnen 3.x Pyti-en 3.x ldidionuly iepiesentetien)
class Point: def PointClassiinitiiobj):
def ilnlti(sel£): obj ["x"] = 0
self.x = 0 obj["y"] : o
self.y : o
p1 = Point‘) Palnt = ( "_1nit_":PointClass_1nit_ )
p2 = POintU pl : dict(Poim:)
pl.z : 10 pl["i1niti“] (pl)
p2 = dict<Point)
p2 ["iiniti'ﬁ tpzt
pl["z"1 = 10

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
We can write an equivalent representation of the functianality dune by classes by using
dictionaries:
Mm a.‘ PyHIon 3.x ldidionuly Ieplesenkﬂicn)
class Paint: def PointClassiinitiiobji:
def ilnlti(self)t cbj["x"] e o
"15X e 0 obj["y"] I o
ee1£.y e o
|—P01nt = i " mi: ":PointClass_1nit_ i
p : 1c Point
PZ["iln;ti“]1P2)
pli"z"1= 10

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
We can wrne en equivalent representation of the funcﬂonqlity dune by classes by using
dicﬁonuries:
mm a.‘ PyHIon 3.x ldidionuly Ieplesenklﬁcn)
class Pelnt: def PointClassiinitiiobj):
def ilnlti(self): obj ["X"] Z 0
selﬂx Z O obj["y"] Z D
ee1£.y : 0
.1 = Point Pelnt = ( "_1nit_":PointClass_1nit_ )
|_ pl : dict(Point)
PZ[" nut “11P2)
P1["Z"] = 10

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
We can wrne en equivalent representation of the funcﬂonqlity dune by classes by using
dicﬁonuries:
nyhon 3.x PyHIon 3.x ldidionuly Ieplesenklﬁcn)
class Pelnt: def PointClassiinitiiobj):
def ilnlti(self): obj ["X"] Z 0
self‘); Z O Obj["¥"] I D
ee1£.y : 0
p1 = Point‘) Paint = ( "_1nit_":PointClass_1nit_ )
I2 : Point pl : dict(Point)
|_L p1 [LMJ “11>
p2 : dict(P01nt)
-2[" 1n;t “11pm

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
What hclppens if e class has some obiects deﬁned diredly in class a

mm a.‘ Py'hon 3.x (dizliunary Iepresenluliun)

class Test: numbersivector : [1,2, 3]
numbers : [1,2, 3] def TestClassiAddNumber(obj,n)1
def AddNumberlself,nlz Obj ["ru'rlbers"]+:[n]

Belf.nl,mbers +: [n]

p1 = TestU TestClass = l

p2 : Testll "AddNumber":TestClassiAddNumber,

pl .AddNumbc: l 4) "numbers" :numbersivector

p2,AaaNumber15) l

As both p1.numbers and p2.numbers refer p1 = dict(TestClassl

to the same vector (numbers_vec'or) they p2 : di¢t(TestClass)

will bell. modify llle some object thus p1["AddNumber--1 (1,1,4,

creating the illusion of a slalic variable. p2[lqud|guﬁberll] (p2, 5,

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
What happens if q class has some obiects deﬁned diredly in class a
mm a.‘ Py'hon 3.x (dizliunury Iepresenluliun)
class Test: numbersivector : [1,2, 3]
numbers : [l,2, 3] def TestClassiAddNumberlob],n)1
def AddNumberlselfﬂ-llz Obj ["K‘u‘ﬂbers"]+:[n]
Belf.nl,mbers +: [n]
|— memes = <
p2 : Testll "AddNumber":TestClassiAddNumber,
p1.AddNumbczlAl) "numbers" :numbersivector
p2 ,AddNumber l 5) l
As both p1.numbers and p2.numbers re e |_
to the same vector (numbers_vec!or) they p2 : di¢t(TestClass)
will bell. modify llle some object thus p1["AddNunber--1 (1,1,4,
creating the illusion of a srmic variable. pzpltddmﬁbetu] (p2, 5,

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
What happens if q class has some obiects deﬁned diredly in class a
mm a.‘ Py'hon 3.x (dizliunury Ieplesenluliun)
class Test: numbersivector : [1,2, 3]
numbers : [1,2, 3] def TestClassiAddNumberwb],n)1
def AddNumber1self,n)z Obj ["K‘u‘ﬂbers"]+:[n]
Belf.m,mbers +: [n]
1 = Test TestClass = (
| p2 Z Test H "AddNumber":TestClassiAddNumber,
p1.AddNumbcz44) "numbers" :numbersivector
p2 .AddNumber15) 1
As both p1.numbers and p2.numbe efer .1 = dict TestClass
to the same vector (numbers_vec!or) the | p2 : dict<TestClass>
will b'oﬁh meeify'me some eeieet thus p1["AddNunber..] (111,4)
crecmng the l||US|O|1 of a smnc vurluble. p2["l\ddl\'unbet"] (p2, 5,

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
What happens if q class has some obiects deﬁned diredly in class a
mm a.‘ Py'hon 3.x (dizliuncry Iepresenluliun)
class Test: numbersivector : [1,2, 3]
numbers : [l,2, 3] def TestClassiAddNumberwb],n)1
def AddNumber1self,n)z Obj ["K‘u‘“bers"]+:[n]
Belf.m,mbers +: [n]
p1 = TestU TestClass = (
2 : Test "AddNumber":TestClassiAddNumber,
|— "numbers" :numbersivector
r
As both p1.numbers and p2.nu -ers refer p1 = dict(TestClass)
to the same vector (numbers_vec!or -ey .2 : dict Testclaes
will boﬁh modify the some object thus |_
creating the illusion of a srmic variable. p2["l\ddl\'unbez"] (p2, 5,

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
What happens if q class has some obiects deﬁned diredly in class a
mm a.‘ Py'hcn 3.x (dizliunury Ieplesenluliun)
class Test: numbersivector : [1,2, 3]
numbers : [1,2, 3] def TestClassiAddNumberwb],n)1
def AddNumber1self,n)z Obj ["K‘u‘ﬂbers"]+:[n]
Belf.m,mbers +: [n]
p1 = TestU TestClass = (
p2 : TestH "AddNumber":TestClassiAddNumber,
1 .AddNumbc: 4 "numbers" :numbersivector
|—‘ 1
A: both p'l.numbers and p umbers refer p1 e dictwesmass,
to the same vector (numbers_v » ~r) they p2 : di¢t(TestClass)
will be". modify the some obiectthu 1 nmwumer" ,1 4
Creating the illusion Of G SHJIIC Yuriﬂble. |_

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
You can also delete c: member of u class instance by using the keyword del‘
Pym" 3.‘
class Pomt:
def ilnltf1self):

selfex Z 0

selfey : n
p i PolntH
Print (P~X,P.y)
p.x : 10
Print (Penny)
del p_x u“ .e nu lung-2r c membel er P. Code mu
prlnt ® producé a runﬁne errorv

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
If a class member is like a dictionary — what does this means in terms of POO concepts:
Au method overloading is NOT possible (it would mean io have multiple functions with
the same key in a dictionary)‘ You can however create one method with a lot of

parameters with default values that can be used in the same way‘

B. There are no private/protected attributes for data members in Python. This is not
directly related to the similarity to a dictionary, but it is easier this way as all keys
from a dictionary are accessible‘

Cu CAST-ing does not work in the some way as expectedu Up-cast / Down-cost ore
usuolly done with specialized tunotions that create a new abiect

D4 Polymorphism is implicit {basically all you need ta have is some classes with same
functions with the same name). Even if this supersedes the concept of polymorphism,
you don‘t actually need to have classes that are derived from the same class to
simulate a polymorphism mechanism.

***************Ending Page***************


***************Beginning Page***************
***************page number:22**************
Jusl like normal variables in Pylhcn, dew members can also have lheir lype changed
dynamically‘
Python 1X
class MyClass:
x = l!)
y : 20
m = MyclassU
print lm.x,“:>",type(m.§l)
m.x = "a string“
print (In.x,“:>"ytype(n\.§l)
Olllpul
10 :> @1355 'int‘)
a stxinq :> @1555 1:1»

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
The same can be applied for class methods — however in this case there are some
restrictions related to the self keyword.
Python 1X
class Myclass:
x Z 10
y : 2o
def Test (self,value):
return ((Self,x+self.y) /2 == value)
def MyFunction(sel£,\/l,v2) :
zecum at! (vl+v2)+" e "at-Juan“) +", "at-.zueliiy)
m : MyClasSU
print (m.1'est115t,m.y'est(16)t
m,Test = mtg/Function Output
a e 10,20

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
The some can be applied for class methods - however in this case there are some
restrictions releved to the self keyword,
Python 3.x
class MyClass:
X : 17,
y r 23
def Test(self,va1ue):
return ((Sclf.x+sclf.y)/2 :: value)
def MyFunctloanelf,\/L, -
return st!(v14v Punﬁme error because"MyFunrn'en'isq Ily)
r“ * MyClass H memod 'hm needs m be bound m on
Pm nt (m, T‘ Mm " omen “mantel
m.Tcst I®yFunctlcm
print (m. r-s , 1)

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
The same can be applied for class methods — however in this case there are some
restrictions related to the self keyword.
Python 1X
class Myclass:
x Z 10
y : 2o
def Test (self,value):
return ((Self,x+self.y) /2 == value)
def MyFunction(sel£,\/l,v2) :
zecum at! (vl+v2)+" e "at-Juan“) +", "at-.zueliiy)
m : MyClasSU
print (m.1'est115t,m.y'est(16)t
m, Test = MyClasst) ,MyFunctiun Output
a e 10,20

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
The some can be applied for class methods — however in this case there are some
restrictions related to the self keyword.
Python 1X
class MyClass:
x : 10
y : 20
def Test(sel£,value):
return (tself,x+se1f.y) /2 == value)
def MyFunction(sel£,\/l,v2) :
zecum st!(vl+v2)+" e "wt-Juan“) +", 'wauuelLy)
m : MyClasSU
m2 : MyClassO
print (mmesttlsnmrTQs-ctlﬁn Output
m.Tesr : m2.MyFunct10n hue False

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
Methods are bound lo lhe sell obiect of the class they were initialized in. Even if you
associate u melhod lrein a different class lo a new method, ine self will belong ie the
ori -inul class.
Pyllimi 1x
class MyClass:
X = 10
def Test(self,value):
return ((selfimseltiy) /2 Z value)
def MyFunct10n(self,v1,v2) :
return stt(vl+v2l+" - "+st:(sel£.x)
m = Mycleesll
m2 : MyClassll
m2ix Z 100
m'TeSt Z mziMYFUMHO” inJesinemellyreiersie cuipni
print (ni.I'e5tll,2l) mlMyFundinn 3 7 100
pent innynncmmn

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
A method from another class can also be used, but it will refer to the self from the original class‘
Pyrhon 3.‘
class MyClass:
x : 10
y Z 20
def Te$l lself,value):
return (l5elf.x+self.y) /2 W value)
class AnotherC' ass:
def MyFunctlon(selE,vl,v2l:
return st! (Vl+v2l+" 7 "+str (selilx) +", "+str (selfly)
m : MyClaSS (l
print (m. TestLSl ,m. Testlle
m,’i‘e$t i Mathew] ass (J ‘Mymmvt icw The code will proflucs a rumime error
punt (“L TQM ‘ 1 V 2i) became me self ollietl From Anoll'iercluss
does. "or li0\9 "x" and “7" members.

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Normal functions can also be used. However, in this case, the self obiecl will not be send
when culling them and it will nol be accessible.
Pyllwon 1X
class Myclass:

x Z 10

y : 2o

def Test (self,value):

return ((Self,x+self.y) /2 == value)

def MyFunction(sel£,\/l,v2) :

return at! (vl+v2l
m : Myclassll
print (m.1'est115l,m.y'est(16)l
m, Test = MyFunctlon Oulpul

a

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Similarly a class meihod can be associated (linked) to a normal variable and used as
such. Ii will be able lo use lhe self clnd ii will be elfeeled if self members are changed.
Pyvlion 3d
class Mycless=
X e 10
def MyFunctlon (self, v1,v2):
return st: (Vl+le+" i self.x:"+stt (sel£.X)
m = MyClassll
fnc : m.MyFunc[10n
print (fnc(l5,35l)
m,x : 123
print (fnc(15,35l)
Ouipui
SD 7 self_x: 123

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
self obiect is assign during the construction of on obiect. This means that o function can
be defined outside the class and used within the cluss it it is set during the construction
phase.
Python 3.x
def MyFunctlon(sel£,vl,v2) :
return 5tr(vl+v2)+" — X : "+stx(self.x)
class MyClass:
x : 10
Test Z MyFunction
m : MyClassU
m2 Z MyClassU Output
print (mtTest11,2)) 307x:15
print (m2 . TestUO, 20H

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
This type of cssignmem can not be done wilhin the constructor method (finili), il musl
be done through dired declaration in the alass body,
Pylhon 1X
def MvFunctlon(selE,vl,\/2l:

return st! (Vl+v2)+" s >< Z "an (salrlxl
class MyClass:

>< , 10

def ilnltilself):

sel£_Test Z MyFunctlon

m : Myclass ll
m2 a MyClass ll
m2“ , 15 The code alll produce n rum'lme EHQI
print (m_ Test ( ;, 2n because MyFlmcIlon ls HOV bmmd Io (my self
print (m2.ras:(1u,20)l (1' "ll: Poll"

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
The some error will appear if we try m link a method from u class using iv's instance with
c non-class function,
PM" 1X
def MyFunctlon(self,vl,\/2):
return st! (Vl+v2)+" 7 >< Z "an (Seler)
class MyClass:
>< i 10
m Z MyCLasS (b
m. Tesl : Mymnvrmn
print ("h Tesﬂl, 2H The code mu produce n Mme enol
because MyFuncﬁon ‘v; not bum r0 (my self
at ﬂu: po'mi

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
A class C0" be Used like u container Of dew (u surf 0f name dictionary)‘ W5 Closest
resemblance i5 f0 G SNUCI in C-like languages. For 'his 0n empty CIGSS need TO be CreGOe
(using keyword pd“)
Pyrhun 3.x
C185! Pelnt:
pass
p : PointU
p.x : 100
p‘ y : 200
pjd : PointU
pi3d‘X : 10
p_3d‘y : 20 °""""
, y Z 100 200
prlnt ("P Z “,P‘x,p‘y)
print ("30: “,pi3d,x,pi3d.y,pi3d.z)

***************Ending Page***************

