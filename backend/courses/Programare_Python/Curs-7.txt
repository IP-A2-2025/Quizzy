***************Beginning Page***************
***************page number:1**************
\I\I\I\I\I\I\I\
I Qﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ \
I \ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ§ﬂ\ﬂ\ﬂ \
I\I\I\I\I\I\I\l
PROGRAMMING IN PYTHON ‘ @111?”

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Any Python code (python script) can be used as a module.
Pym" sex Pylhon 3.x
File: M yMudule.py File: leiLPY
def Sum(X,y| : impart MyModule Om,“

return x+y

pun: (MyModule.SumllO,2D)l

Beth files Iesf.py and MyModulelpy are located in the some folder‘
Aﬁer vhe execution of reshpy c folder wilh the name ‘pyccchei rhm contains a file
called MyModule.cpylhon-37.pyc will appear in the same folder (for Pyvhon 3.7) -)
the version will be different for different versions of Python 3 (pyc = python compiled
files)

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Any Python code (python script) can be used as a module.

Pynwn 3.x Pylhnn 3.x

File: M yModuIe.py File: reshpy

def Sum(x,yl: import MyModule

return x+y
punt ("MyModule loaded") prlnl: (MyMQduleHﬂImllO, 20m
impcxt MyModule

Loading q module will culomuﬂcully execute any code [main code) mm ow.»
resldes In that module. MyModule lauded
The main code of u module [code that is written directly and not within a 3°
function or a class) will only me executed once (the first time a module is
loaded).

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Any Pylhon code (python script) can be used as a module.

Python 3.x Python 34x

File: Mymmlwy File: om.”

def Sum(x,y) = import MyModule

“tum X+y

print 1"MyModule loaded"! print (MyModule.Sum(10,20))
mp0" MyModule

What if MyModule is not located in the same folder as Iesf.py file 3

oulpul

Tracebuck (mosI recem cull IGSf):

File “Yempyn, line I, in <module>
Import sys,MyModule
lmporIError: No module named 'MyModule'

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Any Pyahon code [python script) can be used as u module‘

Python 34x Fyihon 3.x

File: MyMudu/e.py File: Peﬂpy

def Sum(X, y): import sys

return x+y

prlnt (“MyModule loaded") sys .path +: ["<folder>"]
import MyModule
print (MyMQdule,5um110,20)r
import MyModule

In the above piece of code “<folder>” represents a pmh to the folder OWN"

where the file MyModule.py resides. MyModule loaded

30

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Any Pylhon code (python script) can be used as a module.
Pthon 3.x Python 3.x
File: MyModule.py File: ‘Eilpy
def Sumlx,y): import MyModule
return x+y
print ("MyModule loaded") print (d1! (MyModule))
Ouipul
['Sum', '_builtins_', '_cached_', '_doc_', '_file_', '_loader‘_',
'_name_', '_package_', '_spec_‘]

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Any Python code [python script) can be used as u module‘

Python 34x Python 3.x

File.- MyMudl-lle.py File: test.py

def Sum(x,yl : import MyModule

return x+y

prlnt (“MyModule loaded") print (MyModule.ifllei)
print (MyModulelinamei)
print (MyModuleegpdckagei)

Attributes:

<> _llle_ -) tull path of me ﬁle that corresponds to the module (it could be e pyc tile us well)

O inumei -) name of the module {in this example l MyModuIe)

o ‘packagev -) name at me package

***************Ending Page***************


***************Beginning Page***************
***************page number:8**************
Any Pyihon code (pyihon script) can be used us u module.

Python 34X Fthon 3.x

File: MyMudule.py File: Peﬂpy

def Sum(x,y): import MyModule as m
zltuzn x+y

idcci : “Computes the sum of two numbers“ ptint (rmidoci)

Oulpui

Computes the sum of twu numbers

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
Anemenvely, the keyword “he|p" can be used as well
Pyihon 34X Fthon 3.x
File: MyMudule.py File: new
def Sum(x,y)z import MyModule as m
return x+y
idcci : “Computes the sum of two numbers“ help (m)
Oulpul
Help on module MyModule:
um:
MyModule - Computes the sum a§ two numbers
FUNCTIONS
SWIM, y)
FILE
...\FacultateWythandeules\mymndule‘py

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Anemenvely, the keyword “he|p" can be used us well
Pyihon 34X Python 3.x
File: MyMudule.py File: Penpy
def Sum(x,y): import MyModule as m
"" "raturns the sum of x plus y“""
retum x+y help (m)
idoci = “Computes the sum of two numbers“
Qulpul
m» on module Hymule:
WE
"module e computes (he sun of M numbers
chrmus
Surlbh y)
returns tn: sw- of x vlus y
FILE
e:\dncunenKeVicukitHDl/KMWDZB'IBIlVIymnluFY

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
Any Python code [python script) can be used as a module.
Pyihon sex Fyihon 3.x
File.- MyMudule.py File: Peﬂpy
def Sum(X,y) : import MyModule
return x+y

prlnt (inameii

Ompu' OulpuI

Eu
If a python script is executed diredly, the value of _nume_ parameter will be
_muin_.
lf n is exeeuoed using import, me value of _nume_ parameter will be the name of the
module.

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Any Pyihon code (pyihon script) can be used us u module.
Python 34x Python 3.x
File: MyMuduIe.py File: {exhpy
def Sum(x,y): import MyModule
:ltuzn x+y
1: inamei Z "imaini":
print(“Main code")
print(“Test1nq sum(10,20) : ",Sum(10,20))
else:
print(“Module loaded")
Ompu' OquUI
Main code Module loaded
Tes1lng sum('lO,20) = 20

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
Python scripts can also be grouped in packages‘ Packages must be grouped in folder,
and in each folder u _inif_‘py must exist That file is an entry point for that
package/sub-packagee
MathOps
tiinitiepy
Simple
_im't_epy
Arithmeticwy
Bits.py
Complex
tiinitiwy
Seriesepy

***************Ending Page***************


***************Beginning Page***************
***************page number:14**************
Python scripts can also be grouped in packages. Packages must be grouped in folder,
and in each folder a _irlif_lpy must exist. That ﬁle is an emry poin| for lllel
package/sub-pockuge.
MathO-s P?"‘°"‘3,"
Flle: Anni.”
mp e print ("Package MathOps imc")
_im't_epy
Arithmeticwy
Bits.py
Complex
tiinitiwy
Series l py

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Python scripts can also be grouped in packages. Packages must be grouped in folder,
and in each folder q _inif_‘py must exist. That file is an emry poin| for mm
package/sub-pockuge.
MathOps 21'3""‘3,’
tiinitis Dy IQ. Anni.”
Simle print ("Package MathOpS.Slmple inn")
-r‘1 me 1c,py
Bits.py
Complex
tiinitispy
Seriesspy

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Python scripts can also be grouped in packages. Packages must be grouped in folder,
and in each folder a _inif_‘py must exist. That ﬁle is an emry poin| for that
package/sub-pockuge.
P "\on 3.x
[ETjﬂiti ‘ py FiL: Arithmeh'cpy
Simple def Add1x,y) ;
im't e. retuxn x+y
E- def Sub1X,y):
Bits.py return X*y
Complex
tiinitiepy
Series e py

***************Ending Page***************

***************Beginning Page***************
***************page number:17**************
Python scripts can also be grouped in packages. Packages must be grouped in folder,
and in each folder a _irlif_lpy must exist. That ﬁle is an emry poin| for lllel
package/sub-pockuge.
Pylhon 3.x
'E'jzsniti ‘ py File: Bilslpy
Simple def sl-lle,yl ;
_init_‘py retuxn X << y
E. ' IH’ ‘ppy def SHRlx,y):
return x >> y
Complex
tiinitiepy
Seriesepy

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Python scripts can also be grouped in packages. Packages must be grouped in folder,
and in each folder a _irlif_lpy must exist. That ﬁle is an emry poin| for lllel
package/sub-pockuge.
MathOps P?"‘°"‘3,"
tiiniti ‘ py Flle: Anni.”
Simple prlnt ("Package MathOps.CQmplex nut")
_im't_epy
Arithmeticwy
Bits.py
Comlex
Serlei e py

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
Python scripts can alse be grouped in packages. Packages must be grouped in folder,
and in each folder a _init_rpy must exist. That ﬁle is arr emry poini for mar
package/sub-pockuge.
MathOps P?"‘°"§"‘
tiiniti ‘ py FIIe: Senesrpy
Simple def Sumﬂpb 1
_in1't_spy c : 0
Arithmeticwy for i in pr
BitS-Py a: i
Complex return c
'rr' | def Product(*P)z
-— C I 1
for i in p:
c *: 1
return c

***************Ending Page***************


***************Beginning Page***************
***************page number:20**************
Usage:
Pyihan 3.x
import MathOps‘Simple.Arithmetic
print (MathOps.Simpls.ArithmetiCJlddiZ,3))
from Matnopssimple import Arithmetic a: a
print (8.Add12y 3))
Oulpu'
Package MuthOp: Inll
Package MthOps.Simple init
5

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
Usage:
Pylhon 3.x
from MathOps . Simple import *
print (A:ichmer.1c,add(2,3>)
print (EithHuz, 3|)
culpul
Package MthOps inil
Package MumOpsSimple iniO
Truoebcck [most reoem call lust]:
File "NH-FY", line 3, in <mudule>
prlm (Allihmellc.Add(2,3)]
NumeErron name 'AIilhmﬂic' is not defined

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
To be able to use a syntax similar to “from <module> imgort *" a module variable
“_all_" must be defined‘ That variable will hold a list of all modules that belongs to
that package.
MathOps 27"‘"43?
tiiniti ‘ Dy |Ie= imllipy
Simle Print ("Package MathOpS,Slmple inll:
E—w1th falli set")
Arithmetic,py falli = ["Arlthmetic","Blts"]
Bits.py
Complex
tiinitipy
Seriesspy

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
Usage:
Pthon 3.x
from MathOps . Simple import *
print (ArithmetimAddQsH
print (Bics,sHL12, 3) )
Ou'pu'
Package MuthOps Inlr
Package MthOpsSimple in" wuh iallf 5m
5
16

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
If you wam a module and/or package to be available to all the scripts that are
executed on thal system iust copy the module or the entire package folder on the
Python search path and you will be able to access it directly. These paths are:
e Windows;<PythonFolder>\le

Example: C:\Python27\Lib at C:\Python37\le
o Linux: /usr/llb/<Pythorl\/ersion>

Example: /usr/lib/pyvllan2.7 or /usr/lib/pytllon3.7]

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
Python also has a special library (imponlib) lhul can be used lo dynamically import a

module.

o impnlhlmpmfimodule lmoduleNume,p0ckcge:None) 9 in impor' c medule

o imponlihrelocd (module) -) Io reload a module IhuI was already laaded

Pylllan 3.x Pyllmn 3.x

File: C:‘\Py|hon3\ll'b\MyMcdule.py File: Peskpy

def Sum(X, y) z import impoztlib

return X+y
print 1"MyModu1e loaded“) m : importlib.lmpcxtimoduls(“MyModule")
pnnc lmd5l1m(10,20l)

olnpul
MyModule leaded
30

***************Ending Page***************


***************Beginning Page***************
***************page number:26**************
Python has a keyword (exec) that can be used to dynamically compile and execute
python code.

The format is exec (code, [globul],[local] ] where [global] and [local] represents a list
of global and local definition that should be used when executing the code‘

Python 3.x Outpul

print (x)

execl"def numisum (x, y) = return x+y"l Outpul
prlnt(numisul1\(10,20l)
s = "abcdefg"

axicl"52:srupper() "l Ouipul

print (sZ) ABCDEFG

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
Because of this keyword, python code can obfuscate or modify itself during runﬁme.

Pythonlx

data = [Ox65, 0X66, 0x67, 0X21, 0x54, 0x76, OXEE, 0X62, 0x29, 0x79,
0X21), DX7A, UXZD, 0x75, UXZA, 0x35, UXOE, 0x05, DXOA, 0X73,
0x66, 0X75, 0x76, 0x73, OxﬁF, 0X21, 0x79, OXZC, OX7A, OXZC,
Ox7E]

s =

for 1 in data:

exec(s)

prinmmmm» —

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Because of this keyword, python code con obfuscate or modify itself during runﬁme.

Py|h0n3.x

data I [DX651 0X65, 0X67, 0X21, 0X54, 0X76, UX6E, 0x62, 0x29, 0x79,
oxzn, onA, onD, was, onA, 0x35, 0m, UXOB, oon, 0x73,
0X66, 0x75, 0x76, 0x73, OXGF, 0X21, 0X79, OXZC, OX7A, OXZC,
mus]

s : u“

for i in data: dafSumo(x,y,1]z
s += - Ielum K+y+1 ompm

pIin uma(1,2,3))

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
Multiple layers of encryplion are also possible:

Pylhcn 3.x

buf :

[0x74], 0X21, OX3E, 0x21, 0X23, 0X67, 0X69, 0x69, OXSD, 0X23, 0x76, OXZB, 0X64, DXZF, 0x65,
0X20, OX3D, 0x517, 0X23, 0x75, 0x68, 0x77, 0X78, 0x75, 0x71, OXSD, 0x23, 0x64, OXZE, 0X65, O
x23, 0x012, OXUB, 0X74, 0x33, 0x21, OXEE, 0X21, 0x23,0x23, uon, DXOE, 0x67, 0x70, 0x73, OX
21, 0x64, 0x21, OXGA, 0X65‘, 0X21, 0x74, 0x313, OXOE, DXOB, OXOA, 0X74, 0X33, 0x21, OXZC, 0x3
E, 0x21, 0x64, 0x69, 0x73, 0X29, DX7Q, 0x73, 0x65, 0x29, 0x64, UXZA, OXZE, 0X33, OXZA, 11on
, OXUB, 0X66, 0X79, 0x66, 0X64, 0X29, 0X74, 0x33, OXZA]

s : I.“

for i in buf:

s += chrliil) 0m.“

lxeclsl D
p:inl:(s(10,20)|

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Multiple layers of encryption are also possible:

Pyihcn 3.x

buf :

[0x74], 0X21, OXBE, 0x21, 0X23, 0x67, 0x69, 0x69, OXSD, 0x23, 0x76, OXZB, 0X64, DXZF, 0x65,
0X20, 0x313, UXSD, 0X23, 0x75, 0x68, 0x77, 0X78, 0x75, 0x71, OXSD, 0x23, 0x64, OXZE, 0X65, O
X23,DXOE,OXUB,OX74,0X33,DXZl,OX3E,OX21,0X23,0X23,0XOE,DXOE,DXS7,DX7D,OX73,DX
21,0X64,0 ‘ ' ‘ ‘ ' ' ‘ ' ‘ IE,DXOB,OXOA,OX74,0X3},OX21,0X2C,OX3
E,Ox21,0 s = "th\“u*c.d+<\"tngtp\"c-d" 0X29,0X64,UX2A,OX2E,OX33,0XZA,OXDE
,0x0B,o>< 52 = XzA]

s = "“ for c :in s:

for 1 i sZ += chr(or'd(c)-Z)

- exec(sZ) Ouipu'
p21n 5110,20),

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
Multiple layers of encryption are also possible:

Pyihcn 3.x

buf :

[0x74], 0X21, OXBE, 0x21, 0X23, 0X67, 0x69, 0x69, OXSD, 0X23, 0x76, OXZB, 0X64, OXZF, 0X65,
0X20, 0x313, 0x517, 0X23, 0x75, 0x68, 0x77, 0X78, 0x75, 0x71, OXSD, 0x23, 0x64, OXZE, 0X65, O
x23, 0x012, OXUB, 0X74, 0x33, 0x21, OXEE, 0X21, Ux23,0x23, OXOE, 0x05, 0x67, 0x70, 0x73, 0X
21,0X64,0 ‘ ‘ ‘ ‘ ' ' ‘ ' ' IE,DXOB,OXOA,OX74,0X3},OX21,0X2C,OX3
E, 0x21, 0 s = "th\“u*c.d+<\"tngtp\"c-d" 0x29, 0x64, UXZA, OXZE, 0x33, OXZA, 11on
,0x05,0>< 52 = IXZA]

s = "“ for c :in s:

for 1 i s += chr(or'd(c)-Z)

G)- exe Q

a" ‘ —
pzin “10,20” def S(a,b). return a+b 3O

***************Ending Page***************

