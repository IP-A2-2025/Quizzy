***************Beginning Page***************
***************page number:1**************
\I\I\I\I\I\I\I\
I Qﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ \
I \ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ﬂ\ I
\ ﬂ\ﬂ\ﬂ\ﬂ§ﬂ\ﬂ\ﬂ \
I\I\I\I\I\I\I\l
PROGRAMMING IN PYTHON ‘ ifﬂffw‘

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Regular expression are implemented in Python in library "re".
Usual usage:
c Regular expression (slring form] is compiled imo u b'lrlclry lorm (usually an uuromulul
a The blnury form is used for the following:
o 01mm. slung mulchas u regular prrasslcn
~:¢ Checks if a mum“; lrm a swing can l1! ‘ldenliﬁed us'lng a legulur axprmsion
~:~ Wm rubu-W hum a my bum on u vegulur expressicm
Documentation:
r; Pylhon 3:hllpsrZZdocs.91Ihorl.org[31librar11rehlml

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
‘ REGULAR EXPRESSIONS SUPPORT
Reguler expression special ehereeiers (here is e sirriple sei of special characters)
mm- —m—
. All oiioroeiers except new line \o neeiiriol eheroners o,1,2,3,iii9
A Morelies or Ihe siori of Ihe sirirrg \D All excepv decimal characters
s Muiches ul Ihe erid of ilie siririg \s Spoee, lab, riew lirie lCR/LF) shorocrers
* >:o repeiiiierrls) \s All exeepi shoroeiers oesiorioied by \s
a 0 or l occurrence \w Word characters u-z, A-Z, 0-9 and i
+ >:l repeiiiiorilsl \W All excepv elreroerers designeied by \w
(x) Muiches <x> iirrres \ Escape chcvcmer
(m) Muiches beiweeri <><> and <y> iirries [Am] Nor speciﬁed group oi shoresvers
[1 Group of characters 1m) Grouping
l Or eondiiioii [1 inierrol for a group of elioreeiers.

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Usage:
o use re.compi|e ireouioLexpressionjiringjluqs) ve compile u regular expression imo iis binary form
o Use me “makh” nreihod of ine resuiied obiect io check if a siring mu'ches ihe regular expression
Pyiiron 3.x
impoxt re OWP"
s e re.cornpr7ei"07[0*9](8)")
if r.matcb ("0740123456") t
print ("Match")
o The same resoli eon be achieved by using ihe “mukH' function from me re module dTrecIly
Pylhon 3.x
impoxt re
if resmaKCh("O7 [0,9] i8 i "0140123456'W:
phlnt ("Match")

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
‘ REGULAR EXPRESSIONS SUPPORT
m:_—
\w+\s+\w+ “Guvrllm Dragos", "Guvrilut Drugos Teodor"
A\w+\5+\w+$ “comm Dingos"
[0-9](1,3)\.[O-9]{1,3)\4[0-9](I,3}\.[O-9](1,3} “1 92.1 68.0.1 "999.999299999"
(lo-910 ,3}\l)(3)[0-9]('l ,3} “1921 68.0.1 "wwwvswwv"
Alulu-91) l ([1 allow]; l ll [0-9](2)l| l2l0»41l0- Will only muich IP addresses
9])l[25[°-5]l)\-l{3}(([0-9])|([l-9][Q-9]]|(1[0-
VKQN l [2[0-4][°-9]] l 175l0-5111$
[12]\d(12) CNP {bur will not vandals 'he correclness of Ihe

blvth duie

OX[0790JAVF]+ A hex number
(if \Vhen l elsel while \cominue l break) A speclcl keyword

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
rematch starts the matching from the beginning at the string and stops once the
matching ends and net when the string ends except for rhe case where regular
expression pattern is using the “3" characters
Pythen a.‘
ultpclzt re ow".
if re.marcﬂi"\d+",“123 usu“): Mm"
print ("Match") NO Match
if re.matcﬂi"\d+", “Prlce is 123 usn"):
pun: ("Match")
i£ nets re.matCh("\d+$"r"123 usu"):
pzlnt (“no Match")

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
If you want to check if a regular expression pattern is matching a puri of a string,
the "search" method can be used:
Python 1x
import re
if reisearcﬁ ("\d+“, "Price is 123 USD"): °”"""
punt w-Found-w M-
The sume can be achieved using a compiled obiect:
Python six
import re
r : re.compll<>(“\d+")
if risearchi'wrlce lS 123 USD"):
print ("Found")

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
search method stops after the ﬁrst match is achieved.
The cbiect returned by the search or match method is called a match obiect. A match
obiect is always evaluated to true. If the search does not ﬁnd any match, None is
returned and will be evaluated to false. A match obiect has several members:
. qreupllhdex) —) returns the substrlng that matches that speclflc group. If index ls o, the substrlng refers
ta the ehtire string thut was matched by the regular expression
o lustindox —) returns the index of the last obiect that was matched by the regular expression. To create a
group withih the regular expresilﬂrl, one must use l...].
Python 1x
import re
result = ze.search ("\d+", “Prlce 15 123 usu") °"'P"'
print (reSult.group(D)l

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
In case of some operators (like * or +) they can be preceded by ‘P. This will specify a
NON-greedy behavior.
Python u
import re
result I IE‘SEEZC21(""(\d+)ﬂ, "File size lf 12345 bytes")
if result:
print (result.qxoup(l))
result : re.search(".*? “an “File $129 if 12345 bytes")
is result:
prlnt (resultgvcupﬂn 0mm"
s
12345

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
In CGSe Of Same Operqfurs (like * or +) they can be preceded by I’. This will specify a
NON-greedy behavior.
Python u
import re
result Z Ie‘SEaZCh("-’ (\d+)ﬂ, "Flle size lf 12345 bytes")
if result:
print (resulc.qmup(l))
result : re.search(@ \dH ", “Flle $129 1f 12345 bytes")
is result:
prlnt (result,g'cup11)) Output
. 5
12345

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
(-4.) is usually used to delimit specific sequences of sub-string within ‘he regular
expression puNern:
Python ad
import re
result I IE‘SEEZC)I("‘\C1+,[A\d]*(\d+)","PIiCe 15 123 USD apIQX llO EUR“)
if result:
print (result.lastlndcxi
for 1 in range(O,Iesult‘last1nciex+l)z
print (1, ":>--, resungzoupUH can,“
2
0 :>123 usn, uplox. 11o
1 => 12:
2 :> 1 10

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
(-) i5 USUGHY used f0 delimit specific Sequences of Sub-string Within ‘he regular
expression chern:
Pyihon aex
import re
result e re‘seazch("®[”\d]*(\d+)","Price 15 @051: aprox 110 EUR“)
if result:
print (result.lastlndcxi
for 1 in unqe(0,:eeu1elesmndemnz
print (1, ":>", resungzoupUH Ovlpm
2
0 :>123 usn, uplox. 11o
1 => 123
2 :> 1 10

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
(.4.) is usually used to delimit specific sequences of sub-string within me regular
expression chern:
Pyihon a‘!
import re
result e reiseazCIi("1\d+HA\d] @","Pnee 15 123 Us]: apromeUR“)
if result:
print (result.lastlndcxi
for 1 in range (O, result‘ lastlncieadl):
print (1, ":>", resultegzoupiin Quip“.
2
0 :>123 usn, uplox. 110
'l => 123
2 :> T TO

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
(-4.) is usually used to delimit specific sequences of sub-string within ‘he regular
expression chern:
Python arr
import re
result Z [elseazth("1(\d+) . mm) l”\d]*(\d+b",
“Color from pixel 20, 30 1.5 123")
if result: OW“.
print (IesultJaSEindeX)
for 1 in range(O,result.lasLlndex+liz 4
print (l, "=>", resultlgroupdn 0 :> 203°‘; 123
1 => 20,30
2 :> 20
3 => 30
4 :> 123

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
(.4.) is usually used to delimit specific sequences of sub-string within ihe regular
expression puiiern:
Python arr
import re
result r rerseazclﬂ‘ w [”\d t (1+)
“Co - - pixel w ls 123")
if result: OW“.
print (resultlasrl'ndexa
for 1 in range(O,result.lasLlndex+liz 4
print (l, "=>", resultrgroupdn 0 => 20,30 is 123
1 => 20,30
2 :> 20
a => ao
4 :> 123

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
(-4.) is usually used to delimit specific sequences of sub-string within ‘he regular
expression puNern:
Python arr
import re
result Z [elseaZCh("1® (\d+) > [m1 <\d+>
“Co - £er pixel @ 30 1.5 123")
if result: OW“.
print (resultlasrl'ndexa
for 1 in range(0,result.lasLlndex+liz 4
print (l, -l=>--, resultgmumin o :> 20,30is123
1 => 20,30
2 :> 20
a => ao
4 :> 12:

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
(-4.) is usually used to delimit specific sequences of sub-string within ‘he regular
expression chern:
Python arr
import re
result Z [elseazthw 1 (\d+) ,w [A\d]*< -+>
“Color tr pixel 20 Q ls 123")
if result: OW“.
print (resultlasrr'ndexa
for 1 in range(0,result.lasLlndex+liz 4
print (l, "=>", resultlgroupdn 0 :> 203°‘; 123
1 => 20,30
2 :> 20
a => 30
4 :> 123

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
search stops after the first match. To find all substring that match c specific regular
expression from e string, use findull method.

Python alx

import re

result e [Elflndall("\d+",“C0101: from pixel 20, 30 lS 123")

if result:

prlnt (result) OW“.
['20‘, ‘30', ‘1231

The result is u vector containing all substrings that matched the regular expression.

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
search stops after the first match. Ta find all substring that match q specific regular
expression from c string, use findull method.
Using groups (.v.) is also allowed (in this case they will be converted to a tuple in each
list element.
Python 3.x
import re
result : re, Fir'dai l l" (\d) (\d+) ", "Color from plxel 20,30 1.5 123")
if result:
print (result)
Output
“'2'. '0'). 1'3‘. ‘0'1, m '. '21)]

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
search stops after the first match. Ta find all substring that match q specific regular

expression from c string, use findull method.

Using groups (.v.) is also allowed (in this case they will be converted to a tuple in each

list element.

Python 3.x

import re

result : re, Fir'dal l ﬂw (\d+) ", "Color from p1xel@,30 1.5 123")

if result:

print: (result)

Oupvt
[(9'0').l's'.'o'1,l‘l'.'2a’;1

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
search stops after the first match. Ta tind all substring that match q specific regular

expression from c string, use findull method.

Using groups (.v.) is also allowed (in this case they will be converted to a tuple in each

list element.

Python 3.x

import re

result : re, Firdal l l" (\d)®","c<>10z from plxel (D 30 1.5 123")

if result:

print: (result)

Ovipvt
“'2'.®.l'3'.'0'1,r1'.'23‘11

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
split method can be used to split a String using a regular expression.

The result is a vector with all elements that substrings that were obtained after the split
occurred‘

Pyilwn 3.x

import re

result : re, 5p]1t(“[ae1.0u]+","COl<>r from plxel 20, 30 1.5 123")

print (result)

Oulpul
IIII “III IIIIHIHI HIIII

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
Groups ccln also be used. In this case the split is done after each group 0th matches.
Python 3.x

import re

print ire.spllt("\d\d",“Color from plxel 20,30 lS 123">|
Elemenls

'Colorflom pixel' ‘is’ '3'

Python 3.x

import re

print {reisplit("(\d) (\d)",“Color from pixel 20,30 is 123");
Elemenls

'Colorfrom pixel' '2' 'o' '3' '0' 'is' '1' '2' ‘3'

***************Ending Page***************


***************Beginning Page***************
***************page number:24**************
‘ REGULAR EXPRESSIONS SUPPORT
Groups can also be used. In this case the split is done after each group ‘hat matches‘
Pthon 3.x
prlnt (ressplit1"\d\d+", "Colo: from pixel 20, 30 ls 123"))
Oulpul
.HIHIIIIIIHEIHIH. I I...

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
‘ REGULAR EXPRESSIONS SUPPORT
Groups can also be used. In this case the split is done after each group Ohm matches.
Python 3.x
prim: (révSPlit1"\d\d+", "1234E-"H print (Ie.split("\d“, "12345"))
Ouvpm
mn—mn—
Pyllmn 3.x
print 1re.spllt(“(\d)", "12345"))
Oulpuv

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Groups can also be used. In this case the split is done after each group that matches‘
"If capturing parentheses are used in pattern, then the text of all groups in the pattern are
also returned as part of the resulting list."
hﬂgs:[ [docspithomorg Z 3 Z libra r! Z reshtmlﬁressplit

Python 3.x

import re

print (tenSplltPl (\d\d+) "ch01 from pixel 20, 30 is 123");

Output

['Color from pixel‘, '29‘, ‘,', '36‘, ' is ‘, ‘123', "]

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
splil method also allow Hugs and to specify how many times a split can be performed‘
The full format is 5pm (puHern, sfring, mclxsplif=0, f1qgs=0)

Pylhon 3.x

import re

s : "Today I'm havlnq a python course"

prlnt (re4split1" [”a—z‘]+“, s)»

print (re4split1"[”a*z’]+", s, 2n

print (re‘$plit1"["aiz‘]+“, s, flags : rerNoREczassy)

print (re.spllt1" [”a—z‘]+“, s, 2, flags : re.IGNORECASE))

prlnt (reusplitw[Aaiz'AiZ]+", sH

oulpul

[", 'odcy', ‘“",m 'huving', ‘a’, ‘pymon', 'course'] ['Toduy', "Fm", 'huving u pyvhon course]

[", 'oduy', '“m having a pthon mmq ['Toduy', "rm", ‘having’, ‘u’, 'py'hon‘, ‘course'1
['Today', "I'm", 'hqving', 'u', ‘pyvhon', 'course']

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
‘ REGULAR EXPRESSIONS SUPPORT
Regexp can also be used to replace u matched string with another string using the
meihod sub.
formai is sub (pcﬂern, replace, sfring, covnf=0, flags=0)
o panem is a regular expression i0 search for
c Nplncl is either u string or a function
e string is me siiing where you are going to search iiie puﬂeni
<> CGIIII' represems how many iime me replacement can occun if missing or o means for all marches,
O flags represenis some flags [like re.lGNORECASE)
Pyihon 3.x
s : "Today I ‘m havlnq a python course“
print (ressub (“hav1ng\s+a\s+\w+\s+course", "not [10an anything", 5))
Oulpul

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
Regexp can also be used i0 repluce 0 mulch with another string using the method sub.
format is sub (pallern, replace, srring, couni=0, flcgs=0)
If replace parameter is a string, there is u special operator (\<number>) that if found
within the replacement string will be replace with the group from the match search [for
excm-le 3 will be re-lcced with .--rou(3)).
Python 3.x
import re
s : "Today I ‘m having a python course"
print (leisubl"having\:+a\:+l\w+l\:+course",

r"n0t doing the \l Course",

s) l

Output

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Regexp can ulsc be used t0 replace 0 match with another string using the method sub‘
format is sub (pattern, replace, string, caunt=0, {1095:0)
If replace parameter is a string, there is a special operator (\<number>) that if found
within the replacement string will be replace with the group from the match search [tor
example \3 will be replaced with .group(3)).
Python 3.x
import re
5 = "Today I'm having a pytho course"
pnnc trersub ("havmq\s+a\s ®\s+c0urse", You can also use
with the same
effect. In this case
r"n0t doing the @course",
s) )

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
Regexp curt also be used t0 replace a match with another string using the method sub‘
format is sub (pattern, replace, string, count=0, {1095:0)
If replace parameter is a function it receives the match obiectt Usually that function will
use .group[0) method to get the string that was matched and convert it to the
replacement value.
Python 3.x
import: re
Output

‘hf “MEMTQHGX (s) ‘ File size is Ox3039 bytes

return hexlxntls,group10) )l
s Z "File slze is 12345 bytes“
prlnt trersub ("\d+“, ConvertToI-Iex, st)

***************Ending Page***************


***************Beginning Page***************
***************page number:32**************
Python regular expressions supports extensions. The form of the extension is (1'...)
<2 (?P<nume>...) will sev me name ei a group V0 u given airing. In case oi‘ u muich, mm group can be
accessed based on its name.

Pyihon 3.x

import re

s = "File size if 12345 bytes“

result = re. SSEZCh(" 17P<file size>\d+) ", s)

if result:

print ("size is ", result.gzoupC'flleislze“I)
Ouipui
Size ix 12345

***************Ending Page***************

***************Beginning Page***************
***************page number:33**************
Python regular expressions supports extensions. The form of the extension is (?..,)
a (?P<name>...) ->The match obiec' also has a gmupdm method mm relwns u dicvionary with all
Vhe keys and strings 'hnl‘ makh Ihe specified regular expression
Fyihon 3.x
import re
s = "File conflg > txt was create on 2016*10*ZO and has 12345 bytes"
result : re. search("Flle\s+1?P<na|l\e>[a-Z\.]+)\S . " (?F<date>\di4 ) -\di2)-
\di2)) i *\s (?P<size>\d+i "I 5i
. — Resuli
15 result:
print (result_groupdlcti)) {
'date' 1 '2616-10-29‘,
'name‘ : ‘configvtxt ' ,
‘Sile' I '12345'
}

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Pylhon regular expressions supports extensions. The form of the extension is (1'...)
Q (1m...) ignore case will be applied ‘or vile OIIVVGI" black muich

o (mi...) (do!) will mulch everyihirlg

Pyihorl ax

import re

s = "12345abc54321"

result = re. searCM" 12) ( [1,3,2] H ) "i S)

if result:

print (result.gloup(1)l

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
Python regular expressions supports extensions. The form of the extension is (1'...)
o l1=...) will nlolell me previous expression only if nexv expression is (mis is culled look ahead
osserlion]
o (1!...) similarly, will moieh enly if me nexi expression will nol maich
Pylhon 3.x
import re
s I "Python Course“
result = Ie.searc!1(" (Python) \s+ (?=Cou:se) “,s)
if result:
pzint (Iesult.groupll)i
olnpul

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Python regular expressions supports extensions. The form of the extension is (1'...)
<2 ms...) represents a cummem / irlierrrwnen mm Curl be added in me regular expression re reflecl
the purpose of u speciﬁc group
Pyihon 3.x
import re
s : "Size is 1234 bytes"
result = Ie.sean:!1(" (?# ﬁle size) (\dH ", 5|
if result:
pzint ("Size is ", zesult.group(l))
Ouipui
Size is 1234

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
Python hes a way to iterate through u string applying different regulur expression. Because
of this, a tokenizer can be built for different languages. Use method finditer for this.
Python 3.x
import re
number e " (?P<nu|nbez>\d+) H 0-”va
operation : " (?P<operat:ion>[+\-\*\/] l " ‘IO => number
brake: = " (?P<bzaket>[\ (\l ] i " :> space
space : " (?P<spaea>\s) " * => operation
other : " (?P<othez>.)" :>spdce
r Z re.complle(number+" i "+operation+" i "+braket+ [:> byekei
" i "+space+" i "+otheh) 250 => number
expr = "10 » (2506)“ +:>opemtion
for matchobj in r. f1 ltd! teﬂexpri: 3 => number
key : matchobj . lastqrnup )=> braket
punt (matchobj . group(key) +" :> "+key)

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Recommendations:

l‘ it the sorne regular expression is used rnuiiipie tinies using it in the compile torrn will
improve the pertorrnonce ot the script

2. Even it Pyihon recognizes some escape sequences (such as \d or \w) it is better to
eiiher use a raw string r".." er ta duplicaie the escape characier
I Instead of “\d" 9 use r‘ \d' or “\\a‘

3i Regular expression need memory‘ If on you need is to search o snbsiring within
onotirer substring or periorrn simple string operotion, don‘t use reguior expression for
thiss

A. If you are trying to use the regular expression in a portable way, don't use some
features like (?P:ncme] 9 other languages ar regular expression engines might nat
support this,

***************Ending Page***************

