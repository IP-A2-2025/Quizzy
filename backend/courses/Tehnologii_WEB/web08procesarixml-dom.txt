***************Beginning Page***************
***************page number:1**************
Tehnologii Web
producﬁva Flowcham‘
procesarea datelor [III-"Cl
XML/HTML g whaiyouneedeoHodo
II]-
DOM wha+ you. said you. would do
Document Object Model
wi-Myoudid
Prof. Sabin Corneliu Buraga — profs.info.uaic.rol~busacol

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
,,Regula de aur este cé nu existé reguli de aur."
George Bernard Shaw

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
< />
Cum putern prelucra documentele XML?

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
<?xml versi0n="1.0“ encoding="UTF-8“?> . .
< | DOCTYPE htm1> nod de tlp comentarlu
<!-- pentru redarea datelor, se recurge 1a o foaie de stiluri CSS -->
<?xml-sty1esheet type="text/css" href="game.css" ?>
Instruc'glune de procesare it1e>
<p1atform type="tab1et">Android</p1atform>
<p1atform min-version="9" type=“tab1et">iOS</p1atform>
<p1atform mln-ver51on="10" ruxidetn)auﬁbut
<ur1>...</ur1>
“We” “
<ident tag de 1nceput tag de ﬁnal
<first-name>Sabin</first-name>
<1ast-name>Buraga</1ast-name> ekﬂnentXNanuntat
<!__ ___ __> (aluqydelnceput
</identity> siuyydeﬁnal
<points>30374</points>
< 1 >
/p aye r nod de tip text
</game>
(characterg)

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Tipuri de proceséiri XML
procesare manualé
e.g., expresii regulate @

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Tipuri de proceséiri XML
procesare obiectualé
DOM (Document Object Model)
non-DOM

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Tipuri de proceséiri XML
procesare condusé de evenimente
SAX (Simple API for XML)
XPP (XML Pull Parsing)
detalii in cartea S. Buraga, T ehnologii XML, Polirom, 2006
profs.info.uaic.rol~busacolteachlcourses/web/presentations/Sabin_Buraga-Tehnologii_XML.pdf

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Tipuri de proceséiri XML
procesare simplificaté
Simple XML
detalii in cartea S. Buraga, T ehnologii XML, Polirom, 2006
profs.info.uaic.rol~busacolteachlcourses/web/presentations/Sabin_Buraga-Tehnologii_XML.pdf

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Tipuri de proceséri XML
procesare particularé
via API-uri specializate pentru a prelucra
tipuri de documente specifice
e.g., KML, RSS, MathML, SVG,...

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Procesoare (analizoare) XML
fﬁré validare
verificii doar dacéi documentul
este bine-formatat (well formed)
Expat, libxml, MSXML,...

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Procesoare (analizoare) XML
cu validare
verificéi dacé documentul este valid,
conform unei metode de validare:
DTD — Document Type Deﬁnition, XML Schema
Apache Xerces, IAXP, libxml, MSXML,...

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Modelul DOM
introducere
niveluri de specificare
interfeye DOM
DOM Core
implementéri
exemple
DOM direct in navigatorul Web

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
dom: intro
Scop:
procesarea obiectualéi — standardizatéi —
a documentelor XML $i/sau HTML

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
dom: caracterizare
Interfajcéi de programare a aplicajciilor (API)
abstracté pentru XML/ HTML

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
dom: caracterizare
Interfajcéi de programare a aplicajciilor (API)
abstracté pentru XML / HTML
independenté de platformé gi limbaj de programare
standardizaté de Consorjciul Web

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
dom: caracterizare
Define§te 0 structuréi logicéi arborescentéi
a documentelor XML
document E ierarhie a unui set de obiecte
pe baza ciirora se pot accesa/modifica noduri §i date XML

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
dom: niveluri de specificare
DOM 1 (1998), DOM 2 (2001),
DOM 3 (2004), DOM 4 (2015)
DOM Core pentru XML
DOM HTML pentru procesarea standardizatéi
a paginilor Web — uzual, la nivel de client (browser)

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
dom: niveluri de specificare
DOM Living Standard
dom.spec.whatwg.org
specific HTML — versiunea actualéi
in continué dezvoltare
(cea mai recentéi actualizare: 22 martie 2023)

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Markup t0 test (permalink, w, Llpload, download, hide):
< !DOCTYPE htm1>
<html><head><title>DOM</title></head><b0dy><article><h1 c1ass="h">web</h1>
<img src="image" a1t="web">Document <em>Object</em> Model</article></body§j
DOM View (hide, refresh):
IIBﬁJYPE‘ html un document HTML §i
HLEAD arborele DOM corespunzétor
TITLE . . .
LNG“: DOM repreze-n-tat VIZ-1.]...1VGI DQM VleYver
BODY software.h|X|e.ch/ut|lltles/jsllIve-dom-VIewer/
LARTICLE
H1 c1ass="h"
|-#1:e)(t: Web
#text:
IMG src="image" a1t="Web"
#text: Document
EM A
L#1:ext: Object 1n cazul HTML, numele elementelor
#text; Model sunt disponibile cu litere mari (capitals)

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Markup t0 test (permalink, w, Llpload, download, hide):
< !DOCTYPE htm1>
<html><head><title>DOM</title></head><b0dy><article><h1 c1ass="h">web</h1>
<img src="image" a1t="web">Document <em>Object</em> Model</article></body§j
DOM View (hide, refresh):
IIBﬁJYPE‘ html un document HTML §i
HLEAD arborele DOM corespunzétor
TITLE . . .
Lmext: DOM repreze-n-tat VIZ-1.]...1VGI DQM VlGYVGI‘
BODY software.h|X|e.ch/ut|l|t|esljsllIve-dom-VIewer/
LARTICLE
H1 c1ass="h"
Littext: Web D
..' Ieceapare
IMG src="im $1 acest nod?
#text: Documen
EM
Littext: Object
#text: Model

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
dom: interfete
Modalitate abstractéi de accesare gi de modificare
a reprezentérii interne a unui document XML
datele sunt incapsulate in obiecte, ascunse $1 / sau
protejate de prelucrarea externé directé

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
dom: interfete
Nu implicé 0 implementare concretéi, particularéi
DOM oferéi interfeye
independente de implementare pentru
accesarea/procesarea datelor

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
dom: interfete — IDL
Interfejcele sunt definite via
IDL (Interface Description Language)
declaré tipuri de obiecte prin specificarea interfeyelor
acestora (proprietéijci + metode publice)
specificajda curentéi (2018): www.0mg.0rg/spec/IDLI

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
se pot declara module, Short
interfege, metode, tipuri, UShort
. . . intregi
atrlbute, GXCGIJFII, constante Long
ULong
Fl
valori de oat
bazé reale
Double
Boolean
tipuri de date
lDL Char
I altele
String
Struct
valori S Enum
construite equence
Union
referinjcé
Any

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
dom: interfete — WeleL
WebIDL — specificayia oficialé pentru HTML
parte din HTML Living Standard (20 martie 2023)
webidl.spec.whatwg.org

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
dom: interfete — exemplu
Declararea interfetei vizénd lista de noduri
(elemente, atribute, caractere, comentarii,...)
ale arborelui XML: NodeList
interface NodeList{
getter Node? item (unsigned long index);
readonly attribute unsigned long length;
};

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
dom: mterfete — exemplu
metodé de preluare a informatiilor
privind un nod dintr-o listé de noduri
la intrare: un parametru de tip
intreg lung féré semn
interface NOdeLiSt { rezultat: 0 valoare de tip Node
getter Node? item (unsigned long index);
readonly attribute unsigned long length;
}’ proprietate read-only
de tip intreg lung féré semn

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
dom: interfete — exemplu
Specificarea interfetei privind un atribut XML:
Attr
interface Attr : Node {
readonly attribute DOMString name;
readonly attribute boolean specified;
attribute DOMString value;
};

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
dom: interfete — exemplu

interface Attr : Node {

readonly attribute DOMString name;

readonly attribute boolean specified;

attribute DOMString value; " .
>;

name desemneaza numele atributului XML
specified indica daca atributul a fost specificat efectiv
value reprezinta valoarea curenta a atributului

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
dom: core
Un document E ierarhie de obiecte de tip nod
care pot implementa interfejce (specializate)
nodurile posedéi descendenyi ori sunt noduri frunzéi

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
dom: core
Un document E ierarhie de obiecte de tip nod
care pot implementa interfejce (specializate)
nodurile posedéi descendenyi ori sunt noduri frunzéi
parcurgerea arborelui se efectueazéi
in preordine, in adéncime (depth-first) — tree order

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
dom: core
Accesul la date
— liste de noduri, atribute, valori,... —
se realizeazéi recurgéndu-se la metodele specifice
fiecéirui tip de noduri ale arborelui

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
dom: core — tipuri de noduri
Element, Processinglnstruction,
Document
Comment, DocumentType
Document Element, Processinglnstruction,
Fragment Comment, Text, CDATASection,...
Element Element, Text, Comment,
CDATASection, EntityReference,...
Text, EntityReference
(nod frunzéi a1 arborelui DOM)

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
dom: core
Interfeye fundamentale:
DOMException
gestioneazéi setul de excepyii de procesare

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
dom: core
Interfeye fundamentale:
DocumentFragment : Node
acces la fragmente de arbore
(obiect minimal féré nod rédéciné)
DOMNode
DOMDocumentFragment

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
dom: core
Interfeye fundamentale:
Document
furnizeazéi accesul la document
pentru consultare $1 / sau modificare

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
dom: core
Interfeye fundamentale:
Document
proprietéjd folositoare:
doctype — indicé tipul de document (DTD)
documentElement — desemneazé elementul-rédéciné

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Metode esentiale ale interfetei Document
createElementO — creeazé un nod de tip element
createTeXtNodeO — creeazéi nod de tip text (continut efectiv)
createAttributeO — creeazéi un nod de tip atribut (Attr)
getElementsByTagNameO — oferéi lista elementelor
avénd un anumit nume (tag)
getElementBy|d() — furnizeazéi elementul
identificat prin valoarea atributului id
importNodeO — importé un nod din alt document
prin clonarea datele acestui nod

etc.

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
dom: core

Interfete fundamentale:

Node
permite accesul 1a nodurile arborelui

tipuri de noduri

— e.g., Document, Element,

CharacterData (Text, Comment, CDATASection),
DocumentFragment, DocumentType, EntityReference,... —
prelucrate in mod unitar

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Proprietéijci importante ale interfejcei Node
nodeName — furnizeazé numele nodului curent
nodeValue — oferéi valoarea curentéi a nodului
nodeType — furnizeazé tipul nodului: element, atribut,...
parentNode — desemneazéi nodul périnte a1 nodului curent
parentElement — specificé elementul péirinte a1 nodului

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Tipuri de noduri (proprietatea nodeType) Valoare
ELEMENT_NODE 1
ATTRIBUTE_NODE 2
TEXT_NODE 3
CDATA_SECT|ON_NODE 4
ENTITY_REFERENCE_NODE 5
ENTITY_NODE 6
PROCESSING_|NSTRUCT|ON_NODE 7
COMMENT_NODE 8
DOCUMENT_NODE 9
DOCUMENT_TYPE_NODE 10
DOCUMENT_FRAGMENT_NODE 11
NOTATION_NODE 12

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Proprietéjd importante ale interfeyei Node
ChildNOdeS — oferé lista nodurilor copil ale nodului curent
firStChild — desemneazé primul copil ale nodului curent
IaStChild — specificii ultimul copil ale nodului curent
neXtSibling — indicé urmétorul nod (sibling)
aﬂat pe acelagi nivel cu cel a1 nodului curent
previousSibling — reprezinté precedentul nod (sibling)
aﬂat pe acela§i nivel cu cel a1 nodului curent
etc.

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Metode utile oferite de interfata Node
insertBeforeO — insereazé un nod inaintea celui curent
CloneNode() — cloneazé datele nodului curent
compareDocumentPositionO — comparé pozitia nodului curent

cu alt nod in cadrul documentului
isEqualNode() — testeazii dacé nodul curent este echivalent
cu alt nod (acelagi tip de nod, apartine aceluia$i spatiu
de nume, are aceea§i valoare, ambele noduri au acelagi
numéir de copii, fiecare nod copil are acelaei index
pentru ambele noduri etc.) — veZi §i isSameNode()
containsO — verificéi dacéi nodul include un nod anume

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Metode utile oferite de interfaya Node
hasChildNodes() — verificéi dacé nodul curent are noduri copil
appendChi|d() — adaugé un nod copil
replaceChildO — substituie un nod copil
removeChi|d() — eliminéi un nod copil

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
dom: core
Interfejce fundamentale:
Element
faciliteazé accesul 1a elementele unui document XML
DOMNode
DOMElement

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Proprietéijci folositoare ale interfetei Element
tagName — furnizeazéi numele elementului (tag de inceput)
id — specificéi valoarea identificatorului
(adicéi valoarea atributului id)

ChildNodes — oferéi lista nodurilor copil ale elementului
tirStChild IastChild — indicéi primul/ultimul nod copil
attributes — oferéi lista atributelor asociate elementului
neXtElementSibling — indicéi urméitorul element (sibling) aﬂat
pe acela§i nivel din arbore cu elementul curent
previousElementSibling — idem, dar pentru cel precedent

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Metode utile specificate de interfajca Element
getAttributeO — furnizeazéi valoarea unui atribut
asociat elementului curent
getAttributeNodeO — oferéi nodul de tip atribut
setAttributeO — stabilegte valoarea unui atribut
removeAttributeO — eliminéi un atribut asociat elementului
haSAttributeO — verificéi existenjca unui atribut specific

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Metode utile specificate de interfajca Element
getAttributeO — furnizeazéi valoarea unui atribut
asociat elementului curent
getAttributeNodeO — oferéi nodul de tip atribut
setAttributeO — stabilegte valoarea unui atribut
removeAttributeO — eliminéi un atribut asociat elementului
haSAttributeO — verificéi existenjca unui atribut specific
pentru a prelucra atribute aparyinénd
unui spapiu de nume XML dat,
se vor folosi metode sufixate de NS
e.g., getAttributeNS() setAttributeNS() etc.

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
dom: core
Interfejce fundamentale:
Attr : Node
modeleazé atributele unui element
DOMNode
DOMAttr

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
dom: core
Interfeye fundamentale:
NodeList — acces la colecjcii de noduri via indecgi (vector)
NamedNodeMap — acces pe baza cheilor (tablou asociativ)
in cazul HTML, pentru liste de atribute

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
dom: core
Interfeye fundamentale:

NodeList + NamedNodeMap
proprietate: length — lungimea listei de noduri
metode: item() getNamedItem() getNarnedItemNS()
setNamedItern() removeNarnedItem() 5i altele

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
dom: core
Alte interfeye de interes:
ParentNode — nodul périnte specific unui nod
ChildNode — nodul copil aparjcinénd unui nod
Elements — colecjcie de noduri de tip Element

***************Ending Page***************


***************Beginning Page***************
***************page number:53**************
dom: acces Ia noduri - xpath
Accesarea datelor dintr-un document
XPath 1.0 — recomandare a Consor'giului Web (1999)
versiuni ulterioare — mai rar utilizate:
XPath 2 (2010), XPath 3 (2014), XPath 3.1 (2017)
www.w3.orngR/xpathlalll

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
dom: acces Ia noduri - xpath
Expresia XPath — construcyie de bazéi
evaluarea se realizeazéi in funcyie de context:
un nod a1 documentului XML
pozi'gie
0 funcyie (predefinité sau specificaté de programator)
0 declarayie a unui spaﬁu de nume

***************Ending Page***************


***************Beginning Page***************
***************page number:55**************
dom: acces Ia noduri - xpath
Expresia XPath — construcyie de bazéi
in urma evaluéirii expresiei, e oferit un obiect:
0 multime de noduri (node-set)
0 valoare logicéi — true/ false
un numér (ﬂoat)
un gir de caractere

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
dom: xpath — operatori
Descendent /
lhtml/bodylarticle
[game/platform

***************Ending Page***************


***************Beginning Page***************
***************page number:57**************
dom: xpath — operatori
Traversare recursivé //
l/platform
l/div/a
nodurile-copil sunt traversate in ordinea daté de
algoritmul DFS (depth-first search)

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
dom: xpath — operatori
Wildcard *
selecteazéi toate elementele copil ale nodului
aﬂat in contextul curent (context node)
/game/*/identity
playerl*

***************Ending Page***************


***************Beginning Page***************
***************page number:59**************
<html xmlns:“http://www.w3.org/1999/xhtml“ lang:"ro“ xmlzlang:
"r‘o“>
P <head>...</head>
V<body itemscope itemtype="http://schema.or~g/WebPage">
> <header~>...</header~>
V<article>
><p>...</p>
><aside class:"menu" lang:"en" xml:lang:"en">...</aside>
><nav>...</nav>
><div id="past">...</div> == $6
><div id:"present">...</div>
><div id:“future">...</div> Ihtml/bodyl*ldiv
P <section>...</section> _ _
</ar~ticle> evaluarea expresnlor XPath
><footer~>...</'Footer~> A _
</body> 1n consola browser-ulul Web
</htm1>
html body article div#past I (web COHSOIQ)
Console Vla ObleCtUI $X
[E] Q top Y Filter
> $x ("/html/body/*/div")
7(3) [div#past, div#pr‘esent, div#future]

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
dom: xpath — operatori
Nodul curent.
.lplayer

***************Ending Page***************


***************Beginning Page***************
***************page number:61**************
dom: xpath — operatori
Atribut @
platform/@min-version
table/@*

***************Ending Page***************

***************Beginning Page***************
***************page number:62**************
dom: xpath — operatori
Spajciu de nume :
svg:*

***************Ending Page***************


***************Beginning Page***************
***************page number:63**************
<!DOCTYPE html>
<htm| xm|ns="http:llwww.w3.orgl1999/xhtml" xmlns:svg="http:llvwvw.w3.orgl2000lsvg">
<head><tit|e>HTML + SVG<ltitle><lhead>

<body>

<h1>HTML + SVG<Ih1>

<!-- Elemente §i atribute SVG incluse in documentul HTML,

<svg:svg width="500" height="200">

<svg:rect .../>

<svg:text ...>SVG</svg:text>

<svg:circle cx="400" cy="150" r="33" style="fi||: yellow;" />
<ISV9$V9>

<p>De utilizat un navigator Web oferind suport nativ pentru SVG.</p>

<lbody>
<lhtm|>

evaluarea expresiei llsvg:* conduce la ob'ginerea a 4 noduri:
<svg:svg xmlns:svg="http:l/www.w3.orgl2000lsvg" ...><svg:rect .../>. . .</svg:svg>
<svg:rect xmlns:svg="http:llwww.w3.orgl2000lsvg" ...l>
<svg:text xmlns:svg="http:llwww.w3.orgl2000lsvg" ...>SVG<lsvg:text>
<svg:circle xmlns:svg="http:llwww.w3.orgl2000lsvg" .../>

***************Ending Page***************

***************Beginning Page***************
***************page number:64**************
dom: xpath — operatori
Filtru/ index []
lgamelplatform[2]
/lli[@class = "lab"]
forma generaléi: [expresie]

***************Ending Page***************


***************Beginning Page***************
***************page number:65**************
vsection id "weekl'
>~h2-m'/h2'
V-ul=
P 1i claSS-"lecture” itemscope itemtype-"http://schema.org/Creativework“ itemid4“8web-lecture0“-m-/li-
>~11 class "lecture" itemscope itemtype'"http://schema.org/Creativework" itemid-“#web-lecturel“lm=/li'
>-li c1ass:"bib">m~/li»
"Laborator: "
~a href;“h1§ps:[(www.w3.org[htmlg“ title- Detalii despre HTML (HyperText Markup Language)“ Limbajul de
marcare HTML /a=
" - de studiat "
>cspan itemscope itemtype:"http://schema.org/CreativeWork“-m-/span-
u $1 u
<a href-"nigps:[[www.html-S-tutorial.com[" title+”Un tutorial privitor la HTML -HTML5 - A Tutorial for
Beginners~/a=
P ul>m lull ‘
htmrlr bodyiiarticle divifpast section#week1 ujm 1 Ill|[@CIaSS = "labul >
E Console L~—-
[El Q top 7 Filter Default levelsv ill Group similar
> $x (‘//11[@c1ass="lab"]‘)
v (13) [Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab, Li.Lab]
I I I A
13 nodurl <l|> (de tlp Element) avand ca valoare
' ' ' ll ll
a atrlbutulul class §1rul de caractere lab

***************Ending Page***************

***************Beginning Page***************
***************page number:66**************
dom: xpath — operatori
Pentru valori logice $1 numerice pot fi folosijd
operatorii uzuali:
orand=!=<=<>=>
+ - * div mod
comparajciile de giruri sunt case sensitive

***************Ending Page***************


***************Beginning Page***************
***************page number:67**************
dom: xpath — axe
Nodul curent (con text node) self
Nodul péirinte parent
Nodurile copil child
Nodurile descendente descendant
Nodurile de tip atribut attribute
Nodurile spatiilor de nume namespace

***************Ending Page***************

***************Beginning Page***************
***************page number:68**************
dom: xpath — axe
Nodurile ascendente ancestor
Nodurile ascendente
ori nodul curent ancestor-or-self
Nodurile descendente
ori nodul curent descendant-or-self

***************Ending Page***************


***************Beginning Page***************
***************page number:69**************
V<section id="week1">
><h2>m</h2>
V<ul>
><li class="lecture" itemscope itemtype="http://schema.org/
CreativeWork" itemid:"#web-lecture0"> </li>
V<li c1ass="1ecture" itemscope itemtype="http://schema.org/
CreativeWork" itemid:"#web-1ecture1">
-“ ><aside c1ass="menu">m</aside> == $6
><p>...</p>
><div c1ass="terms" itemprop="keywords“ 1ang="en" xmlzlang=
"en">m</div>
html body article div#past section#week1 ul li.lecture asidemenu
Sty'es EventL'Steners DOM| Ce rezultat oferéi expresiile XPath?
5 Console l/sectlonldescendant::aSIde
1 I II*
[15 ® top llsectlonldescendant..
> $x ('//section/descendant::aside')
-' (16) [- aside.menu, aside.menu, aside.menu, aside.menu,
”aside.menu, aside.menu, aside.menu, aside.menu, aside.menu,
aside.menu, aside.menu, aside.menu, aside.menu, aside.menu,
aside.menu]
> $x ('//section/descendant::*')
~ (676) [h2, uL, Li.Lecture, p, a, span, div.terms, Li.Lecture,
aside.menu, a, p, a, span, div.terms, Li.bib, p, span, a, span,

***************Ending Page***************

***************Beginning Page***************
***************page number:70**************
<gome>
<tit|e>Angry Profs</title>
<p|otform type="toblet">Android</p|atform>
<p|otform min-version="9" type="t0blet">iOS</p|c1tform>
<plotform min-version="10">Winolows</plotform>
<ur|>...</ur|>
<p|oyer>
<identity>
<first-name>Sobin</first—nome>
<lost-n0me>Buragc|</Iost—nome>
<!-— -->
</identity>
<points>30374<lpoints>
</p|c1yer>
</game>|
folosind axa preceding acceséim nodurile precedente
un instrument Web de testare: www.freeformatter.comlxpath-tester.html
XPath expression
/gome/ployer/identity/preceding::*

***************Ending Page***************


***************Beginning Page***************
***************page number:71**************
xsl: Xpath — axe

Rezultatul expresiei XPath

lgamelplayerlidentitylpreceding::*
E1ement='<title>AngPy Profs</tit1e>'
E1ement='<platform type="tablet">Android</platform>'
E1ement='<platform min-version="9" type="tablet">iOS</p1atform>'
E1ement='<platform min-version="10">Windows</platform>‘
Element=‘<url>...</url>'

***************Ending Page***************

***************Beginning Page***************
***************page number:72**************
dom: xpath — sintaxa prescurtaté
self E .
parent E ..
attribute E @
namespace E i
..lfirst-name
llchild::*[@min-version > 9]

***************Ending Page***************


***************Beginning Page***************
***************page number:73**************
dom: xpath — functii

Noduri: id(), position(), count(), name(),
namespace-uri(), Iast(),

Tipuri de noduri: node(), text(), comment(),
processing-instruction()

Siruri: concat(), starts-with(), contains(), substring(),
string-length(), translate(),

Booleeni: n0t(), true(), false()

Numere: sum(), r0und(), f|00r(), number(),

***************Ending Page***************

***************Beginning Page***************
***************page number:74**************
numérarea nodurilor ce satisfac o anumitéi condijcie
count(lgamelplatform[@min-version >= 9])

1 <?xm1 version=“1.0" encoding=“UTF-8"?>

2 <game>

3 <tit1e>Angry Profs</tit1e>

4 <p1atform type="tablet“>Android</p1atform>

5 <p1atform min-version=“9" type=“tab1et">iOS</p1atform>

6 <p1atform min-version=“10">Windows</p1atform>

7 <ur1>...</ur1>
PROBLEMS OUTPUT DEBUGEIDNSOLE TERMINAL XPaﬂ1Re5uHs Y
XPath Query: count(/game/platform[@min-version >= 9])
[Result] : 2 extensia XML Tools pentru Visual Studio Code _

***************Ending Page***************


***************Beginning Page***************
***************page number:75**************
dom: xpath — functii
count(lla[@hreﬂ) = count(lla) > true
toate elementele <a> includ atributul href
count(llli[@class]) = count(llli) b false
existé elemente <li> care nu au specificat atributul class
> $x ('count(//a[@href]) = count(//a)')
true
2 $x ('count(//li[@class]) = count(//1i)')
False

***************Ending Page***************

***************Beginning Page***************
***************page number:76**************
><section id="week4“> </section>
Y<section id=“week5“>
><h2>m</h2>
V<ul>
><1i c1ass:"lecture" itemscope itemtype:"http://schema.org/
CreativeWoPk" itemid="#web-lecture5"> </1i>
V<li class="demo">
u. V<p> == $9
"Demo: "
<a href:"demos[ghglghp.zip“ title:"APhivé .zip">Exemple
programe PHP</a>
" (arhivé " * - " "
“(Maxim/code) ll [contalns(text(), Demo )]
(/p; 41'“) furnizarea tuturor nodurilor
. - - || u
</11> care contln slrul Demo
><li c1ass="bib"> </1i>
><li class=“tools"> </li>
html body article div#past section#week5 ul li.demo
Styles Event Listeners DOM Breakpoints Properties Accessibility
Console
HE] Q top V Filter Default levelsv L'Z Groupsimilar
> $x ('//*[contains(text(), "Demo")]')
Y(14) [10, p, p, E, p, p, p, p, P, p, p, p, p, p]

***************Ending Page***************


***************Beginning Page***************
***************page number:77**************
<projects>
<project>
<title>Minunat<ltitle>
<desc>Un proiect minunat!<ldesc>
<stud>3<lstud>
<url>http:llminunat.infol<lurl>
<lproject>
<project>
<title>Minunat--<ltitle>
<desc>Un proiect care nu e chiar minunat...</desc>
<stud>2<lstud>
<lproject>
<lprojects>
media numérului de studenﬁ alocayi per proiect:
sum(lprojectslproject/studltext()) div count(lprojectslprojectlstud)
XPath Query: sum(/projects/project/stud/text()) div count(/projects/project/stud)
[Result]: 2.5

***************Ending Page***************

***************Beginning Page***************
***************page number:78**************
<2r0je'6ti: evaluarea expresiilor XPath
prOJQC . A . . v
<title>Minunat<ltitle> dlrect 1n llnla de comanda
<desc>Un proiect minunat!<ldesc>
<stud>3<lstud>
<url>http:llminunat.infol<lurl>
<lproject>
<project>
<title>Minunat--<ltitle>
<desc>Un proiect care nu e chiar minunat...</desc>
<stud>2<lstud>
<lproject>
<lprojects>
instrumentul xmllint (folosegte biblioteca LibXML)
oferit de distribuyiile GNU / Linux + macOS
xmllint projects-dtd.xml
--xpath "substring(lprojectslproject[1]ldescltext(), 4, 7)"

***************Ending Page***************


***************Beginning Page***************
***************page number:79**************
A V

(1n loc de) pauza
‘ a~ - \l I I ' f

a» f

***************Ending Page***************

***************Beginning Page***************
***************page number:80**************
dom: xpath — programare
Exemplificare:
folosirea XPath pentru procesarea unui flux de gtiri RSS
(news feed) intr-un program PHP
ce recurge la clasele DOMDocument, DOMXpath, DOMNode
. .
de consultat
arhiva exemplelor

***************Ending Page***************


***************Beginning Page***************
***************page number:81**************
<rss xmlns:dc="http:llpurl.orgldclelementsl1.1l" version="2.0">
<channel>

<title>lnfoQ<ltitle>

<link>https:llanw.infoq.com<llink>

<description>lnfoQ feed<ldescription>

<item>
<title>AWS Releases New Cloud-Optimized Linux Distribution<ltit|e>
<link>https:llwww.infoq.com/newsl2023l03laws-amazon-linux-2023l<llink>
<description>&lt;p&gt;AWS announced the availability of...&lt;/p&gt;<ldescription>
<category>Cloud<lcategory>
<category>Linux<lcategory>
<category>Development<lcategory>
<category>Architecture &amp; Design<lcategory>
<category>news<lcategory>
<pubDate>Thu, 23 Mar 2023 10:00:00 GMT<IpubDate>
<guid>https:llwww.infoq.comlnewsl2023l03laws-amazon-linux-2023l<lguid>
<dc:creator>Steef-Jan Wiggers<ldc:creator>
<dc:date>2023-03-23T10:00:002</dc:date>
<dc:identifier>lnewsl2023l03laws-amazon-linux-2023len<ldc:identifier>

<litem>

<l<éhaanlaeeln>outail... (|.e., elemente <|tem>) > structura g e I1 e l‘ a1 a a unul
<lr$$> ﬂux RSS poate fi studiata 1a
www.rssboard.org

***************Ending Page***************

***************Beginning Page***************
***************page number:82**************
define ('FEED', 'https:llfeed.infoq.coml'); ll adresa fluxului de §tiri RSS
define ('XPATH', 'lrss/channellitem'); ll expresia XPath utilizaté
try{
$dom = new DomDocument ();
$dom->load (FEED); ll incércém documentul XML
$xpath = new DOMXpath ($dom);
// baleiém insemnérile aici, elementele <item>)
foreach ($xpath-i(XPATH) as $news){
l/ preluém titlul fiecérei §tiri: valoarea elementului <title>
echo '<p>Noutate: <em>' .
$news->getElementsByTagname('title')->itﬂ(0)->nodeValue . '</p>';
echo '<p>Calea nodului: <code>' .
$news->getElementsByTagname('title')->itﬂ(0)->getNodePath() .
'</code></p>'; '-
} o
} metodéi din
catch (RuntimeException $e){ DQMNOde
echo $e->getMessage ();
}

***************Ending Page***************


***************Beginning Page***************
***************page number:83**************
Date RSS de la lnfoQ
Nouta te: The Commoditization of the Software Stack:HowApplication-first
Cloud Services are Changing the Game
Calea nodului: /rss/channe1/item[1]ltitle
Nouta te: Low-Code API Builder Postman Flows Moves into General
Availability
Calea nodului: /rss/channe1/ite|n[2l/title
Nouta te: The Al Revolution ls Just Getting Started: Leslie Miley Bids Us to
Act Now against Its Bias and C02
Calea nodului: /rss/channe1/item[3]Ititle
Nouta te: Oracle Introduces a NewJava SE Universal Subscription
Calea nodului: /rss/channe1/item[4]/t:i.t1e
Nouta te: Java News Roundup: JDK 20 Released, Spring Releases, Quarkus,
Helidon, Micronaut, Open Liberty
Calea nodului: /rss/channe1/item[5]/tit1e
Nouta te: Podcast: InfoQ Software Architecture & Design Trends 2023
Calea nodului: /rss/channe1/item[6]/tit1e

***************Ending Page***************

***************Beginning Page***************
***************page number:84**************
Metoda query() a clasei DOMXpath oferéi lista nodurilor
determinate in urma evaluéirii expresiei XPath
(se intoarce 0 instantéi de tip NodeList)
Pentru a obtine rezultate de alt tip
— de pildéi, evaluarea unei expresii XPath
poate fi de tip intreg —, se utilizeazéi metoda evaluate()

***************Ending Page***************


***************Beginning Page***************
***************page number:85**************
$items = $xpath->query (XPATH);
echo '<p>Total aparigii de elemente <code>&lt;item&gt;<lcode>:<lp>';
echo '<p>Folosind proprietatea length (DOMNodeList): ’.
$items->length . '<lp>';
echo '<p>Folosind funcgia XPath count(): ’ .
$xpath->-("count(" . XPATH . ")") . '<lp>';
count(lrss/channel/item)
Total aparilji de elemente {item}:
Folosind proprietatea length (DOMNodeList): 15
Folosind functia XPath count(): 15

***************Ending Page***************

***************Beginning Page***************
***************page number:86**************
dom: implementéri
DOMDocument — clasé PHP
php.netlmanuallen/book.dom.php
HXT (Haskell XML Toolbox) — proceséri DOM in Haskell
wiki.haskell.orngXT
IAXP (lava Architecture for XML Processing)
parte integranté din IZSE (javax.xm|.*)
docs.oracle.com/javase/tutorial/jaxp/
Happy DOM, jsdom — module pentru Node

***************Ending Page***************


***************Beginning Page***************
***************page number:87**************
dom: implementéri
QDOM — la Qt (C++): doc.qt.iolqt-6lqdomdocument.html
libxml — procesor XML scris in C: xmlsoft.0rg
baza unor biblioteci pentru C++, Perl, PHP, Python, Ruby,...
org.w3c.dom.D0cument — interfajcéi DOM (Android)
developer.android.com/reference/org/w3c/dom/Document.html
script::dom — modul Rust: doc.servo.orglscriptldoml
TinyXML-Z — bibliotecéi de procesare DOM pentru C++
github.comlleethomasonltinyxml2

***************Ending Page***************

***************Beginning Page***************
***************page number:88**************
dom: implementéri
Xerces DOM API — proiect axat pe proceséiri XML
(C++ $1 lava): xerces.apache.org
XmlDocument — claséi .NET Framework (C# et al.)
docs.microsoft.com/en-usldotnet/apilsystem.me.xmldocument
XMLDocument — claséi Objective-C / Swift
developer.apple.comldocumentationlfoundation/xmldocument
xml.d0m — modul Python
docs.python.orgl3llibrarylxml.dom.html

***************Ending Page***************


***************Beginning Page***************
***************page number:89**************
dom: api-uri particulare (exemple)
node-xmpp — biblioteca N0de.js (IavaScript) pentru XMPP
github.comlxmppjslxmpp.js
OpenDocument Format (ODF) SDKs — procesarea
documentelor ODF in C#, lava, PHP, Python,...
opendocumentformat.org/developers!
Open Street Map API — acces 1a datele XML

oferite de serviciul cartografic liber OpenStreetMap

wiki.openstreetmap.orglwikilOSM_XML
wiki.openstreetmap.orglwikilAPl

***************Ending Page***************

***************Beginning Page***************
***************page number:90**************
dom: api-uri particulare (exemple)
SVG DOM API — procesarea documentelor SVG in Iava
(Apache Batik): xmlgraphics.apache.orglbatikl
developermozilla.org/WeblAPl/Document_0bject_Model#SVG_interfaces
TwiML (Twilio Markup Language) API — accesarea
serviciilor de telefonie Twilio via biblioteci C#, Iava,
Node.js, PHP, Python, Ruby: www.twilio.com/docslvoiceltwiml
Xamarin.F0rms — crearea via C# de interfe'ge-utilizator
specificate in XAML pentru Android, iOS gi Windows
dotnet.microsoft.comlappslxamarinlxamarin-forms

***************Ending Page***************


***************Beginning Page***************
***************page number:91**************
dom: |mp|ementar|
Procesarea documentelor XM L / HTML
arbore - m ..
DOM ‘ m Angry Profs
- mlAndroid
' m iOS '
program procesor ' m" w ' ' date
.m XML
_ m __ HTML
* m Sabin
’ m Buraga
API XML + m

***************Ending Page***************

***************Beginning Page***************
***************page number:92**************
Studiu de caZ:
prelucrarea
— recurgénd la diverse limbaje de programare —
a informajciilor referitoare
la lista de proiecte propuse
de§i programele diferéi, maniera de procesare
este similaréi, datorité standardului DOM
.0
vezi exemplele
de cod asociate
acestei prelegeri

***************Ending Page***************


***************Beginning Page***************
***************page number:93**************
$modified = 0; ll indicé dacé a fost modificat arborele DOM
$dom = new DomDocument; ll instangiem un obiect DOM
$dom->load("projects.xml"); ll incércém documentul XML
$projs = $dom->getElementsByTagName("project“);
foreach ($projs as $proj){ ll procesém fiecare <project> in parte
ll preluém nodurile element <title> §i-l alegem pe primul
$titles = $proj->getElementsByTagName("title");
echo "<p>Proiect: <em>" . $titles[0]->nodeValue . “<lem>";
if ($proj->hasAttribute("class“)) { ll este specificaté clasa proiectului?
echo " de clasa " . $proj->getAttribute("class“) . “<lp>";
}eBe{
echo " de clasa necunoscuta<lp>";
ll nu existé atributul "class", il creém — proiectul va fi de clasa D
$attr = $proj->setAttribute("class“, "D");
$modified = 1; ll marcém arborele ca fiind modificat
}
}
if ($modified){ ll dacé DOM-ul a fost modificat, ii afieém reprezentarea text
$xmldoc = $dom->saveXML(); ll serializare v -
echo "<pre>" . htmlentities($xmldoc) . "<lpre>"; APFQCESZW DOM
} 1n11mba1ul PHP

***************Ending Page***************

***************Beginning Page***************
***************page number:94**************
documentul XML prelucrat:

<?xml version="1.0" ?>
<!-- Document XML despre proiectele propuse -->
i<projectclass="M">
<title>MegaProj<ltitle> i
"éd’ééi;'>'._..‘éid€slé'>'"m"

<stud>2<lstud>

<url>http:l/web.infol<lurl>
,<_/_P!91?_Qt_>_________________
i<project>
§<title>Web4all<ltitle> i
_265%.];________________

<stud>3<lstud>
<lproject>
<lprojects>

***************Ending Page***************


***************Beginning Page***************
***************page number:95**************
rezultatul objdnut in urma proceséirii DOM
efectuate de programul PHP:
Proiect: MegaProj de clasa M
Proiect: Web4all de clasa necunoscuta
<?xml version="1.0"?>
<!-- Document XML despre proiectele propuse -->
<projects>
<project class="M">
<title>MegaProj<ltitle>
<desc>...<ldesc>
<stud>2<lstud>
<ur|>http:llweb.infol<lurl>
§<project class="D">j
' 'éiitE'SWéMéii<_it_ii|_e>
<descl>
<stud>3<lstud>
<lproject>
<lprojects>

***************Ending Page***************

***************Beginning Page***************
***************page number:96**************
import urllib
import xml.dom
from xml.dom.minidom import parse
try:
doc = urllib.urlopen('projects.xml’) # incércém documentul
dom = parse(doc) # il procesém...
# parcurgem elementele <project> §i oferim informatii despre fiecare
for proj in dom.getElementsByTagName('project'):
print 'Proiectul ' + proj.childNodes[1].firstChild.nodeValue +\
'este de clasé: ' + proj.getAttribute('class')
except Exception:
print ‘Din pécate, a survenit o exceptie.‘
procesiiri DOM in limbajul Python

***************Ending Page***************


***************Beginning Page***************
***************page number:97**************
using System.Xml;
tryl
doc = new XmlDocument(); ll instantiem un document XML
doc.Load("projects.xml"); ll pentru a fi incércat
ll afieém informatii privitoare la proiecte: titlu §i clasé
XmlNodeList projs = doc.GetElementsByTagName("project");
foreach (XmlElement proj in projs){
ll selectém nodurile <title> via o expresie XPath
XmlNodeList titles = proj.SelectNodes(".ltitle");
foreach (XmlElement title in titles) {
Console.Write("Proiect: {0} ", title.lnneerl);
}
if (proj.HasAttribute("class") == true) { ll existé clasa specificaté?
Console.WriteLine("de clasa '{0}'.", MOLMC'CMSS'U);
}
} catch ( Exception e ){
// a survenit o exceptie... proceséri DOM
} in (:# (.NET)

***************Ending Page***************

***************Beginning Page***************
***************page number:98**************
impmt Prg'W3c'd°m'*; proceséri DOM
Import javax.xml.parsers.*; A _ _
1n llmbajul lava
DocumentBuilderFactory dbf = DocumentBuilderFactory.newlnstance();
DocumentBuilder docb = dbf.newDocumentBuilderQ;
Document doc = docb.parse("projects.xml“);
traverseazé (doc.getDocumentElement()); ll traversém recursiv arborele DOM
static private void traverseazé (Node nod) {
ll afisém numele nodurilor de tip element, plus numérul de atribute
if (nod.getNodeType() == Node.ELEMENT_NODE){
System.out.println ("Elementul + nod.getNodeName() + are " +
nod.getAttributes().getLength() + " atribute.");
}
Node copil = nod.thChild(); ll parcurgem in adéncime...
if (copil != null)
traverseazé (copil); ll existé minim un copil (sub-nod)?
copil = nod.gm0; ll parcurgem in létime...
if (copil != null)
traverseazé (copil); ll existé minim un nod sibling?
}

***************Ending Page***************


***************Beginning Page***************
***************page number:99**************
Prelucrarea prin DOM
a documentelor XML/HTML
la nivel de client Web?
‘Q3!’ $9.?‘ ‘é’??? I":
.1‘ 5°“ "w, A ‘"4‘
'/ WW "‘ ‘>% ' 4M“ '3 6‘ ‘~
aim ‘\I 3 A‘. 1MB
N '\\ \0/ 17" "
- 6;’ )
‘A .u\\ ‘:J'yA/IH. Mud-i)‘; 4,01, 4.1)!”
imgur.comlgallerylEuVmR

***************Ending Page***************

***************Beginning Page***************
***************page number:100**************
Arhitectura unui browser Web
user interface —> g-
S
‘B
. m
browser engme <3
59;
m
I I =
rendering engine 8
net- . [S data .
mter- par- dlsplay back-end
work , . . ser
° 0
proceséri XML generice +
particulare: SVG, RSS,...

***************Ending Page***************


***************Beginning Page***************
***************page number:101**************
dom: browser
Accesarea/procesarea documentelor HTML gi XML
— féiréi validare — se realizeazé via DOM de programe
IavaScript (ECMAScript)
interpretate de navigatorul Web

***************Ending Page***************

***************Beginning Page***************
***************page number:102**************
dom: browser

Accesarea/procesarea documentelor HTML §i XML
— féiréi validare — se realizeazé via DOM de programe

IavaScript (ECMAScript)

interpretate de navigatorul Web

pentru detalii, a se studia unele dintre prelegerile materiei

F uIl-Stack Web Development

profs.info.uaic.rol~busacolteachlcourseslstawlweb-film.html

***************Ending Page***************


***************Beginning Page***************
***************page number:103**************
Un program IavaScript are acces la arborele DOM
(Document Object Model)
corespunzéitor documentului HTML
se recurge in principal la DOM Living Standard
specific HTML5, in continuéi dezvoltare

***************Ending Page***************

***************Beginning Page***************
***************page number:104**************
Programul IS recurge la obiecte implementénd
interfeyele DOM pentru accesarea $1 modificarea
reprezentérii interne a unui document HTML
(Le. arborele DOM)

***************Ending Page***************


***************Beginning Page***************
***************page number:105**************
. . . [I I V Elements Console Sourcoa wanrk >> .4 Q 5 X
WADQ V ‘ * 2‘ Search ‘:1 U o . ur' 1,.p-“““¢ w
. “WW M.-- v dzv class app~2rEoOp
m 01v class" bq-hSJY_x‘ I Idlv
div.liaﬂtam-29__4kh 72x48 + ’ Sabin Corneliu Buraga [EXILE/2111'.) ‘~dlv this 'lavcr5~3iHuyZ layurs~3u1455“
- _ . v . . v dlv arla-mddenf 'faise' class>"layer-30rUeG baseLayer—35!aLy\'
ii pr'mlm'ro‘ ' Fmal “St 0f “(A08 project v dw class: ' contaxncr-quﬂ!
proposals (deadlme: 190mm’). v-nav class wrapper-1mm: qualds-lS'IlCJ‘ aria-label Servers
includin thea iication Web form ‘may’
7 ’ ADMIN + ,8 _ pp vim role: tree mum B‘ dith-Ust-ld; guﬂdsniw‘ data-Jup-
K0 be ﬁlled 'n by each team'» secnon global class tree-Slim . ~- :10
~' _, ALL STUDENTS + https://profs‘info.uaic ro/-bu53co/ v dxv class" unrealﬂemLonslnaLcatorTop-gAﬁRCh" _ low
k h/ / d / f t / v d1v class ‘scrollcr-ZTZvHI none~2Eo-qx scrolkchosc- 289th
n announcements 83C courses we e p 018C S ‘ ' dlr" m slyle;"overﬂov: hidden scroll; nodding-Ilghl: 0px; -
+ .1‘ v-dxv class tutorialContainer-IVMGL -..-/61v
pf general-chat rmv class: listltem—2P_4kh ‘ '_.'/le
‘ . ' v-dxv anrhbcl ‘Servers
o ii projects ‘I Q Sabm Comellu Buraga [Inn-id ,le “Q” 'llstl!en-2P_Akh' _ “m
amessagetoti'us channel v div class lutlum-ZPth‘ -_-/01v'
4 . m.‘ > |.. [01v-
n evaluatuon See allthe plnS. ‘ ‘ ' ' >~rﬂv class luforial€nnlnlnrr—56r01h‘ --/dxv-
19 N a‘, Imb m 2020 html body ﬁapp~moum le div Orv 0w div nav ul.tree-31¢avr8
_ _ SMes Evan! Llsieners DOM Breakwams Pronemes Acoesslbuny
Sabln Comehu Buraga 7-"1'1\"r'~173-::'5 ——-—-
. f 1 1 .
Today:Q&As concermng WADe k‘ "°" c" "3
. . P'.F"l‘rt ;'-()'1f‘ ' é-":.|."._UT:V“-“ :__ M 7N“ - _
DfOJECt requlrements and > E ‘. 'f' '7; ‘
de'we'ables .mree-zlcws < \x-J-zuﬁ-w!_-l181_,v_-:-:?vz ' '
. - _ 025515,: _n§—=1.eIt.-0I.- E: ' - -_
https.//profs.Info.ua|c.ro/ busaco/ display: mm z,’ ‘ .
teach/courses/wade/web- WNW“ 1%“; j), V __‘ j
prmectshtmmcalendar 'D _ {w _
u., ul -. U.jéltr§8U_LY_313V.L;SI-1'1 ‘ “' "‘“'
list-style: > none;
‘ Madterm deadline: Wednesday, r _ I'm SM“, a"
oz Decembel' 14:00 local “me a, acu', acrcnyn. 0.JBYbﬁa-Jthalahtiild'l
' ‘ addmss, aunlﬂ. 11%; vbordcr-bottom-co1or
b.u-;H;u0!>':, bud)‘, [spin-m, Ill-3, rode, 1m, del, Ir MG g 9]
° b.‘-'>!f>5-3Rt: nDML-M: II m a ll-‘rn, ' '; .u', _d| l. (1E , MI: It'llle-‘Y , ‘In'n, ‘ 11, ‘h7, NJ, ’ border-bottom-style
SabinCome... y n o IN, ‘I, 1m, Hm‘ LI .anr, .nq, 1-"., i-L-J. “alwl, "one
. 81682 '1 ivq'ﬂfl, l, Why-r’, hi, :1, nv'c, '3, 1, wmp, armll,
- 1;.1 an "Igr :0 arc v.‘ vh- "yr-1‘ Yr Hm" 2h 7 border-bottom-wmh
' t b l'DOM 't 'd tHlML
I I I v A I I I I I
a1c1, 0 Instanya de browser Web 1n cadrul unel apllcapl natlve
I
(Dlscord creat cu framework-ul Electron. Chromlum + Node.]s)

***************Ending Page***************

***************Beginning Page***************
***************page number:106**************
Shadow DOM (shadow tree)
arborele DOM a1 céirui element rédéiciné e un nod (shadow
root) a1 altui arbore corespunzétor unui document
atagat Tntotdeauna unui arbore de noduri
(nu poate exista de sine-stéitétor,
ci doar incapsulat de un document)

***************Ending Page***************


***************Beginning Page***************
***************page number:107**************
HVHHSH'E
Q U lElementsINemork Sources Tirrlelirle Profiles Resources Audits Console >§ }_ H. I]! K
' ii'éH'éaJ;'.f§Fh;5d-.; h d
Taboo ‘s- S Cl OW
ediul pseudo="—lr:rehkitl—mediel—cont rolls“:- H
root ‘ . w
- heoiv pseudo="—webkit—medie—controls-enclosu re":-...~:fdiw-
e eLfdlos-DI
efbodys
htnlrlli 56d,“ w #Shadow_mt ' girliemac.comlpresentation-slides/webcomponentslshadowdom.html
shadow DOM
descris in DOM Living Standard (22 martie 2023)
dom.spec.whatwg.orgl#shadow-trees
developermozilla.orngeb/Web_ComponentslUsing_shadow_DOM

***************Ending Page***************

***************Beginning Page***************
***************page number:108**************
De asemenea, programele IavaScript au acces
la diverse obiecte oferite de mediul de execujcie
pus la dispozijcie de browser
e.g., informajdi privind contextul rulérii
(caracteristici ale navigatorului, latenya reyelei),
istoricul navigiirii, fereastra de redare a continutului,

transfer (a)sincr0n de date,...

***************Ending Page***************


***************Beginning Page***************
***************page number:109**************
Inn-II‘
® HTML C, I H u ./ i - ' we
I ECMAScrlpt f’ I [J a. l O O 0 -
® DOM C, I 4r» J 0 0 0
D st CF I B a ./ 0 O I
ws Web Audlo API I.’ I H 4r» J U O O @
6' WebRTc C’ I H u l u 00
M ARIA C, I L- ./ 0 0 0
Q WebXR Device API I I L A a.- ' O
Finer Effects C, I b ./ U O O
B css Typed OM 0 I a A -¢ ;‘
H Web Speech API a I 4... ./ g Q Q
ws Indexed Database API t’ I b l U 0 O. WWW
ws WebCodecs t‘, I #- A Q @
ws Medra Capture and Streams C, I 6e J O Q 0 m
w Serwce Workers t‘, I B tr ./ O Q O -
I 0880M vrew t’ I I 0 O O
tehnologii oferite de browser — htm l-now.g ith u b.io
de explorat $1 caniuse.com

***************Ending Page***************

***************Beginning Page***************
***************page number:110**************
HTMLAnchorElement
E Web APIs/DOM
E Web APls/Shadow DOM
E Documentdomain
E DOMRect
E DOMPoint .
'39 Feature-Pohcy:document~domain - '
DOMMatrix '

O
m DOMParser
U PerformanceTimmg.domLoading
xception

HTMLUnknownElement
E DOMTImeStamp
E ElementDOMActivate event
detalll prlvmd flecare API 1mplementat de namgatorul Web

I
devdocs.|oldom-doml

***************Ending Page***************


***************Beginning Page***************
***************page number:111**************
Arborele DOM asociat documentului HTML
poate fi accesat/alterat via obiectul document
instanjcé a clasei implementénd interfaya HTMLDocument

***************Ending Page***************

***************Beginning Page***************
***************page number:112**************
interface HTMLDocument : Document {
attribute DOMString title; ll titlul documentului
readonly attribute DOMString referrer; ll adresa resursei ce refera pagina
readonly attribute DOMString domain; ll domeniul de care apartine
readonly attribute DOMString URL; ll URL-ul absolut al documentului
attribute HTMLElement body; l/ acces la elementul <body>
attribute DOMString cookie; l/ acces la cookie-uri
ll emite o exceptie daca e asignata o valoare
void open (); // deschide un flux de scriere (altereaza DOM-ul curent)
void close (); // inchide fluxul de scriere §i forteaza redarea continutului
void write (in DOMString text); ll scrie un §ir de caract. (e.g., cod HTML)
void writeln (in DOMString text); ll idem, dar insereaza §i New Line
NodeList getElementsByName (in DOMString numeElement);
ll furnizeaza o lista de elemente conform unui nume de tag
};
interfata specificata in limbajul declarativ WebIDL

***************Ending Page***************


***************Beginning Page***************
***************page number:113**************
Deoarece interfajca HTMLDocument
extinde Document,
putem recurge 1a funcjcionalité'gile
stipulate de specificajcia DOM generalé
de exemplu, proprietatea documentElement
desemneazé nodul-riidéciné a1 unui document HTML

***************Ending Page***************

***************Beginning Page***************
***************page number:114**************
Interfajca HTMLElement 0 extinde
pe cea generalé oferitéi de DOM
fiecare element HTML specific derivéi din ea
» » HTML » HTML
Element DivElement
0 interfaicé specificéi fiecéirui element HTML

***************Ending Page***************


***************Beginning Page***************
***************page number:115**************
<!DOCTYPE html>
<html>
<body>
<p>Web<lp>
<div>
<img src= >
<ldiv>
<lbody>
<lhtml>

***************Ending Page***************

***************Beginning Page***************
***************page number:116**************
<!DOCTYPE html>
<html>
<body>
<p>Web<lp>
<div>
<img src= >
<ldiv>
<lbody>
<lhtml>

***************Ending Page***************


***************Beginning Page***************
***************page number:117**************
ll un element HTML generic
interface HTMLElement : Element{
attribute DOMString id; ll identificator asociat elementului
attribute DOMString title; ll titlu explicativ
attribute DOMString lang; ll limba in care e redactat continutul
attribute DOMString className; ll numele clasei CSS folosite pentru redare
};
ll specifica un formular Web
interface HTMLFormElement: HTMLElement{
readonly attribute HTMLCollection elements; ll elementele HTML incluse in formular
readonly attribute long length; ll numarul campurilor formularului
attribute DOMString action; ll URI-ul resursei ce proceseaza datele
attribute DOMString enctype; ll tipul MIME de codificare a datelor
ll (e.g., applicationlx-www-form-urlencoded)
attribute DOMString method; ll metoda HTTP folosita: GET, POST
void submit(); ll trimite date URI-ului definit de ‘action’
};
ll o imagine (continut grafic raster)
interface HTMleageElement : HTMLElement{
attribute DOMString alt; ll text alternativ descriind continutul grafic
attribute DOMString src; ll URI-ul resursei grafice
};

***************Ending Page***************

***************Beginning Page***************
***************page number:118**************
Interfata HTMLCollection modeleazii o listii de noduri
un nod poate fi accesat folosind un index numeric

sau pe baza unui identificator (e.g., stabilit via atributul id)
interface HTMLCollection {

l/ reprezinté lungimea listei

readonly attribute unsigned long length;

l/ oferé un nod via un index numeric

Node item (in unsigned long index);

l/ furnizeazé un nod pe baza numelui

Node namedltem (in DOMString name);
};

***************Ending Page***************


***************Beginning Page***************
***************page number:119**************
Proprietéiﬁ specifice DOM HTML
innerHTML
proprietate — mutabilé — ce furnizeazé codul HTML
din cadrul unui nod de tip Element

***************Ending Page***************

***************Beginning Page***************
***************page number:120**************
Proprietéiﬁ specifice DOM HTML
textContent
proprietate ce furnizeaZé/stabile$te continutul textual
a1 nodului $i posibililor descendenpi

***************Ending Page***************


***************Beginning Page***************
***************page number:121**************
HTML V CSS v -
' <form id="unFormu1ar"> interactiv i I IS Flddle
' 2:21p; ru;=|..‘,v-‘_,|Ji w .. ‘214121-21 ~.~._1 7212:"; \ul - border-sty'le: dotted:
</form> border-width: 1px:
border-co1or: gray;
JnvaSium ' N0l|l>mFy(pun? :8] V W1' dth: 209111;
padding: iem:
'functw'on adaugacontrd (element. tip, nume. exphcatwe) { A margin: 0.22m:
‘.,|-| win-1 w. .r - 1111,12 112. 7;,l-qull- 1 W1 1 font-famﬂy: sans-serif;
1et control = document.create£'lement (‘input’); l
contro1.type a tip; Tabe] {
contro'l.1'd = nume; w'idth: 50%.;
contro1.name = nume: disp1ay: b'lock;
f'loat: ‘left;
A’ 1: .¢,:.~_: ‘1 1 -,-: r, :.- -,;. ‘ ; 1 1 margin-right: O. 3am;
1st encheta - decument.create61ement (‘1abe1‘); }
etichetamtm'lFor = nume; _ _
eticheta.inmrHﬂ1L = exp11cat1'e;
ni-I'I mug! ;--,- 5:; 1 Q3‘; Numele meu; ‘Tuxy ‘
eticheta.style.background = 'h'ghtgray'; _ _
eticheta.sty1e.c010r = ‘#333‘: ' '
eticheta.sty19.padding = ‘0.22m’: Codulsecret Mai‘
1et container = document.create£1ement (‘div’): _ _
container.c1assName = "interactiv": PEHICIP?
container.appendch1"ld (eticheta); 1 1
contai ner.appendch'i'ld (control);
Web Hackathon 2021 O
e'lement.appendch‘i1d (container);
} Web Hackathon 2022 O
L"‘-= .1" :5 i='n~.=r=‘.l." {1v ' ; I:"|'r.| :if d‘ ' V ' S '
let formuhr = document.getE‘lementById ('unFormuIar‘); generare lnamlca Vla lava crlpt
adaugacontro‘! (formu1ar, 'text'. 'nume‘ . 'NumeTe meu: ‘ a unUJ fOFmUIHI' WGb _
jsflddle.net/busacolvan3fhal

***************Ending Page***************

***************Beginning Page***************
***************page number:122**************
function adaugaControl (element, tip, nume, explicatie){
ll vom crea un element <input> ataeandu-i atributele esentiale
let control = document.createElement ('input');
control.type = tip;
control.id = nume;
control.name = nume;
let eticheta = document.createElement (‘label’); ll o eticheta explicativa...
eticheta.htmlFor = nume;
eticheta.innerHTML = explicatie;
eticheta.style.background = 'lightgray'; ll ...plus diverse stiluri CSS
eticheta.style.color = ‘#333';
eticheta.style.padding = ‘0.2em';
ll vom plasa elementele <label> §i <input> intr-un container
let container = document.createElement ('div');
container.className = "interactiv";
container.appendChild (eticheta);
container.ap|gendChild (control);
ll vom adauga nodul container la elementul dat ca parametru
elementappendChild (container);
}

***************Ending Page***************


***************Beginning Page***************
***************page number:123**************
ll preluém elementul de tip formular
let formular = documentgetElementByld ('unFormular');
ll adéugém controalele de interactiune dorite
adaugaControl (formular, 'text', 'nume', 'Numele meu: ');
adaugaControl (formular, 'password', 'parola', '<em>Codul secret<lem>: ');
adaugaControl (formular, 'checkbox', 'particip', 'Particip? ');
for (let an = 2021; an <= 2023; an++){
adaugaControl (formular, 'radio', 'an', ‘Web Hackathon ' + an);
<¥orm id="unFormular">
<!--corpu1 formularului va fi generat via JavaScript-->
v <div class="interactiv">
<labe1 for="ggmg" style="background: lightgray none repeat scroll 9% 9%; color: rgb(51, 51, 51);
padding: 9.2em;">Numele meu </label>
<input id="nume" type="text" name="nume">
</div>
b <div class="interactiv">-" </div>
' “w Class=l'?"te"aCtszvn> “d?” arborele DOM corespunzétor
> <d1v class="1nteract1v">-” </d1v> (1 1 _}{1?h41J
b <div class="interactiv">-" </div> CC) LIIJ}
b <div class="inter‘activ"> </div> generat prln program
</form>

***************Ending Page***************

***************Beginning Page***************
***************page number:124**************
Suport pentru procesarea proprietéjcilor CSS
pe baza unui model obiectual specific
CSSOM (CSS Object Model)
specificayie in lucru (draft) — 18 octombrie 2022
drafts.csswg.orglcssoml

***************Ending Page***************


***************Beginning Page***************
***************page number:125**************
Suport pentru procesarea proprietéjcilor CSS
actualmente, modificarea proprietéiﬁlor de stil
se poate realiza via proprietatea HTMLElement.style
ll asocierea mai multor stiluri CSS
elem.style.cssText = "color: blue; border: 1px solid #000";
ll similar cu linia — are drept efect alterarea arborelui DOM:
elem.setAttribute ("style", "color: blue; border: 1px solid #000;");
developermozilla.orngeb/APl/CSSStyleDeclaration

***************Ending Page***************

***************Beginning Page***************
***************page number:126**************
Géisirea de noduri via selectori CSS
Selectors API
ini'gial, recomandare W3C (2013)
actualmente, parte din DOM Living Standard (2023)

***************Ending Page***************


***************Beginning Page***************
***************page number:127**************
Géisirea de noduri via selectori CSS
querySelector (selector!)
furnizeazé primul element — folosind traversarea
in adéncirne in pre-ordine — care se potrivegte grupului
de selectori (delimitajd de virgulé)
querySelectorAll (selector!)
oferé lista de tip NodeList a tuturor elementelor gésite

***************Ending Page***************

***************Beginning Page***************
***************page number:128**************
Géisirea de noduri via selectori CSS
l/ toate elementele <li> selectate via CSS (date de tip NodeList)
let elemente = documentguegSelectorAll ("ul.menu > Ii");
for (var i = 0; i < elementeiength; i++){
prelucreazé (elementeitﬂ (i)); ll procesém fiecare nod
}

***************Ending Page***************


***************Beginning Page***************
***************page number:129**************
g ~ Curs: Programare Web- Dezvoltarea aplicatiilor Web in PHP i
i (continuare) i
i Web, programming, development, application server, PHP, tools, exampleis
i - Demo: Exemple de programe PHP (arhivé zip, 45K) i
g . Resurse: PDO Tutorial, Modern PHP without a Framework, PHP i
i Framework lnterop Group <9, PHP-The Wrong Way i
i . Curs: Modelarea datelor. Familia XML. SVG i
G‘ {:1 Inspector Console D Debugger Tvl Network {} Style Editor >> [j] "'
D Run { } /\ v Q X m V FllterOutput
1 document.querySelectorAll Errors Warnings Logs Info Debug CSS XHR Requests
("section[id“=\"week\"]:nth-
child(odd) > h2"); >> document.querySelectorAll ("section[id"=\"week\"]:nth-
2 | '0. _ child(odd) > h2");
selectorl _ . . .
(- v NodeLlst(3) [ h2.f11m {j , h2.f11m 1:} , h2.f11m {j ]
C553 b 0: <h2 class="film"> {j
b 1: <h2 class="fi1m"> {:1}
b 2: <h2 class="film"> C}
length: 3
exempllflcare — folos1m consola browser-ulul Web:
document.query$electorAll ("section[id"=\"week\"]:nth-chi|d(odd) > h2");

***************Ending Page***************

***************Beginning Page***************
***************page number:130**************
Tratarea evenimentelor
definirea de activitéjci (callback-uri) executate
la aparijcia unui eveniment
eveniment = acyiune produsé in cadrul mediului de
execuyie in urma ciireia programul va putea reacyiona

***************Ending Page***************


***************Beginning Page***************
***************page number:131**************
Tratarea evenirnentelor
codul IavaScript invocat la aparijcia unui evenirnent
va putea fi incapsulat intr-o funcjde de tratare a acestuia
(event handler)

***************Ending Page***************

***************Beginning Page***************
***************page number:132**************
Tratarea evenirnentelor
traditional, se atageazé cod lavaScript ce va fi executat
la aparijcia unui evenirnent de bazé
(e.g., onclick, onmouseover, onchange, onload, onkeypress,...)
asupra unui element

***************Ending Page***************


***************Beginning Page***************
***************page number:133**************
Tratarea evenimentelor
<button onclick="alert (‘Au!');">Apasé-mé!<lbutton>

***************Ending Page***************

***************Beginning Page***************
***************page number:134**************
Tratarea evenirnentelor
<button onclick="alert (‘Au!');">Apasé-mé!<lbutton>
pentru a inhiba execugia acgiunii implicite,
codul IavaScript va trebui sé intoarcé false

***************Ending Page***************


***************Beginning Page***************
***************page number:135**************
Tratarea evenimentelor
mai ,,evoluat" via DOM 1:
document.getElementByld ("identificator").onclick
= trateazéClick;

***************Ending Page***************

***************Beginning Page***************
***************page number:136**************
Tratarea evenimentelor
tratarea standardizatéi a evenimentelor:
minimal, conform specificajciei DOM Level 2 Events
www.w3.orngR/DOM-Level-2-Eventsl

***************Ending Page***************


***************Beginning Page***************
***************page number:137**************
Tratarea evenirnentelor
specificarea de activitéjci executate
la aparijcia unui eveniment
obiect.addEventListener ("eveniment", funcﬂe, mod);

***************Ending Page***************

***************Beginning Page***************
***************page number:138**************
Tratarea evenimentelor
descrierea arborescenté a fluxului de evenimente
capture versus bubble
de parcurs javascript.infolbubbling-and-capturing

***************Ending Page***************


***************Beginning Page***************
***************page number:139**************
C-
Cagture C ' >
P ase
C D
Ming
Phase
C > (3)
£2 x
f
Phase
(2)
o
Charlle
a se studia tutorialul Introduction t0 events
developer.mozilla.org/docleearn/JavaScriptlBuilding_blocklevents

***************Ending Page***************

***************Beginning Page***************
***************page number:140**************
Tratarea evenirnentelor
descrierea arborescenté a fluxului de evenirnente
mod = true
se incearcii tratarea evenimentului pornind
de 1a réidéciné pénii 1a obiectul-lcinté — capture phase

***************Ending Page***************


***************Beginning Page***************
***************page number:141**************
Tratarea evenirnentelor
descrierea arborescenté a fluxului de evenirnente
mod = false
se incearcé tratarea evenimentului atunci cénd
evenimentul e propagat de la obiectul unde a survenit
péné la entitéiyile superioare lui — bubbling phase

***************Ending Page***************

***************Beginning Page***************
***************page number:142**************
Tratarea evenirnentelor
se va utiliza un set standard de evenimente

***************Ending Page***************


***************Beginning Page***************
***************page number:143**************
Tipuri de evenimente — interactiune cu utilizatorul
mouse: click dblclick mouseenter mousedown mouseup
mouseover mousemove contextmenu select wheel
touch: touchstart touchend touchcancel touchmove
keyboard: keypress keydown keyup
clipboard: copy cut paste
view: resize scroll fullscreenchange fullscreenerror
drag & drop: dragstart drag dragenter dragover
dragleave dragend drop
form: focus blur select submit reset
document ( page Ilfecycle): load DOMContentLoaded
beforeunload unload abort cancel

***************Ending Page***************

***************Beginning Page***************
***************page number:144**************
Tipuri de evenimente — vizand resursele
network: online offline
session history: pagehide pageshow popstate
printing: beforeprint afterprint
media: canplay play playing pause suspend waiting seeking
seeked stalled complete ended emptied durationchange
ratechange volumechange timeupdate
progress: loadstart progress error timeout abort load loaded
storage: change storage
Web socket: open message error close

***************Ending Page***************


***************Beginning Page***************
***************page number:145**************
Tipuri de evenimente — altele

CSS transitions: transitionstart transitionrun

transitionend transitioncancel
CSS animations: animationstart animationend
animationiteration
value change: broadcast hashchange input readystatechange...
pentru aménunte, a se explora $i
developermozilla.orgﬂNeb/Events

***************Ending Page***************

***************Beginning Page***************
***************page number:146**************
Tipuri de evenimente
specifice HTML-ului modern
asociate API-urilor disponibile:

Barcode Detection, Bluetooth, Canvas, Clipboard,
File System Access, F ulIscreen, Geolocation, Image Capture,
IndexedDB, Media Capture & Streams, Page Visibility,
Payment Request, Push, Sensor, Streams, Touch Events,
Vibration, Web Animations, Web Audio, WebGL, Web
Notifications, WebRTC, Web Workers, Websockets,
Web Storage, WebXR Device etc.
developermozilla.org/docleeb/AP|

***************Ending Page***************


***************Beginning Page***************
***************page number:147**************
Tratarea evenimentelor
proprietéjci utile ale obiectului Event
type
specificé tipul evenimentului ca gir de caractere
e.g., "click", "load", "scroll", "submit"

***************Ending Page***************

***************Beginning Page***************
***************page number:148**************
Tratarea evenirnentelor
proprietéjci utile ale obiectului Event
target
desemneazé nodul
asupra céiruia evenimentul a fost declangat inijdal

***************Ending Page***************


***************Beginning Page***************
***************page number:149**************
Tratarea evenirnentelor
proprietéijci utile ale obiectului Event
currentTarget
indicéi nodul care trateazé evenimentul

***************Ending Page***************

***************Beginning Page***************
***************page number:150**************
Tratarea evenirnentelor
proprietéijci utile ale obiectului Event
bubbles
indicé dacé evenirnentul se propagé
spre elemente ascendente (valoarea true)
ori cétre descendenjci (valoarea false)

***************Ending Page***************


***************Beginning Page***************
***************page number:151**************
Tratarea evenimentelor
proprietii'gi utile ale obiectului Event
bubbles
e.g., evenimentele abort, error, select, submit, resize, scroll,
click, mousedown, mouseover, mousemove, mouseout,
touchstart, touchend pot avea bubbles = true

***************Ending Page***************

***************Beginning Page***************
***************page number:152**************
Tratarea evenirnentelor
proprietéjci utile ale obiectului Event
bubbles
in cazul evenimentelor focus, blur, load, unload,
proprietatea bubbles are valoarea false

***************Ending Page***************


***************Beginning Page***************
***************page number:153**************
Tratarea evenimentelor
proprietéjci utile ale obiectului Event
cancelable
precizeazé dacéi evenirnentul poate fi intrerupt

***************Ending Page***************

***************Beginning Page***************
***************page number:154**************
Tratarea evenimentelor
proprietéjci utile ale obiectului Event
cancelable
de exemplu, pentru evenimentele load, unload, abort, error,
select, focus, blur, resize, scroll, touchcancel
proprietatea cancelable este setaté ca fiind false

***************Ending Page***************


***************Beginning Page***************
***************page number:155**************
Tratarea evenimentelor
proprietii'gi utile ale obiectului Event
cancelable
pentru evenirnente precum Click, mousedown, mouseup,
mouseover, mousemove, mouseout, touchstart, touchend,
touchmove proprietatea cancelable poate fi true

***************Ending Page***************

***************Beginning Page***************
***************page number:156**************
Tratarea evenirnentelor
eliminarea tratérii unui evenirnent
removeEventListener ()

***************Ending Page***************


***************Beginning Page***************
***************page number:157**************
Tratarea evenirnentelor
ignorarea comportamentului implicit
preventDefault ()

***************Ending Page***************

***************Beginning Page***************
***************page number:158**************
Tratarea evenimentelor
trimiterea evenimentului sé poaté fi procesat
conform modelului oferit de implementare
dispatchEvent ()

***************Ending Page***************


***************Beginning Page***************
***************page number:159**************
Tratarea evenirnentelor
oprirea propagérii unui eveniment
in cadrul arborelui DOM
stopPropagation ()

***************Ending Page***************

***************Beginning Page***************
***************page number:160**************
<htm|> 1,
<head><title>Evenimente JS<ltitle><lhead> 5
<body> ‘5,
<form> g
<textarea id=“editor"><ltextarea> g: g
<input type="text" id="text" l> § '§
<lform> 35 g
<lbody> §§
<script type="applicationljavascript"> 3 ‘é
const infoEv = e => { console.log ( g §
‘Eveniment: ${e.type}\n % 5?
Caracter: ${String.fromCharCode (e.charCode)}\n E §
Element @inté al evenim.: ${e.target}\n é é-
‘!‘inta curenté: ${e.currentTarget}‘); g é
}; % é
documentaddEventListener("keypress", infoEv); g g
<lscript> g
<lhtml> g
exemplificare: afigarea datelor vizénd un eveniment m

***************Ending Page***************


***************Beginning Page***************
***************page number:161**************
ii||||||||||||||||||||||||||||| £1‘]21115521t

C ><
G‘ 1:} Inspector Console D Debugger T1, Network <> DOM >> @ |j__| H’ X
m] Errors Warnings Logs Info Debug CSS XHR Requests n-

Eveniment: keypness keypness.html:17:31
Caracte" W apésarea unei taste
Element tinté al evenim.: [object HTMLTextAreaElement] in Cémplll <teXtarea>
Tinta curenté: [object HTMLDocument]

Eveniment: keypness keypress.html:17:31
Caracte" e apésarea unei taste
Element tinté al evenim.: [object HTMLInputElement] in Cémplll <inpUt>
Tinta curenté: [object HTMLDocument]

Eveniment: keypness keypness.html:17:31
caPaCter‘: b apésarea unei taste
Element tinté al evenim.: [object HTMLBodyElement] in COFpUl paglnii WEb
Tinta curenté: [object HTMLDocument]

***************Ending Page***************

***************Beginning Page***************
***************page number:162**************
ll Adaptare dupé https:lleloquentjavascript.netl14_event.html
const trateazaEveniment = ev => {
ll plasém un 'punct' la coordonatele cursorului mouse-ului
let pct = document.createElement ('div');
pct.className = (ev.type === 'dblclick') ? 'punct roz' : 'punct';
pct.style.left =_(ev.pageX - 5) + PX; vezi exemplul
pct.style.top - (ev.pageY - 5) + px; com let in arhivé
document.body.appendChild (pct); - ' p
console.log (‘${ev.type}: Am plasat un punct la coord.
(${QV-PageX}, ${QV-PageY})-‘);
};
ll "ascultém" evenimentele click §i dblclick
documentaddEventListener ('click', trateazaEveniment);
document.addEventListener ('dblclick', trateazaEveniment);
exemplu: tratarea evenimentelor click $i dblclick

***************Ending Page***************


***************Beginning Page***************
***************page number:163**************
Un click (dublu) de mouse, te rog... Q
' _
Ii
<9
G ﬂ Elements Console Sources Network Performance Memory Application >> X
‘i ‘C"‘"":‘T"'"”r ""“i " Styles Computed Event Listeners »
<htm1>
><head>...</head> C Q] Ancestors All V Framework listeners
<p>Un click (dublu) de mouse, te rog...</p> c 1c _
><script type:“application/javascript">m "document 511§k§sh3mli25
i </script> useCapture: false
<div class="punct" sty1e="1eft: 311px; top: passive: false
197PX3H></div> once: false
<div class="punct" sty1e="left: 143px; top: "handler: ev => ﬁn}
181px;"></div> P [[Sco es]]' Sco es[2]
<div class="punct" style="left: 143px; top: p _ ' P
181px;"></div> [[FunctlonLocat10n11. <unknown>
<div class="punct roz" style="left: 143px; >___proto__: f'()
top: 181px;"></div> name: "trateazaEveniment"
<div class="punct" sty1e="left: 95px; top: length: 1
71px;"></div> caller: (...)
332:.clajzzvpunct style: left: 694px; top: arguments: ('._)
9
html

***************Ending Page***************

***************Beginning Page***************
***************page number:164**************
Remarcii:
browser-ele Web moderne acceptii tratarea unor
evenirnente nestandardizate + definite de programator
CustomEvent
dom.spec.whatwg.orgl#interface-customevent
developermozilla.orngeb/APllCustomEvent

***************Ending Page***************


***************Beginning Page***************
***************page number:165**************
<html class="pc firefox74 js" 1ang="en"> event avansat a {
<!--<![endif]--> \——mh,_ .
> <head> <13head> r beforeunload ...1c296bb83b19045bb899'Fcac2c145a26.js:2:13097 RE
v<body class="room-editor' editor sta _ _ _
event ﬂex r blur ...cks/js/vendor*-e6b2172b3357b586768c.chunk.]s:33:28433 P=
’ mead" id="'"ai"'heade"" ¢1a$$="m r blur ...ks/js/vendor"-e6b2172b3357b586708c.chunk.js233:28433 PE
b <div id="item-settings-modal" cla
item-settings-modal-half"> </di D change .../js/vendor-e6b2172b3357b586768c.chunk.js:33:28433 PE
><d' 1 ="t - dl">-~-<d' _
P’ € asls our mo a s / 1V b click ...ks/js/vendor-e6b2172b3357b586768c.chunk.js:33:28433 r*=
b <d1v 1d='tour~-overlay" class="tou
b <div class="page-wrap twilight"> " b click ...ks/js/vendor~-e6b2172b3357b586708c.chunk.js:33:28433 (‘*5
<div id="asset-bin-goes-her‘e"></d' ' = _
, (footer id=..react_pen_footer.. cla b CONSOLE_C|_OSED ...e6b2172b3357b586708c.chunk.js.33.28433 r’-
> "<div ici=“|<eycommandS“ classr-“moda r CONSOLE_OPENED ...e6b2172b3357b586768c.chunk.js:33228433 PE
<div icf:"popup-over1ay" class:"ov _
<div id:“modal-overlay" (158350‘, b corqsouzppENED ...e6b2172b3357b586768c.chunk.js:33128433 r>=
<div id="l“ea¢t-P°PUPS" Cla$5=""ea r CONSOLE_SERVER_CHANGE ...3357b586798c.chunk.js:33:28433 OE
b "inoscripb <iﬂnoscript>
(input id:"init-data" 't},~p~:-="hidde r DOMCQntentLoaded ...b2172b3357b586768c.chun|<.js233228433 r’E
{"device":"unknown","mobile":null _ ‘ _ = _
44142~F36738-F4cd07a197048c9b56dba7 r error ...ks/js/vendor-e6b2172b3357b586798c.chunk.]s.33.31599 ﬁ-
‘fscript “TQMFMP D fOCUS ...s/js/vendor-e6b2172b3357b586798c.chun|<.js:33:28433 PE
1@637774G63947d31762FQQG27§6r§d91Qar
I I I I A I
1nspectarea — Vla 1nstrumentele 1ncluse 1n browser — a evenlmentelor
standard + deflnlte de programator (cele scrlse doar cu maJuscule),
plus a modulul de propagare: bubblmg versus capturmg
exemplu concret: codepemo

***************Ending Page***************

***************Beginning Page***************
***************page number:166**************
dom: resurse suplimentare
Marijn Haverbeke, EloquentjavaScript (3rd Edition), 2018
— capitolul “T he Dacument Object Model"
eloquentjavascript.netl14_dom.html
Ilya Kantor, The Modern javaScript Tutorial, 2023
— sectiunea “DOM Tree"
javascript.info/dom-nodes
Even tTarget
developermozilla.orngeblAPl/EventTarget

***************Ending Page***************


***************Beginning Page***************
***************page number:167**************
dom: web storage
Web Storage
oferéi mecanisme de stocare (persistenté) a datelor
la nivel de client (browser) Web
specificajcie HTML Living Standard (24 martie 2023)
html.spec.whatwg.orglmultipage/webstorage.html

***************Ending Page***************

***************Beginning Page***************
***************page number:168**************
dom: web storage
Interfajca Storage oferé acces la 0 listé de perechi (items)
de forma cheie—va10are

***************Ending Page***************


***************Beginning Page***************
***************page number:169**************
interface Storage {
l/ marimea spatiului de stocare
readonly attribute unsigned long length;
l/ cheie pentru acces la date
DOMString? key(unsigned long index);
ll consultarea unui item
getter DOMString? getltem(DOMString key);
ll asignarea de valori pentru un item
setter undefined setltem(DOMString key, DOMString value);
ll eliminarea unui item
deleter undefined removeltem(DOMString key);
ll §tergerea spatiului de stocare
undefined clear();
};
metodele setltem () 5i removeltem ()
se considera ca fiind atomice

***************Ending Page***************

***************Beginning Page***************
***************page number:170**************
dom: web storage
Modul de stocare a item-ilor se precizeazéi
via atributele sessionStorage gi localStorage

***************Ending Page***************


***************Beginning Page***************
***************page number:171**************
dom: web storage
Modul de stocare a item-ilor se precizeazéi
via atributele sessionStorage gi localStorage
//
stocare nepersistentéi
(suport pentru sesiuni)

***************Ending Page***************

***************Beginning Page***************
***************page number:172**************
dom: web storage
Modul de stocare a item-ilor se precizeazéi
via atributele sessionStorage gi localStorage
alternativé la caokie-uri

***************Ending Page***************


***************Beginning Page***************
***************page number:173**************
dom: web storage
Orice modificare a zonei de stocare
conduce 1a emiterea evenimentului storage

interface StorageEvent : Event {

readonly attribute DOMString? key;

readonly attribute DOMString? oldValue;

readonly attribute DOMString? newValue;

readonly attribute DOMString url;

readonly attribute Storage? storageArea;
};

***************Ending Page***************

***************Beginning Page***************
***************page number:174**************
<textarea id="editor" placeholder="incepe§i sé tasta;i..."><ltextarea>
<script>
let editor = documentguegSelector (‘#editor');
// cénd prime§te controlul interactiunii (evenimentul focus),
// <textarea> va include continutul din localStorage — item-ul valoare
editor.addEventListener ('focus', (eveniment) =>{
if (localStorage.getltem('valoare'))
editor.textContent = localStorage.getltem('valoare');
}, false);
ll cénd se pérése§te elementul <textarea> (evenimentul blur),
ll tot ce a fost introdus este salvat in localStorage - item-ul valoare
editor.addEventListener ('blur', (eveniment) =>{
localStorage.setltem('valoare', editor.value);
}, false);
<lscript>

***************Ending Page***************


***************Beginning Page***************
***************page number:175**************
G‘ {:1 Inspector Console D Debugger ‘N, Network {} Style Editor E Storage <> DOM
' E Indexed DB A Y Filter Items
V E Local Storage Value
P E Session Storage
ﬂ Y Filter Output
D b ‘Focus { target: textareatteditor 1:} , isTrusted: true, View: window, detail: B, layerX: B, layerY:
D b blur [ target: textareatteditor {:I- , isTrusted: true, View: window, detail: B, layerX: B, layerY:
D b 'Focus { target: textareatteditor {:I- , isTrusted: true, View: window, detail: B, layerX: B, layerY:
D b blur f target: textareatteditor —ndow, detail: 9, layerX: 6, layerY:
>>
inspectarea in browser a zonei Local Storage
alteraté de functiile de tratare a evenimentelor focus gi blur
axate asupra controlului <textarea>

***************Ending Page***************

***************Beginning Page***************
***************page number:176**************
dom: web storage
Fatéi de cookie-uri, datele stocate in localStorage
nu au un timp de viatéi stabilit a-priori
(pot fi $terse explicit de utilizator sau prin program)
nu este precizatéi 0 dimensiune maximéi

pentru stocarea localéi a datelor cu localStorage

(navigatorul Web poate impune 0 anumitéi valoare,
eventual ulterior modificatéi de utilizator)

***************Ending Page***************


***************Beginning Page***************
***************page number:177**************
dom: web storage
Datele memorate in localStorage
sunt disponibile numai la nivel local — in browser
serverul Web nu le poate accesa direct decét
via un program ce le transferéi explicit prin HTTP(S)

***************Ending Page***************

***************Beginning Page***************
***************page number:178**************
dom: atribute proprii
Atribute definite de programator
(custom H T ML5 attributes)
intr-un document HTML pot fi incluse atribute proprii
prefixate cu data- $i manipulate via HTMLElement.dataset
pot stoca valori private
disponibile la nivel de pagina/aplicatie Web
developermozilla.orglLearn/HTMLlHowto/Use_data_attributes

***************Ending Page***************


***************Beginning Page***************
***************page number:179**************
<div id="person" data-id="69" data-user="tux" data-date-of-birth>
Tuxy Pinguinnesscool<ldiv>

<script>

let elem = document.querySelector (‘#person'); ll obginem datele

ll elem.id == ‘person’

// elem.dataset.id === ‘69'

// elem.dataset.date0fBirth === " (data de na§tere n-a fost precizaté)
elem.dataset.dateOfBirth = '2001-04-01'; ll stabilim cénd s-a néscut
ll includem un alt atribut propriu stabilit prin program
elem.dataset.size = 'big';

<lscript>

***************Ending Page***************

***************Beginning Page***************
***************page number:180**************
<div id="person" data-id="69" data-user="tux" data-date-of-birth>

Tuxy Pinguinnesscool<ldiv>

<script>

let elem = document.querySelector (‘#person'); ll obginem datele

ll elem.id == ‘person’

// elem.dataset.id === ‘69'

// elem.dataset.date0fBirth === " (data de na§tere n-a fost precizaté)
elem.dataset.dateOfBirth = '2001-04-01'; ll stabilim cénd s-a néscut

ll includem un alt atribut propriu stabilit prin program

elem.dataset.size = 'big';

<lscript>
>>elem—
<- r <div id="person" data-id="69" data-user~="tux" data-date-o-F-birth="2661—84-81" data-size="big">
>> elem - dataset . dateO-FBirth

<- "2891-84-81"

folosirea consolei navigatorului Web pentru accesarea gi
modificarea atributelor data- pe baza dataset

***************Ending Page***************


***************Beginning Page***************
***************page number:181**************
(in loc de) pauzéi
3 M

***************Ending Page***************

***************Beginning Page***************
***************page number:182**************
EB
Care e modalitatea de a transfera asincron
date intre clientﬁ) $1 server(e) Web?

***************Ending Page***************


***************Beginning Page***************
***************page number:183**************
interactiune web: ajax
Permiterea transferului asincron de date
intre un document HTML redat de client (browser)
$1 0 aplicajcie rulénd pe un server Web
AJAX — AsynchronousjavaScriptAnd XML
(Ieese James Garrett)
via obiectul XMLHttpRequeSt gi/sau Fetch API

***************Ending Page***************

***************Beginning Page***************
***************page number:184**************
interactiune web: ajax
O suitéi de tehnologii deschise:
limbaje standardizate de structurare — uzual, HTML —
§i de prezentare a datelor: CSS

***************Ending Page***************


***************Beginning Page***************
***************page number:185**************
interactiune web: ajax
O suita de tehnologii deschise:
redare + interacpiune la nivel de client (navigator) Web
via standardul DOM

***************Ending Page***************

***************Beginning Page***************
***************page number:186**************
interactiune web: ajax
O suitéi de tehnologii deschise:
interschimb §i manipulare de date reprezentate prin:
ISON
diverse dialecte XML (e.g., RSS, KML,...)
HTML
alte formate — e.g., CSV

***************Ending Page***************


***************Beginning Page***************
***************page number:187**************
interactiune web: ajax
O suitéi de tehnologii deschise:
procesare folosind limbajul ECMAScript (IavaScript)

***************Ending Page***************

***************Beginning Page***************
***************page number:188**************
interactiune web: ajax
O suitéi de tehnologii deschise:
transfer (a)sincr0n de date via HTTP
facilitat de obiectul XMLHttpRequest
disponibil via lavaScript in cadrul navigatorului Web
HTML Living Standard, 20 februarie 2023
xhr.spec.whatwg.org

***************Ending Page***************


***************Beginning Page***************
***************page number:189**************
interactiune web: ajax
Componenta de bazéi: obiectul XMLHttpRequeSt
permite realizarea de cereri HTTP — e.g., GET, POST,... —
dintr-un program rulénd la nivel de client (browser)
spre 0 aplicayie / un serviciu Web existent(éi) pe server,
in mod asincron ori sincron

***************Ending Page***************

***************Beginning Page***************
***************page number:190**************
interactiune web: ajax
Componenta de bazéi: obiectul XMLHttpRequeSt
paginile Web nu mai trebuie reincércate complet,
conﬁnutul lor — structurat via HTML —
fiind manipulat prin DOM in cadrul browser-ului,
in conformitate cu datele receptionate de la server

***************Ending Page***************


***************Beginning Page***************
***************page number:191**************
interactiune web: ajax
Metode importante oferite de XMLHttpRequest
open()
inijciazéi — deschide — 0 conexiune HTTP cu serverul,
emiyénd 0 cerere: GET, PQST,...

***************Ending Page***************

***************Beginning Page***************
***************page number:192**************
interactiune web: ajax
Metode importante oferite de XMLHttpRequest
send()
transmite (asincron) date — e.g., ISDN, XML etc. —,
spre aplicayia/serviciul ce ruleazé pe server

***************Ending Page***************


***************Beginning Page***************
***************page number:193**************
interactiune web: ajax
Metode importante oferite de XMLHttpRequest
send()
transmite (asincron) date — e.g., ISDN, XML etc. —,
spre aplicatia/serviciul ce ruleazé pe server
orice listener (asociat evenimentelor loadstart, progress,
load, loadend, timeout, abort, error)
trebuie stabilit inainte de a trimite date

***************Ending Page***************

***************Beginning Page***************
***************page number:194**************
interactiune web: ajax
Metode importante oferite de XMLHttpRequest
abort ( )
abandoneazéi transferul de date curent

***************Ending Page***************


***************Beginning Page***************
***************page number:195**************
interactiune web: ajax
Metode importante oferite de XMLHttpRequest
setRequestHeader ( )
specificé anumite cémpuri de antet HTTP
exemple: Cookie, Keep-Alive, User-Agent,...

***************Ending Page***************

***************Beginning Page***************
***************page number:196**************
interactiune web: ajax
Metode importante oferite de XMLHttpRequest
getResponseHeader ( )
furnizeazé valoarea unui anumit cémp prezent
in antetul mesajului de réispuns HTTP trimis de server

***************Ending Page***************


***************Beginning Page***************
***************page number:197**************
interactiune web: ajax
Metode importante oferite de XMLHttpRequest
getAllResponseHeaders ()
oferé toate cémpurile HTTP trimise de server,
excepténd Set-Cookie

***************Ending Page***************

***************Beginning Page***************
***************page number:198**************
interactiune web: ajax
Proprietéiﬁ de bazéi ale XMLHttpRequeSt
readyState
furnizeazéi codul de stare a transferului:
O — UNSENT
1 — OPENED
2 — HEADERS_RECE|VED
3 — LOADING
4 — DONE

***************Ending Page***************


***************Beginning Page***************
***************page number:199**************
interactiune web: ajax
Proprietéiﬁ de bazéi ale XMLHttpRequeSt
status
oferéi codul HTTP intors de serverul Web:
200 (0k)
404 (Not Found)
500 (Internal Server Error)

***************Ending Page***************

***************Beginning Page***************
***************page number:200**************
interactiune web: ajax
Proprietéi'gi de bazéi ale XMLHttpRequeSt
statusText
conﬁne mesajul corespunzétor
codului HTTP furnizat de serverul Web

***************Ending Page***************


***************Beginning Page***************
***************page number:201**************
interactiune web: ajax
Proprietéiﬁ de bazéi ale XMLHttpRequeSt
responseText
responseXML
stocheazéi réispunsul (datele) 0b’;inut(e) de 1a server

***************Ending Page***************

***************Beginning Page***************
***************page number:202**************
interactiune web: ajax

Proprietéiﬁ de bazéi ale XMLHttpRequeSt
onreadystatechange
specificéi func'gia ce va fi invocaté 1a modificérile de stare
ale transferului de date dintre server $1 client
' O
handler de tratare a
evenirnentelor de transfer

***************Ending Page***************


***************Beginning Page***************
***************page number:203**************
interactiune web: ajax
Excepjcii ce pot fi emise
AbortError
lnvalidAccessError
lnvalidStateError
NetworkError
SecurityError
TimeoutError

***************Ending Page***************

***************Beginning Page***************
***************page number:204**************
Alte facilitéyi:
datele vehiculate pot fi de mai multe tipuri
(ArrayBuffer, Blob, Document, DOMString, FormData)
procesul de transmitere a datelor spre server (upload)
poate avea asociat un handler via proprietatea upload
progresul incércérii poate fi urmiirit pe baza

funcyionalitiiﬁlor specificate de interfajca ProgressEvent

stabilirea unui timeout privind realizarea unei cereri

(la nivel de milisecunde)

***************Ending Page***************


***************Beginning Page***************
***************page number:205**************
interactiune web: ajax — studiu de caz
Verificarea existenjcei unui nume de utilizator
in vederea creérii unui cont de autentificare
in cadrul unei aplica'gii Web

***************Ending Page***************

***************Beginning Page***************
***************page number:206**************
Server
open ("GET")
. Web
Cllent
open ("PQST") Server
Account name: ‘1-pzll'ﬁvipilnis?’
tUX _ 1* "51p2ll‘tik‘ipilllfl“-T participant?-
Addrv-w + ‘lipill‘l’iCi[)illll':lz"iif participant-*-
151 v ‘ r Y ‘ v --'Iiparticipanti1><13fparticipantii'»
Apply -1partici|mnt?"
<1nalm-Pluyi-namei> ‘ ‘ . .. _
fereastra navigatorului <I-arlriil1llp:zwpcnglunmmu111x.~~-:|1l|'>
pm tlupant»
<1‘ participantsiii-
date XML (pe server)
verificarea asincroné a existenjcei unui cont pe server

***************Ending Page***************


***************Beginning Page***************
***************page number:207**************
interactiune web: ajax — studiu de caz
Verificarea existenjcei unui nume de utilizator
in vederea creérii unui cont de autentificare
in cadrul unei aplicajcii Web
traténd prin DOM evenimentul blur, putem detecta
— interogénd asincron aplicayia Web de pe server —
faptul céi numele de cont introdus de utilizator
intr-un formular Web deja a fost folosit de altcineva

***************Ending Page***************

***************Beginning Page***************
***************page number:208**************
interactiune web: ajax — studiu de caz
Verificarea existenjcei unui nume de utilizator
in vederea creérii unui cont de autentificare
in cadrul unei aplicajcii Web
aplica'gia Web de pe server va oferi
un document XML modelénd réspunsul la interogarea
,,existé'1 deja un utilizator avénd un nume dat?"

***************Ending Page***************


***************Beginning Page***************
***************page number:209**************
<?php // program PHP, cu rol de serviciu Web, rulat la nivel de sewer
define ('DOCXML', '.lparticip.xml'); ll locatia documentului XML
ll trimitem tipul continutului; aici, XML
header (‘Content-type: text/xml');
ll functie care verifica daca un nume de participant deja exista
ll returneaza 1 daca numele exista, 0 in caz contrar
function checklfNameExists ($aName){

ll incarcam datele despre participanti via SimpleXML

if (!($xml = simplexml_load_file (DOCXML))) { return 0; }

ll parcurgem toti participantii gasiti cu XPath...

foreach ($xml->xpath('lparticipants/participantlname') as $name) {

ll comparam numele, ignorand minusculele de majuscule
if (!strcasecmp($aName, $name)) { return 1; }

}

return 0;
}
?>
<response>

<result><?php echo checklfNameExists ($_REQUEST['name']); ?><lresult>
<lresponse>

***************Ending Page***************

***************Beginning Page***************
***************page number:210**************
<!-- Formularul Web preluand date de la utilizator -->
<form action="add.php" method="post">
<div>
<label for="name">Account name:<llabel>
<input type="text" name="name" id="name"
placeholder="Enter the desired account name"
onblur="javascript:signalNameExists (this.value, ")" l>
<!-- mesaj initial ascuns -->
<span class="hidden" id="errName">
Name already exists, choose another one...
<lspan>
<ldiv> l* stiluri CSS *l
.err { l* mesajul de eroare *l
<div> display: inline;
<label for="adr">Address:<llabel> color: red;
<input type="text" name="adr" id="adr" l> background-color: yellow;
<ld|v> font-family: sans-serif;
<input type="submit" value="Apply" l> .}hi d den { /,. m e s aj as cun s *l
<lform> display: none;
}

***************Ending Page***************


***************Beginning Page***************
***************page number:211**************
ll programul JS — varianta clasicé — executat in cadrul browser-ului
var request; l/ incapsuleazé cererea HTTP cétre serverul Web
function loadXML (url) { ll incarcé un document XML desemnat de 'url'
l/ verificém existenta obiectului XMLHttpRequest (browser antic?)
if (window.XMLHttpRequest) {
request = new XMLHttpRequest (); ll existé suport nativ
} else
if (window.ActiveX0bject){ ll se poate folosi obiectul ActiveX din MSIE
request = new ActiveXObject ("Microsoft.XMLHTTP");
}
if (request) { // existé suport pentru Ajax
l/ stabilim functia de tratare a stérii transferului de date
request.onreadystatechange = handleResponse;
l/ preluém documentul prin metoda GET
request.open ("GET", url, true);
request.send (null); ll nu trimitem nimic spre serverul Web
}
}

***************Ending Page***************

***************Beginning Page***************
***************page number:212**************
ll funcgia de tratare a schimbérii de stare a cererii
function handleResQonse (){
l/ verificém dacé incércarea s-a terminat cu succes
if (request.readyState == 4) {
if (request.status == 200){ ll am obtinut codul de stare ‘200 0k‘?
ll procesém datele receptionate prin DOM
l/ (preluém elementul rédéciné al documentului XML)
var response = request.responseXML.documentElement;
var res = response.getElementsByTagName('result')[0].firstChild.data;
// apelém o funct,ie ce va modifica arborele DOM al paginii Web
ll conform réspunsului transmis de serviciul invocat,
ll pentru a semnala (in)existen§a numelui
signalNameExists (", res);
}
l/ eventual, se pot trata si alte coduri HTTP (404, 500 etc.)
else {
console.error (“A problem occurred (XML data transfer):\n"
+ request.statusText);
}
}

***************Ending Page***************


***************Beginning Page***************
***************page number:213**************
ll functia de semnalare a existentei unui nume de persoana
function signalNameExists (name, exist) {
ll avem un raspuns?
if (exist != "){
l/ preluam via metodele DOM elementul cu id='eroareNume'
l/ pentru a afisa mesajul de eroare
var msg = document.getElementByld ('errName');
l/ schimbam stilul de afisare (in caz de eroare, vor fi aplicate
l/ proprietatile CSS din clasa 'eroare', altfel textul va fi ascuns)
msg.className = exist == 1 ? 'err' : 'hidden';
}eBe{
l/ nu e niciun raspuns stabilit, vom verifica asincron
l/ trimitand o cerere catre server
loadXML ('verify.php?name=' + name);
} O
} ' ' de studiat
exemplul din arhiva

***************Ending Page***************

***************Beginning Page***************
***************page number:214**************
A new participant
Account name:
tux _
Address:
Your address {email 0| URI)
Apply
Eu LIJ Inspector E Console L3‘ Debugger <1 DOM E E B [Q 1J5‘ [I] Ls
IEI All HTML CSS JS Fonts Images Medla Flash WS Other @ #Iwr;l.1|;~at<1<1l.l~1‘ '1. 5' It
Status Method Flle Domam Cause Headers Cookles Params
' 200 GET venfyphpMame:2m: " localhoﬁt (Bxhr Responsepayload
' 200 GET verify.php?name=busaco localhost @x'hr 1 v (response)

‘ 2 v <result>1</r-esult>
utilizatorul introduce un nume de cont; via Ajax, i se va semnala ca
deja exista, conform raspunsului XML trimis de catre serviciul Web

cerere HTTP via URL-ul http:/lweb.info/verify.php?name=tux
raspuns XML de forma <response><result>1<lresult><lresponse>
° 0

***************Ending Page***************


***************Beginning Page***************
***************page number:215**************
interactiune web: ajax
Complementar, se va putea recurge la Fetch
(HTML Living Standard, 24 martie 2023)

API oferit de orice navigator Web modern pentru
a specifica accesul la date (reprezentéiri de resurse)
in urma iniyierii unei cereri HTTP $i
objcinerii unui réspuns furnizat de server
fetch.spec.whatwg.org

***************Ending Page***************

***************Beginning Page***************
***************page number:216**************
interactiune web: ajax
Noul API Fetch implementat de navigatorul Web
se bazeazé pe conceptul
promisiune (promise) E rezultat ce ar putea fi oferit
in urma executiei unei operatii asincrone
represents an operation that has not completed yet,
but is expected in the future

***************Ending Page***************


***************Beginning Page***************
***************page number:217**************
ac'giuni asincrone
settled (async actions)
Pending @Q -then(0nFu||fi|ment) @062 pending
Promise Promise M
66250 .then(onRejection) @‘Q
a .catch(0nRejection) <Q’
tratarea erorilor
(error handling)
developermozilla.orngeb/JavaScript/GuidelUsing_promises
exploringjs.comle56lch_promises.html
web.devlpromisesl

***************Ending Page***************

***************Beginning Page***************
***************page number:218**************
I I
I
studlu de caz. RandomA1ax (Fetch)
-:d1v -;“number5“>[WaiL, p1ease...]</mv> .1 I.‘ O =- = { O
font-family: monospace;
‘Tontsize:
width: . ;
‘ ‘ ‘ :5, :5, F, 35, :5,
1- I 'htLpsM/wwwIanu'om.org/sequences/7111111:38.111ax1338c011i8fovmat=plau|8|nd=new'z :3, 14, 31, F,’ 1,
11, ;, 4, 13, 1;, D,
; ,.,,H . . , > . . . _ :c, 17, 9, :4, 1:,
“" ' L < " ) £ 31, 11, $9, 1o, a:
,1‘ (I'esoonsevstatus >= $8 r'esp011se.status < 1") { .;, :0?’ 37" :7’ 15'
'5",,:1| Promise.resolveUesponf-e) 32, '4
1 5L1 f
'l Promisemejectﬂ Errnrg'response.status/[ext))
1
)
FeLL'hWRi)
.then(status) 1 ' a ‘ -
iiliifill-1)-:?1'e§‘§ol'se'temjn j _ _ _ prela asmcron cu Fetch APl
, ‘ _ ‘ _ ' 1 ’ ‘ 0 secvenlza de numere
My = document.getElcmentById( numhr-m'); aleatoare generate de
numbers.textC0ntent = response.trim().replace( - . '. '); V
w randomorg — trlmlsa ca text
.CatCh(Y‘,r'I»1I;i.l1( ) { 1 I I
numberstextContEM = ‘An error occurred ' + error; Oblgnurt
1)‘. . .
— jsflddle.netlbusacola2q9regdl '

***************Ending Page***************


***************Beginning Page***************
***************page number:219**************
Recurgem la promises pentru a realize proceséri
in funcyie de codul de stare HTTP primit
function status(response) {
if (response.status >= 200 && response.status < 300) {
ll cererea poate fi rezolvaté - fulfill
return Promise.resolve (response)
}ebe{
l/ cererea a fost refuzaté - reject
return Promise.reject (new Error (response.statusText))
}
}

***************Ending Page***************

***************Beginning Page***************
***************page number:220**************
let numbers = document.getElementByld ('numbers');
fetch (URL)
.then (status) l/ verificém dacé datele au fost receptionate cu succes
ll transformém obiectul réspunsului in sir de caractere
.then (response => response.text ())
// procesém secventa de numere
.then (response =>{
l/ inlocuim spatiile albe cu virgulé si plasém continutul
l/ in cadrul elementului HTML identificat prin ‘numbers’
numbers.textContent = response.trim ().replace (I\W+lg, ', ');
})
.catch (error => { ll a survenit o eroare :(
numbers.textContent = 'An error occurred: ' + error;
});
developer.mozilla.orgﬂNeb/APllFetch_APl

***************Ending Page***************


***************Beginning Page***************
***************page number:221**************
studiu de caz: PostISON
Scenariu — implementare cu IS modern (E56):
preluéim caractere de la client — introduse in <textarea> —
§i 1e trimitem asincron prin POST unei aplicayii Web
rulénd pe server care le expediazéi inapoi
mesaje vehiculate in format ISON
{"tasta": "caractef", "data": "secunde"}
tratém evenimentul keypress pentru a capta tastele
acjcionate de utilizator

***************Ending Page***************

***************Beginning Page***************
***************page number:222**************
// codul programului ECMAScript interpretat de navigatorul Web
// tratam evenimentul de apasare a unei taste
const trateazaEveniment = ev => {
l/ mesajul propriu-zis trimis serverului prin POST
l/ atunci cand survine evenimentul
let msg = ‘{ "tasta": "${String.fromCharCode (ev.charCode)}",
"data": "${Date.now()}" }‘;
l/ incapsulam o cerere POST intr-un obiect Request
let request = new Request ('lajax/post.php', {
method: ‘POST’,
l/ convertim datele JSON in sir de caractere
body: JSON.stringify (msg),
l/ n-avem campuri-antet
})t;1eaders. {} de consultat
arhiva cu exemple '.

***************Ending Page***************


***************Beginning Page***************
***************page number:223**************
fetch (request) ll promitem s5 executém codul, transmiténd cererea...
.then (response =>{ ll verificém dacé am primit date JSON de la server
let contentType = response.headers.get (‘Content-Type‘);
if (contentType && contentType.includes('application/json')) {
return response.json ();
};
throw new TypeError ("Datele primite nu-s JSON");
})
.then (json =>{ l/ procesém efectiv datele
l/ creém via DOM un nod text care indicé tasta apésaté
let elem = document.createTextNode (json.tasta);
document.getElementByld ('tasteApasate').appendChild (elem);
l/ raportém datele primite si la consola browser-ului Web
console.log
(‘Date JSON primite: tasta=${ison.tasta}, data=${Date(json.data)}‘);
})
};
ll via DOM, tratém evenimentul keypress
document.addEventListener ('keypress', trateazaEveniment);

***************Ending Page***************

***************Beginning Page***************
***************page number:224**************
ll post.php -- program PHP care preia date JSON transmise via POST
ll de client §i le retrimite acestuia (echo)
function eJSONValid ($sir){ ll verifica daca datele JSON sunt corecte
json_decode ($sir);
return json_last_error () == JSON_ERROR_NONE;
}
// preluam de la intrarea standard datele transmise de client (raw data)
// (aici, cele dintr-o cerere POST)
$date = trim (file_get_contents ("php:l/input"));
if (eJSONValid ($date)) { ll trimitem datele JSON inapoi daca sunt in regula
header ("Content-type: application/json");
echo json_decode ($date);
} else
die ("Date incorecte");
programul (serviciul) Web invocat pe server

***************Ending Page***************


***************Beginning Page***************
***************page number:225**************
O O O O O O.
Redare taste apasate (trnmse $1 unel aphcatu pe server)
Web
,é
Taste: Web
G‘ C} Inspector Console D Debugger m Performance N, Network » @ [j] "' X
@ ‘if’ FilicrURLs || Q Q Disable Cache No Throttling: ﬁ-
All HTML CSS JS XHR Fonts Images Media WS Other
St... Met... File Initiator Transferred Size [El] Headers Cookies Request Response v
Txt
POST post.pl post-chars.html:26 (fetch) 2288 41 B JSON e Rawo
POST post.pl post-chars.html:26 (fetch) 2285 41B 1 { "tasta": "w", "data": "1620920514168" }
G‘ C} Inspector Console D Debugger m Performance T1: Network » @ ['1] "' X

m "E’ Filler Output Errors Warnings Logs Info Debug CSS XHR Requests {I-

> POST http://10calhost:8080/post.php [HTTP/1.1 0K Oms)
Date JSON primite: tasta=w, data=Thu May 13 2021 18:41:54 GMT+0308 (Eastern post-chars.htm1:41:14
European Summer Time)

r POST http://loca1host:8080/post.php [HTTP/1.1 OK 0ms]
Date JSON primite: tasta=e, data=Thu May 13 2821 18:41:54 GMT+0300 (Eastern post—chars.htm1:41:14
European Summer Time)

r POST http://10ca1host:8080/post.php [HTTP/1.1 0K Oms]
Date JSON primite: tasta=b, data=Thu May 13 2021 18:41:56 GMT+8300 (Eastern post-chars.htm1:41:14
European Summer Time)

***************Ending Page***************

***************Beginning Page***************
***************page number:226**************
interactiune web: ajax — aspecte
Transferul de date poate fi monitorizat
(+interceptat) via instrumente dedicate
la nivel de desktop:
instrumentul WireShark
www.wireshark.orgldocslwsug_html_chunkedl

***************Ending Page***************


***************Beginning Page***************
***************page number:227**************
G C} Inspector m Console D Debugger T‘ Network <> DOM Q99» a @ m “-
Ti - . w- 1 Y2: -. l I Q Q U Dusable Cache NO Throttling t ‘n-
All HTML CSS JS XHR Fonls Images MEdIB WS Other
Stat. Method Domam File lnitlator Type Transferred Size A E] Headers Cookies Request Response '
OPTIONS B peoplestackwebexpev . GetExpenmentFiags xhr html 707 8 0 B ‘uh I‘ 7"‘ ‘ " "'0" "
OPTIONS B peoplestack-paxhem .. GctAssistiveFe-atmes xhr html 707 B 0 B ‘SON Raw
A
u POST B peoplestackwebexpem GetExpeiimentFlags m*_b,_tp'601 (xhr) json 1.24 kB 594 B '
v (2926004446151057113 Oijf'l E pevsonld
POST a peoplestackpaﬂient... GetAssistiveFeatwes m=_b,_lp.60'- (xhr) json 1.23 kB 83 B ‘c29260044461 5105711
m POST a contactsvgoogleecom batchexecutehpcids=wiD mr_b,_tp:601 [xhr) json 1.95 RB 802 B 3" f"9°'P'i"L
‘%EgYBAgMJCygaBQEC
a POST Q contacts.google.com batchexecute?ap<ids=wi0 m=_b,_!p:601 (my json 2.07 k8 1.08 k8 awgquwmksuavaoz
Q POST playgooglecom logﬂormat=json81hasfast rs=AA2YrTue4Gb... NS_ERROR_.‘. OdZO:"- metadata' ‘I 11
|
GET mail. lecom mail u/0/?u =28L'k 4i m=b.1138 (th html 4.42 k8 43 B
m H 9°09 I j ' ' > pH-sonid "(292600444615105711r
POST Q mailgooglecom /mawI/u/0/7u|=2&ik=16e4 "1471138 {xhr} js 983 B 224 B v metadata Omen i ‘aqudateT'mPMmms
OPTIONS a people-paxlicntség.“ lookup?contechliem\/ers xhr html 764 B 0 B "1547583043926" "@39‘
"CONTACT CENTRIC", ummctld If |
}
POST Q mailgoogiecom s?hl=en&c=17 m=|n4kU,YWJZb,.. jSOn 12.45 kB 40.40 k8 » contacud‘ l "2926004446151051113"|
OPTIONS Q clientsé googleecom files7qrgma|| messageld' my OCTET-ST. 929 a 0 a lastUpmemwM-v0'» ‘1647583043926’
GET B client56.google.com ﬁles?q=gmail.messa_ 4* cb=gapiJoaded_‘.. json 1.29 k8 44 B v ‘denmy'nb: ‘Dijen 4 Olignénffktlpmken
,souuce s .
POST H mail.google.com s?hl=cn&c=18 m=m4kU.yWJZb..e json 1.22 k8 1.06 k8 . Onginanookupmken |
Q POST playgooglemm log?fmmat=json&hasfasl m=_b,_tp.60'- txhr) NS_ERROR__. 'Qb'"b"“9'@9
mai|.com' l
POST l . lecom lo ?formal='son&hasfast m= b, l 60‘ xhr NS ERROR ..
Q 9379009 9 j ' ' p I ) ‘ T 0 'sabmbumga@gmail.com"
Q POST a mailgooglexom eIZ?hl=en&c= 19 m=m4kU,)/WJZb... json 918 8 2 B v
o 152 tequesls 285.10 kB/ 120.27 k8 transfeued Finish: 9.10 min p (3 lecﬂ .1 cont-1mm "CONTACT", Id v
1nspec§1e a datelor vehlculate cu 1nstrumentele

***************Ending Page***************

***************Beginning Page***************
***************page number:228**************
interactiune web: ajax — aspecte
Adoptarea Ajax pentru cregterea utilizabilitélzii,
nu doar de dragul tehnologiei
exemple negative:
distragerea utilizatorului
abuz de resurse (supradimensionarea arborelui DOM)

***************Ending Page***************


***************Beginning Page***************
***************page number:229**************
interactiune web: ajax
Ajax oferé premisele invocérii asincrone
de (micro-)servicii Web in stilul REST

***************Ending Page***************

***************Beginning Page***************
***************page number:230**************
interactiune web: ajax
Ajax oferé premisele invocérii asincrone
de (micro-)servicii Web in stilul REST
folosind diverse reprezentiiri ale datelor transferate:
POX (Plain Old XML)
ISON UavaScript Object Notation)
AHAH (Asynchronaus HTML and HTTP)
text neformatat

***************Ending Page***************


***************Beginning Page***************
***************page number:231**************
interactiune web: ajax
API-uri specializate
exemplificéiri:
acces la resurse cartografice — HERE lavaScript APIs
developer.here.comldevelopljavascript-api
fotografii de calitate oferite de Unsplash API — Unsplash.js

github.comlunsplashlunsplash-js

Ajax in contextul extensiilor WordPress
codex.wordpress.orglAJAX_in_Plugins

***************Ending Page***************


***************Beginning Page***************
***************page number:232**************
interactiune web: ajax
Soluyii alternative, moderne:
adoptarea diverselor tehnologii HTMLS
server-sent even ts
WebSocket
pentru detalii, de consultat resursele de la
profs.info.uaic.rol~busacolteachlcourseslstaw/web-film.html#week10

***************Ending Page***************


***************Beginning Page***************
***************page number:233**************
rezumat
Acces la XML/HTML prin DOM
caracterizare, specificare, interfejce, XPath,
evenimente, Web Storage, data-, Ajax, exemple

***************Ending Page***************


***************Beginning Page***************
***************page number:234**************
http;//b|og_info/ http://blog.infolmesaj http://blog.infolmesajleditor
reprezentare2
reprezentare1 (HTML)
(HTML) (HTML)
GET POST
resursa2
resursa1 resursa3
http:/Iblog.infolstiri.xm|
At
GET ( Om)
FGSUFSH4
episodul viitor: servicii Web

***************Ending Page***************


