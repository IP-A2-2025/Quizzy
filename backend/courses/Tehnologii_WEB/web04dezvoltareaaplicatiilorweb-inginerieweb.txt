***************Beginning Page***************
***************page number:1**************
Tehnologii Web
PLHNNED V5 BUBGETED
I
Q
m6» ¢
(.-_.,g! ¢ u
_ Q 4a
a; -il- _ >
@SECURIY! Qmﬂm Q “99mm! mammam
programare Web (III)
de la MVC la ingineria aplicayiilor Web
Prof. Sabin Corneliu Buraga - profs.info.uaic.rol~busacol

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
,,Simplitatea este 0 complexitate rezolvaté.”
Constantin Bréncu§i

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
Aplicatii Web
sisteme software complexe,
in evoluyie permanenté

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Realitate
mijloace multiple de interacpiune Web cu utilizatorul
U III Q U Ill U-
mobil laptop PC tableté [smart] TV ecran urban

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
Realitate
mijloace multiple de interactiune Web cu utilizatorul
U l:l I; U lll U-
mobil laptop PC tableté [smart] TV ecran urban
plus, ,,n0ii" veniti:
5% game console Q smart watch Q smart clothing
Qsmart appliances @ smart home smart transportation

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Realitate
cre§terea masei de utilizatori,
avénd a§teptéri tot mai mari din partea software-ului
de la conginut [hipeﬁtextual @ la aplicajcii Web
cu caracter social é w + interacyiune naturalé Q) @ @

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Realitate
suportul privind dezvoltarea de aplicagii
(limbaje, APl-uri, biblioteci de cod, instrumente,...]
oferit de platforma hardware/software
la nivel de server[e] $i/sau de clientﬁ]

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Realitate
neadaptare 1a cerin;ele economice [de tip business)
‘X development vs. I? marketing vs. management

***************Ending Page***************

***************Beginning Page***************
***************page number:9**************
Realitate
privind proiectele Web de anverguré
intérzieri in lansare
neincadrare in buget
lipsa funcgionalitégii
calitatea precaré a aplicatiei

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
scopuri interacyiune funcyionalitéﬁ indexare instrumente
psihologie controale tehnulugii structurare metodologii
comportament Iimbi naturals algoritmi meta-date stimuli
~% ~ Q ~ cg: ~
utilizatori interfaﬁ software conﬁnut creatori
adaptare dupé Crumlish & Malone, 2009

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
g evoluﬁa manierei de

dezvoltare a produselor

Budd/Test 5mg digitale (software)

Alan Cooper et 01., 2014

\nmate Emlﬂ/Tesi Shm

D’ <7

Whats Budd Test “ka & FEM" 51w)
W_u_

UM Mam Rem W
\nmate Desln Budd Test Shu

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Asigurarea calitéﬁi aplicaﬁilor Web
corectitudine 5i robustege (reliability)
extindere + reutilizare (modularitate)

compatibilitate
eficienjcé (asigurarea performanjcei)
portabilitate

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
Asigurarea calitéﬁi aplicajziilor Web
facilitarea interacjciunii cu utilizatorul [usability]
funcyionalitate
relevanga momentului lansérii (timeliness)
mentenabilitate
securitate

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Asigurarea calitéﬁi aplicaﬁilor Web
alte aspects de interes:
integritate
reparabilitate
verificabilitate — inclusiv monitorizare [logging]
economie

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
Asigurarea calitégii aplicagiilor Web
esenﬁalmente, de considerat:
preluarea s1 dirijarea cererilor — dispatch
oferirea funcgionalitiyilor de bazé — core services
asocierea dintre construcgii/abstracﬁuni software
(2.9., obiecte] 5i modele de date — mapping
managementul datelor — data
monitorizarea si evaluarea sistemului — metrics
adaptare dupé Matt Ranney, “Whatl Wish [Had Known
Before Scaling Uber to 1000 Services", GOTO Chicago 2016
highscalabilily.com/blngl2016I10112Ilesson5-ieamedMum-52aling-uber-io-QINN-Eng\neers-WW-sermiml

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Necesita'lti
scopuri + cerinte clar specificate
dezvoltare sistematici, in faze, a aplicayiilor Web
planificare judicioasé a etapelor de dezvoltare
control permanent a1 proceselor de dezvoltare

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Necesitéﬁ
scopuri + cerinte clar specificate
dezvoltare sistematici, in faze, a aplicatiilor Web
planificare judicioasé a etapelor de dezvoltare
control permanent a1 proceselor de dezvoltare
> ingineria aplicaﬁilor Web
[Web engineering]

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
in ce manieré dezvoltém o aplicagie Web?
smnv ur mnv rnmm
" #1’
\ l1] .1”
‘lifyummm W
I
Amniunnnls llgm

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
modelare
Uzual, se recurge la 0 metodologie
se preferé abordérile conduse de modele
(MDA — model-driven architecture]
www.0mg.orglmdal

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
1,
11
— m
m
5
5 ailing-11W i
A Vlwlu In! mvnm m 1‘
m o
z z
‘ >
s
2 mm g
1 “WNW! 3
=1
=
n
q
=
=1
m
W ‘imMmM4> mg‘
»w- <—Irrwmcuuun\lly—> W
um <immmmmmmy4> NU‘
conform Robert Baxley

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
dezvoltarea aplicatiilor Web
Cerinte [requirements]
Analizé & proiectare [software design)
lmplementare (build)

Testare (testing)
Exploatare (deployment)
Mentenanté (maintenance)
Evolutie (evolution)

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
product as functionality I pmduct as information
aplicaﬁe Web a" mm
(produs software) E‘
. . —
funcpunahtate M
. +_ , hwy/7257464,” V
Informapl oferlte
/ .--. A
_
/' ml
W/fi'iﬁ AW ' -
lesse Garrett, The Elements uster Experience (2“d Edition], New Riders, 20 1 1

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
dezvoltarea aplicagiilor Web
‘WIMP
mp Wm
mentenangé
public beta lansare
actualmente, sunt preferate metodologii agile
www.infoq.com/process-practices/
www.wehpagefx.com/blog/web-designlagile!

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
dezvoltarea aplicagiilor Web
Metodologii moderne — exemple:
aim42 — practici 5i gabloane privind evolu'gia, mentenan'ga,
migrarea 5i imbunétégirea sistemelor software
aim42.github.io
12 Factor App — vizénd aplicagiile aliniate
paradigmei SaaS (Software As A Service)
12factor.net

***************Ending Page***************

***************Beginning Page***************
***************page number:25**************
dezvoltarea aplicatiilor Web: principii
start with needs
do less
design with data
do the hard work to make it simple
iterate. then iterate again
buildfor inclusion
understand context
build digitalservices, not Websites
be consistent; not uniform
make things open; it makes things better
exemplu pentru gov.uk — Paul Downey 8i David Heath [2013]

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
cerinte
Stabilirea standardelor de calitate

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
cerinte
Obﬁnere / licitare / negociere
a conﬁnutului (datelor) gi/sau c0dului-sursé
drepturi de autor — copyright
VETSUS
cod deschis [Open Source Licenses)
www.0pensource.orgllicenses/category
+
date deschise
Creative Commons - www.creativecommons.orgllicenses/

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
cerinte
Documentare privind domeniul aplicapiei Web
cu atragerea expergilur
i subject matter expert (SME) sau domain expert i
in domeniul problemei
ce trebuie solugionaté de aplicaﬁa Web

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
ceringe: exemple
Viziune [big idea]
Basecamp: “project management

and team communication software"
Flickr: “almost certainly the best online photo management

and sharing application in the world"

Vimeo: "simple tools for any professional, team,
and organization to create, manage,
and share high-quality videos"
Wikidata: “a free and open knowledge base

that can be read and edited by both humans and machines"

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
ceringe: exemple
Punctele de plecare in dezvoltarea Flickr

presupuneri iniyiale (assumptions):

namenilor le place sé-si impértéseascé amintirile
folosirea succesului blogging-ului
partajarea nu doar a Tnsemnérilor,

ci si a fotograﬁilor (personale)
suport pentru realizarea de comentarii + tagging

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
noi tipuri de ceringe
Privitoare la conﬂnut
audienga — e.g., internapiunalizare
context de navigare
preferinye
disponibilitate permanenté (7 zile, 24 de ore/2i)
recurgerea la surse eterogene de date
céutare, filtrare, recomandare
etc.

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
noi tipuri de ceringe
Interacgiunea cu utilizatorul in contextul Web
inclusiv vizénd Web-ul social
content mash-up
“ifs yours to take, re-arrange and re-use"

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
noi tipuri de ceringe
Privitoare la mediul de execupie
[in]dependen§a de navigatorul Web
wired vs. wireless
on-Iine vs, off-line
suport pentru diverse standarde HTML
interactivitate multi—dispozitiv (responsive Web design]

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
noi tipuri de ceringe
Referitoare la evolupie
utilizatorii sunt capabili 551 exploateze aplicagia Web
féré a trebui s-o [re)instaleze pe calculator/dispozitiv

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
noi tipuri de cerinte: aspecte de interes
initial:
oferirea funcgionalitégilor esen'giale — less is more

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
noi tipuri de cerinte: aspecte de interes
initial:
oferirea funcyionalitéyilor eseniiale — less is more
versiuni ulterioare:
extinderea aplicaﬁei Web
— uzual, via 0 interfagé de programare (API) publicé,
incurajénd dezvoltarea de solutii propuse de utilizatori

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
arhitecturi
Calitatea aplicaﬁilor Web este inﬂuengaté
de arhitectura pe care se bazeazé
Martin Fowler, Software Architecture Guide (2019)
martinfowlemom/architecture!

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
arhitecturi
Web application architecture
body of code
that's seen by developers as a single unit
Q group of functionality
that business customers see as a single unit
Q initiative
that those with the money see as a single budget

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
arhitecturi
Dezvoltarea unei arhitecturi software ia in calcul:
cerinye funcﬁonale
impuse de clienyi,
vizitatori,
concuren'lé,
factori decizionali [management],
evolugie socialé/tehnologicé,

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
arhitecturi
Dezvoltarea unei arhitecturi software ia in calcul:
factori calitativi
utilizabilitate (usability)
performangé (performance)
securitate (security)
refolosire a datelor/codului [reuse]
etc.

***************Ending Page***************

***************Beginning Page***************
***************page number:41**************
arhitecturi

Dezvoltarea unei arhitecturi software ia in calcul:
aspecte tehn(olog)ice

platforma hardware/software (sistem de operare)

infrastructural middleware
servicii disponibile — e.g., via APl-uri publice
limbaj[e] de prugramare
sisteme traditionale [legacy]

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
arhitecturi
Dezvoltarea unei arhitecturi software ia in calcul:
experienp
recurgerea 1a arhitecturi $1 platforms existente
§ab10ane de proiectare (design patterns)
soluﬁi ,,la cheie": biblioteci,framework-uri, instrumente,...
management de proiecte
etc.

***************Ending Page***************

***************Beginning Page***************
***************page number:43**************
client[i)
mandatar (proxy)
zid de protecyie (ﬁrewall)
intermediarﬂ) [middleware]
server(e) Web
server[e) de aplicaﬁi Web
cadre delucru,bib1ioteci, alte componente
server[e) de stocare persistenti — e.g., baze de date
server[e) de conginut multimedia
server(e] de management a1 conginutului — e.g., CMS, wiki
aplicagii/sisteme tradiyionale (legacy)
,,ingrediente” tipice

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
client[i)
mandatar (proxy)
zid de protecyie (ﬁrewall)
intermediarﬂ) [middleware]
server(e) Web
server[e) de aplicaﬁi Web
cadre delucru,bib1ioteci, alte componente
server[e) de stocare persistenti — e.g., baze de date
server[e) de conginut multimedia
server(e] de management a1 conginutului — e.g., CMS, wiki
aplicagii/sisteme tradiyionale (legacy)
eventual, recurgénd 1a servicii in ,,n0ri" — cloud computing
partajarea la cerere a resurselor de calcul 5i a datelor cu alte
calculatoare/dispozitive pe baza tehnologiilor Internet (gézduire,
infrastructuré scalabilé, procesare paralelé, monitorizare,...)

***************Ending Page***************

***************Beginning Page***************
***************page number:45**************
(in loc de) pauzé
Richard‘s guide 4 \‘1'
to soFtware development 2212;}.
>F\ ' k“ i‘ ‘\k v\/ 77%‘
‘U a e (F)
—“ *Al

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Existél anumite ,,re’;ete"
privind dezvoltarea de aplicagii Web?

***************Ending Page***************

***************Beginning Page***************
***************page number:47**************
proiectare
Pattern (§ablon]
regulé ce exprimé 0 relagie
dintre un context, 0 problemi §i o soluﬁe
considerénd punctul de vedere al unui expert
CDl'ltl-ZXt

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
proiectare
Specificarea si/sau ,,recun0asterea" unui pattern
poate avea loc la diverse niveluri:
prezentare a datelor — UI, user interaction, visualization,...
procesare — business logic, scripting etc.
integrare a componentelor — code library development
stocare a datelor — database queries, database design,...

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
proiectare
Exemple de colectii de sabloane
[pattern repositories]
privind proiectarea de software
wiki.cZ.com/?DesignPatterns
patterns of enterprise application architecture
maninfowler.comleaaCatalogl
interactiunea cu utilizatorul (Adele — a repository of
publicly available design systems and pattern libraries)
adele.uxpin.com

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
proiectare
Web Patterns

Model View Controller
Page Controller
Front Controller
Template View
Transform View

Application Controller

M. Fowler, Pam"; ufEnterprise Application Architecture, Addison'Wesley (zoos)

***************Ending Page***************

***************Beginning Page***************
***************page number:51**************
proiectare
Session State Patterns
Client Session State
Server Session State
Database Session State
M. Fowler, Patterns ufEnterprise Application Architecture, Addison'Wesley (2003]

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
proiectare
Data Source Architectural Patterns
Table Data Gateway
Row Data Gateway
Active Record
Data Mapper
M. Fowler, Patterns ofEnterprrse Application Architecture, Addison'Wesley (2003)

***************Ending Page***************

***************Beginning Page***************
***************page number:53**************
aplicagie Web = interfapil + program + conginut (date)
trei strate (3-tier application]
Client Server de aplicagii Stocare
(interface) [application] (persistence)

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Fructe i Prezenlare
' V Friscé i Marcaie
Cremi i Rol speciﬁc
Ieleu i Funcﬁonalitate
Q ' 1 ’
Blat — Baza de date
7 7 ,
C. Henderson, Scalable WebArchllecturQS, Web 2.0 Expo, 2007:

***************Ending Page***************

***************Beginning Page***************
***************page number:55**************
a %interface ' ‘
a ' 11

Q application
C. Henderson, Scalable WebArchllectures, Web 2.0 Expo, 2007: iamcalxomltalks!

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
arhitecturi web
Modelul de structurare a datelor este separat
de maniera de procesare
(controlul aplicaﬁei, business logic] si
de modul de prezentare a acestora (interfaga Web)
principiu:
demarcarea responsabilitigilor
[separation of concerns]

***************Ending Page***************

***************Beginning Page***************
***************page number:57**************
arhitecturi web: mvc
Majoritatea aplicapiilor Web sunt dezvoltate
conform MVC (Model-View-Controller]
Trygve Reenskaug, 1979
folk.universitetetioslo.noltrygverl1979/mvc-2/1979-12-MVC.pdf

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
arhitecturi web: mvc
View Model
(prezenmre + mteracpune] [structura date-10F]
Controller
[prntcsarﬁ]

***************Ending Page***************

***************Beginning Page***************
***************page number:59**************
arhltecturI web: mvc
View Model
la mvel de tllentU) i 1217,, Web stocare perslstenté
Controller
aplicatjc (sewer $i/sau client]

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
arhltecturl web: mvc
g <-> ‘E I
HTML, css, svc, (No)SQL, ISUN,
HTML AFls, WebGL, WebXR etc. XML [XQnery], RDF [SFARQL],...
View Mode!
la mvel de tllentU) i my‘, Web storare persistenté
servere cle aplicagiljmmewark'un
Controller
aplicatjc (sewer $i/sau client]

***************Ending Page***************

***************Beginning Page***************
***************page number:61**************
arhitecturi web: mvc
Poate fi implementat si intr»un limbaj neorientat-obiect
incurajat/impus deframework-uri Web specifice
exemplificéri diverse:

ASPlNET MVC [.NET — C# et (11.), Catalyst [Perl], Conduit [Dart],
Django (Python), Express (Node.js], Grails [Groovy],
Laravel (PHP). Lift (Scala), Rails [Ruby], Rocket [Rust],
Yesocl [Haskell], Spring [lava], Wt [C++)

***************Ending Page***************

***************Beginning Page***************
***************page number:62**************
arhitecturi web: mvc
Controller
responsabil cu preluarea cererilor de la client
[cereri HTTP — e.g., GET, POST,... — emise
pe baza acﬁunilor utilizatorului]

***************Ending Page***************

***************Beginning Page***************
***************page number:63**************
arhitecturi web: mvc
Controller
responsabil cu preluarea cererilor de la client
[cereri HTTP — e.g., GET, POST,... — emise
pe baza acﬁunilor utilizatorului]
gestioneazé resursele necesare satisfacerii cererilor

***************Ending Page***************

***************Beginning Page***************
***************page number:64**************
arhitecturi web: mvc
Controller
responsabil cu preluarea cererilor de la client
[cereri HTTP — e.g., GET, POST,... — emise
pe baza acﬁunilor utilizatorului]

gestioneazé resursele necesare satisfacerii cererilor
uzual, va apela un model conform acyiunii solicitate

§i, apoi, va selecta un view corespunzétor

***************Ending Page***************


***************Beginning Page***************
***************page number:65**************
arhitecturi web: mvc
Model
resursele gestionate de software — utilizatori, mesaje,
produse etc. — au modele speciﬁce

***************Ending Page***************

***************Beginning Page***************
***************page number:66**************
arhitecturi web: mvc
Model
resursele gestionate de software — utilizatori, mesaje,
produse etc. — au modele speciﬁce
desemneazé datele + regulile (Le. restricgiile)
vizénd datele P concepte manipulate de aplicaﬁa Web

***************Ending Page***************

***************Beginning Page***************
***************page number:67**************
arhitecturi web: mvc
Model
resursele gestionate de software — utilizatori, mesaje,
produse etc. — au modele speciﬁcs
desemneazé datele + regulile (Le. restricgiile)
vizénd datele b concepte manipulate de aplicaﬁa Web
oferé controller-ului 0 reprezentare a datelor solicitate
§i e responsabil cu validarea datelor menite a fi stocate

***************Ending Page***************

***************Beginning Page***************
***************page number:68**************
arhitecturi web: mvc
View
furnizeazé diverse maniere de prezentare a datelor
furnizate de model via controller

***************Ending Page***************

***************Beginning Page***************
***************page number:69**************
arhitecturi web: mvc
View
furnizeazé diverse maniere de prezentare a datelor
furnizate de model via controller
pot exista view-uri multiple,
alegerea lor fiind realizaté de controller

***************Ending Page***************

***************Beginning Page***************
***************page number:70**************
il/ilx
6
3 4
Client 1 Dispatcher 2 Controller
etape tipice:
(1) cerere trimisé de client — 2.9., navigator Web,
(Z) dirijare (routing) a cererii citre controller,
[3) recurgerea 1a un model, (4) furnizare de date dorite,
(5) selectare a unui view, (6) transmitere conjdnut 1a client

***************Ending Page***************

***************Beginning Page***************
***************page number:71**************
arhitecturi web: mvc
Arhitectura genericé a unei aplicatii Web
va consta dintr-un set de resurse referitoare la
controller, model $i view

***************Ending Page***************

***************Beginning Page***************
***************page number:72**************
arhitecturi web: mvc
Arhitectura genericé a unei aplicatii Web
va consta dintr-un set de resurse referitoare la
controller, model $i view
uzua1,framew0rk—ul Web folosit impune o anumité
structuré a fi§ierelor aplicaﬁei ce va ﬁ implementaté

***************Ending Page***************

***************Beginning Page***************
***************page number:73**************
assets avansat
images
jevescripts
stylesheets
controllers
helpers
mailers
models
views
LAsilaycmtzs
config
at
OC
lib
log
public
script
test
fixtures
functional
integration
performance H _ ‘ H
“mt ,,scheletul unel apllcapl Web
3;:er create 1n Ruby 0n Ralls
Pimp“ rubyonralls.org

***************Ending Page***************

***************Beginning Page***************
***************page number:74**************
app onﬁg avansat
Console structura de directoare
c c 11 A . . ..
1:2 2° er 1n cazul unel apllcajcll Web
Locale -
Model folosmdframework-ul
:Behavior CakePHP
Datasource
Pluqin cakephp.org
Test
twp
Vendor
View
Elements
Errors
Helper
Layouts
Pages
scaffolds
webroot
css
files
imq
.s _
lib J altele: Codelgmter, FuelPI-IP,
plugins ..
vendors Laravel, Symfony, Y11

***************Ending Page***************

***************Beginning Page***************
***************page number:75**************
assets avansat
:javascripts
stylesheets
apps
libs
main
controllers
models
views
conf
project
ublic
images
'—iccns
javascripts
structura de dlrectoare 1n cazul unel apllcapl Web
ce recurge laframework-ul Play pentru lava $1 Scala
www.playframework.com

***************Ending Page***************

***************Beginning Page***************
***************page number:76**************
m '0 ~ a w E
Seavrh mum“ \xpkvvev K m, P '
I> I Suhmou New,
A F‘ w=hPmk<l
ﬁ Prnpﬂlms
A Q wwwrool
l> i (55
> i \magqs
> i \lb
Q‘ Jefemntes]:
A ,1‘ Dpywndwvﬂ“
I> ii Row“
I> {I NPM
P 'l Releveuoea
m!
5 WNW
U mm; 1m“
5 Wm” _ _
g WWW" structura pr01ectulu1 software
mm" _ _
a mmwmhwl pentru o aphcape ASP.NET MVC
www.asp.netlmvc
Suluhuvv Expknev Team EXDlnvcr Scrvcv EIDIurcr

***************Ending Page***************

***************Beginning Page***************
***************page number:77**************
arhitecturi web: mvc
Variante derivate:
HMVC [Hierarchical Model-View-Controller)
MVP [Model View Presenter]
MVVM (Model View View/Model]

***************Ending Page***************

***************Beginning Page***************
***************page number:78**************
User mleracllon
exemplu:
susimmpum M-V-P-VM [Model-View-
e W Presenter-ViewMadeI]
Passacaﬂsln . . A
utlllzat 1n contextul
aplicaﬁilor Web complexe
reams lhe V\ewM0de\
“5mg lhe_ Model data
M . “mnm't'mmewew pentru detalii, de parcurs
anllJuIa'es
Herberto Graca, MVC and
its alternatives (2017]
herbertograca.§9m@017108/17/mvc-and-its-variantsl

***************Ending Page***************

***************Beginning Page***************
***************page number:79**************
rezumat
programare Web b inginerie Web
dezvoltarea aplicagiilor Web — aspecte esenyiale

***************Ending Page***************

***************Beginning Page***************
***************page number:80**************
Server Web
\
Cerere HTTP
(GET, POST...) server de
Cllent apllcayn
Web — PHP
réspuns
(reprezentare)
HTML, PNG, FDF.
JSON, svc, 2111,...
programe :H
. gi- HF!“
resurse (externe)
episodul viitor:
dezvoltarea de aplicagii Web in PHP

***************Ending Page***************

