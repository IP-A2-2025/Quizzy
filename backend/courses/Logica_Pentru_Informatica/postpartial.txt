***************Beginning Page***************
***************page number:1**************
Logicé pentru informaticét - note de curs
Universitatea Alexandru Ioan Cuza, Ia$i
Facultatea de Informaticé
Anul universitar 2021-2022
Stefan Ciobétcé
Andrei Arusoaie
Rodica Condurache
Cristian Masalagiu

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru 10cm Cuza
Partea a H-a - Logica de ordinul I 2 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
Cuprins

5

7

11
W14
m 16
mm 19

29
mm 30
36
mm 36

3

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru 10cm Cuza
39
mm 59
mm 66
75
ParteaaH-a- Logica de ordinulI 4 Note de curs- delistat color

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Capitolul 1
M t ' t ' ' ' t d

O 1V3 , le §1 1H I'O UCGI'G
Logica de ordinul I7 pe care 0 vorn studia in continuare, este 0 extensie a logicii
propozitionale, extensie care aduce un plus de expresivitate. Expresivitatea
adifuionalé este necesaré pentru a putea modela anurnite aﬁrmatii care nu pot
ﬁ exprimate in logica propozipionalé.

in logica propozitionalé, nu putern exprima intr-un mod natural urmétoarea
aﬁrmatie: Orice 0m este muritor.

Pentru a modela 0 aﬁrmapie in logica propozi§i0nalzi, identiﬁcém intéii
propoziﬁiile atomice. Apoi asociem ﬁecérei propozitii atomice 0 variabilé
propozigionalé. Propozipiile atomice sunt propozitiile care nu pot ﬁ impérpite
in alte propozitii mai mici, care s5 ﬁe conectate intre ele prin conectorii logici
—\, /\7 V7 —> $i respectiv <—>.

Observéun c5 aﬁrniatia Om'ce 0m este mum'tor nu poate ﬁ descompusé
in afinnapii indivizibile legate intre ele prin conectorii logicii propozipionale7
dupé CUIII este descris Inai sus. Asadar, in logica propozitionalé, aﬁrmatia
este atomicé. Asociem intregii aﬁrmatii 0 variabilé propozifuionalé p G A.

Acuin s5 Inodelérn afirrnatia Socrate este 0m. Evident, acestei a doua
aﬁrrnafuii trebuie six ii asociern o alté variabilé propozipionalé q E A. Sé
presupunem c5 $tiIn cé p 5i q sunt adevérate. Formal, $tim c5 lucrérn cu 0
atribuire T : A —> B astfel incéit T(p) I 1 $i T(q) I 1. Putein trage concluzia
ca aﬁrrnafuia Socrate este mum'tor este adevératé in atribuirea T?

Nu, deoarece aﬁrinatiei Socrate este mum'tor ar trebui s5 ii asociein 0
a treia variabilﬁ propozitionalé r $i nu putein trage nicio concluzie asupra
lui T(r) din faptul (:51 T(p) I 1 $i T(q) I 1. Deci, din semantica logicii
propozinionale, nu putern trage concluzia 0:1 r este adevératé in orice atribuire
in care p $1 q sunt adevérate, in ciuda faptului 65m, dacé orice 0m este mum'tor
5i Socrate este 0m atunci sigur Socrate este mum'tor. Aceasté diferenté intre
realitate $i modelarea noastré ne indicé faptul (:5 Inodelarea nu este suﬁcient

5

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Logica pentru informatica 2020-2021 Universitatea Alexandru I oan Cuza
de buna.

Logica de ordinul I aduce7 in plus fata de logica propozitionala7 notiunea
de cuantz'ﬁcator (existential sau universal) si notiunea de predicat. Quantifica-
torul universal este notat cu V (de la litera A intoarsa i all in limba engleza)7
iar cuantiﬁcatorul existential este notat cu El (de la litera E intoarsa i exists
in limba engleza).

Un predicat este 0 aﬁrmatie a carei valoare de adevar depinde de zero sau
mai multi parametri. De exemplu7 pentru aﬁrmatia de mai sus7 vom folosi
doua predicate: 0 si M. Predicatul 0 va ﬁ definit astfel: 0(x) va fi adevarat
cand x este 0m. Predicatul M(x) este adevarat cand x este muritor. Deoarece
predicatele de mai sus au fiecare Cate un singur argument /parametru, ele se
numesc predicate unare. Predicatele generalizeaza variabilele propozitionale
prin faptul ca pot primi argumente. De fapt, variabilele propozitionale pot fi
vazute ca predicate fara argumente.

Astfel, aﬁrmatia om'ce 0m este mum'tor va ﬁ modelata prin formula
care este citita astfel: pentru orice x, dacd 0 de x, atuncz' M de x. Aﬁrmatia
Socrate este 0m va ﬁ modelata prin formula 0(5), unde s este o constantd
prin care intelegem Socrate7 la fel cum prin constanta O ne referim la numarul
natural zero. De exemplu, 0(5) este adevarat (deoarece 5 denota un 0m), dar
O(|) este fals daca, spre exemplu7 | este o constanta care tine locul catelului
Ldbu5.

Aﬁrmatia Socrate este muritor va f1 reprezentata prin M(5) (deoarece con-
stanta 5 se refera la Socrate). Afirmatia M(5) este adevarata deoarece Socrate
este muritor; la fel si afirmatia M(|) este adevarata.

Vom vedea ca in logica de ordinul I, formula M(5) este consecinta a for-
mulelor (Vx.(0(x) —> M(x))) si respectiv 0(5). In acest sens, logica de ordinul
I este suﬁcient de expresiva pentru a explica din punct de vedere teoretic
rationamentul prin care putem deduce ca Socrate este murz'tor din faptul ca
Om'ce 0m este mum'tor si din faptul ca Socrate este 0m.

Partea a II-a - Logica de ordinul I 6 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Capltolul 2
St t ' ' ' t '
, g
Cu siguranta ati intalnit deja mai multe formule din logica de ordinul I, fara sa
stiti neaparat ca aveti de a face cu logica de ordinul I. Fie urmatoare formula:
4p I (Vx.(Vy.(x < y—>E|z.(x < Z /\ z < y)))).

Formula foloseete un simbol < caruia ii corespunde un predicat binar <
(adica o relatie binara) deﬁnit astfel: <(a7,y) este adevarat daca m este mai
mic strict decat y. Pentru multe predicate binare (inclusiv pentru <)7 pentru
a simpliﬁca scrierea, folosim notatia inﬁxata (x < y) in 10c de notatia preﬁxata
(<(w7 y))-

Este formula 4p de mai sus adevarata? Formula aﬁrma ca intre orice doua
valori ale variabilelor x,y exista o a treia valoare, a variabilei z. Formula
este adevarata daca domeniul variabilelor x,y, z este R, dar este falsa daca
domeniul este N (intre orice doua numere reale exista un al treilea, dar intre
doua numere naturale consecutive nu exista niciun alt numar natural).

In general, formulele de ordinul I se refera la 0 anumita structurd matem-
atz'cd.

Deﬁnitia 1 (Structura matematica). O structura matematica este un triplet
S I (D,P¢"ecl7 Fun), uncle:

o D este 0 multime nevidd numz'td domeniu;

0 ﬁecare P G Pred este predicat (dc 0 aritate oarecare) peste multimea D;

0 ﬁecare f G Fun este functie (de 0 aritate oarecare) peste multimea D.

lata cateva exemple de structuri matematice:

7

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza

1' (N,{<,:},{+,0,1});

Domeniul structurii este multimea numerelor naturale. Structure contine
doué predicate: < $1 :7 ambele de aritate 2. Predicatul < este predi-
catul mat mic pe numere naturale, iar predicatul I este predicatul de
egalitate a numerelor naturale.

Functia binaré + : N2 —> N este functia de adunare a numerelor natu-
rale, iar structura contine $i constantele 0 G N $i 1 E N.

2' (R7{<v:}7{+v*7071});

Aceasté structuré contine doué predicate binare, < $1 :7 precum $1
patru functii peste R: functia binaré +, functia unaré — $1 constantele
0, 1 6 R.

Aceasté structuré este similaré cu structura precedenté7 dar dorneniul
este multimea nurnerelor intregi.

Aceasté structuré este o algebra booleatnét7 unde dorneniul este multimea
valorilor de adevér, iar functiile sunt cele cunoscute din prima jumétate
a semestrului. Astfel de structuri, féré niciun predicat, se nurnesc struc-
tum' algebm'ce.

5. (R, {<},U)).

Aceasté structuré contine doar un predicat de aritate 2 (relatia mat‘ mic
peste R) $1 nicio functie. Structurile care nu contin functii se numesc
structuri relationale. Structurile relationale cu domeniul ﬁnit se mai
numesc baze de date relationale $1 se studiazé in anul 2.

Cénd avern o formulé de ordinul I $1 dorirn sé ii evaluérn valoarea de
adevér7 trebuie sé ﬁxérn structura in care lucrérn. Revenind la formula de
mai devreme:

<p I <Vx.(Vy.(x < y—>E|Z.(>< < z /\ z < y))))7

avern c5 aceasté, formulé este adevératé in structura (R, {<, I}, {+, —, 07 1})
(intre orice doué nurnere reale distincte existé cel putin un nurnér real) dar
este falsé in structura (Z7 {<, I}, {+, —, 0, 1}) (deoarece nu intre orice doué
numere intregi putem gési un alt numér intreg i de exemplu intre douﬁ nu-
rnere intregi consecutive nu existé niciun intreg). In prirnul caz, dorneniul
variabilelor X7 y, Z este 1R $1 simbolului < ii corespunde predicatul <§ R2. In
a1 doilea caz7 domeniul variabilelor X, y, Z este Z ei simbolului < ii corespunde
predicatul <§ Z2.

Partea a H-a - Logica de ordinul I 8 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Logica pentru informatica 2020-2021 Universitatea Alexandra I oan Gaza
Este posibil ca doua structuri diferite sa aiba un set de predicate si de
functii cu acelasi nume. De exemplu, chiar structurile de mai devrerne,
(lR, {<, I}, {+, —, 0, 1}) si respectiv (Z,{<,I},{+,—,0,1}). Desi predicatul
< Q R2 este diferit de predicatul < Q ZQ, ele au acelasi nume: <.
in general, in Mateniatica si in Informatica, nu facern diferenta intre un
predicat si numele lui, respectiv intre 0 functie si numele functiei, dar in
Logica diferenta este extrern de importanta. in particular, daca ne referirn la
numele unei functii vorn folosi sintagrna simbol functional, iar daca ne referirn
la numele unui predicat vorn folosi sintagrna simbol predicatz'o. De ce este
importanta diferenta dintre un sirnbol predicativ si un predicat? Deoarece
vorn avea (ne)voie sa asociem sirnbolului predicativ diverse predicate, analog
modului in care unei variabile intr-un limbaj de programare imperativ ii putern
asocia diverse valori.
Cand ne intereseaza doar numele functiilor si predicatelor (nu si functiile
si respectiv predicatele in sine), vorn utiliza signaturi:
Deﬁnitia 2 (Signatura). O signatura Z este an tnplu E I (77,.73) nnde
73 este 0 multime de simbolnm' predicative 52' .7 este o multime de simboluri
functionale. Fiecare simbol s (predicativ sau functional) are asociat an numar
natural pe care il 120m numi aritatea simbolalai $1 il 110m nota on a1"(5).
Unei signaturi ii putern asocia rnai multe structuri:
Deﬁnitia 3 (Z-structuri). Dacd Z I (73,13) este o signatura, o E-structura
este orice structnra S I (D, Pred, Fun) astfel incat ﬁecaraz' simbol predicativ
(sau functional) ii corespande in mod nnic an predicat (respectio, 0 functie).
Exemplul 4. Fie E I ({P, Q}, {f, i, a, b}) unde P, Q sunt simbolum' predicatz've
de aritate a1"(P) I a1"(Q) I 2 ,n' f, i, a, b snnt simbolnm' fancifz'onale on aritagfz'le:
ar(f) I 2, a1"(i) I 1 52' a1‘(a) I ar(b) I 0.
Anem ca (lR, {<, I}, {+, —, 0, 1}) 52' respectin (Z, {<, I}, {+, —, 0, 1}) snnt
E-stractari.
Observatie. ana cam se poate observa 5i in Ememplall pentrn simbolam'
predicatz've (6.9., P, Q) 110m ntiliza 0 cnloare difem'ta fata“ de caloarea sim-
bolam'lor functionale (e.g., f, i,a, b). Pentrn predicatele 52' fanctn'le dz'n struc-
tum' oom ntiliza fontul obisnuit pentrn formula matematz'ce.
De retinut!
Structura I domeniu + predicate + functii
Signatura I sirnboluri predicative + siniboluri functionale
Unei signaturi Z ii putern asocia Inai rnulte structuri, nurnite Z-
structuri.
Partea a H-a - Logica de ordinul I 9 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
Notatie. Multimea simbolurilor predicative dintr-o E-structura de aritate n
este notatd cu Pn I {P | a7"(P) I n}, m multimea simbolum'lor functionale
de aritate n este notatd cu .73” I {f \ a1"(f) I n}. Pentru cazul particular
n I 0, 1:0 reprezz'ntd multimea simbolum'lor constante (simbolum' funcgfz'onale
de aritate 0).

Partea a H-a - Logica de ordinul I 10 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
I

Capltolul 3
Sintaxa logicii de ordinul I
in acest capitol vom prezenta sintaxa formulelor din logica cu predicate de
ordinul I. Pentru logica de ordinul I limbajul (multimea de siruri de simboluri)
este determinat de alegerea unei signaturi E. Practic7 existé mai multe limbaje
de ordinul I7 céte un limbaj pentru ﬁecare signaturé E.

In continuare, vom presupune ﬁxaté o signaturé E cu simboluri predicative
73 si simboluri functionale F.
3.1 Alfabetul
Ca $i formulele din logica propozitionali7 formulele din logica de ordinul I
sunt $iruri de simboluri peste un anumit alfabet. Spre deosebire de logica
propoziﬁionalé, alfabetul este mai bogat 5i contine urmétoarele simboluri:

1. conectom' logicz' deja cunoscuti: —\, /\7 V, —>, <—>, l, precum si d0i curm-
tz'ﬁcatori: V, 3;

2. variabile: vom ﬁxa 0 multime infinit numérabilé de vanviabile7 notaté
X : {x, y, z7 x’, y’, x1, z”7 . . .} (a nu se confunda cu multimea variabilelor
propozitionalc din logica propozitionalé; sunt doué notiuni fundamental
diferite 5i din acest inotiv utilizim alté culoare pentru a 1e reprezenta);

3. simboluri auxiliare: (, )7 ., ,, (, ), 5i ,;

4. simboluri supliinentaire7 care sunt speciﬁce ﬁecérei signaturi E I ("P7 1:)
in parte: simbolurile functionale din multimea .7: $i respectiv simbolurile
predicative din multimea 77.

11

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
3.2 Termen

Deﬁnitia 5. Multimea termenilor, T, este cea mat micd multime care satis-
face urmdtoarele proprietdtt:

1. 1:0 Q T (orice stmbol constant este termen);

2. X Q T (ortce variabild este termen);

5’. dacd f 6 In (cu n > 0) §i t1,...,tn G T, atuncz' f(t1,...,tn) G T (un
stmbol functional de amtate n apltcat unui numd?" de exact n termenz'
este termen).

Observatie. Deoarece deﬁnttta multtmti termenz'lor deptnde de E I (P,.F),
elementele multtmn' T se mat numesc E-termeni.

Practic7 termenii se construiesc aplicénd simboluri functionale peste sim-
boluri constante $1 variabile.

Exemplul 6. Fte stgnatum E I ({P,Q}, {f, i,a, b}) deﬁnitd in Exemplull
unde a1"(P) I ar(Q) I 2, am‘) I 2, ar(i) I 1, ar(a) I ar(b) I 0. Iatd
cdteva ewemple de terment: a, b, x, y, X1, y’, i(a), i(x), i(i(a)), i(i(x)), f(a., b),
ma, b», m, Emmy»-

Exerciigiul 7. Identiﬁcatz' in lista d6 mat jos E-termenz't:

1- i<i<x>>,-

2. i;

3. f(x,x);

4- P(av b);

5. i(a,a);

'7. f(i(x,x));

8. a(i(x)).

Termenii (sau, in mod echivatlent7 termtt), sunt notati cu t7 s,t1,t2, sht’7
etc. Degi termenii sunt scri§i in mod uzual ca un §ir de simboluri7 ei au asociat
un arbore de sintaxé abstracté deﬁnit dupé cum urmeazé:

1. dacé t I c 3i c € F0, atunci arb(t) I ®
Partea a H-a - Logica de ordinul I 12 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza

2. dacé t I a: $1 a: G X, atunci arb(t) I (a)

3. dacé t : f(t1, . . .,tn) 5i f G F” (n > 0), t1,...,tn € T, atunci

arb(t) : A
arb(t1) - - - arb(tn).

Observatie. Desi formal teTmenz'z' sunt deﬁnigﬁz' ca ﬁz'nd simm‘ de simbolum'
pesto alfabetul desom's maz' sus, acestz'a trebuz'e intelesz' ca ﬁz'nd arbom'. De
altfel, in orice software care lucreazd cu termenz', aceastz'a sunt memoratz' sub
formd de arbom' cu niddcind. Iatd arborele atasat termenuluz' f(f(a7 i(b)),x):

arb(f(f(a,i(b)),x)) z {g-\
Exercitiul 8. Calculagfz' arboru' de sintaacd pentru termenu' din Exemplulﬁ.
3.3 Formule atomice
Deﬁnitia 9 (Formula atomicﬁ). O formulé atomicé este orice sir de simbolum'
de forma P(t1,...,tn), undo P E Pn este un simbol predicatiu de aritate
n Z 0, iar t1, . . . ,tn € T sunt termeni. Dacd n I 0, scriem P in loo de P().
Exemplul 10. Continudnd Exemplulﬂ folosz'm signatum

E I ({P,Q}, {f7 i,a, b}),

unde ar(P) : arm) : 2, ar(f) : 2, a7"(i) : 1, ar(a) : a7"(b) : 0.

Iatd cdteua exemple de formule atomice: P(a,b), P(x, y), Q(i(i(x)), f(x7 x)),
Q(a, b), P(f(f(a, i(><))., b), i(><)).
Exercitiul 11. Emplicatz' de ce P(a), P, i(i(x)) nu sunt formule atomice peste
signatum din Exemplul.
Partea a H-a - Logica de ordinul I 13 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
3.4 Formule de ordinul I
Deﬁnitia 12 (Formule de ordinul I). Multimea formulelor de ordinul I, notatd
MPH, este cea mai micd multime astfel incdt:
1. (cazul de bazd) orice formuld atomicd este formuld (adicd P(t1, . . ., tn) G
MPH pentru orice simbol predicativ P G ’Pn 5i orice termeni t1, . . . ,tn G
T;
2. (cazurile inductive) pentru orice formule <p,<p1,<p2 G MPH, pentru orice
variabild :c G X, aoem cd:
(a) W1 e m,-
(b) (901 /\ $02) Q LIFE;
(C) (901 V 902) € MPH;
(d) ($01 2 .02) e m.-
(6) (W1 <—> <P2) € LN;
(f) (Vamp) G MPH;
(g) (Elamp) G LPH.
Observatie. in Deﬁniiia. regdsim conectorii logici —\, /\, \/7 —> 5i respectii)
<—> din logica propoziiionald. Locul oariabileloi" propozigfionale (deocamdatd, la
nioel sintactic) este luat d6 simbolurile predicative de aritate 0. Constructiile
(Vzc.<p) 5i (3:11.30) sunt noi.
Exemplul 13. Continudnd Exemplulﬁ folosim signatum Z I ({P, Q}, {f, i, a7 b}),
unde ai"(P) : arm) : 2, ar(f) : 2, ai"(i) : 1 $i ar(a) : ai"(b) : 0.
Iatd cdteva example de formula din logica do ordinul I:
1. P(a,b);
2. Q(a,b);
3. P(a,x);
4. —|P(a,b);
5' (P(a»b) /\ “Q(a»b));
6. (P(a, b) \/ ﬁQ(x, y));
'7. (P(a, b) —> P(a, b));
Partea a H-a - Logica de ordinul I 14 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
w
9. (VX.P(a,x));
10. (Elx.—|Q(X,y)).

Deﬁnitia 14 (Arborele de sintaxé abstracté, asociat formulelor din LIPH).
Formulele au asocz'at un aTbore d6 sintaxd abstractd deﬁnit in cele ce urmeaza“:
1’ dacdsp I P(t1, , . ., tn), atunci arb(go) I ﬁ

arb(t1) ' ' ' aTbUn);
2. dacd cp I wpl, atunci arb(<p) I
aTbQ/Pl);
3’ dacd 80 : (301 /\ 302), atuncz' arb(30) : /®\
arb(<p1) (1719(902);
4. dacd cp I ($01 \/ 4,02), atuncz' arb(g0) : /®\
arb(g01) aerQ);
5. dacd 30 I (301 —> 902), atunci arb(<p) : ﬂ
arb(<p1) arb(<p2);
6. dacd 30 I (gal <—> 302), atunci arb(cp) I K
arb(<,01) WWW);
Partea a H-a - Logica de ordinul I 15 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza

'7. dacd 30 I (Vampl), atunci arb(go) I

arb(<p1);

8. dacd 30 I (Elx.<p1), atuncz' arb(<p) I

aTb(<P1)-
Exercitiul 15. Calculagfz' arborele de sintaxd asociat formulelor din Exem-
pluZI.
3.5 Paranteze
Parantezele ( $i ) sunt folosite pentru a marca ordinea efectuérii operatiilor
logice ($1, sau, not7 etc.) In continuare, vorn renunfua la parantezele care nu
sunt necesare, la fel ca in cazul logicii propozitﬁonale: dacé 0 formulé poate ﬁ
interpretaté ca un arbore de sintaxé abstracté in douﬁ sau mai rnulte rnocluri7
se vor folosi paranteze pentru a stabili arborele dorit.

De exemplu, cpl V gag /\ 4,03 ar putea ﬁ inteleaszi ca ((901 V Lpg) /\ 4,03) sau ca
(gal V (4,02 /\ <p3)). Pentru a evita scrierea formulelor cu prea multe paranteze7
se stabilesc prioritdgfi. Ordinea prioritéfuii operatorilor este:

l’ —‘7 A? V7 %’ H7V7 37
unde —| este cel mai prioritar, iar El este cel mai pupin prioritar. Pentru
a evita situatiile de ambiguitate (Le.7 atunci cénd exists} mai multe moduri
de a construi arborele de sintaxé), este recomandaté folosirea de paranteze
suplirnentare.

Datorité prioritﬁtii conectorilor logici7 formula P(a, a) V P(b, b) /\ P(a, b)
va ﬁ intotdeauna in§eleasé ca (P(a, a) V (P(b, b) /\ P(a, c))) (deoarece /\ este
prioritar faté de V). Ca analogie, la fel se intéunplé §i in cazul aritrneticii:
1 + 2 >|< 3 va ﬁ inteles ca 1 + (2 >< 3)7 deoarece >< are prioritate in faga lui + (><
este similar cu /\ §i + cu V).

Exerciigiul 16. Scriegfz' formulele din Ezemplul- cu cdt maz' putine paran-
teze.

1n Sectiunea vorn detalia Inoclul in care cuantiﬁcatorii interactioneazé
cu ceilalpi conectori logici. Vorn vedea c5 pentru cuantiﬁcatori avern ni$te
reguli suplirnentare in afaré de prioritéti.

Partea a H-a - Logica de ordinul I 16 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Logica pentru informatica 2020-2021 Universitatea Alexandru I oan Cuza

3.6 Modelarea in LIPII a aﬁrmatiilor din limba
romanﬁ

In aceasta secpiune vorn explica care este signatura folosita pentru a modela

in logica de ordinul intai aﬁrrnatiile: Orice 0m este murz'tor, Socrate este 0m

gi respectiv Socrate este mum'tor.

In primul rand7 identiﬁcam predicatele din text. Avern doua predicate
unare este 0m $1 respectiv este murz'tor. Alegern simbolul predicativ 0 pentru
primul predicat 3i simbolul predicativ M pentru al doilea predicat. De aserne-
nea, in text avern $i 0 constanta: Socrate. Alegern simbolul funcpional s de
aritate 0 pentru aceasta constanta. A$adar, pentru a modela aﬁrrnafiile de
mai sus, vorn lucra cu signatura

Z I ({QM}, {5}),
unde 0 $i M sunt simboluri predicative do aritate ar(0) I arm) I 1, iar s este
un simbol functional de aritate ar(s) I 0, adica un simbol constant.

Aﬁrrnapia orice 0m este murz'tor va ﬁ modelata prin formula de ordinul I

(VX-(UOO —> M(><))),
al carei arbore de sintaxa abstracta este:
arb((‘v’x.(0(x) —)M(X)))) I &

Aﬁrrnafia Socrate este 0m o vorn modela prin formula atomica 0(5)7 iar
afirrnafia Socrate este mum'tor o vorn modela prin formula atomica M(s).

Pentru signatura E I ({0,M}, {5}) stabilita mai sus, exista mai multe Z-
structuri posibile. Un exemplu este structura S I (D, {05, MS}, {SS}) deﬁnita
astfel:

1. D este multimea tuturor ﬁintelor de pe Parnant;

Partea a II-a - Logica de ordinul I 17 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza

2. 05(m) este adevérat pentru orice ﬁinfsé ac care este 5i om;

3. MS (as) este adevérat pentru orice ﬁinpé :r (toate elementele domeniului

sunt muritoare);

4. SS este Socrate (Socrate, ﬁind 0 ﬁinpé, apartine multimii D).

Anticipénd putin (vom discuta despre semantica formulelor de ordinul I
in Capitolul ', toate cele trei formule discutate in aoeasté seo§iune, adicé
(VX.(O(X) —>M(x))), 0(5) $1 respectiv M(s), sunt adevérate in structura S
deﬁnité mai sus. De fapt, calitatea rationamentului orice 0m este mum'tor;
Socrate este 0m; deci: Socrate este mum'tor este daté de faptul 05 formula
M(s) este in mod necesar adevﬁraté in om'ce structuré in care formulele 0(5)
$1 (Vx.(0(x) —> M(x))) sunt adevérate, nu doar in structura S de mai sus.
3.7 Modelarea in LIPI a aﬁrmalziilor despre ar-

itmeticéi
Fie signatura E I ({<, I}, {+, i, O7 1}), unde < $1 : sunt simboluri predica-
tive de aritate 2, + este sirnbol functional de aritate 2, i este simbol funcﬁional
de aritate 1, iar O $1 1 sunt simboluri constante. Iaté céteva formule care fac
parte din limbajul de ordinul I asociat signaturii E:

1. (Vx.(Vy.(<(x, y) —> EIZ.(<(X,Z) /\ <(z,y)))));

2. (Vx.(Vy.(E|Z.(:(+(x,y),z)))));

3. (VX.(<(O,><) V :(O,x)));

4. (vX-(ayxzuﬁonn);

5- =(+(><SY),Z)-

De multe ori, in cazul simbolurilor predicative $1 simbolurilon functionale
binare7 se folosegte notatia inﬁxaté (e.g., x<y in loc de <(x, y)). In acest 0an7
putern scrie formulele de mai sus in felul urmétor:

1. (Vx.(Vy.(x < y—>E|z.(x < z /\ Z < y))));

2. (VX.(Vy.(E|z.(x + y = 2)»);

3. (VX.(0 < x \/ 0 : x));

Partea a II-a - Logica de ordinul I 18 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:19**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza

4. (Vx.(Ely.(x I *(y))));

5. x + y I Z.

Doué dintre E-structurile posibile sunt S1 I (1R, {<,:}7 {-1-7 —,07 1}) ei
S2 : (Z7 {<, I}, {+, —, 0, 1}), unde predicatele oi functiile sunt cele cunoscute
de la matematicé (cu precizarea c5 — este functia minus unar).

Anticipénd cursul urmétor referitor la semantica formulelor de ordinul I7
prima formulé este falsé in S2 $i adevératei in Sl. A doua formulé $i a patra
formulé sunt adevérate atét in 5'1 cét si in S2. A treia formula este falsé atét
in $1 cét $i in S2. Valoarea de adevér a celei de-a cincea formule nu depinde
doar de structura in care evaluém formula, ci $i de valorile variabilelor x, y, z.
Deoarece variabilele x7 y, z nu apar cuantiﬁcate in formula numirul 5, acestea
se numesc libere. Formula 5 este satisﬁabz'ld atét in structura S1 cét $i in
structura 5'2, deoarece in ambele cazuri existé valori pentru variabilele x7 y7 z
care s5 facé formula adevﬁraté (e.g. valorile 17 27 3 pentru x, y 5i respectiv z).
3.8 Variabilele unei formule
Cu vars(<p) notém variabilele care apar in formula cp. De exemplu, vom avea
05L vars((VZ.(P(x,y)))) : {x,y,z}. Deﬁnim functia vars : lLlPll —> 2X in cele
ce urmeazé.

In primul rénd, definim o functie vars : T —> 2X (atentie, domeniul este
T) ca fiind functia care asociazé unui termen (din multimea T) multimea
variabilelor care apar in acel termen. Toate deﬁnitiile care urmeazé vor fi
deﬁnitii inductive, care oglindesc definitiile sintactice corespunzétoare. Le
vom denumi simplu deﬁnitii recursive, féré a mai preciza explicit cazurile
de bazé sau pe cele inductive. Amintim cé 2X denoté multimea tuturor
submultimilor lui X. Totodaté, amintim c5 pentru o signaturé ﬁxatzi E,
notém cu Pn multimea simbolurilor predicative de aritate n din Z, iar cu In
multimea simbolurilor functionale de aritate n din Z.

Deﬁnitia 17. Functm vars : T —> 2X este deﬁnite“ recursiv dupd cum urmeazd:

1. vars(c) I 0, dacd C € .70 este un simbol constant;

2. vars(a:) I {1}}, dacd 17 € X este 0 variabild;

3’. vars(f(t1, . . . 1%)) : UiE{1,~-,n} varsm).

Putem acum defini (inductiv, prin imbricare) functia extinsé $1 notaté
omonim7 vars : lLlPll —> 2X , care asociazé unei formule din lLlPll multimea de
variabile ale formulei (aldicéi7 variabilele care apar in formula):

Partea a H-a - Logica de ordinul I 19 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Logicé pentru informaticé 2020-2021 Universitatea Alexandra loan Cuza
Deﬁnitia 18. Funcgfm vars : MPH —> 2X este deﬁnitd recursiv dupd cum
urmeaza:

1. vars(P(t1, . . . ,tn)) I Ui€{1,~-,Tl} vars(t¢);

2. vars(—|go) I vars(<p);

3. vars((<,01 /\ 902)) I vars(<p1) U varsﬁpg);

4. vars((<p1 \/ (p2)) I vars(<p1) U 11ars(<p2);

5. vars((<p1 —> <p2)) I vars(<p1) U vars(<p2);

6. vars((<p1 <—> 902)) I 11ars(<p1) U 11ars(<p2);

'7. vars((‘v’x.<p)) I vars(<p) U {3:},

8. vars((§|a:.<p)) I vars(<p) U {w}.

Si observém c5 variabila ac este adéugaté. corespunzétor in multimea de
variabile care se construie$te chiar dacé ea apare doar imediat dupé sim-
bolurile 3 sau V.

Exemplul 19. Fie formula np:
<(Vx.(P(x, y) /\ EIy.(P(z, f(x,y)) /\ P(x, y)))) /\ P(x,x)>.

Avem vars(<p) I {x,y, z}.

Exercitiu120. Fie signatum E I ({P, Q}, {f, i, a, b}), unde ar(P) I ar(Q) I 2,
ar(f) I 2, a1"(i) I 1, ar(a) I a7"(b) I 0. Calculatz' vars(<p) pentru ﬁecare
formuld g0 de maz' jos:

1. P(x,y);

2. Q(a,b);

3. P(a,x);

4. —\P(x,z),'

5. (P(x,x) /\ —\Q(x,z)),'

6. (P(><, b) V —\Q(z, y));

'7. ((P(x, b) —> P(x,z)) <—> (P(X, b) —> P(a,z)));

8. (VX.P(a,x));

9. (3X.ﬁq(><,y));

10. ((Elx.—|Q(x,y)) /\ (Vy.P(y,x))).
Partea a H-a - Logica de ordinul I 20 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:21**************
Logica pentru informatica 2020-2021 Universitatea Alexandra I oan Cuza

3.9 Domeniul de vizibilitate al unui cuantiﬁca-
tor - analogie cu limbajele de programare

lntr-un limbaj de programare, putem declara mai multe variabile cu acelasi

nume. De exemplu, in C, putem avea urmatorul cod:

/* 1:*/ int f()

/* 22*/ {

/* 3:*/ int s = O;

/* 4:*/ for (int X = 1; x <= 10; ++x) {

/* 5:*/ for (int y = 1; y <= 10; ++y) {

/* 6;*/ s+=X*y*z;

/* 7:*/ for (int X= 1; x <= 10; ++x) {

/* 8;*/ s+=X*y*z;

/* 9:*/ }

/* 101*/ }

/* 111*/ }

/* 12:*/ return s;

/* 13 */ }

ln acest fragment de cod, sunt declarate trei variabile, doua dintre vari-
abile avand acelasi nume, si anume X. Domeniul de vizibilitate al variabilei
X declarate la linia 4 este dat de liniile 4 — 11, iar domeniul de vizibilitate al
variabile x declarata la linia 7 este dat de liniile 7 — 9. Astfel, orice aparitie a
numelui x intre liniile 7 — 9 se refera la cea de-a doua declaratie a variabilei,
in timp ce orice aparitie a numelui x intre liniile 4 — 11 (cu exceptia liniilor
7 i 9) se refera la prima declaratie a lui x. De exemplu, aparitia lui x de la
linia 6 se refera la variabila x declarata la linia 4. Aparitia lui x de la linia 8
se refera la variabila X declarata la linia 7.

Liniile 4 — 11 reprezinta domeniul de vizibilitate al primei declaratii a
variabilei x, iar liniile 7 — 9 reprezinta domeniul de vizibilitate al celei de-a
doua declaratii a variabilei x.

Un fenomen similar se intampla in formulele logicii de ordinul I. De exem-
plu, in formula (Vx.(Vy.(P(x,y) /\ P(x, z) /\ (Elx.P(x, y))))), variabila x este
cuantiﬁcata de doua ori (prima data universal, a doua oara existential). O
cuantiﬁcare a unei variabile se numeste legare (engl. binding), din motive
istoriee. O legare este similara, din punctul de vedere al domeniului de viz-
ibilitate, cu deﬁnirea unei variabile intr-un limbaj de programare.

Astfel, domeniul de vizibilitate D1 a1 variabilei X cuantificate universal este
(Vy.(P(x, y) /\ P(x, Z) /\ (EIX.P(X, y)))), in timp ce domeniul de viZibilitate D2
al variabilei x cuantiﬁcate existential este P(X, y):

Partea a H-a - Logica de ordinul I 21 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
D2
A
(Vx. (Vy.(P(x, y) /\ P(X, Z) /\ (3X. P(x, y)))))
ﬁ,—/
D1

Apariﬁiile unei variabile cuantiﬁcate care sunt prezente in domeniul de viz-
ibilitate a1 acesteia se numesc legato7 in timp ce aparipiile din afara domeniului
de vizibilitate se numesc libero.
3.10 Apariigii libere 5i legate ale variabilelor
1n aceasté sectiune vorn stabili formal conceptul de aparipie/variabili legaté
gi de apariﬁie/variabilé liberé. Aparipiile libere/legate ale unei variabile in
logica de ordinul I sunt7 ca 0 analogie, similare cu variabilele globale/ locale
intr-un limbaj de programare.

Mai departe vom utiliza notiunea de arbore de sintaxé abstracté pentru
formulele din logica de ordinul I.
Deﬁnitia 21 (Aparigie liberé). O aparipie liberé a unei variabile x intr-o
formulé 4p este datd de un nod in arborele formulez' etichetat cu m oi care are
proprietatea Cd, mergdnd din nod inspre Tdddcind, nu intdlm'm m'ciun nod
etichetat cu Vac sau cu Elm.
Deﬁnitia 22 (Apari'gie legaté). O aparigie legaté a unei variabile a; intr-o
formulé 4p este datd d6 un nod in arborele formulez' etichetat cu 1E 52' care are
proprietatea Cd, mergdnd din nod inspre rdddc'md, intdlm'm mdcar 1m nod
etichetat cu Vx sau cu Elm.

Cel maz' apropiat astfel de nod etichetat cu Vx sau cu Elm este cuantz'ﬁcarea
care leagé aparigfia in cauzd a variabilei x.
Exemplul 23. Considerdm in continuare formula

4p : <(Vx.(P(X,y) /\ Ely.(P(z, f(x,y)) /\ P(X,y)))) /\ P(x, x)>.

Arborele de sintaxd abstractd al formulei g0 este:

Partea a H-a - Logica de ordinul I 22 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:23**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
arb(<p) I E é

in formula np de mai sus, uariabila x are (loud apariiii libere. Variabila y
are o aparitie liberd. Variabila Z are 0 aparilﬁie liberd. Toate aparigﬁiile libere
ale variabilelor in formula g0 sunt marcate prin subliniere:

4p z <(VX.(P(X,X) /\ Ely.(P(;, f(x,y)) /\ P(X,y)))) /\ P(§,x)>.

Toate aparigfiile legate ale variabilelor in formula go sunt marcate prin dubla
subliniere in urmatoarea formula:
Observaigie. in restul eapitolelor 110m face o distinctie elard intre apariliile
(libere sau legate ale) uariabilelor intr-o formuld 5i mullimile uariabilelor de
acest tip (libere sau legate). Nodurile etichetate cu Vm 5i respectiu Elac nu uor
fl considerate ca desemnand nici o aparifie liberd, nici 0 aparilie legata a lui
a", ei ca fiind simple noduri prin care 5e ﬁxeaza/denumeote un euantiﬁcator
(sau, prin care 5e leagd uariabila a‘).
Partea a H-a - Logica de ordinul I 23 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
3.11 Variabile libere 5i variabile legate
Mul§in1ea variabilelor unei formule go care au cel pugin 0 apariﬁe liberé se
noteazé free(go).
Deﬁnitia 24. Functia free : MPH —> 2X este deﬁnitd recusz'v in modul urmdtor:
1. free(P(t1, . . . ,tn)) I oars(t1) U . . . U woman);
2. free<w> I ﬂew»-
3- ﬂew. A $02)) I ﬂew.) U #6602);
4- fT'@@((LP1 V $02)) I fT@@(<P1)UfT‘@@(<P2);
5- fr@@((<p1 —> W2» I fT‘@@(<P1)UfT@@(<P2);
5- fr@@((<p1 <—> W2» I fT‘@@(<P1)UfT@@(<P2);
7. free((V:s.<p)) I free(go) \ {m},
8. free((E|a7.<p)) I #6er) \ {x}.
Exemplul 25. Pentru formula
cp I (<Vx.(P(x, y) /\ Ely.(P(z, f(x,y)) /\ P(x,y)))> /\ P(x,x)>.
avem cii free(<p) I {x,y,z}.
Exercitiul 26. Calculatz' free(<p) pentru ﬁecare formuld go din ExercitiuZI.
Cu bound(go) notém multimea variabilelor legate intr-o formula, cu alte
cuvinte mul§imea acelor variabile LU cu proprietatea (:21 existé in formulé cel
putin un nod etichetat cu Vac sau cu 3m.
Deﬁnitia 27. Functia bound: LPH —> 2X este deﬁnitd recursio astfel:
1. bound(P(t1, . . . $71)) I (Z);
2. bound(ﬁ<p) I boundﬁp);
5’. bound((g01 /\ 302)) I bound(gol) U boundwg);
4. bound((g01 V gag» I bound(<p1) U boundwg);
5. bound((g01 —> gag» I bound(g01) U bound(<p2);
6. bound((g01 <—> $02)) I bound(g01) U bound(<p2);
Partea a H-a - Logica de ordinul I 24 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I odn Cuza

'7. bound((Vac.<p)) I bound(go) U {x};

8. bound((3x.<p)) I bound(<p) U {x}.
Exercitiul 28. Calculatz' bound(<p) pentru ﬁecare formuld (p din ExercitiuZI.
Exercitiul 29. Calculatz' bound(<p), undo

4p z <(Vx.(P(X,y) /\ Ely.(P(z, f(x,y)) /\ P(X,y)))) /\ P(x, x)>.

Deﬁnitia 30. Variabilele legato ale unei formula (p sunt elementele multimiz'
bound(go).
Deﬁnitia 31. Variabilele libero ale unei formula go sunt elementele multimii
freew-
Observatie. Multimile free(go) §i bound(go) pot avea elemente in comun.
Observatie. O variabild poate avea mai multe aparz'ﬁii intT-o formuld.

Dupd cum am precizat anteriov", trebuz'e fdcutd diferengﬁa intro o aparifuie
liberé a unei variabile intr-o formulé 52' o variabilé liberé a unei formule.
Aparigfia liberd este indicatd printr-nn nn nod din arborele formulez', in timp
ce oam'abila libeni este un element al multimiz' X.

Similar, trebuie fdcutd diferengfa intro o aparitje legatzi a unei variabile intr-
0 formulé $z' o variabilé legaté a unei formule. Aparigfia legatd este indicate? de
un nod in arborele formulez', in timp ce variabila este un element al multimn'
X.
3.12 Domeniul de vizibilitate $i parantetizarea

formulelor

Acum c5 am inteles ce este domeniul de vizibilitate a unei variabile legate
(apelénd $1 la arborele formulei), putem clariﬁca un aspect referitor la ordinea.
de prioritate a conectorilor logici (dacé privim formula doar ca text / cuvémt).
Am stabilit deja c5. ordinea de prioritate este —\, /\, V7 —>, <—>,V, 3, dar (Juan-
tiﬁcatorii V $i El interacfuioneazé intr-un mod mai subtil cu ceilalfui conectori
logici. Mai precis, textual, 0 formulé féré paranteze se (re)parantetizeaz€m ast-
fel incét domeniul de vizibilitate a1 ﬁecérui cuantiﬁcator s5 se extindé cét mai
mult spre dreapta.

De exemplu7 formula:

VX.P(X, x) \/ —E|y.P(X, y) /\ P(x, x)

Partea a H-a - Logica de ordinul I 25 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
se parantezeazé in felul urrnétor:

(vx.(1>(x,x) \/ I(ay.(1>(x, y) /\ P(X,X))))).
3.13 Fieﬁ de exercitii
Exercitiul 32. Identiﬁcati 0 signatura pentru aﬁrmatiile d6 mai jos 5i apoi
modelati aceste aﬁrmatii ca formule in logica de ordinul I:

Ion este student. Orice student invaté la Logicé. Oricine invaté 1a Logicé
trace examcnul. Orico student 0st0 0m. Existé un 0m care nu a trecut exam-
enul. Deci nu toti 0amenii sunt studenti.

Exercitiul 33. Fie structura S I (R, {Nat, Int7 Prim7 Par, >},{+,0, 1,2}),
unde Nat, Int, Prim, Par sunt predicate unare cu urmatoarea semniﬁcatie:

o Nat(u) I u este numér natural;

o Int(u) I u este numir intreg;

o Prim(u) I u este numér prim;

o Par(u) I u este numér par.

Predicatul binar > este relatia “mai mare ” peste numere reale. Functia + este
functia do adunare a numerelor reale. Constantele 07 17 2 sunt chiar numerele
0, 1, 2.
1. Propuneti o signatura Z pentru structura S de mai sus.
2. Modelati urmatoarele aﬁrmatii ca formule de ordinul I in signatura a50-
ciata structurii S de mai sus:
( a ) Orice numar natural este 5i numdr intreg.
(b) Suma oricaror doua numere naturale este numar natural.
(c) Oricum am alege un numar natural, emista un numar prim care
este mai mare decat numarul respectiu.
(cl) Dacd orice numdr natural este numdr prim, atunci zero este numdr
prim.
(e) Oricum am alege un numar prim, existd un numar prim mai mare
decat el.
(f) Suma a doua numere pare este un numar par.
Partea a H-a - Logica de ordinul I 26 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:27**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
(g) Orice numar prim mai maro dooat 2 oste impar.
(h) Orioo mimar prim poato ﬁ scris ca suma a patru numero prime.
(i) Suma a doua numore pare osto an numdr impar.
Exercitiul 34. Dati exomplu do 5 tormoni pesto signaturilo do la Exercitiullﬁ
5i calculati arborolo do sintaard abstraotd al aoostor tormoni.
Exerciigiul 35. Dati oxemplu do 5 formule pesto signatura do la Exoroitiullﬁ
{5i calculati arborelo do sintazrd abstraota al aeostora.
Exercitiul 36. Caloulati arborolo o sintaaia abstracta al urmdtoarolor formule
(indicatio: purioti parantozo in jurul formulelor, in ordinoa do prioritato a
conectorilor):
1. P(X) V P(y) /\ —\P(z);
2. —|—|P(x) V P(y) —> P(x) /\ ﬁP(Z),‘
5’. Vx.Vy.—\—|P(x) V P(y) —> P(x) /\ —\P(z);
4. Vx.Vy.—\—|P(x) V P(y) —> Elx.P(x) /\ —\P(x);
5. VX’.—\V><.P(X) /\ 3y.Q(x, y) V —\Q(z, z) —> 32/.P(z’).
Exercitiul 37. Marcati aparitiilo libero $i respoctiv aparitiilo legato ale vari-
abilolor in formulolo do mai jos:
1. cpl I (VX.P(><, x) /\ P(x, y)) /\ P(X, z);
2. 4,02 I (VX.P(f(x,x), i(x)) /\ Ely.(P(x, y) /\ P(x, Z))).
Exerciigiul 38. Idontiﬁcati domoniul do vizibilitato, pontru ﬁocaro ouantiﬁca-
tor, in formulolo 4,01 5i (p2 dato in Exercitiulw.
Exercitiul 39. Gasiti variabilolo, oariabilolo libero 5i rospoctio variabilole
legato ale formulolor <p1 5i 302 dato in Ezercitiulm.
Exerciigiul 40. Fio A I {p,q,r7 . . .} multimoa variabilolor propozitiorialo.
Vom considora signatura EU» I (14,0), uncle oariabilolo propozitionalo din A
sunt simboluri prodicative do aritato 0.
1. Domonstrati ca peritru orice formula (p G LIP’ avom (p G MPH (pesto
signatura EM»)
2. Domonstrati ca pontru orico formula fara cuantiﬁcatori 4p € MPH posto
signatura EU», avom ed 4,0 G LIP’.
Partea a H-a - Logica de ordinul I 27 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru 10cm Cuza
Partea a H-a - Logica de ordinul I 28 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:29**************
Capltolul 4

Semantica formulelor

l ' ' ' d d ' l I

Sintaxa logicii de ordinul I explicé care sunt, din punct de vedere sintactic,
formulele logicii de ordinul I. Semantica logicii de ordinul I se referé 1a intelesul
formulelor. Semantica unei formula (sau intelesul formulei) va ﬁ 0 valoare de
adevér. Ca $1 la logica propozifuionalé, in general, valoarea de adevér a unei
formule depinde nu doar de formula, ci $1 de structura in care evaluﬁm formula.

Reamintirn c5 0 signaturé Z I (73,1?) este 0 pereche formaté dintr-o
Inu1§ime de simboluri predicative 73 $1 0 multime de simboluri functionale F.
Fiecare simbol are ata$at un numér natural numit aritatea simbolului.

In acest capitol v01n utiliza signatura Z I ({P},{f,i,e}), unde P este
simbol predicativ de aritate 2, iar f, i $1 e sunt simboluri functionale de aritate
2, 1 $1 respectiv 0. Altfel spus, 'Pg I {P},’P1 I @730 I (3,]:2 I {f},.F1 I {i}
$1 f0 I {e}.

Reamintim $1 cé, dacé E I (73,?) este 0 signaturé, prin E-structuré
inpelegem orice tuplu S I (D, Pred, Fun) cu proprietatea c5:

1. D este 0 Inul§irne nevidé numité domeniul structurii S ;

2. pentru ﬁecare simbol predicativ P € 73 existé un predicat PS G Pred

de aritate corespunzétoare;

3. pentru ﬁecare simbol functional f € .7: existi 0 functie fS E Fun de

aritate corespunzétoare.
Exemplul 41. Mai jos avem cdteva exemple de Z-structum':
29

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza

2’ $2 I (R*7{:},{><F1,1});

4- S4 I (N, {<}, {+78,0});

5. S5 I (Z,{<},{+, —,0}).

Structura S1 are domcniul Z (multimca numerolor intregi), predicatul aso-
ciat simbolului predicatiu P cstc I (predicatul de cgalitate pentru numerc
intregi), functia + cste functia dc aclunare a numerolor intrcgi asociata sim-
bolului functional f, — estc functia minus unar asociata simbolului functional
i, iar simbolul constant e are asociata constanta 0.

Structura 5'2 arc domeniul 1R* (multimca numcrclor realc strict pozitiue),
predicatul asociat simbolului predicatiu P cstc I (predicatul dc egalitatc pcntru
numerc rcalc pozitiuc), functia >< cste functia dc inmultirc a numcrelor rcale
asociata simbolului functional f, F1 cstc functia unara asociata simbolului

. v . . u 1 .
functional | care calculeaza inuersul unui numar real (6.9. 5_1 I g, iar
1 I1
E I 10), iar simbolul constant e are asociata constanta 1.

Structura $3 are domcniul N (multimca numerolor naturalc), predicatul
asociat simbolului predicatiu P cstc I (predicatul dc egalitatc pcntru numcrc
naturals), functia + cste functia dc adunarc a numerolor naturalc asociata
simbolului functional f, s estc functia succcsor (care asociaza unui numdr nat-
ural urmatorul numdr natural i c.g., 5(7) I 8) asociata simbolului functional
i, iar simbolul constant e arc asociatci constanta 0.

Structura S4 arc domeniul N (multimca numcrelor naturalc), predicatul
asociat simbolului predicatiu P este < (rclatia mai mic pcstc numcre natu-
rale), functia + cstc functia dc adunarc a numerolor naturalc asociata sim-
bolului functional f, s estc functia succcsor (care asociazd unui numar natural
urmdtorul numar natural i 6.9., 5(7) I 8) asociatd simbolului functional i,
iar simbolul constant c are asociata constanta 0.

Structura S5 estc similara cu Sl, doar ca simbolul predicatiu P are asociata
rclatia mai mic in loc dc egal.

Folosind notatiilc dc mai sus, aucm ca PS4 I <, fS2 I ><, iar eS1 I 0.
4.1 Atribuiri
Aseménétor cu logica propozitionalé, pentru a obtine valoarea de adevér a
unei formule intr-o structuri, trebuie sir pornirn cu ﬁxarea unor valori concrete
Pentru simbolurile sintactice din alfabetul peste care este construité formula.
In cazul de faté, incepem cu variabilele.

Partea a H-a - Logica de ordinul I 30 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:31**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
Deﬁnitia 42 (Atribuire). Fie E o signatura 5i S o Z-structura on domeniul
D. Se numegte S-atTibuire este orice functie

oz : X —> D.
Exemplul 43. Functia a1 : X % Z, deﬁnitd ca mai jos, este o Sl-atm'buire:

1. 061(X1) I 5,’

2. 011(X2) I 5,‘

3. 061(X3) I 6,’

4. 041(x) I 0 pentru orice 1: 6 X \ {x1,x2,X3}.

Exemplul 44. Functia 042 : X % Z, deﬁnitd ca mai jos, este 0 Sl-atm'buire:

1. OtQ<X1> I 6,’

2. 012(X2) I 5,‘

3. 042(X3) I 6,’

4. a2(:s) I 0 pentru om'ce :E G X \ {x1,x2,><3}.

AcuIn, avémd 1a dispozitje 0 atribuire a, putern calcula valoarea unui ter-
men intr-o asemenea atribuire. Pentru ameasta7 vom folosi de fapt extensia
lui oz, notaté 5,

E : T —> D7
daté in deﬁnitia care urrneazé.
Deﬁnitia 45 (Valoarea unui termen intr-o atribuire). Dandu-se o S -atm'buz're
a oi an termen t G T pesto signatura E, valoarea termenului t in atribuirea
oz este un element al domenz'uluz' D notat cu @(t) 52' calculat Tecursiv astfel:

1. 5(0) I CS dacd c E F0 (216., c este un simbol constant);

2. 5(a) I Mm) dacd iv € X (i.e., an este o variabila");

5’. a(f(t1,...,tn)) I fS(5(t1),...,E(tn)) daca f E Tn este nn simbol

functional de am'tate n, iar t1, . . . ,tn sunt termenz'.
Partea a H-a - Logica de ordinul I 31 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
Exemplul 46. Continudnd ExemplulIE, uncle a1 este 0 Sl-atribuire, avem:
(710001), 6)) I 071001)) +0710?)

z —(¢T1<X1)) + e31
I —(041(X1)) + 0
I —5 + 0
I H5.

Agadar, valoarea termenuluz' f(i(x1), e) in atribuirea a1 este H5.
Deﬁnitia 47 (Actualizarea unei atribuiri). andu-se 0 atribuz're a, 0 vari-
abild x G X 52' un element u G D, notdm cu 04x H u] 0 noud atribuire, care
coincide cu oz, exceptdnd valoarea variabilei LE, care devine acum u:

04:1: H u] : X —> D, ai.

1. (04m H u])(a3) I u;

2. (04$ H u])(y) I a(y), pentru once y € X\{:1c}

Exemplul 48. De exemplu, atribuz'rea ozﬂxl H 6] este exact atribuirea a2
deﬁnitd in exemplele de maz' sus. ValoaTea termenuluz' f(i(x1), e) in atribuz'rea
a1[x1 H 6], notatd cu 041 [x1 H 6](f(i(x1), e)), este H 6.

Exercitiul 49. Calculatz' valom'le de maz' jos:

1. a1[x1 H 10](f(i(x1),e));

2. al[x2 H 10](f(i(x1),e));

3. a1[x2 H 10][x1 H 10](f(i(x1),e)).

4.2 Valoarea de adevér a unei formule de or-
dinul I

in acest moment avern ingredientele pentru a deﬁni formal valoarea de adevﬁr

a unei formule de ordinul I, construité peste o signaturé Z. Aceasté valoare

se poate calcula doar intr-o E-structuré S , cu ajutorul unei S-atribuiri a.

Notatiile folosite sunt similare cu cele pentru logica propozi'gionalé. Astfel7
notém faptul c5 0 formulé 90 este adevératé intr-o structuri S cu o atribure
a prin S, cu I: 4p. Faptul (:5 o formulé g0 nu este adevératé intr-o structuré S
cu o atribuire a se noteazé cu S701 bk 4p.

Notagia S7 oz ,I g0 se mai cite$te S satisface (,0 cu atm'buz'rea 04, iar S, a bk g0
se mai citeste S nu satisface g0 cu atribuz'rea oz.

Partea a H-a - Logica de ordinul I 32 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
Deﬁnitia 50. Faptul cd 0 structnrd S satisface 0 formuld (p cu 0 anumitd
atm'buz're 04 (echz'valent, 4p este adevdmtd in structum 5 cu atm'buz'rea 04 ) se
deﬁne§te inductiv astfel (prima linie din enumerarea care urmeazd desemneazd
cazul de bazé, restul reprezentdnd cazurile inductive)

1. 5,44 I: P(t1, . . . ,tn) ddacd PS(a(tl), . . . ,a(t,,));

2. 5,0 I: :30 ddacd 5,04 b: 4p,-

3- S704 F (<p1 /\ w) ddacd 3,04 F s01 w' 5704 F s02;

4. 5,04 I: (4,01 \/ 4,02) ddacd 5,04 I: (pl sau 5,04 I: (p2;

5. 5,04 I: (4,01 —> 902) ddacd 5,04 bk cpl sau 5,04 I: 902;

6. 5,04 I: (4,01 <—> 4,02) ddacd (1) atdt 5,04 I: 301, cdt $4 5,04 I: 302, 5014(2)

5,04 b: gal .52‘ 5,04 F: gag;

'7. 5, a I: (3:090) ddacd existd u 6 D astfel incdt 5, 04Im i—> uI I: 4p;

8. 5, 04 I: (Vx.<p) ddacd pentru orice u Q D, avem Cd 5,04Ix |—> u] I: (p.
Exemplul 51. Vom lucm in continuare pests signatum E : ({P}, {f, i,e}),
E-structum 51 : (Z,{:},{+, —,0}) deﬁnitd la inceputul capitoluluz' 5i 51-
atm'buz'm'le 041, 042.

Avem ad

51, 041 I: P(X1, X1)ddacd PS1 (0Tl(x1),0T1(x1))
ddacd 071(x1) : 0T1(x1)
ddacd 041(x1) : 041(x1)
ddacd 5 : 5.
Din moment ce 5 : 5, rezultd cd' 51,041 I: P(x1, x1), adicd formula P(x1,x1)
este adevdmtd in structum 51 cu atribuirea 041. Altfel spus, 51 satisface
P(x1,x1) cu atm'buiTea 041.
Exemplul 52. Continudnd exemplul anterior, avem
51,041 I: P(x1,X3) ddacd PS1 (F1(x1),ﬁl(X3))
ddacd 041(x1) : 041(X3)
ddacd 5 : 6.
Partea a H-a - Logica de ordinul I 33 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Logicé pentru informatics} 2020-2021 Universitatea Alexandra loan Cuza
Din moment ee 5 75 6, reznlta ca $1,041 I: P(X1, X3), adica formula P(X1,X3)
este falsa in stractura 5'1 cu atribuirea 041. Altfel spas S1 nu satisface P(X1, X3)
cu atribuirea a1.
Exemplul 53. Continudnd exemplul anterior, avem
$1,041 I: :P(X1,X3) ddaca S1, 041 F: P(X1,X3)
ddaca nu PS1 (071(X1),071(X3))
ddaea nu 0T1(x1) : @(X3)
ddaca 071(X1) 75 0T1(X3)
ddaca a1(X1) yé 01(X3)
ddaca 5 75 6.
Din moment ce 5 75 6, rezultd ed 51,041 I: —\P(X1, X3), adicd formula —|P(X1, X3)
este adevdrata in structura S1 cu atribuirea a1. Altfel spas, S1 satisface
—\P(X1, X3) cu atribuirea a1.
Exemplul 54. Continuand exemplul anterior, avem
S1, a1 I: P(X1,X1) /\ —\P(X1,X3) ddacd
51,041 I: P(X1,X1) 82 $1,041 I: _IP(X1,X3) ddacd
...si... ddacd
5 : 5 5i 5 75 6.
Din moment ce 5 : 5 oi 5 75 6, rezulta“ ea $1,041 I: P(X1,X1) /\ —|P(X1, X3).
Exemplul 55. Continudnd exemplul anterior, avem
Shem I: P(X1, X3) V P(X1,X1) daca Sl,a1 I: P(X1, X3) sau S1, a1 I: P(X1, X1).
Am stabilit deja ca 51,041 I: P(X1,X3), deci $1,041 I: P(X1,X3) \/ P(x1,x1)
(chiar daca S1, a1 b: P(X1, X1)).
Exemplul 56. Continuand ememplul anterior, avem
S1, 041 I: 3X1.P(X1, X3) ddaCd
emistd a G D a.i. Sl,a1IX1 '—> uI I: P(X1,X3) ddaed
exista u G D a.i. P51 (@1le |—> aI(X1),a1IX1 »—> uI(X3)) ddaea
exista u G D a.i. 041le »—> uI(X1) : @1le '—> uI (X3) ddaea
existd u G D a.i. 041le +—> uI(X1) : 041le '—> uI (X3) ddaca
existd u G D ai. u : a1(X3) ddaea
emista u G D at. u : 6.
Partea a H-a - Logica de ordinul I 34 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:35**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
Din moment ce em'std u (putem alege u I 6) ai. u I 6, avem ca S1, a1 l:
3X1.P(X1, X3).
Exemplul 57. Continuand exemplul anterior, auem
$1,041 ‘I VX1.3X3.P(X1,X3) ddaCd
pentru orlce u € D, aoem ca S1,a1[x1 »—> u] |: EIX3.P(X1,X3) ddacd
pt. orice u 6 D, 6mm v 6 D ai. S1, a1[><1 |—> u][><3 |—> u] l: P(X1,X3) ddaca”
. . . ddacd
pentru orice u E D, auem ca exista“ u E D ai. u I u.
Din moment ce pentru orice numdr intreg u, em'std un numar intreg u ai.

u I u, auem ca $1,041 )z VX1.EIX3.P(X1,X3).
Exercitiul 58. Aratati ca S1,a1 I: VX1.E|X3.P(><1, i(><3)).
4.3 Satisﬁabilitate intr-o structurii ﬁxatii
Deﬁnitia 59 (Satisﬁabilitate intr-o structuré ﬁxaté). O formula 4p este sat-
isﬁabilﬁ intr-o structuré S dacd existd o S -atrz'buz're or cu proprietatea ca

S, cu I: 4p.
Exemplul 60. Formula P(X1,X3) este satisﬁablld in structura $1, deoarece
existd o atribuz're, de exemplu a2, cu proprietatea ca S1, 042 )I P(x1, X3).
Exerciigiul 61. Ardtatz' ca formula —|P(x1, x1) nu este satisﬁabz'la in structura
S1 (deoarece, pentru orice atm'bulre 04 aleasd, auem ca S1,a bé —\P(x1,x1)).
4.4 Validitate intr-o structurii ﬁxaté
Deﬁnitia 62 (Validitate intr-o structuré ﬁxaté). O formula go este validé
intr-o structuré S daca pentru orz'ce S-atrlbulre a, auem ca

S, a I: 90.
Exemplul 63. Formula P(x1,X3) nu este ualz'da in structura Sl, deoarece
exista“ 0 atribuz're, 52' anume 041, cu proprltatea ca $1,041 bk P(x1, X3).
Exercitiul 64. Aratagﬁl ca formula P(x1, x1) este ualidd in structura Sl (deoarece
orice atribuire 04 am alege, S1, or I: P(x1,x1)).
Partea a H-a - Logica de ordinul I 35 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
4.5 Satisﬁabilitate
Deﬁnitia 65 (Satisﬁabilitate). O formuld go este satisﬁabilé dacd existd o
structurd S 5i o S-atm'buz're oz cu proprietatea cd
S, a I: 4p.

Exemplul 66. Formula —|P(x1,x1) este satisﬁablld, deoarece existd 0 struc-
turd (ale exemplu S5) 52' 0 S5-atm'bu'lre (do exemplu a1) astfel incdt $5,041 I:
—\P(x1, X1) (deoarece 5 7i 5).

Sd subllnlem faptul ed, deoarece S5 52' S1 au acelaol domenlu, atm'bulrea
041 este atﬁt o Sl-atrlbuz're cdt 52' o S5-atrz'buz're.
Observatie. O formuld poate sci nu ﬁe satisﬁabild lntr-o structure? ﬁxatd (de
ewemplu —|P(X1, x1) nu este satisﬁablld in structum S1) 51' totugz' sd ﬁe satisﬁ-
abz'ld (vezz' Exemplul@ unde aceeaoi formuld —|P(x1, X1) este satisﬁablld).
4.6 Validitate
Deﬁnitia 67 (Validitate). O formuld <p este validé dacd, pentru orlce struc-
turd S 52' pentru om'ce S-atm'bulre a, auem

S, oz I: 4p.

Exemplul 68. Formula P(x1,><1) nu este uallcld, cleoarece S5,oq I7: P(x1,x1).
Pe do alto” part6, formula P(><1, X1) —> P(><1, X1) este ualldd.
Observatie. O formuld poate sci ﬁe ualldd intT-o structurd ﬁxatd (do exemplu
P(x1,x1) este ualldd in structum S1) ,92' totugi sd nu ﬁe ualidd (do exemplu,
P(x1,x1) nu este ualldd, deoarece S5,a1 bk P(X1, X1)).
4.7 Consecinté semanticéi
Deﬁnitia 69. O formuld (p este consecinigé semanticé a formulelor 4,01, . . . , 4,0,,
intr-o structuré ﬁxaté S, notat (p1,...,<pn I:S g0, dacd, pentru orlce S-
atm'buz're a pentru care S,a I: 901, S,a I: gag, ..., S,a I: go”, avem cd
S, a I: go.
Exemplul 70. Auem Cd P(x, y) I:S1 P(y,x), deoareoe, pentru orlce S1-
atrlbulre a cu proprietatea ed Sha I: P(x,y) (adlcd a(x) : a(y)), auem
.52' cd S1, a I: P(y,x) (adicd a(y) : a(x)).

Auem od P(x, y) I7535 P(y, X), deoarece, pentru atm'bulrea a(x) : 5, a(y) :
6, auem cd S5,0¢ I: P(x, y) (adlod 5 < 6), do?" S5,04 I: P(y,x) (6 7i 5).
Partea a H-a - Logica de ordinul I 36 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:37**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
Deﬁnitia 71. Oformuld 4p este consecimfd semanticd aformulelorgal, . . . ,gan,
notat 4,01, . . . , gon I: 4p, dacci
saw-wan IIs s0

pentru orice structurd S.
Exemplul 72. Avem cd P(x,y) bk P(y,x), deoarece ezm'std 0 structurd (52'
anume S5) astfel incdt P(><, y) bkgs P(y,x).
Exerciigiul 73. Ardtagfi cd:

Vx.Vy.VZ.(P(x, y) /\ P(y, Z) —> P(x, 2)), P(x1, x2)7 P(x2, X3) I: P(x1, X3).

Desigur 05L, in cele de mai sus (similar cu logica propozitionalé), lista
4,01, 4,02, . . . ,4pn denoté de fapt 0 multime avénd respectivele elemente.
4.8 Figﬁ de exercitii
Amintim mai jos structurile din Exemplul PEI:

1~ $1 I (Z7{I}7{+r,0});

2~ S2 I (R*»{I},{><F1,1});

3. $3 I (N»{I},{+75,0});

4. S4 I (N, {<}, {+,s,0}).

5. S5 : (Z, {<}, {+, I,0}).

Aceste structuri vor ﬁ utilizate in exercitiile de mai jos.
Exercipiul 74. Stabiliti dacd:

1. $1,041 I: P(x2,X3);

2. $1,041 I: —|P(x2,X3);

3. $1,041 I: —|P(x2,X3) /\ P(x1, x1);

4. $1,041 I: EIX3.P(X2,X3);

5. $1,041 I: VX2.EIX3.P(x2,X3);

6. $1,041 I: EIX3.VX2.P(x2,X3);

7. $1,042 I: Vx2.EIX3.P(x2, i(X3));
Partea a H-a - Logica de ordinul I 37 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
Exercitiul 75. Gaslll pentru ﬁecare dintre ltemil de mal jos Cate o S2-
atrlbulre a3 astfel incat:

.l. $2,043 I: P(X1,X2);

2. $2,043 ‘I P(f(X1,X2),X3);

5’. $2,043 I: P(f(><1>><2), i(><3));

4. 52,043 I: P(X, e);

6. $2,043 I: Vy.E|x.P(x, i(y)).
Exercilziul 76. Aratall ca urmatoarele formule sunt uallde in SQ:

1. Vx.Ely.P(X, i(y));

2. VX.P(1C(X7G),X);
Exercitiul 77. Aratali ca formula VX.3y.P(><, i(y)) nu este vallda in S3.
Exercitiul 78. Gdsili 0 formula care sa ﬁe satisﬁablla in S1 clar nu in S3.
Exercitiul 79. Gaslli o formula fara oarlablle libero care sci ﬁe satisﬁablla
in S5 dar nu in S4.
Exercitiul 80. Aratall ca formula VX.3y.P(><, y) nu este uallda.
Exercitiul 81. Aratali ca formula (VX.P(X,X)) —> 3X2.P(x1, X2) este vallda”.
Exercitiul 82. Aratagfi ca formula VX.3y.P(y, x) nu este ualldd.
Exercitiul 83. Aratagfl ca formula Vx.—|P(x,x) este satisﬁablld.
Exercitiul 84. Aratall ca formula VX.—\P(X,><) /\ Elx.P(x,><) nu este satisﬁa-
bila.
Exercitiul 85. in Exerclllul- (din Capltolulﬁ) am ardtat ca LPH este o
emtensle slntactlca a lul 1UP’. Pe scurt, daca A I {p, q,r7 . . .} este 0 multlme
de uarlablle propozlllonale atuncl construlm o slgnatura EU» I {14, {ll}, uncle
uariabilele propozz'flonale din A sunt simbolurl predicatlue do aritate 0.

Semantlca formulelor LPH construlte paste slgnatura EM» este consistentd
cu semantlca formulelor LIP’. Fie r : A —> B 0 atrlbuire. Fle S I (D, {as |
a E A}, (ll) o ZLp-structura, unde D este orice mulllme nenula 52' as I 7(a),
pentru orlce a E A.

Demonstralfl ca pentru orloe 4p E 1UP’, auem ca T I: 4p ddaca 5,01 l: g0
pentru orlce S-atrlbulre 04 : X % D.
Partea a H-a - Logica de ordinul I 38 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:39**************
I
Capltolul 5
Deductia naturalfi
7
in acest capitol7 vom prezenta deducpia naturalé pentru logica de ordinul I.
Vom deﬁni notiunea de substitutie, vom reaminti céteva dintre notiunile speci-
ﬁce deductiei naturale (discutate in prealabil 1a logica propozitionalé) $1 vom
prezenta sistemul deductiv extins impreuné cu proprietétile sale (corectitu-
dine $1 completitudine).
Observatie. Regulile sistemului deductiu al deduciiei naturale include regulile
discutdte dejo la logica propozigfionald. In acest capitol, acestea din urmd sunt
reluate 5i exempliﬁcate pe formule do ordinul I. Deduclia naturald pentru logica
de ordinul I include reguli pentru cuantiﬁcatori. Aoestea sunt reguli care nu
an fost studiate anterior la logica propozigfionald.
5.1 Substituﬁi
Deﬁnitia 86. O substitutje este o funciie o : X —> T, cu proprietatea cd
0(x) 75 a: pentru un numdr ﬁnit de uariabile a: G X.
Deﬁnitia 87. Dacd o : X —> 7' este o substituiie, atunci mullimea dom(o) I
{x E X | 0(90) 75 so} so numegte domeniul substitutiei o.
Observatie. Prin deﬁniiie, domeniul unei substituiii este 0 multime ﬁnitd.
Deﬁnitia 88. Dacd o : X —> T este o substitulie, atunci extensia unicd
a substituiiei o la mullimea termenilor este funciia (Iti : 'T % T, deﬁniid
recursiu astfel:
1. oﬁ(x) I 0(m), pentru orice x 6 X;
2. (711(0) I c, pentru orice simbol constant c G .730;
39

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
3. oﬂ(f(t1,...,tn)) I f(oﬂ(t1),...,oﬁ(tn)), pentru orice simbol functional
f E Fn de aritate n G N* 52' om'ce termeni t1, . . . in € T.

De reguléu7 substitutiile se noteazé cu o7 T7 00, T1, o’, etc.

Observatie. Dacd t E 'T este un termen, atuncz' amt) € T este termenul
obgfinut din t prin aplicarea substitutiei o sdu termenul obgfinut prin aplicarea
subtitutiei o asupra termenului t.

Practic7 pentru a obtine 011(15) din t, toate aparigile unei variabile :10 din t
sunt inlocuite simultan cu termenul corespunzétor 0(x).

Exemplul 89. Fz'e substitutia 01 : X —> T deﬁnitd astfel:
1. 01(X1) I X2,‘
2. (71(x2) I f(X3,x4);
3. 01(m) I m pentru orice :E € X \ {x1,x2}.
Fie termenul t I f(f(x1, X2), f(X3, e)). Avem Cd:
UM) I U§(f<f<X1,X2>,f<X3,e>>>
z “a?<f(X1,X2)),U§(f(X3,e) )
: f(f(o§ x1 ,0? x2 ),f(o§ X3 ,0? <e>))
I f(f<0'1 X1 ,Ul X2 ),f(0'1 X3 76))
I f(f(X2,f(X37X4)),f(X3,e)).

Observati cd prin aplz'carea unez' substitutiz' asupm unui termen, se inlocuz'esc
(simultan) toate apam'gfiz'le oam'abz'lelor din domenz'ul substitutiei cu termenz'z'
asocz'agfz' acestom.

Notapie. Dacd dom(o) I {$1,...,xn}, atuncz' substitutia cr 56 maz' poate
scrie in felul urmdtor:
o I {x1 »—> 0(331), . . . ,xn »—> 00%)}.
Atengfie, nu este vorba de 0 multime, cz' doar de 0 notable pentru substitutiz'.
Exemplul 90. Pentru substitugfm din Ememplul. avem
0'1 I {X1 I—> X27X2 I—> f<X37X4)}.
Partea a H-a - Logica de ordinul I 40 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:41**************
Logicé pentru informatics} 2020-2021 Universitatea Alexandra loan Cuza
Deﬁnitia 91. Dacd 0 : X —> 'T este 0 snbstitufie 5i V Q X este 0 submulgfime
de variabile, atunci restricfia substitufiei a la multimea V este o noué substitufie
notaté, O'IV : X —> T, deﬁnitd astfel:
1. (Th/(1‘) I 0(x) pentru orice 5E G V;
2. 0|v(x) I x pentru orice 5E € X \ V.
Exemplul 92. Pentru substitutia din Exemplul. avem 01|{x1} I {x1 H x2}
$101|{X2} I {x2 |—> f(X3,X4)}.
Practic7 prin restricfia unei substitufii la o mulpime de variabile, se scot
celelalte variabile din domeniul substitufiei.
Deﬁnitia 93. Pentru orice substitutie cr : X 9 T, extensia luz' a la multimea
formnlelor este functia 0b : UPI —> LPll, deﬁnitd astfel:
1. ab(P(t1,...,tn)) I P(Ul(t1),...,al(tn));
2- WW) I MW);
3' Ub((<ﬁ1 /\ <P2)):(Ub(<P1)/\Ub(¢2));
4- Ub((<p1 \/ <p2)) I (Ub(<p1)\/<Tb(<p2));
5’ Ub((<p1 —> $02)) I (Ub(¢1)—>gb(¢2));
5- Ub((<P1 H W2» I (Ub(<P1)<—>Ub(<P2));
'7. ob((‘v’m.90)) : (Vm.(pb(go))), uncle p : Uldom(a)\{m};
8- Chain-W) I (Hm-(pWD), Wide P I U|d0m(o')\{m};
Practic7 pentru a obfuine formula orb (go) din formula cp, ﬁecare apari'gie liberé
a variabilei w din formula 4p este inlocuité cu termenul 0(x).
Exemplul 94. Utilizdnd substitutia din Exemplul. avem cd:
a‘; ((Vx2.P(><1, x2)) /\ P(x2,x2)) I
0':((VX2.P(X1,X2))>/\U|1(P(X2, x2)) I
(VX2.0'1|:X1} (P(x1, x2)))/\P(0§ (x2) ,0? (x2)) :
(VX2°P(01|ﬁ{X1}(X1>’01|ﬁ{X1}(X2))) /\ P(01(x2),01(x2)) z
(VX2.P(01|{X1} (X1) mm} (X2))) /\ P(f(><3, X4), {(Xg, X4» I
(VX2.P(01<X1), x2)) /\ P(f(X3, x4), f(X3, x4)) :
(Vx2.P(x2, x2)) /\ P(f(X3,X4), f(X3,X4)).
Partea a II-a - Logica de ordinul I 41 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:42**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
Observayie. Ateniie: apariiiile legate ale uariabilelor nu sunt inlocuite prin
apliearea substituiiei/ In Ememplul. aparifia lui X2 in (VX2.P(X1,X2)) este
legata.

Notatie. Conform Notaliei- pentru substitufiile care au domeniul ﬁnit mai
utilizdm notafia {$1 »—> 0(x1), . . . ,xn |—> 0(mn)}. De multe ori uom utiliza
substituiii pentru care nu uom mai asocia un nume, deoarece ele sunt foarte
simple auand forma: {x »—> t}. Pentru a exprima faptul ca aplioam aceastd
substituliie unei formule, conform notaiiilor noastre, ar trebui sa scriem {x +—>
t}(<p). Inszi in literaturd sunt preferate alte notaiii pe care le uom utiliza 5i
noi. O uariantd este sd seriem <p[t/ac]. O altd uariantd este <p[£E |—> t]. In acest
document uom prefera ultima notaiie, adicd 4,0[90 »—> t].

5.2 Secvente

Deﬁnitia 95 (Secventé). O secvenﬁé este o pereche de forma:

unde {301,...,gon} Q MPH este 0 muliime de formule iar go € LPH este o
formuld.

Céteodaté citim notatja {4,01, . . .,<pn} |— <p sub forma 4p este consecintd
sintacticd din {301,...,30n}. De multe ori, v0n1 nota cu I‘ I {$01,...,gon}
mul§imea de ipoteze $1 in acest caz vom scrie secvenpa ca I‘ l- cp.
Observatie. Ca 5i in cazul logicii propozilionale, este permisd scrierea fdrd
aeolade, adicd gob...,gon F go, in loe de {901, . . .,<pn} F g0. Totuoi trebuie
sci iinem cont ca in partea stdngci a simbolului I- este tot timpul o mullime.
Aceasta notaiie fard acolade ne permite sci scriem 4,01, . . . , 4p”, 1/1 l- go in loc de
{4,01, . . . , apn} U {1o} l- ap, ceea ce u$ureaza citirea secuengfelor.

Exemplul 96. in multe dintre exemplele din acest material uom lucra cu
o signaturd Z I ({P,Q},{a,b,f,g}), unde simbolurile predicatiue P 5i Q au
aritate 1, simbolurile functionale f 5i g au aritate 1, iar simbolurile a 5i b
sunt constante (de aritate 0).

Exemplul 97. Fie signatura E din Eremplul|E Iatd cdteva ememple de
secuenie:

1- {P(a), Q(a)} F (P(a) /\ Q(a));

2. {VX.Q(X),P(a)} l— (P(a) /\ (1(a));

3. {Elx.Q(x)} l- 0(a).

Partea a H-a - Logica de ordinul I 42 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:43**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
Mai tdrziu vom vedea cd primele cloud secvengfe de mai sus sunt valide,
in?" ultima secvengfa” nu este validd.
Uneori este convenabil s21 scriem secvengele fara acolade, ca in exemplul
urmétor:
Exemplul 98. Secvengfele din Exemplulmpot ﬁ scrise fdrd acolade astfel:
1' Pea), Ma) P <P<a> A (1(a));
2. VX.Q(X),P(a) I- (P(a) /\ Q(a));
3. EIX.Q(><) }— 0(a).
5.3 Reguli de inferentéi
Deﬁnitia 99. O regulé de inferenfsé este un tuplu farmat din:
1. 0 multime de secvengfe S1, . . . , Sn, care se numesc ipotezele reguln';
2. 0 secvengfd S care se numegte concluzia reguln';
5’. 0 conditie de aplicare a Tegnlii;
4. un nume.
O regulé de inferenté se noteazé in felul urmétor:
5'1 . . . Sn
NUME — conditie.
S
Observatie. Regulz'le de inferentd care an n I 0 z'poteze, se numesc aan'ome.
De asemenea, conditia de aplz'care poate 5d lipseascd.
Exemplul 100. laid cdteva exemple de reguli de inferentd p6 care le-am
intdlnz't 52' la logica propozigfionald:
.F"<P1 FF<P2 F"(<P1/\<P2) F"(<Pl/\<P2)
/\7, — A61 — A62 —
Ca 5i in logica propozigfionald, toate cele trei reguli de inferenta” de mai
sus sunt corecte. Nicz'una dintre cele trez' regulz' de maz' sus nu are 0 conditie
atawtd. Iatd 52' un exemplu d6 reguld cu n I 0 ipoteze, dam" cu 0 conditie:
IPOTEZ/K i E I‘.
F |_ (p1 $01
Partea a H-a - Logica de ordinul I 43 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:44**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
Mai jos avem an ewemplu de regula de inferenta incorecta (intT-un sens pe
care il vom preciza mai tarziu, dai" care poate ﬁ deja intuit):
t V F I‘ W2
REGULA INCORECTA —
P k (<P1 /\ 902)-
Observaigie. lpotezele regulii de inferentd, precum si concluzia, sunt de fapt
scheme de secvente si nu seevente propriu-zise. Aceste scheme potﬁ instantiate,
adicd o regulci de inferenta (prezentata ca mai sns) are mai multe instante,
obtinate prin inlocuirea variabilelor matematice 4p, 4p’, I‘ cu formele concrete.
De exemplu, iata doua instante ale regulii /\i de mai sus:
M. {P<a), aw} P P<a> {P(a),Q(a)} e [1(a)
We), Q(a)} P (Pa) A (4(a));
M. {P(a)7Q(a), Q(b)} F (P(a) /\ Q(a)) {P(a)7Q(a)7Q(b)} F P(a)
{P<a>,Q<a), Q(b)} P <<P<a> A 11(3)) A 13(3))-
jn prima instantci, am inlocnit variabila matematica I‘ cu multimea de
formule {P(a),Q(a)}, variabila matematica 4p cu formula P(a) si variabila
matematicd 4p’ cu formula 0(a). Exercitiu: stabiliti singuri ca ce am inloouit
ﬁeeare variabila matematiea in cea de-a doua instantd.
Iatci un exemplu de regulci care nu este instantd a regulii /\i (exereitiu.'
explicati de ce nu):
7 {P(a)» Q(a)} P P(a) {13(8), Q(a)} F l1(a)
{P(a)7Q(a)} F (P(a) /\ Q(a));
5.4 Sistem deductiv
Deﬁnitia 101. Un sistem deductiv este o multime de regali de inferenta.
Exemplul 102. Fie sistemul deductio D1, format din armdtoarele patru "reg-
uli de inferentci:
I‘ l- I‘ l- 1" |— /\
IPOTEZIK i a e r Ai- M /\e1 M
PHD, Fle/WQ), FWM,
F I‘ ($01 /\ $02)
A62 —
Partea a H-a - Logica de ordinul I 44 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:45**************
Logicé pentru informatici 2020-2021 Universitatea Alexandpu I oan Cuza
5.5 Demonstratie formalii
Deﬁnitia 103 (Demonstratie formali). O demonstragie formali intp-un sis-
tem deductiv este 0 listd de seepengfe

1. S1

2. S2

n. Sn,
cu proprietatea cd ﬁecare secvenid Si este justiﬁcatd de 0 reguld de inferenia" a
sistemului deductip din seepeniele anterioare (S1, . . . , ‘SQ-11), in sensul in care
Si este concluzia unei instants a unei reguli de inferenid din sistemul deductip,
peguld cape folose$te ca ipoteze doai" secvente alese dintre Sl, . . . , $111. In plus,
dacd pegula de inferenid are conditie, aceastd conditie trebuie sci ﬁe adepdpatd.
Sd notdm 5i faptul 0d orice preﬁx al unei demonstraiii este tot 0 demonstraiie.
Exemplul 104. laid un exemplu de demonstraiie formald in sistemul D1
introdus mai sus:

1. {P(a), Q(a)} F P(a); (IPOTEZA)

2. {P(a), Q(a)} F Q(a); (IPOTEZA)

3' {P(a)»Q(a)} P (13(3) /\ E1(a)); (M, 1, 2)

4' {P(a)»Q(a)} P (51(3) /\ (P(a) /\ Q(a)))- (All 2, 3)

Ca 5i in cazul logicii propoziiionale, ﬁecape linie este adnotatd cu numele
regulii de inferengfd aplicate, plus liniile la care se gdsesc ipotezele necesare
aplicdpii (in aceeagi ordine folositd pentru ppezentarea sistemului deductiv).
Observatie. Deﬁniiia demonstraiiei formale in logica de ordinul intdi este
aceedsi ca in cazul logicii propozigfionale. Totu5i, pom pedea mai tdpziu cd pen-
tru aplicapea regnlilop de inferenta“ noi, asociate cuantiﬁcatopilor, pom folosi
adnotdri suplimentape.
Deﬁnipia 105 (Secventé validé). O secvenid P k 30 este validé intr-un sistern
deductiv D dacd existd 0 demonstratie formald S1, . . . , Sn in D astfel incdt
Sn I I‘ l- 90.
Exemplul 106. Secvenia {P(a),Q(a)} l- (P(a) /\ 0(a)) este palidd in sis-
temul deductiv D1 de mai sus, deoarece este ultima secvenid din urmdtoapea
demonstpaiie formald:
Partea a H-a - Logica de ordinul I 45 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:46**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza

1. {P(a),Q(a)} l— P(a); (IPOTEZ/K)

2 {1"’(?11)»Q(a)}F (1(a); (IPOTEZ/K)

3- {Mama} P <P<a> A w»; my 1, 2)

Observatie. Atemfie! Nu confundagfi notiunea de secvenfuﬁ validé intr-un

sistem deductiv cu notiunea de formulé validé.

5.6 Deductia naturalé

Deductia naturald este un sistem deductiv pentru Iogica de ordinul I. De fapt7

sistemul deductiv pentru Iogica de ofdinul I include toate regulile de deductie

studiate la logica propozipionalé. In plus, pentru logica de ordinul I Inai

apar reguli noi, $i anurne cele de introducere 3i eliminare a cuantiﬁcatorilor.

In aceasté sectiune vom prezenta in detaliu ﬁecare regulé de inferentjm care

apartine deductiei naturale in logica de ordinul I.

5.6.1 Regulile pentru conjunctii

Am vézut deja regulile de introducere si de eliminare pentru conectorul “$i”:

.Pl-Spl F"<P2 F"(<P1/\S@2) FI‘(<P1/\<P2)
/\Z — /\61 — A62 —
P"(<P1/\<P2)v FHPi, PW»

Regulile de inferenté mimeazé rapionamentul uInan, bazat in esenté pe 0

semanticé intuitivé a notiunii de adevér:

1. Regula de introducere a conectorului /\ ne indicé cé putem demonstra
0 conjunctie (4,01 /\ 4,02) din ipotezele I‘ dacé stim deja 021 ﬁecare parte a
conjunctiei, 301 si respectiv gag, sunt consecinte ale ipotezelor I‘.

Cu alte cuvinte7 pentru a aréta 0 conjunctie dintr-un set de ipoteze7
este suﬁcient s5 stabilini individual c5 ﬁecare parte a conjunctiei este 0
consecinné a ipotezelor.

2. Pentru conectorul /\ avern doué reguli de eliminare. Prima regulé de
eliminare a conectorului /\ ne precizeazé c5 dacé am stabilit deja (:21 0
conjunctie (301 /\ 4,02) este consecinta unei mulpirni I‘ de ipoteze, atunci
si partea sténgé a conjunctiei7 apl, este consecinté a multimii I‘.

A doua regulé este simetricé faté de prima $i ne permite sé concluzioném
c5 $i partea dreapté a unei conjunctii este consecinta unei multimi de
formule dacé $i conjunctia este consecinta a aceleia$i multimi de formule.
Partea a II-a - Logica de ordinul I 46 Note de curs - de Iistat color

***************Ending Page***************


***************Beginning Page***************
***************page number:47**************
Logicé pentru informaticé 2020-2021 Universitatea Alexandra loan Cuza
Iaté un exemplu de demonstraﬁie formalé care utilizeazé regulile de inferenﬁé
pentru conectorul /\:
1. {(P(a) /\ Q(a)),Vx.P(x)} l— (P(a) /\ 0(a)); (IPOTEZK)
2. {(P(a) /\ Q(a)),Vx.P(x)} l— Vx.P(x); (IPOTEZK)
3- {(P(a) A Q(a)>,vX.P<X)} l Po); (A61. 1)
4. {(P(a) /\ Q(a)),Vx.P(x)} n (P(a) /\ Vx.P(x)). (Ai, 3, 2)
5.6.2 Regulile pentru implicatii
Regula de eliminare a implicapiei, numité $1 modus ponens in latinzi7 este una
dintre cele mai importante reguli de inferenté pe care le aplicérn.
Pl‘(901—><ﬁ2) Ill-901
—>e i
Regula ne araté c5, presupunénd c5 am demonstrat (901 —> 4,02) (din F) $1
in plus am demonstrat si gal (tot din I‘), atunci putem demonstra 902 (din P).
Iaté un exemplu de demonstratie formalé care folose$te regula de eliminare
a implicamei:
1. {(P(a) —> Vx.P(x)), (P(a) /\ Q(a))} l- (P(a) /\ (1(a)); (IPOTEZK)
2- {(P(a) —> VX-1'*’(X)),(P(111) /\ Q(a))} F P(a); (4617 1)
3. {(P(a) —> Vx.P(x)), (P(a) /\ Q(a))} F (P(a) —> Vx.P(x)); (IPOTEZZ)
4. {(P(a) —> Vx.P(x)), (P(a) /\ Q(a))} l- Vx.P(x). (—>e, 3, 1)
Aceasté demonstraﬁe araté (:51 secventa {(P(a) —> Vx.P(x)), (P(a) /\ Q(a))} l-
VX.P(X) este validé, adicé formula VX.P(X) este o consecinté a multimii de
formule {(P(a) —> Vx.1:’(x))7 (P(a) /\ Q(a))}. Observati ordinea in care apar
liniile 3 $1 1 in explicagia liniei 4: urineazé aceea$i ordine7 ﬁxaté prin regula
de inferenpé.
Exerciigiul 107. Ardtagfi ed sunt oalide urmdtoarele secvengfe:
1. {((P(a) /\ 0(a)) —>Vx.P(x)),P(a), Q(a)} F Vx.P(x);
2. {(P(a) —>Vx.P(x)),P(a), 0(a)} |— (0(a) /\ Vx.P(x)).
Partea a H-a - Logica de ordinul I 47 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:48**************
Logicé pentru informaticé 2020-2021 Universitatea Alexandra loan Cuza

Regula de introducere a implicapiei este mai subtilé. Pentru a aréta c5
0 implicatie (4P1 —> 4,02) decurge din I‘, presupunem $01 (in plus faté de 1")
§i arétém Q2. Regula poate ﬁ scrisé in doué moduri echivalente7 care se de-
osebesc doar prin faptul c5 prima regulé foloseste convenpia de notapie refer-
itoare 1a acoladele din jurul premiselor unei secvente7 in timp ce in a doua
regulé acoladele care marcheazé multimea apar explicit:

_ F7901F<P2 . FU{SD1}|_902
—> z — —> z —
FF(<p1 —><P2)7 FFQPl —><P2)-

Ceea ce este important de observat $i de inﬁeles la regula de introducere a
implicatiei este Ci multimea de premise se schimbé. Dacé in concluzie avem
05 formula ($01 —> $02) decurge din F, in ipotezi trebuie $5 arétém 05 4,02
decurge din premisele P U {4,01}. Cu alte cuvinte, 1a modul intuitiv, pentru
a demonstra 0 implicatie ($01 —> 302), presupunem antecedentul 301 $1 arétim
consecventul 302.

Exemplul 108. Sci ardtdm cd secventa {} l- (P(a) —> P(a)) este validd:

1. {P(a)} F P(a); (IPOTEZA)

2. {} |— (P(a) —> P(a)). (—>z', 1)
Exemplul 109. Sd ardtdm cd secventa {(P(a) —> Q(a))7 (0(a) —> P(b))} I-
(P(a) —> P(b)) este validd:

1- {03(3) —> (1(a)), 01(3) —> P(b)),mn P <P<a> —> Q(a)); (IPOTEzA)

2- {<P<a> % Ma», (w) % P(b)),wn P P(a); (IPOTEM)

3’ {<P(a> —> Q(a)), 01(8) —> P(b)),Pw} P [1(8); we, 1, 2)

4' {(1%) —> Ma», (Ma) —> P(b)),wn P (Ma) —> P(b)); (IPOTEM)

5. {(P(a) —> 0(a)), (0(a) —> P(b)),P(a)} l- P(b); (—>e, 4, 3)

6- {(P(a) —> (3(a)), (Q(a) —> P(b))} P (P(a) —> P(b))~ (—>i, 5)
Exerciigiul 110. Ardtagfz' Cd urmdtoarele secvengfe sunt valide:

1' {((P(a) /\ Q(a)) —> P(b)),P(a)» {3(a)} P P(b);

2' {((P(a) /\ C1(a)) —> P(b))} F (P(a) —>(Q(a) —> P(b)));

3- {(P(a) —>(Q(a) —> P(b)))} F ((P(a) /\ (1(8)) —> P(b))-

Partea a H-a - Logica de ordinul I 48 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:49**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
5.6.3 Regulile pentru disjunctii
Conestorul \/ are doué reguli de introducere:
I‘ F F F
F"(<P1\/902)1 FF(<pl\/<P2)-

Prima regulé ne araté (3:1 dacé gtim 901 (din I‘), atunci $tirn gi (apl V gag)
(din F), indiferent de (p2. A doua regulé, de eliminare este simetricé, pentru
partea dreapté a disjuncpiei.

Exemplul 111. Sci ardtdm cd secvengfa {(P(a) /\ Q(a))} l- (P(a) \/ 0(a)) este
valida“:

1. {(P(a) /\ Q(a))} l— (P(a) /\ Q(a)); (IPOTEZ/K)

2. {(P(a) /\ Q(a))} l— P(a); (A61, 1)

3’ {(P(a) /\ Q(a))} F (P(a) V Mal)’ (W1, 2)

O altii demonstratie formald pentru aceea$i secventd este:

1. {(P(a) /\ Q(a))} l— (P(a) /\ Q(a)); (IPOTEZE)

2’ {(P(a) /\ Q(a))} F (1(3); (A62, 1)

3’ {(P(a) /\ Q(a))} P (P(a) V (1(a)) (W2, 2)

Regula de eliminare a disjunctiei este u$or mai complicaté, ﬁind o alté
regulé in care multimea de premise variazé de la ipotezé la concluzie:

V6 F F (<p1 Wm) M01 P w’ Mp2 P <p’
I‘ l- 30’

Prima ipotezé a regulii, F F (901 \/ 902), este u$0r de inteles: pentru a
“elimina” 0 disjuncpie, trebuie $23 avern 0 disjuncpie printre ipoteze (disjunctie
pe care sé o “eliminém”). Ultimele doué ipoteze ale regulii de eliminare a
disjunctiei trebuie infuelese intuitiv dupé cum urmeazé. Din prima ipotezé
$tin1 (cpl \/ $02) (din F); cu alte cuvinte7 mécar una dintre formulele 901 $1
respectiv 302 decurge din P. Ipotezele 2 gi 3 ne indicé faptul c5, indiferent
care dintre formulele gal 5i respectiv 302 ar avea loc, in orice caz 90/ are 100.
Adicé dacé presupunem gal (in plus faté de I‘), 4p’ are loc, iar dachL presupunern
4,02 (in plus faté de F), g0’ tot are loc. Si atunci concluzia ne indicé 05L 4p’ are
loc indiferent care dintre <p1 3i respectiv $02 ar avea 10c.

Partea a H-a - Logica de ordinul I 49 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:50**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
Exemplu1112. Sd ardtdm ed secvengfa {(P(a) V Q(a))} l- (Q(a) V P(a)) este
validd.'
1. {(P(a) V Q(a)),P(a)} l— P(a); (IPOTEZA)
2- {(P(a) V Q(a)).P(a)} F 01(8) \/ 13(8)); (W2. 1)
3. {(P(a) V Q(a))7 Q(a)} l— Q(a); (IPOTEZA)
4- we) v Q<a>>.Q<a>} P we) v 13(8)); (W1. 1)
5. {(P(a) V Q(a))} l— (P(a) V Q(a)); (IPOTEZZ)
6- we) v Qem P (Ma) v Po»- (w. 5, 2. 4)
Observati cu atemfz'e modul in care multimea de premise oariazd de la
0 sec'uemfd la alta pe parcursul demonstratiez' formale, respectdnd regulz'le de
inferengfd.
Exercitiul 113. Gdsiifi 0 demonstrajie formald pentru secvengfa
{(P(a) V (1(a)) (P(a) —> P(b)), 01(8) —>P(b))} P P(b)~
5.6.4 Regulile pentru negatii
Regulile pentru introducerea $i respectiv eliminarea negatiei sunt prezentate
impreuné cu o regulé pentru eliminarea lui J_:
P,g0|—J_ Fl-(p Fl-ﬁgp Fl-l
oi i ﬁe — 1e i
I‘ I- —\<p I‘ I- J_ I‘ |— <p
Sé ne readucem aminte c5 J_ este un oonector logic de aritate 0. Cu alte
cuvinte, conectorul 1 este de sine stététor o formula. Semantica formulei J_
este c5 este falsé in orice atribuire. Cu alte cuvinte7 J_ este o contradictie.
Prima regulé dintre cele de mai sus, cea de introducere a negatiei, este usor
de explicat intuitiv: cum putem arita c5 0 formulé de forma —\<p deourge din
premisele I‘? Presupunern, in plus faté de premisele 1", (35m avern 90 5i arétém
05L din I‘ $i 4p decurge o contradicpie (1"7 cp l- l). In acest lel7 arétém c5 ﬂap
decurge din F.
A doua regulé, pentru eliminarea negatiei, ne indicé faptul c5 dacé atét
o formulé 90, cit 5i negatia sa, —\<p, decurg din aceea$i multime de premise I‘,
atunci din I‘ decurge 3i o contradicﬁie, J_. O multime F din care decurge o
contradictie se numegte si multime inconsistentd de formule.
A treia reguli indici 05, dacé I‘ este o multime inconsistenté de formule7
atunci orice formulé g0 decurge din I‘.
Partea a ll-a - Logica de ordinul I 50 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:51**************
Logicé pentru informaticé 2020-2021 Universitatea Alexandra loan Cuza
Nu existé nicio regulé pentru introducerea conectorului J_ (sau, regula de
eliminare a negapiei se poate considera ca ﬁind $1 regula de introducere a lui
Exemplul 114. Sci ardtdm cd secvemfa {P(a)} l- —\—|P(a) este validd:
1. {P(a)7 —|P(a)} |— P(a); (IPOTEZ/K)
2. {P(a), —|P(a)} |— —\P(a); (IPOTEZ/K)
3. {P(a),—\P(a)} l- 1; (ﬁe, l, 2)
4’ {P(a)} P ﬁﬁPGI). (ﬁll 3)
Exemplul 115. Sd ardtdm cé sec'uemfa {P(a), —\P(a)} 1- P(b) este validd:
1. {P(a), —\P(a)} l- P(a); (IPOTEZK)
2. {P(a), ﬁP(a)} l- —|P(a); (IPOTEZA)
3. {P(a),ﬁP(a)} |— 1; (ﬁe, 1, 2)
4. {P(a),ﬁP(a)} |— P(b). (16, 3)
Eliminarea dublei negatii
La logica propozitionali am intélnit $1 urmétoarea regulé pentru eliminarea
dublei negapii:
F l- ﬁﬁgo
we I‘ |— cp
Exemplul 116. Sd ardtdm cd secvemfa {(—|P(a) —> Q(a)),—\Q(a)} l- P(a)
este validd:
1. {(—|P(a) —> Q(a))7 —|Q(a), —|P(a)} |— —\P(a); (IPOTEZ/K)
2. {(—|P(a) —> Q(a)),—|Q(a),—|P(a)} l— (—\P(a) —> Q(a)); (IPOTEZ/K)
3’ {Haw —> Q<a>>~a<a>~P<an P (1(a); we, 2, 1)
4’ {(+03) —> (1(a)), ma), Man» P Ma),- (IPOTEZ/K)
5' {hm % Q(a)),*Q(a)FP(a)}1— 1; (w; 4, 3)
6- {(ﬁPGI) —> Q(a)),ﬁQ(a)} F ﬁﬁP(a); (ﬁll 5)
7- {(ﬁP(a) —> Q(a))ﬁQ(a)} F P(a)- (T6, 6)
Partea a H-a - Logica de ordinul I 51 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:52**************
Logicé pentru informatics} 2020-2021 Universitatea Alexandra loan Cuza
Exemplul 117. Sd ardtdm cd secvengfa {} l- (P(a) V —\P(a)) este validd:

1. {—|(P(a) v —|P(a)),P(a)} |— —|(P(a) v —|P(a)); (IPOTEZA)

2. {—|(P(a) \/ —|P(a)),P(a)} l- P(a); (IPOTEZK)

3. {—|(P(a) v —|P(a)),P(a)} P (P(a) \/ —|P(a)); (W1, 2)

4- {-‘(P(a) V “P(a))7P(a)} r l; (n6, 1, 3)

6. {—|(P(a) \/ ﬁP(a))} P (P(a) v —|P(a)); (Vig, 5)

7. {—|(P(a) \/ ﬁP(a))} r —\(P(a) v —|P(a)); (IPOTEZA)

8. {—|(P(a) \/ ﬁP(a))} l- J_; (ﬁe, 7, 6)

9- {l r nn(P(a) V nP(a)); (n13 8)

10. {} l— (P(a) \/ —\P(a)). (ﬁne, 9)
5.6.5 Eliminarea cuantiﬁcatorului universal.
Regula pentru eliminarea cuantiﬁcatorului universal este:
I‘ l— (Vamp)
Ve i
I‘ l- cp[:r l—> t]

Regula de eliminare a cuantiﬁcatorului universal este foarte simple: prac-
tic7 dacé etim 05 (Vamp) este 0 consecinté sintacticzi din F atunci putem
instanpia variabila legaté :1: cu orice termen t.

Exerciigiul 118. intrebare: regula de eliminare de mai sue maz' are sens dacd
:0 nu apare in 90? De ememplu, din 1" F (Vcc.P(a)) putem deduce ed F F
P(a)[x |—> b] .9
Exemplul 119. Sd ne amintim un eremplu discutat anterior in care aveam
doud aﬁrmagfii: Orice 0m este muritor 52' Socrate este om. Putem trage con-
cluzz'a ed Socrate este muritor? Pentru a rdspunde la intrebare, am putea
incerca 56 demonstrdm secvengfa

{Vx.(0m(x) —> Muritor(><)), Om(s)} F Muritor(s),
unde 0m 5i Muritor sum‘ predicate de aritate 1 iar s este 0 constantd (simbol
funcgfz'onal de aritate 0) asociatd numelui Socrate. latd demonstration formald
a secvemfez':
Partea a H-a - Logica de ordinul I 52 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:53**************
Logica pentru informatica 2020-2021 Universitatea Alexandra Ioan Cuza
1. {Vx.(0m(><) —> Muritor(x)), 0m(s)} I- Vx.(0m(x) —> Muritor(><)) (IPOTEZA)
2. {Vx.(0m(x) —> lvluritor(x))7 0111(5)} I- (01n(s) —> Muritor(s)) (Ve,1,s)
3. {Vx.(0m(x) —> I"luri'tor(x))7 0m(s)} l- 0m(5) (IPOTEZA)
4. {VX.(0m(x) —> Muritor(x))7 0m(s)} F Muritor(s) (—> e, 2, 3)
La pasul 2 al demonstratiez' am utilizat regula V6, care instantiaza in for-
niula Vx.(0m(x) —> Muritor(x)) variabila legatdx on s: (0111(5) —> Muritor(s)).
In limbaj natural, am dedus pm'n rationament sintactz'c ca dacd Socrate este
0m 51‘ Orice 0m este muritor atnnci Socrate este muritor.
5.6.6 Introducerea cuantiﬁcatorul existential.
Exista o oarecare dualitate a regulilor pentru introducerea 5i eliminarea ouan-
tificatorilor. Astfel7 regula de introducere a cuantiﬁcatorului existential de
mai jos poate vazuta ca duala regulii de eliminare a cuantiﬁcatorului univer-
sal:
3 I‘ l- g0[:c »—> t]
Z F F (Elnga)
Regula ne indica faptul ca putem deduce (Elamo) atunci cand @[x r—> t] este
consecinta semantica din I‘. Informal, daca exista un x concret — $1 anume
t 1 astfel incat @[zr +—> t] este adevarata vom trage concluzia ca (Elngo) este
adevarata. Aici, t joaca rolul unui martor pentru care formula din concluzie
este adevarata.
Exemplul 120. Sa ardtdm ca secvengfa {P(a)} l- Elx.P(x) este validd:
1. {P(a)} F P(a) (IPOTEZR)
2. {P(a)} F Elx.P(x) (Eli, 1)
Observati ca” in acest caz, metavam'abila 4p este P(x) din regula Ele, iar <p[x +—> a]
65156 P(x)[x +—> a], adicd P(a).
Exemplul 121. Sd ardtdm ca secvenifa {VX.(P(X) —> Q(x)),P(a)} F Elx.0(x)
este valida:
1. {Vx.(P(x) —> Q(x)),P(a)} l- Vx.(P(x) —> Q(x)) (IPOTEZK)
2. {Vx.(P(x) —> Q(x)),P(a)} l- P(a) (IPOTEZK)
3. {Vx.(P(x) —> Q(x)),P(a)} l- (P(a) —> 0(a)) (Ve,1,a)
4. {Vx.(P(x) —> Q(x)),P(a)} l- 0(a) (—>e,3,2)
5. {Vx.(P(x) —> Q(x)),P(a)} l- Elx.0(x) (31,4)
Partea a H-a - Logica de ordinul I 53 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:54**************
Logicé pentru informatics} 2020-2021 Universitatea Alexandra loan Cuza
5.6.7 Introducerea cuantiﬁcatorului universal.
Regula de introducere a cuantiﬁcatorului universal este:
F F »_>
Vi M $0 Q vars(F,<p)
I‘ |— (V3340)

Regula de Inai sus ne spune c5 vom putea deriva concluzia F % (Vx.<p)
dacé vorn arita (:51 30L? i—> :00] este consecinﬁé sintacticzi din P, unde $0 este
0 variabilé noud: ea nu Inai apare in alte formule $i asupra ei nu avern nici 0
constréngere.

Exemplul 122. Sd ardtdm cd secvemfa {VX.(P(><) —> Q(x)), VX.P(X)} I- VX.Q(><)
este validd:

1. {VX.(P(X) —> Q(x)),Vx.P(x)} l- Vx.(P(x) —> Q(x)) (IPOTEZK)

2. {VX.(P(X) —> Q(><)),V><.P(><)} l- Vx.P(><) (IPOTEZ/i)

5’. {VX.(P(X) —> Q(x)),Vx.P(x)} F (P(xo) —> Q(x0)) (V6.1,x0)

4. {VX.(P(X) —> Q(X)),VX.P(X)} l- P(x0) (V6.2,x0)

5. {VX.(P(X) —> Q(x)),Vx.P(x)} l- Q(x0) (ee,3,4)

6. {VX.(P(X) —) Q(x)),Vx.P(x)} l- VX.Q(X) (Vi,5)

Observatz' czi pentm secvemfele 3, 4 52' 5 utilizdm variabila noud x0. La
nivel intuitiv, Q(x0) 11a avea loc pentru orice x0.

Exerciigiul 123. Ardtagfz' ed urmdtoarele secvengfe sunt valide:

1. {VX.(P(X) /\ Q(x))} l- Vx.P(x);

2. {VX.Q(x),P(a)} |— P(a) /\ Q(a);

3. {VX.P(X),VX.Q(X)} l- VX.(P(X) /\ Q(x)).

5.6.8 Eliminarea cuantiﬁcatorului existential
Regula pentru eliminarea cuantiﬁcatorului existential este urrnétoarea:
I‘ |— El . F U »—> I-
Ele i( x 90) {891$ 350]} w m0 Q vars(l‘,ap,¢)
I‘ l- 11)
Partea a ll-a - Logica de ordinul I 54 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:55**************
Logicé pentru informatics} 2020-2021 Universitatea Alexandra loan Cuza
Prima ipotezé a regulii este I‘ I- (Elmm), care, 1a nivel intuitiv, ne asiguré
c5 existé cel putin un termen (pot fi mai multi) care il poate inlocui x astfel
incét np este consecinpé sintacticé din F. Nu $tim insé care sunt acegti termeni
(in cazul in care sunt mai mulpi). Stiin doar cé mécar unul existé si ii voni
nota generic cu x0. Pentru a demonstra concluzia7 adicé w este consecinpé
sintacticé din F, va trebui six facern 0 analizé de cazuri dupi tofui m0. Practic7
acest lucru este sumarizat de cea de-a doua ipotezé a regulii unde trebuie
arétat c5 1/1 este consecinfoé sintacticé din F U {upks »—> and}.
Exemplul 124. Sd ardtdm cd secvemﬁa {VX.(P(X) —> Q(x)), Elx.P(x)} l- EIx.Q(x)
este validd:
1. {Vx.(P(x) —> Q(x)),3><.P(x)} |— Elx.P(><) (IPOTEZA)
2. {VX.(P(X) —> Q(><)),H><.P(><),P(x0)} l- P(><O) (IPOTEZA)
3. {VX.(P(X) —> Q(x)), EIX.P(><),P(><O)} F VX.(P(><) —> Q(x)) (IPOTEZZ)
4. {VX.(P(X) —> Q(x)),EIX.P(x),P(x0)} F (P(x0) —> Q(x0)) (Ve,3,x0)
5. {VX.(P(X) —> Q(x)),Elx.P(x),P(xo)} l- Q(x0) (—>e,4,2)
6. {VX.(P(X) —> Q(x)),Elx.P(x),P(xO)} l- EIX.Q(X) (3L5)
'7. {VX.(P(X) —> Q(x)), EIX.P(X)} |— EIX.Q(X) (He7 1, 6)
Observati Cd pentru a demonstra secvengfa 7, am utilizat secvengfa 1 5i secvengfa
6. Aceasta din urmd a fost demonstratd de pagii 2, 3, 4 5i 5, unde am utilizat
ca ipotezd 52' formula P(x0)(: P(X)[X »—> x0]).
5.6.9 Alte reguli
O alté regulé utilzi7 care nu ‘pine de un anumit conector, este regula de extin-
dere7 care a fost prezenté 3i in capitolul dedicat logicii propozipionale:
F l- 90
EXTINDERE /i
PW n v
Acoasté rcgulé no indicé faptul c5, dacé g0 cstc consccinpé a unci multimi
de formule F, atunci g0 este consecinté $i a mulniniii I‘ U {30/} (indiferent de
go’). Cu alte cuvinte7 putem extinde oricénd mulﬁimea de premise ale unei
secvenfue valide $1 obtinem 0 noué secvenfué validé.
Exemplul 125. Ardtdm cd secvemfa {P(a),—\Q(a),P(f(a))7 (P(b) /\ Q(b))} l-
ﬁﬁP(a) este validd:
Partea a II-a - Logica de ordinul I 55 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:56**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
1. {P(a)7 —|P(a)} |— P(a); (IPOTEZ/K)
2. {P(a), —\P(a)} k —\P(a); (IPOTEZA)
5’- {P(H)WP(8)} F l; (“6, 1, 2)
4- {13(3)} P ﬁﬁP(a); (1i, 3)
5. {P(a)7 —|Q(a)} |— —|—\P(a); (EXTINDERE, 4)
6’ {P<a>, ﬁa<a>,1><f<a>)} P “Pen,- (EXTINDERE, 5)
7. {P(a), ﬁQ(a),P(f(a)), (P(b) /\ Q(b))} P —\—|P(a). (EXTINDERE, 6)
5.7 Sistemul deductiv al deductiei naturale
Deductia naturalé pentru logica de ordinul I este sistemul deductiv alcétuit
din toate regulile din sectiunile precedente. Iaté aici sumarizate toate regulile:
Partea a H-a - Logica de ordinul I 56 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:57**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
.Fkﬂpl FFW I11_(@Pl/\<P2)
/\Z — /\€1 —
F"(<P1/\<P2)7 111-801,
F"(%01/\902) F"(<P1—><P2) F"<P1
A62 — —> e i
. Fa<P1P<P2 . 111-901 . F1‘<p2
—> 2 — V21 — V22 —
FFWl —>902), FFWN/W), FF<<P1V<P2L
VeFHwM/w) Ramhp’ przhp’
P P W7
Pl-cp F1——\<p _1",<p|—J_ Fl-l
—\e — —|z i ie i
F F l, F 1- —|<p, P l- g0,
v I‘ l- ap I‘ I- —\—\<p
IPOTEZA i 4p E I‘, EXTINDERE /i ﬁﬁe i
F l- <p F, <p l- ap, P l- g0.
F I- (Vmp) P l- <p[m '—> t]
Ve i Eli i
I‘ l- <p[ar I—> t] F |— (Hump)
I‘ I- ga[:£ >—> m0]
\1' — r,
z F '_ (V$.<p) 900 ¢ vars( (p)
I‘ F Elm. I‘ U m »—> m F
Ele i< $0) {SA 0]} w m0 Q vars(F,<p,1/1)
I‘ |— 1/1
Desigur 05 putem folosi in demonstratii $1 regulile derivate (pe care le-am
prezentat in cazul logicii propozipionale).
5.8 Corectitudinea $i completitudinea deductiei
naturale pentru logica de ordinul I
Teorema 126 (Corectitudinea deductiei naturale). Pentru orice multime de
formula 1" $2 orice formuld 30, dacd secvengﬁa F l- ga este validd, atuncz' I‘ |: 4p.
Exercitiul 127. Demonstratz' Teorema -.
Partea a H-a - Logica de ordinul I 57 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:58**************
Logicé pentru informaticé 2020-2021 Universitatea Alemandru loan Cuza
Teorema 128 (Completitudinea deductiei naturale). Pentru orice multime
de formula I‘ 5i once formuld 4p, dacd I‘ I: g0 atunci secventa I‘ I- <p este
validd.

Demonstratia teoremei de completitudine depé$e$te nivelul cursului.
Observatie. De remarcat cd, folosind teoremele de corectz'tudz'ne $z' respecti'u
de completitudme, relatia l- coz'ncz'de cu relatia II, degi au deﬁnitii cu totul
difem'te.

5.9 Figséi de exerciigii
Exerci'piul 129. Ardtagfi ed urmzitoarele secvengfe sunt valide:

1- {((P(a) /\ Q(a)) /\ VX-P(><))} F (51(8) /\ VX-P(X));

2- {((P(a) /\ 61(8)) /\ VX-P(><))7VX-Q(><)} F (VX-Q(><) /\ (31(8));

3. {((P(a) /\ 0(a)) /\ Vx.P(x))} |— (Vx.P(x) /\ (0(a) /\ P(a)));

4. {((P(a) /\ 0(a)) —> Vx.P(x)),P(a), 0(a)} |— Vx.P(x);

5. {(P(a) —> Vx.P(x)),P(a),Q(a)} |— (0(a) /\ Vx.P(x));

5- {(P(a) —> P(b))7 03(8) —> P(b))} F ((P(a) V Q(a)) —> P(b));

7- {ﬁ(P(a) /\ Q(a))} F (“3(a) V ﬁl31(8));

8- {ﬁ(ﬁP(a) V ﬁl31(@\))} P (13(8) /\ Q(a));

9- {ﬁ(ﬁP(a) /\ ﬁQ(@\))} P (13(8) V Q(a));

Exerci'piul 130. Stabiliti care dintre secvemfele de mai jos sunt valide:

1. {VX.(P(X) /\ Q(X))} l- VX.P(X);

2’ {vX-Q<X>,P(a)} P (P(a) A Q(a));

3. {VX.P(><),VX.Q(X)} I- Vx.(P(><) /\ Q(x));

4. {Elx.E|y.P(x, y)} 1- 3y.E|x.P(><,y);

5. {Elx.Vy.P(x, y)} 1- Vy.E|x.P(><,y); Dar invers: {Vy.E|x.P(><,y)} l- Elx.Vy.P(x, y) .9

6. {—\(Elx.P(x))} l- Vx.—\P(x);

'7. {Vx.—\P(x)} l- —\(EIX.P(><));

Partea a H-a - Logica de ordinul I 58 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:59**************
I

Capltolul 6
f l l d d ' l I
in acest capitol vorn deﬁni n0§iunile de formule echivalente $1 cea de formé nor-
mals”; Prenex (FNP), formzi normalé Skolern (FNS) 5i 1°0er normalé Skoleln
Clauzalé (F NSC) corespunzétoare unei formule din logica de ordinul I.
6.1 Formule echivalente
in diverse contexte, anumite formule pot avea acela$i inpeles. De exemplu7
formulele (Vx.P(x,x)) $1 (Vy.P(y, y)) au acelasj inteles in orice context. Un
alt exemplu de formule cu acelasi inteles este —|(Vx.Q(x)) $1 (Elx.ﬁQ(x)). Vorn
numi astfel de formule echz'valente.

Anumite formule an acela$i inteles doar pentru 0 anumité interpretare
a simbolurilor predicative 5i functionale. De exemplu, dacé lucrém intr-o
structuré in care simbolul predicativ P este interpretat printr-un predicat
simetric, formulele P(x, y) si respectiv P(y,x) au ace1a$i inpeles. Astfel de
formule se numesc echivalente in structum respectivd.

Acest aspect este surprins de urmétoarele deﬁnitii.
Deﬁnitia 131. Doud formule (p1 E MPH 52' 4,02 € MPH sunt echz'valente in
structum S dacd, pentru orice S -atribuz're a,

S,a I: 301 ddacd S,a I: 902.
V . . A v S

Faptul ca (p1 52 $02 sunt echwalente m structum S se noteaza 4,01 E 4,02.

Cu alte cuvinte, doué formule sunt echivalente intr-o anumité structuré
S dacé, evaluénd valoarea de adevér a formulelor in structura S , obtinem

59

***************Ending Page***************

***************Beginning Page***************
***************page number:60**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
acelagi rezultat pentru ambele formule (ambele adevﬁrate sau ambele false)7
indiferent de atribuirea a cu care lucrzim.
Exemplul 132. Cont2nudm ememplele din 02225222216 antem'oaTe. Con52derdm
signatum Z I ({P}, {f, i, e}) 52 Z-structum S1 I (Z, {I}, {+, —, 0}).
S
1. Avem cd P(><, y) El P(y,><). De ce?
F26 02 0 Sl-atribmre oarecare.
Avem 51,02 II P(x, y) ddacd (prin deﬁnitm relaﬂei )I)PS1(62(><),62(y))
ddacd 62(x) I 62(y)
ddacd 02(x) I 02(y)
ddacd (pm'n 52metr2'a relat2'e2' de egal2'tate) 02(y) I 02(y)
ddacd 62(y) I 62(x)
ddacd (prim deﬁm'ﬁia relaﬁie2' )I) S1, 02 II P(y, x).
Dec2, pentru 02206 Sl-atrz'buire 02, avem: 51,02 II P(x, y) ddacd S1, 02 II
S
P(y,x), care este chm?" deﬁnitm P(><, y) El P(y,x).
v S
2. Avem ca P(x1,><3) i P(x2,><3). De ce?
Deoarece existd 0 Sl-atﬂbuire 02 : X —> Z, deﬁnitd pm'n 02(x1) I 42, 02(x2) I
7, 02(X3) I 42 (pentm Testul var2'ab2'lel02" n22 e5te relevantd valoarea l0?" 222
(115221922226) cu propm'etatea cd
S1, 02 I P(x1,><3) (deoarece 42 I 42), dar
S1, 02 ké P(x2,><3) (deoarece 42 75 7).
1n cazul in care structura nu este ﬁxatﬁ, avern urmétoarea deﬁnitie:
Deﬁnitia 133. D0226 formule 4,01 E LPH $1 302 G LIPH sunt echivalente dacd,
pentru 02"2'ce 52522201‘,qu S 52 pentru 02206 S-atr2bu2re a,
3,02 II gal ddacd 5,02 II $02.
Faptul cci 901 52 gag 522m ech2'21alente 5e noteazd 901 E (p2.
Exemplul 134. Commudm ewemplul antem'or. Avem cd P(x, y) 5L5 P(y,x).
De ce?
Deoarece 650251322“ 0 E-5tructurd 52 0 atr2bu2re in 51522201522212 2651960232216 a5tfel
incdt cele doud formula sci 2a valom' de adevdr d2fer2te.
Partea a H-a - Logica de ordinul I 60 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:61**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza

Fie structura S5 I (Z,{<},{+,—,0}) deﬁnitd in cursul anterior §i S5-
atribuirea a6 : X —> Z, deﬁnitd prin a6(x) I 2, a6(y) I 3 5i a6(2) I 1 pentru
orice z E X \ {x,y}.

Observati Cd singura diferentd intre Sl 5i S5 este faptul Cd simbolul predica-
tiv P este interpretat prin predicatul I in S1, in timp ce in S5 este interpretat
prin < (relati'a mat mic strict paste numere intregt).

Avem S5, a6 )I P(X, y), deoarece 2 < 3, dar S5,a6 [I P(y, X), deoarece
3 i 2. Deci formulele P(X,y) 5i P(y,x) nu sunt echivalente (chtar dacd sunt
echivalente in structura S1).

Exemplul 135. Avem Cd (VX.P(x,2)) E (Vy.P(y,2)). De ce?

Fte S 0 E-structurd oarecare cu domeniul D $i a : X I D 0 S-atri'buire

oarecare. Avem cd
S, 04 II (VX.P(X, 2)) ddacd
pentru orice u E D, avem S, a[x »—> u] II P(X, 2) ddacd
pentru orice u € D, avem PS a[x r—> u](x), a[x r—> u](2)) ddacd
pentru orice u € D, avem PS u, 02(2)) ddacd
pentru orice u E D, avem PS a[y r—> u](y), a[y H u](2)) ddacd
pentru orice u E D, avem S, a[y I—> u] )I P(y, Z) ddacd
S704 I: (VY-P(y,1))-

Deci, pentru orice E-structurd S, peritru orice S -atribuire a, avem cd
S,a )I (VX.P(X,2)) ddacd S,a )I (Vy.P(y,2)),

care este chiar deﬁnitia faptului Cd (VX.P(X, 2)) E (Vy.P(y, 2))

6.2 Forme normale gi Substitutii

Pentru a deﬁni formele normale pentru formulele din logica de ordinul I, ream-

intirn notiunea de substitutie :

0 O substitutie este 0 functie a : X —> T, cu proprietatea (35 0(ac) I iv

pentru un numér ﬁnit de variabile :10 € X ;

o Domeni'ul substitutiei' a este multimea d0m(a) I {at E X 1 0(56) 75 at};

0 Eactensia substitutiei 0 1a multimea termenilor este functia 011 : T —> T,

deﬁnité astfel:
1. 011(2) I 0(x), pentru orice at 6 X;
2. 0W0) I c, pentru orice simbol constant c G 1:0;
Partea a H-a - Logica de ordinul I 61 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:62**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
3. 0f(f(t1, . . . in» I ﬂown), . . . , 071(5)), pentru orice simbol functional
f € 1:” de aritate n € N 3i orice termeni t1, . . . ,tn € T.
Dacé t G T este un termen, atunci all(t) G T este termenul obfuinut din
t prin aplz'carea substitutiei a (ﬁecare aparigie a unei variabile ac din t
este inlocuité cu termenul 0(x)).
0 Dacé d0m(0) I {x17 . . . ,xn}, atunci substitufia a so mai poate scrie in
felul urmétor:
a I {x1 »—> 0(x1), . . . ,xn »—> 0(xn)}.
0 Restricfia substitufiei a la multimea V este 0 noud substitutie notatd
0|v : X —> T, definité astfel:
1. 0|v(x) I 0(26) pentru orice a: € V;
2. 0|v(m) I :c pentru orice m E X \ V.
Practic, prin restricfia unei substitufii la o mulfime de variabile, se soot
celelalte variabile din domeniul substitutiei.
o Extensia lui 0 la multimea formulelor este funcfia 0b : LlPll I LlPll,
deﬁnité astfel:
1. Ub(P(t1,...,tn)) z P(0ll(t1),...,0ll(tn));
2- UWWP) I "UWP);
3- WW1 /\ s02» I (Ub(@1)/\<Ib(¢2));
4- Ub((v1\/<P2)) I (Jb(801)\/Ub(<ﬂ2));
5- Ub((%01—><P2)) I (Ub(901)—>0b(<P2));
6- Ub((<P1<-><P2)) I (Ub(801)<—><7b(¢2));
7. 0b((Vx.<p)) I (Vx.(pb(<p))), unde p I U|d0m(a)\{X};
8' O'b((EIX.(p)) I (3X(pb(<p)))7 unde p I Uld0m(0)\{X}~
Practic, pentru a ob'gine formula O'b(<p) din formula <p, ﬁecare aparifuie
libel-5i a variabilei x din formula 90 este inlocuiti cu termenul 0(x).
6.3 Forma normalé Prenex
Deﬁnitia 136. O formuld g0 ostc in formé normalé proncx dacd
<0 Z Q1X1-Q2X2- ~ - - Qan-QOI,
undo:
Partea a lI-a - Logica de ordinul I 62 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:63**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza

1. QZ- G {V, El} (pentru orice 1 g1‘ g n);

2. go’ nu conllne cuantz'ﬁcatorl.

Practic7 0 formulé este in formé normalé prenex (F NP)7 dacé toti cuan-
tiﬁcatorii sunt “in fapa formulei”.

Exemplul 137. Formula (Vx.(Ely.(P(x, y) /\ —\P(Z, y)))) este in forma nor-
mald prenezzz;

Formula (Vx.((Ely.P(><, y)) /\ —|P(z, y))) nu este in formd normala prenem.

Orice formula poate ﬁ adusé in formé normalé prenex, fapt surpins de
urmétoarea teoremé:

Teorema 138. Pentru orice formula go E MPH, existd go’ E MPH astfel incat:

1. go’ este in forma normala prenea";

2. go E go’.

Formula go’ este o formé normalé prenex a formulei go.

in continuare, demonstrém teorema de mai sus prin intermediul unui algo-
ritm care calculeazé go’ pornind de 1a go. Pentru a prezenta algoritmul, avem
nevoie de urmétoarele rezultate:

Teorema 139 (Teorema de inlocuire). Fie go7 go’ € LPl astfel incat go E go’
oi go1 € PL1 ce contlne go ca subformula.

Flo formula gog obllnutd din go1 prz'n inloculrea unel aparilfll a luz' go cu go’.

Atunci gol E go2.

Lema 140 (Lerna redenumirii). Fle go 6 MPH o formula $2‘ x,y 6 X doua
uarlabile cu proprietatea ca y g free(go).

Atuncl au loc echlualenlele:

_ b ¢ _ b
(VX-sv) I (VY-(U (s00) $2 (3W) I (HY-(U (s00),
undo o I {x |—> y}.

Cu alte cuvinte, comform lemei redenumirii, in formula Vx.go putem inlocui
cuantiﬁcatorul Vx (respectiv 3X) cu un cuantiﬁcator Vy (respectiv Ely) la
alegere cu conditia ca y $21 nu ﬁe variabilzi a formulei go. De asemeneal7 aparifuiile
libere ale variabilei X in go trebuie inlocuite cu y prin aplicarea substitupiei
o I {x |—> y} asupra formulei go.

Exemplul 141. Fle formula (Vx.P(x,y)). Deoarece z Q free(P(x,y)), avem
prln lema redenumirli ca (VX.P(><, y)) E (VZ.P(z, y))

Atengfle, (VX.P(X, y)) q-é (Vy.P(y, y)) (echiualengfa nu poate fl empllcatd prz'n
lema redenumz'rn' deoarece y € free((Vx.P(x, y))) gsz' nlcz' nu are loc).

Suntem acum pregéti'gi s5 prezentém, schitat7 demonstratia Teoremei |E
Partea a H-a - Logica de ordinul I 63 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:64**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
Demonstratie: Se aplicé Teorerna (de inlocuire) in care sunt folosite
Lema (redenumirii) $1 urmétoarele echivalente, de 1a sténga 1a dreapta:

1. ((Vac.301)/\<p2) E V$.(<pl/\<p2), dacé a: ¢free(g02);

2. ((Vw.301)\/<p2) E Vac.(301\/<p2), dacé a: ereewg);

3. ((Elgc.301)/\<p2) E 3x.(<,01/\<p2), dacé a: gfreeﬂog);

4. ((Elat.301)\/<p2) E Elx.(301\/<p2), dacé a: eree(g02);

5. —'(Vx.<p) E (Elam-mp);

6. —|(Elsc.<p) E (Vx.ﬁ<p).

in cazul in care una dintre primele patru echivalenfue nu poate ﬁ aplicaté
din cauza restrictiei x Q f7"6€(§02)7 trebuie 55L aplicém mai intai lema redenumirii
pentru a redenumi convenabil variabila legaté X.

De asemenea, vom folosi, 05nd este necesar, comutativitatea conectorilor
/\ $1 \/7 adicé:

7- (WM/P2) E (s02/\<p1);

8~ (SOD/902) E (902\/<P1)-

Efectul primelor 6 echivalen§e de mai sus este de muta cuantiﬁcatorii7 in
arborele formulei7 deasupra conectorilor /\7 V, —\, asigurénd astfel terminarea
algoritmului $1 faptul c5 intr-un ﬁnal tofui cuantiﬁcatorii vor ﬁ cat mai apropiagi
de rédécina arborelui.

Pentru a trata conectorii —>, 4-), putem folosi “traducerea” lor cu ajutorul
conectorilor /\7 \/, —\:

9. (s01—></>2) E WNW;

10~ (WM-Kw) E ((¢1—><P2) A (¢2—W>1))~
q.e.d.

In continuare7 dém un exemplu de calcul a1 unei forme normale prenex
pentru 0 formula, folosind algoritnlul de mai sus.

Exemplul 142. Fie formula g0 I ((Vx.—\(P(x, x) /\ —|E|y.P(x, y))) /\ P(x, x)).

Nu putem aplica prima echz'valemfd pentru a aduce cuantiﬁcatorul Vx in
fata formulei deoarece X € free(P(x, X)). Agadar trebuie sd aplz'cdm {midi lema
redenumim'i (L.R.):

Partea a H-a - Logica de ordinul I 64 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:65**************
Logicé pentru informaticé 2020-2021 Universitatea Alexandra loan Cuza
<p I (VX.—|(P(><, x) /\ —\3y.P(><, y))> /\ P(><, x)
DER (VZ.—|(P(Z, Z) /\ —|Ely.P(Z, y))) /\ P(x, x)
é VZ.(—I(P(Z, z) /\ —|E|y-P(Z, y)) /\ P(><, ><))
é VZ. (ﬁ(P(Z, Z) /\ Vy.—\P(Z, y)) /\ P(x, x))
7(comumgm'mte A) VZ. (ﬁ((Vy.—\P(Z, y)) /\ P(Z, 2)) /\ P(x, x))
é VZ. (-1(Vy.(—|P(Z, y) /\ P(Z, Z))) /\ P(X, x))
7(comutagvitate A) VZ. (-1(Vy.(P(Z, Z) /\ —|P(Z, y))) /\ P(x, x))
é V2.((Ely.—\(P(z, z) /\ —\P(z, y))) /\ P(><,x))
é VZ.E|y.(—\(P(Z, Z) A ﬁP(Z, y)) /\ P(X, X)).
Agadar, am gdsit cd formula VZ.E|y.(—\(P(Z, Z) /\ —|P(Z,y)) /\ P(X, X)) este
0 formzi normalzi pTCTLBZ a formulei (VX.—\(P(><, x) /\ —\E|y.P(x, y))) /\ P(x, x).
Cdnd facem calculele, de obicei nu marcdm explicit aplicarea unei comu-
tatim'tdgfi $i scriem maz' pe scurt, in felul udetor:
4p I <VX._\(P(X, X) /\ —Ely.P(x, y))) /\ P(x, x)
Lg' (VZ.—\(P(Z, z) /\ —\E|y.P(z,y))) /\ P(><, x)
é VZ. (—| (P(Z, Z) /\ —\Ely.P(Z, y)) /\ P(x, x))
é VZ. (-1(P(Z, Z) /\ Vy.—|P(Z, y)) /\ P(x, x))
é VZ.(—\(Vy.(P(Z,Z) /\ —|P(Z,y))) /\ P(x,x))
é VZ.((EJy.—|(P(Z, z) /\ —\P(Z, y))) A P(X,X))
é VZ.E|y.(—\(P(Z, z) A —\P(z, y)) A P(X, X)).
6.3.1 Fi$5 de exercitii
Fie E I ({P,Q}, {f, i,e}) unde P G P2, Q G 731, f G F2, i G F1 si e G .70.
Exercitiul 143. Anitagfz' ed urmdtoarele echz'valente au loc:
1. P(e,x) é P(e, f(x,x)) unde S este E-structumS = (N, {<,Pa1"}, {+,5,0}).
2. —'Vx.<p E EIX.—\<p;
3. —|E|x.<p E Vx.ﬁ<p
Partea a H-a - Logica de ordinul I 65 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:66**************
Logicé pentru informaticé 2020-2021 Universitatea Alexandra loan Cuza
4. ((Vm.301)/\<p2) E Vx.(¢1A<p2), daca“ m $fT€6<QD2),'

5. ((V$.g01)V<p2) E Vx.(<pl\/<p2), dacd as ¢free(<pg);

6. ((Elx.901)/\np2) E 3$.(<,01/\<p2), dacd a: ¢free(<p2);

7- ((3$-801)V<P2) E El315-(901VW2); dacd 9? §Zfree(<p2);

8. VX.(P(X, x) /\ Q(x)) E (VX.P(X, x)) /\ (VX.Q(X))

9. VX.(P(X, x) \/ Q(x)) E (Vx.P(x, x)) \/ (VX.Q(X))

10. Elx.(P(x,x) /\ Q(x)) E (EIx.P(x,x)) /\ (EIX.Q(><))

11. Elx.(P(><,><) V Q(><)) E (EX.P(X,><)) V (EIX.Q(><))
Exercitiul 144. Fie substitutia 0 : X E T astfel incdt 0(x) I i(y), 0(y) I
f(x7 z) .52' cr(z) I z pentru z € X \ {x,y}. Aplz'cagfz' substituﬁz'a 0 pentru urma-
toarele formula:

1. 4p I (Vx.P(x, y) E P(i(y),x)

2. 90 I P(><, y) /\ EIy.Q(y E Vx.P(x, y)

Exerciigiul 145. Calculatz' cdte 0 FNP pentru ﬁecare dintre formulele:

1. VX.(P(X, y) /\ Elx.P(x, x))

2. (EIZ.P(X, y)) \/ P(Z, z);

3. (EIZ.P(><, 2)) /\ (VX.P(><, 2));

4. (32.P(x, 2)) E P(><,x).
5. —'(EX.P(X, y) \/ Vz.P(Z, 2)) /\ EIy.P(x, y)
6. Vx.Ely.P(x,y) E I3X.—Ely.P(x,y)
6.4 Formule inchise
Deﬁnipia 146. O formuld 30 E LIPH este inchisé dacd free(<p) I Q).

Cu alte cuvinte, dacé 0 formulé nu are variabile libere7 aceasta se numegte
inchisé. Formulele inchise se mai numesc $1 propozigﬁii (engl. sentences).
Deﬁnitia 147. O formuld care nu este inchisd se numeste deschisé.

Partea a H-a. - Logica de ordinul I 66 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:67**************
Logicé pentru informatics} 2020-2021 Universitatea Alexandru Ioau Cuza
Exemplul 148. Formula (Vx.P(x, x) /\ 3y.P(y, x)) este o formula luchlsa
deoarece free((Vx.P(x, x) /\ Ely.P(y, X))) I (l).

Formula (Vz.(3y.(—\(P(z, z) /\ —\P(z,y)) /\ P(x, X)))) nu este inc/225a (este
deschlsa), deoarece free((Vz.(3y.(—\(P(z, z) /\ —|P(z,y)) /\ P(x, x))))) : {as}.
Deﬁnitia 149. F26 cp G LPH o formula 52 free(<p) I {$1, . . . ,mn} mullimea
uarlabllelor l2bere ale acestela.

Formula

3$1.3l‘2. . . . 533”.ng
56 numejste inchiderea existentiald a formulel 90.
Observatie. inchiderea existentiala” a unei formule este 0 formula inchlsa”.
Exemplul 150. inchlderea emistenliald a formulez'
(Vz.(3y.(—\(P(z, z) /\ —\P(z, y)) /\ P(><,x)))) este
(Elx.(Vz.Ely.(—|(P(z, Z) /\ 51>(Z, y)) /\ P(X,X))))).
Deﬁnitia 151. Doua formule 901 € MPH 52 902 G LPH 5uut echisatisﬁabile,
dacii:

1. atdt (p1 cat 52 902 52ml 5at25ﬁab2le; sau

2. 22202 gal 52 22202 (pg nu sunt satisﬁab2le.

Cu alte cuvinte7 singurele cazuri cénd doué formule nu sunt echisatisﬁabile
sunt cémnd una dintre formule este satisﬁabilé, iar cealalté. nu este satisﬁabilé.
Teorema 152. Orice formula @5156 echlsatlsﬁablla cu 2nch2derea 62 62252622222226.
Deﬁnitia 153. F26 cp G LPH o formula 52 free(<p) I {$1, . . . 7mm} mullimea
uarlabllelor l2bere ale aceste2a.

Formula
56 nume5te inchiderea universalé a formulel go.

Observatie. inchiderea unluersald a unez' formule este 0 formula inchlsd.
Exemplul 154. luchlderea um'uersald a formulei

(V2.(E|y.(—\(P(z, z) /\ —\P(z, y)) /\ P(><,x)))) este

(VX.(VZ.(EIy.(—\(P(Z, Z) /\ ﬁP(Z,y)) /\ P(X, X))))).

Teorema 155. O formula 65136 ual2da daca 52 uumal daca inch2'derea 62 un2-
uersald este ual2'da.

Partea a II-a - Logica de ordinul I 67 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:68**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
6.5 Forma normalé Skolem
Deﬁnitia 156 (FNS). O formula go este in formé normalé Skolem (prescurtat,
FNS) daca

g0 I V351. . . . .an.go’,
unde:

1. 90’ nu eontine ouantiﬁeatori 5i

2. free(<p') Q {$1, . . . ,xn}.

Cu alte cuvinte, o formula este in formé normalé Skolem dacé contine
doar cuantiﬁcatori universali aﬂati la ”inceputul” formulei, iar toate aparitiile
variabilelor din formula?» sunt apari'gii legate (avem cuantiﬁcatori pentru toate
variabilele ce apar in formula).

Observatie. O formula aflatci in FNS este obligatoriu inchisa”, deoarece toate
uariabilele libere ale formulei 4p’ sunt ouantiﬁcate universal in (p (datoritd
conditiei 2), 5i deci nu mai pot exista uariabile libere in (p.

Exemplul 157. in continuare, 120m lucra peste signatum Z I ({P, Q, R}, {ﬂ i7 e}),
unde P, Q, R sunt simboluri predicatiue de aritate 27 1 5i respectiu 3, f 5i i sunt
simboluri functionale cle aritate 2 5i respectiu 1, iai" e este simbol functional
de aritate 0 (constantd).

Exemple de formule in FNS:

vX-Po, i<e>> vX-w- (PM e), y) A ﬂow, may, y», e) v Q(y)))

Ememple de formule care nu sunt in FNS:

3x.P(x, X) vX. (Q(e) /\ ﬁ(Q(X) \/ Q(y))> Q(e) /\ vX.Q(X)

in eazul formulelor care nu sunt in FNS, motiuele pentru care aeestea nu
sunt in F NS sunt urmatoarele: prima formula contine cuantiﬁcatov" existential;
in cea ole-a doua formula nu auem cuantiﬁcator pentru uariabila y; iai‘ in cea
de-a treia formula, cuantiﬁcatorul Vx nu se afla la inceputul formulei.
Teorema 158 (Teorema de aducere in FNS). Pentru orice formula go G MPH,
emista o formula go’ € LIPH astfel incat:

1. 4p’ este in forma normala“ Skolem;

2. 4p oi go’ sunt echisatisﬁabile.

Partea a H-a - Logica de ordinul I 68 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:69**************
Logica pentru informatica 2020-2021 Universitatea Alexandra I oan Cuza
Demonstratie: [Schita de demonstratiel
1. Calculam o formula (p1, aflata in FNP $i echivalenta cu formula g0
(folosind Teorema de aducere in FNP din cursul precedent);

2. Calculam 0 formula <p2, inchiderea existentiala a lui tpl (ch va fi echisat-

isfabila cu 4,01 $l deci cu 4p);

3. Aplicam in mod repetat lema de Skolemizare pe formula 902, lema prezen-

tata mai jos.

Rezultatul va fi o formula aflata in FNS, echisatisfabila cu formula de la
care am plecat.

qled.
Lema 159 (Skolem). Fie 30 : Vx1.Vx2. . . . .Vwk.Ela:.g0’, unde k; Z 0, 4p’ G lLlPll
(<p’ poate confine alti cucmtiﬁcatori). Cu alte cuointe, existd k cuantiﬁcatori
universali inainte de primal cunatiﬁcator existential.

Fie f G .75;c un simbolfunciional cle aritate k care nu apare in 30 (an simbol
functional proaspdt i engl. fresh).

Aoem cci 4p este echisatisﬁabild cu

V131. . . .Vzck.(0b(¢p’)),
unde 0' I {:13 »—> f(:l;1, . . . ,xQ}.
Demonstratie: [Schita de demonstratie]

Considerand ca formula cp cstc pesto signatura E I (71F), observam ca
formula nou obtinuta este o formula peste signatura Z’ I (73,]: U {f}) ce
contine7 pe langa simbolurile predicative 5i cele functionale din signatura E,
ei simbolul functional f de aritate k7.

Implicaiia directa“:

Presupunem ca exista 0 Z-structura S gi o atribuire 04 astfel incat S7 a I: 4p
ei gasim 0 E’-structura S’ $i 0 atribuire 0/ astfel incat

S’7 a’ I: V061.V$2. . . .ka.(0b(<p’))

Atentiel Structura S’ este peste signatura E’ care este mai bogata decat
signatura structurii S (apare simbolul functional f de aritate k, care este nou).
Rezultatele calculate de functia f sunt in concordanta cu valorile alese pentru
variabila 1r in functie de valorile variabilelor :51 . . . wk ($tim ca exista o astfel de
valoare aleasa astfel incat 90 sa fie satisfacuta de S $i a). In schimb, atribuirea
0/ poate coincide cu atribuirea a.

Implicaiia inversa”:

Partea a ll-a - Logica de ordinul I 69 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:70**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza

Presupunem 021 existé 0 ZY-structuré S ’ $1 0 atribuire a’ astfel incét S ’, 0/ I:
Vm1.Vx2. . . .mG.(ob(go’)).

Gisim 0 Z-structuré S $1 atribuirea o astfel incét S,o¢ l: go. (S este
obpinuté din S’ prin eliminarea funcpiei f). Din nou, atribuirea o poate ﬁ
identicé cu o’ .

q.e.d.
Exerciigiul 160. Completali demonstralia de mai sus.
Exemplul 161. Calculdm o formd normald Skolem pentru formula
go I VX.Ely.Vz.Elz’.(P(x, y) <—> P(z, z’)).
Prin Lema- auem ca g0 este echisatisﬁabila cu
901 I VX.VZ.E|Z'.(P(><, g(x)) <—> P(z, Z’)),
unde g este un simbol functional nou, de aritate 1.
Aplicand din nou Lema. auem ca formula 4,01 este echisatisﬁabila cu
$02 I vX-vZ-<P<X. g<x>> H Po. ho. z»).
uncle h este un simbol functional nou, de aritate 2.

In concluzie, 4,02 este in FNS 5i est echisatisﬁabila cu np, deci este o forma“
normala Skolern a formulei (p.

Observatie. Signatura formei normale Skolem a unei formule este mai b0-
gata decal signature formulei de la care am plecat, din oauza adaugarii sim-
bolurilor Skolem.
6.6 Forma normalé conjunctivéi
Deﬁnitia 162 (Literal). O formula go € LlPll se nume$te literal daca emista
un simbol predicatiu P G Pn de aritate n Z 0 5i n termeni t1....,tn € T
astfel incdt

np I P(t1,...,tn) sau (p I ﬁP(t1,...,tn).

Cu alte cuuinte, un literal este o formula atomica, sau negalia unei formule

atomice.
Exemplul 163. Emernple de literali:
P(Xv X) _'P(Xv i(Y)) _'R(av ba C) _'P(Xv X) Q('(X)) R(aa f(X)’ b)
Ememple de formule care nu sunt literali:
P(x, y) /\ P(x, y) —|—\P (x, x) VX.P(X, x)
Partea a H-a - Logica de ordinul I 70 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:71**************
Logicé pentru informatics} 2020-2021 Universitatea Alexandra loan Caza
Deﬁnitia 164 (Clauzé). O formula 4p 6 LIPH se namegte clauzi dacd exista
n literali cpl, . . . , cpn E IF©1L astfel incat
30 I <p1V302V . . . V30”.
Exemplul 165. Exemple de claaze:
P(Xv X) V R(X7 ea Y) \/ _‘P(X, ‘C(e: Y» P(X7 X) III P(X’ X)
P(><,x) V R(x, f(e,e),y) V —\P(><,f(e,y)) V —\P(e, i(x))
Observatie. Un caz particular este reprezentat de claaza aida, notatd II, care
este disjanctia a 0 literali. Claaza aida este 0 formula nesatisﬁabild.
Un alt caz particular este reprezentat de literali. Orice literal este 5i claazd,
ﬁind considerat disjunctia anai singar literal.
Deﬁnitia 166 (FNC). O formula 4p este in formé normalﬁ clauzalﬁ (saa,
echiaalent, in formé normals?» conjunctiva) dacd exista n Z 1 claaze 901, . . . , cpn
astfel incat
so I <P1/\802/\ - - - Asp”.
Exemplul 167. Urmiitoarele formale sant in FNC:
(P(><,><) V Q(><)) /\ (ﬁP(><, Y) V R(><, y, 6))
(POW) V Q(i(><)) V ﬁt31(6)) /\ (6P0, X)) /\ (“1011710 V R(><, 1))
6.7 Forma normalé Skolem clauzaléi
Deﬁnitia 168. O formula 4p este in formé normalé Skolem clauzalé (pres-
cartat FNS'C) daca
1. 90 este in formd normald Skolem 5i
2. 4p’ este in formd normald claazald, ande: g0 I V931. . . . .Vzcn.<p’, iar 4p’
na are caantiﬁcatori (ca alte cavinte, 90’ este sabformala obtinata din 4p
prin $tergerea caantiﬁcatorilor).
Exemplul 169. Exemple cle formale in FNSC:
vX-Vy-((P<X,X> v wax» A (P(e,y) v we»)
VX-Vy-(Q(e) A (ﬂaw) v swam)
Vx.Vy.Vz.(P(x,y) /\ (Q(x) V R(x, y, 2)) /\ —|Q(x)).
Partea a H-a - Logica de ordinul I 71 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:72**************
Logicé pentru informatics} 2020-2021 Universitatea Alexandru Ioan Cuza

Ememple de formule care nu sunt in FNSC:

HX-Qw vX-(Q<e> A (ﬂux, y, z) v Q(y)))
vX-Vy.(a<e> A we) v My»)

In cazul ultlmelor formule, motluele pentru care acestea nu sunt in FNSC
sunt urmatoarele:

o Elx.Q(x) conﬁne cuantlﬁcator existential (neaeeeptat in FNS)

o VX.(Q(e) /\ (—|R(x, y, Z) \/ Q(y))) nu este in FNS deoarece oontlne vari-

ablle libere (y 52' z)
0 Vx.Vy.(Q(e) /\ —\(Q(x) \/ Q(y))) este in FNS, dar formula go’ I
(Q(e) /\ —\(Q(><) \/ Q(y))> nu este in formd normald conjunctiva

Teorema 170. Pentru om'ce formula go € LIPH aflatd in FNS existd o formula”
90/ G LIFE astfel mat.-

1. 90’ este in FNSC 52'

2. 4p E g0’ .
Demonstratie: [Schifué de demonstrapie]

Se aplicé de 1a sténga la dreapta urmétoarele echivalente:

1- <P1 <—> <P2 E ((<P1 —* <P2) /\ (<P2 —* <P1))

2- (s01 —> 902) E ("801 \/ 902)

3. ow E w;

4- “(@1WP2) E ‘WM-‘902;

5~ —\(§01/\cp2) E ‘WM/“P2;

6~ <P1V(<P2/\<P3) E (999/302) /\ (801V<P3)-

De asernenea7 se permite folosirea liberé a asociativitétii $1 comutativitétii
conectorilor V gi /\.

Primele doué echivalente eliminé orice folosire a cuantiﬁcatorilor <—> $1 —>.

Urmétoarele trei echivalenfce se asiguré 05L negatiile pot ﬁ aplicate doar
formulelor atomice.
Partea a H-a - Logica de ordinul I 72 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:73**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza

Ultima echivalentﬁ se asiguré c5 V-ul nu apare peste /\.

In ﬁnal7 arborele sintactic asociat formulei rezultate va avea spre 1r§tdétcinét7
dupé cuantiﬁcatorii universali, /\7 urmat de un nivel de \/7 urmat de —|, urmat
de formule atomice7 ceea ce inseamné c5 formula rezultaté este in FNSC.

q.e.d.
Observatie. Un rezultat al teoremelor- cl- este faptul ca pentru orlce
formula 4p E MPH existd o formula 4p’ E MPH astfel incat go’ este in FNSC tar
formulele 4p 51' g0’ sunt echlsatlsﬁabtle.

Pentru a gdsi aceastd formuld, trebule 5d urmdm pacli urmdtorl:

1. Calculdm formula cpl in FNP echtualentd cu cp;

2. Calculdm 302 inchldcrea extstentiald pentru 301;

3. Apllcdm lcma dc Skolcmizare pentru a ellmz'na cuantlﬁcatorn' extstentlall

5i obtz'nem formula 4,03;
4. Apllcdm echlualentele dln teorema pentru a pune formula (p3 in
FNSC.
Exemplul 171. Calculam o FNSCpentru formula go I (VX.P(><, 2)) /\ (Ely.—\P(y, 2)).
90 : (VX'P(X, 2)) A (HY'ﬁPb/a 2))
E VX.(P(X,2) /\ (Ely.—|P(y,2)))
E Vx.Ely.(P(x, 2) /\ —|P(y, 2))
Acadar, o formd normala prenea: (FNP) a formulez' g0 este
s01 = VX-EIY-(PW Z) /\ 2P0, Z))
Continuam prz'n calcularea inchldertl emistentlale pentru gol. Aceasta este
902 : Elz.Vx.Ely.(P(x, z) /\ —\P(y, 2)).

Qonform Teoremel. (p2 este echlsatlsﬁabtl cu I .

In continuare aplicdm lema dc scolemlzare (Lemai) pentru ellminarea
cuantiﬁcatortlor existentialz' din 4,02. Astfel, <p2 este echisattsﬁabil cu

(p3 I VX'Ey'(P(Xa C) A _'P(Ya (2))
undo c cste un stmbol constant nou (deoarece in (p2, cuantz'ﬁcatorul EIZ nu are
altz' cuanttﬁcatorl universalt tn fatd). Aplicand din nou lema de skolemz'zare,
obtinem ca 303 este equlsatlsﬁabil cu

<104 I VX‘(P(X7 C) A _'P(g(X), (2))
unde g este un stmbol functional nou dc arttate 1 ( deoarece in <p3, cuan-
tlﬁcatorul Ely este precedat doar de cuantlﬁcatorul universal VX). Formula
4,04 obtlnuta este o FNSC pentru np deoarece este in FNS st formula g0’ I
(P(x, c) /\ —\P(g(x), c)) este tn FNC.
Partea a H-a - Logica de ordinul I 73 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:74**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
6.7.1 Fi$€1 de exercitii
Exercitgiul 172. Gasigﬁz' ccite 0 FNSC pentru urmdtoarele formula:
2. (EIZ.P(X, 2)) /\ (Vx.P(x, 2));
Partea a H-a - Logica de ordinul I 74 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:75**************
Capltolul 7

Q
Rezolu§1a pentru LP 1
Rezolutia pentru LP1 este o metodé de demonstrare a nesatisﬁabilitifnii unei
formule de ordinul I aﬂaté in FNSC. Avantajul rezolutiei este c5 este fécuté
mecanic, printr-o rnetodé inventaté de Robinson in anii 1960 numité uniﬁcare;
aSadar este mai usor pretabilﬁ spre a ﬁ mecanizaté (implementaté intr-un
program pe calculator).
7.1 Uniﬁcare
Deﬁnitia 173 (Uniﬁcator). O substitutie a este uniﬁcator al termenilor t1
$1152 dacd 011(251) I 0u(t2).
Exemplul 174. Fie termemi t1 I f(x, h(y)) $212 I f(h(z), z’). Un uniﬁcator
pentru t1 5i t2 este:

a I {Z »—> a,x H h(a),z’ r—> h(y)} (01(t1) I f(h(a), h(y)) I 01102)).

Un alt uniﬁcator al celor doi termem' este:

01 I {X I> h<z>,z' I hm} (UM) I f<h<z>, h(v)) I 010:2»-
Deﬁnitia 175 (Termeni uniﬁcabili). Doi termem' sunt uniﬁcabili dacd au cel
putin un uniﬁcation
Exemplul 176. Termem'i t1 I f(x,y) 5i t2 I h(z) nu au uniﬁcator, deci nu
sunt uniﬁcabili. De ce?

Pentru om'ce substitutie 0 avem 011031) I 011(f(x7 y)) I f(0ﬂ(x),0n(y)) 75
h(0ﬂ(z)) I 0n(h(z)) I 0ﬂ(t2) (intuitiv, orice substitutie am aplz'ca paste cei doz'
75

***************Ending Page***************

***************Beginning Page***************
***************page number:76**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
termenz', in primul caz rezultatul are ca functie principald f, iar in al foilea
caz avem h )

Termeniz' t1 I x 52' t2 I h(x) nu an uniﬁcator. De ce?

Sci presupunem cd ar exista un uniﬁcator al [07", a. Din moment ce
01(131) I 011(t2), inseamnd cri arborz'i abstracti corespunzatom' termenz'lor 011(151)
52' Ullag) an acela$i numdr de nodurz'. Notiim cu n0dum'(t) numdrul de nodurz'
ale arborelui corespunzator unuz' termen t.

Avem cd n0duri(all(t2)) I n0duri(oll(h(x))) I 1 + n0duri(au(x)) I 1 +
n0dur2'(0ﬂ(t1)) > n0duri(al(t1)), ceea ce reprezintd 0 contradictie, deoarece
trebuia sci avem n0duri(crl(t2)) I n0duri(al(t1)). Prin urmare, presupusul
uniﬁcator 0 nu ezm'std.

Deﬁnitia 177 (Compunerea a doui substitutii). Fie 01, 02 cloud substitutiz'.
Substitutia 02 o 01 : X —> 'T, denumitd compunerea substituﬁiilor 01 5i 02,
este deﬁnite? astfel:

0 (02 0 01)(at) I 03(01 (110)), pentru orice m € X.

Exerciigiul 178. Veriﬁcati cc? functia 02 o 01 este intr-adevdr 0 substitutie
(added cd multimea acelor variabile a: cu proprietatea cd (02 0 01)(90) 75 x este
ﬁnitci).

Exemplul 179. Continudnd ewemplul anterior, ﬁe substitutn'le 0 I {Z »—>
a,x +—> h(a),z' |—> h(y)}, 01 I {x +—> h(z),z’ |—> h(y)} 52' respectiv 02 I {z +—> a}.
Avem Cd 0' I 02 o 01 deoarece:

U2 O 01(X) I 050710)) I 6501(1)) I l1(a) I 0(X)

02 O 01(1) I 05<Ul<z>> I 63(1) I a I 0(1)

U2 O 01(1’) I 630/100) I 05010)) I 110) I 0(1’)

U2 O 01(11') I 05(010/0 I 030/) I y’ I 0(11’), f0?" any 1/E X \ {$12173
Deﬁnitia 180 (Substitutie mai generalé). O substitutie 01 este maz' generald
deceit 0 substitutie a dacd 0 se poate obtine prin compunerea substitutiei 01
cu 0 altd substitutie 02: U I 02 o 01.

Exemplul 181. De ememplu, 01 I {X l—> h(z),z’ l—> h(y)} este mai generald
decdt 0 I {z '—> a,>< |—> h(a),z’ '—> h(y)}, deoarece 0 I 02 o 01, unde 02 este
deﬁnitd in ememplul de mai sus.

7.2 Cel mai general uniﬁcator

Deﬁnitia 182 (Cel mai general uniﬁcator). O substitutie 0 este cel mai
general uniﬁcator al termenilor t1 $i t2 dacd:

Partea a ll-a - Logica de ordinul I 76 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:77**************
Logieé pentru informatiei 2020-2021 Universitatea Alexandra I 0an Cuza

1. a este unlﬁeator al termenllor t1,t2 el

2. 0' este 0 substitutle mal generala decal oriee uniﬁeator al t1,t2.
Exemplul 183. Fle t1 I f(x,a) $2‘ t2 I f(y,a). Unlﬁeatorul {y »—> X} este
mal general deeat {x r—> a,y '—> a} el orlee alt unlﬁeator al eelor dol termenl.
Exemplul 184. Substitulla 0'1 I {x I—> h(Z),z’ I—> h(y)} este eel mal general
unlﬁeator al termenllor t1 I f(x, h(y)) 52' t2 I f(h(z), Z’).
Teorema 185 (Teorema existentei celui mai general uniﬁeator). Orlee dol
termenl unlﬁeablll an un eel mal general unlﬁeator.
Observatie. in general, eel mal general nnlﬁeator nu este unle.
Exemplul 186. Un nnlﬁeator pentru termenll h(><) 52‘ h(y) este substitutla
{X »—> a, y r—> a} (dar nu este eel mal general unlﬁeator).

Un eel mal general unlﬁeator este {x »—> y}. Un alt eel mal general uniﬁ-
eator este {y »—> x}.

1n continuare, vorn prezenta un algoritrn pentru ealeulul unui eel mai gen-
eralAuniﬁeator.

In aeest seop, avem nevoie de generalizarea nopiunii de uniﬁeare pentru
mai multe pereehi de termeni.
7.3 Problemé de uniﬁcare
Deﬁnitia 187 (Problemé de uniﬁcare). O problemé de uniﬁcare 1P’ este:

0 sau 0 mulllme

1P:{t1 it§,...,tn itill
formatri din n pereehl de termenl
0 sau slmbolnl special
1P’ I 1 (eltlt bottom).

Deﬁnitia 188 (Solugie a unei probleme de uniﬁeare). O substltnlle 0 este 0
soluyie a unez' probleme de unlﬁeare 1P’ daea:

1. problema este cle forma ll” I {t1 I t’1,.. . ,tn I t/n} 52'

2. 0' este unlﬁeator pentru t1- 52' t2, pentru orlee l E {17 . . . 7n}.
Deﬁnitia 189 (Mulﬁimea solutiilor unei probleme de uniﬁeare). Cu anlfGP’)
notdm mullimea solnllllor unel probleme de unlﬁeare 1P’:

unlﬂll”) I {a | a este solugfle a problemel lP}.

Partea a H-a - Logica de ordinul I 77 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:78**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru 10022 Cuza
Observayie. P2222 d6ﬁn2gfia 220152222222 d6 $0lu1f26 a 222262 probleme d6 umﬁcare,
dacd 1P I 1, 015222262 un2f(]P) I (Z).

Exemplul 190. F26 1P I {f(x, a) I f(y7 a)}. Avem Cd un2'f(]P) I {{x »—> z,y »—>
Deﬁnitia 191 (Cea mai generalé solutie). Substituﬁa 0 este 060 ma2 generald
$0l22152'6 pentru 0 problemd d6 22222126026 1P’ I {t1 I ti, . . . ,tn I til} dacd:

1. 0 este solugﬁ2'6 pentru P: 01(22) I 0116;), pentru 02266 1 g 2' g 22;

2. a 6st6 ma2' generalri decdt 02266 altd 50lu1f2'6 pentru P.

Observatie. Observati cd 222 cazul 222 care un2f(]P’) 75 (Z) (problema d6 222221262226
are solut2'2), atunc2 6m2'std cel putm 0 cea ma2' gen6mld 50l22152'6 p6ntru 1P’.
Notatie. Cu mgu(P) notdm 0 66a ma2 96226212ch sol22152'6 a 192002622262 d6 22222ﬁ-
care P (dacd problema 1P a2"6 solutie).

Cu mgu(t1,t2) notdm un cel ma2' general uniﬁcator al 1562206222202" tl,t2

(dacd 156222262222 sunt un2ﬁcab2l2).

Observayie. mgu(t1,t2) I mgu({t1 I t2}).

Deﬁnitia 192 (Formé rezolvaté). O problemd d6 uniﬁcare 1P’ este in formé
rezolvaté dacd 1P’ I 1 sau 1P I {x1 I t’1, . . . ,acn I til} $2 $1- ¢ 21a2"5(tj) pentru
02266 2',j E {1, . . . ,n}.

Exemplul 193. Urmdtoarele probleme d6 umﬁcare sunt 222 formd rezolvata”:

. 1P)1 : {X3 i f(g(a,a),a),x2 i avxl i a}

I 1P2 I l

Urmdtoarele probleme d6 uniﬁcare NU sunt 2n formd rezolvatd:

0 1P3 I {f(><, a) I f(y, a)} (deoarcec in ”p62“66h60” f(><7 a) I f(y, a) termenul
din stdnga nu este 0 var2ab2ld)

o 1P4 I {x1 I f(x2,X3),X2 I X3} (216002666, ch2ar dacd 006m doar va2“2ab2l6
in partea stdngd, 6412251562 2102200210 202 222 part6a stdngd a I $2 apar6 52' in
partea dreaptd a I )

De ce este utilé forma rezolvaté a problemelor de uniﬁcare?

Lema 194. Dacd 1P’ I {901 I #1,. . . ,atn I t2} 6526 2n formd r6z0lvatd, 015222262
{x1 I—> ti, . . . ,atn I—> til} este 660 ma2 9622620ch 501221526 a probl6m62' 1P.
Partea a H-a - Logica de ordinul I 78 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:79**************
Logicé pentru informatici 2020-2021 Universitatea Alexandra I oan Cuza
Urmétoarele reguli pot ﬁ folosite pentru aducerea unei probleme de uniﬁ-
care in formé rezolvaté:
STERGERE 1P LJ {t i t} :> 1P’
DESCOMPUNERE PU {f(t1, . . . ,tn) i f(t’1, . . . 71311)} :>
IPU{t1 it§,...,tn itQL}
ORIENTARE PU {f(t1, . . . ,tn) i m} :> PU {m i f(t1, . . . ,tn)}
ELIMINARE 1P’ U {3: i t} :> (IMP) U {x i t}
dacé x ¢ vars(t), x E vars(P)(unde 0 I {as '—> t})
CONFLICT PU{f(t1,...,tn)ig(t’1,...,t;n)}:>1
OCCURS CHECK PU {:v i f(t1, . . . ,tn)} :> 1
dacé x E vars(f(t1, . . . ,tn))
Transformérile de mai sus an urmétoarele proprietﬁfui:
Lema 195 (Progres). Dace? 1P’ nu este in formd Tezolvatd, atuncz' ean'std 1P’
astfel incdt 1P’ :> P’.
Lema 196 (Pistrarea soluyiilor). Dacd 1P‘ :> 1P”, atuncz' unifUP‘) I unifQP”).
Lema 197 (Terminare). Nu existd 0 secvenﬁa” inﬁnitd IF’ :> P1 i [P2 :> . . . :>
Corolarul 198. Regulile precedente constituie un algoritm de calcul al unei
cele mai generale solutiz' pentru 0 problemd de uniﬁcare, dacd aceasta emistd.
Exemplul 199.
P I {f(g(x1., a),><2) i X3, 1C(X27X2) i f(a,><1)} DESCOIEUNERE
{f(g(x17a),x2) i X3,X2 i a,><2 i x1} EmgARE
{f(g(x1, a), a) i X37X2 i a, a i X1} ORIFQFARE
{f(g(x17 a), a) i X37X2 i a,x1 i a} ELlelgARE
{f(g(a, a), a) i X3,X2 i a,x1 i a} @1ng
{X3 i {(g(aw a)? a)aXZ i ayxl i 3}‘
Partea a H-a - Logica de ordinul I 79 Note de curs - de listat color

***************Ending Page***************

***************Beginning Page***************
***************page number:80**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
Concluzie: {X3 '—> f(g(a, a), a),x2 '—> a,x1 '—> a} este cea mai generald
solutie a problemei d6 uniﬁcare initiale.
Exemplul 200.
1P I mm an» i MW) i M3» Dmim
{f(€;(><17a)7><2) i X37X2 i X3} ORIEzNgARE
{X3 i f(g(X17 a),x2),x2 i X3} EngARE
Explicati de ce nu se mai poate aplica orientare
{X3 i f(g(X1, a)7X3),X2 i X3} OCCURIS>CIIECK
I.
Concluzie: um'ﬂlP’) I (7).
Exemplul 201.
1P’ I {f(g(><17 a)? X2) i X37 f(g(X4,X5)) i 1°(><3)} DESCOEEUNW
{f(g(x1, a),x2) i X37g(X47X5) i X3} ORIEIN>TARE
{mm W2) i X37><3 i g<X4,X5>} mg“
{f(g(><1,a)7><2) I g(X4-,X5)>X3 I g(X4,X5)} Ogm
I.
Concluzz'e: umfﬁ?) : (Z).
7.4 Rezolutie de ordinul I
Rezolupia pentru logica de ordinul I este un sistem deductiv pentru clauze
alcétuit din urmétoarele doué reguli de inferenté:
REZOLUTVIE P(t1, . . . ,tn) v 01 ﬁP(t§, . . . ,m v 02 V1 n v2 I (Z)
BINARA bi _ ; , ; ,
0(01VC'2) 0_mgu({t1_t1,...,tn_tn})
Partea a II-a - Logica de ordinul I 80 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:81**************
Logicé pentru informatici 2020-2021 Universitatea Alexandru I oan Cuza
unde V1 I vars(P(t1, . . . ,tn) \/ C1) $i V2 I vars(ﬁP(t’1,...,t/n) \/ C2).
FACTORIZARE P t ,...,t \/P t’,...,t’ v0
POZITIVA W 0 : mgu({t1 i #1,. . . ,tn i 75H)
a (P(t1,...,tn) \/ C)

Observatie. 0 in cazul in care clauzele care reprezintd ipotezele regulii
REZOLUTIE BINAR/K an variabile in comun (V1 Q V2 75 0), variabilele
uneia dintre clauze trebuie redenumite inainte de a aplica regula (vezi
ememplnl de mai jos);

o in cazul in care problema de uniﬁcare care apare in regula de rezoluiie
nu are soluiie, regula nu poate fi aplicatd.

0 Regula de factorizare pozitivd are 0 singurd ipotezd.

o in cazul in care problema de uniﬁcaie care apare in regula de factOTizare
nu are soluiie, regula nu poate ﬁ aplicatd.

0 Regula d6 factorizare pozitivd este necesard pentru completitudine (vezi
emercitii seminar).

Teorema 202 (Teorema rezolutiei). O formuld 4p I V331. . . . .Vatn.(Cl /\ Cg /\

...Cm), aflatd in FNSC, este nesatisﬁabild dacd 5i numai dacd D se poate

obiine din clauzele 01,. . . , Cm, aplicdnd regulile REZOLUTIE BINARA 5i FAC-

TORIZARE POZITIV/K.

Exemplul 203. Sci demonstrdm chx.(P(x) /\ (—\P(h(x)) \/ Q(f(x))) /\ (—\Q(f(g(a)))))

este nesatiﬁabild, prin rezoluiie d6 ordinal I:

1. P(x)
5’- —'Q(f(g(a)))
4. Q(f(><)) rezolntie binard intre 1 5i 2:
P x’ P h x V f x
—( ) i ( < D M < D a = {x’ H mm Z mgu<{x’ i mm»)
U (Q(f(><)))
5. U rezolutie intre 4 5i 3:
Q(f(><)) “Q(f(g(a))) .
bi U I {X H $01)}: m9U({f(><) I f(g(a))})
U (U)
Partea a H-a - Logica de ordinul I 81 Note de curs - de listat color

***************Ending Page***************


***************Beginning Page***************
***************page number:82**************
Logicé pentru informaticé 2020-2021 Universitatea Alemandru Ioan Cuza
Exemplul 204. Ne propunem sa demonstram ca go : (VX.(P(X) —> Q(x))) /\ P(e) —> C
este ualidd folosz'nd rezolugfz'a pentru LIPH.

Formula go este ualida dacd $11 numai claca —|<p este nesatisﬁabild. Pentru
aceasta, trebule 5a punem formula —|<p in FNSC. Prlmul pas este de a pune
formula —\<p in FNP:

w I ﬁ (Woo) _> Q<x>> A P(e)) _> cm)
E ﬁ ﬁ(vX.(P(X) _> Q(x)) A P(e)) v Q(e))
E ﬁ (ammo) _> Q(><)) A P(e))) \/ (3(6))
E —| Elx.—\((P(x) —> Q(x)) /\ P(e)) V 0(6)
E vx.ﬁ(ﬁ((1>(x) _> Q(X)) /\ P(e)) \/ Q(e) in FNP

Agadarformula 901 = VX.—\(—\((P(X) —> Q(x)) /\ P(e)) \/ Q(e)) este o FNP
pentru go 52' <p E cpl. Formula cpl este de asemenea inchisa 5i nu are cuan-
tiﬁcatorl existentiall sl deci nu necesitd calcularea inchlderil existentiale sau
aplicdru' Skolemlzdrll. Aoadar, este in FNS.

Acum trebule sa punem formula <p1 in FNSC:

(p1 I VX.—|(—|((P(X) _> Q(X)) A P(e)) v Q(e))
E VX.—|—|((P(><) —> Q(><)) /\ P(e)) /\ —\Q(e)
E Vx.((P(x) —> Q(x)) A P(e)) A —\Q(e)
E VX.(—\P(><) V Q(x)) /\ P(e) /\ —\Q(e) in CSNF

Formula <p2 I Vx.(—\P(x) \/ Q(x)) /\ P(e) /\ —\Q(e) este o FNS'C pentru 4,01
5i £02 E 4P1’

Acum putem aplz'ca rezolugfla folosz'nd clauzele din 902 pentru a demonstra
ca aceasta nu este satisﬁablla.

1. —|P(x) v q(><)

2. P(e)

4. —|P(e) Rezolutie binard lntre 1 .52' 3:

—\P \/ —\
0' (ﬁP(e))
5. U Rezolugfie binara intre 2 $2‘ 4:
P(e) “P(E)
— a : (D : m u e é e
6,,(5) 9 ({ })
Partea a H-a - Logica de ordinul I 82 Note de curs - de listat color

***************Ending Page***************



***************Beginning Page***************
***************page number:83**************
Logicé pentru informaticé 2020-2021 Universitatea Alemandru Ioan Cuza

Din aceasta rezultd cd (p2 nu este satisﬁabild.

Dav", (p2 E (p1 52' —|<p E (p1 52' decl —|<p E 902. Asta lnseamnd col —|<p nu este
satisﬁablld, 52' decl 4p este 'ualldd.

7.5 Fi$€1 de exercitii
Exerciigiul 205. Rezolvati urmdtoarele probleme de uniﬁcare:

1- {W1 y) i 1‘(y,><),g(><) i 5(1)};

2- {f(><,y) i 1‘(y,><),g(><) i a};

5’- {f(1‘(><,y)>l)i1‘(y,><),g(1)i $03)};

4- {f(g(><)7y)if(y71),1 i h(a)};

5. {X1 i f(x2.,x2),x2 i f(X3,X3)7X3 i f(x4,x4)}.

Exercitiul 206. Ardtall cd urmdtoarele formula aﬂate in FNSC sunt nesat-
lsﬁablle, foloslncl rezolulla d6 ordlnul I:

1. Vx.Vy.Vz.((—|P(><, z) V R(x, X, 2)) /\ (—\R(e,><, e)) /\ (P(e,y)));

2’ vX-Vy-(hpom v Q(><) v Q(Y)) A (ﬁQ(i(i(e)))) A (PW), mm)-
Exercitiul 207. Stablllll prz'n rezolulle de ordlnul l cd urmdtoarele formula
sunt ualz'de:

1. (VX.(P(X) _> Q(X))) /\ P(e) _> Q(e)

2. ((Vx.Vy.Vz.(P(X, y) /\ P(y, z) —> P(x, Z))) /\ P(x, y) /\ P(y, x)) —> P(x, x);

4. (ﬁVx.Q(X)) <—> (Elx.ﬁQ(x));

5. (—|EIX.Q(X)) H (VX.—1Q(X));

6. (Ely.Vx.P(x, y)) —> (VX.E|y.P(X, y));

'7. (VX.(P(X,><) <—> Q(x))) —> (P(e,e) —> Q(e)).

Partea a H-a - Logica de ordinul I 83 Note de curs - de listat color

***************Ending Page***************


