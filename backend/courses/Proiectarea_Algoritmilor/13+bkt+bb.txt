***************Beginning Page***************
***************page number:1**************
Prmectarea algoritmilor - Flea de exercitn
Seminarul 13 - Backtracklng $1 Branch 85 Bound
Stefan Ciobaca, Dorel Lucanu, Paul Diac
Universitatea Alexandru Ioan Cuza, Iaei
May 29, 2022

1. Numarul de noduri din arborele parcurgerii exhaustive ce determina satisﬁbialitatea formulei
f de mai jos este 24 — 1. Gate dintre aceste noduri se viZiteaZa intr-o procedura backtracking
ce elimina solutiile partiale care sigur nu pot duce 1a satisﬁabilitate?

f I (#1131 \/ $2) /\ ($2 \/ #173) /\ (p.163 \/ LE3)
2. Proiectati un algoritm de tip backtracking pentru problema “submultime de suma data”.
Prin proiectarea se intelege inclusiv specificarea urmatoarelor informatii:
(a) cum este reprezentata o solutie
(b) care sunt solutiile partiale
(c) care sunt succesorii directi ai unei solutii partiale
(d) cand o solutie partiala este viabila

3. Proiectati un algoritm de tip backtracking pentru problema Sudoku.

4. Problema discreta a rucsacului poate ﬁ rezolvata folosind paragidma branch 85 bound,
eliminand solutiile partiale care nu au sansa sa produca un rezultat mai bun. O varianta
pentru functia de evaluare a obiectelor pentru care solutia partiala nu a luat inca o deiczie,
este sa calculam suma valorilor acestora7 ignorand greutatile. Se pot reduce solutiile partiale
pentru care acesta suma adunata cu proﬁtul obiectelor deja adaugate in rucsac nu depaeeste
proﬁtul maxim obtinut de 0 solutie completa gasita pana 1a momentul respectiv.

O varianta mai eﬁcienta propusa este sa rulam strategia greedy pentru obiectele ramase ca
3i cum am rezolva problema rucsacului in versiunea continua si sa folosim proﬁtul obtinut
in acest mod.
(a) demonstrati ca aceasta metoda este corecta7 adica nu se vor elimina solutii partiale ce
pot duce 1a un rezultat mai bun.
(b) gasiti un exemplu pentru care acesta strategie este mai eﬁcienta ca prima varianta,
eliminand cel putin o solutie partiala in plus.
(c) demonstrati ca aceasta metoda elimina pe orice instanta cel putin aceelaei numar de
solutii partiale ca prima varianta.
(d) implementati algoritmul folosind aceasta varianta.

5. Proiectati un algoritm de tip branch & bound pentru problema 15-puZZle. Speciﬁcati ce se
intelege prin solutie partiala, cum se calculeaza costul unei solutii partiale7 cum se poate
margini inferior costul extensiei unei solutii partiale gi care sunt succesorii directi ai unei
solutii partiale.

6. Proiectati un algoritm de tip branch & bound pentru problema Maximum Independent Set.

1

***************Ending Page***************





