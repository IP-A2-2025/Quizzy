[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary motivation for understanding P, NP, and NP-complete problems in computer science?
--InteriorSeparator--
To design more efficient algorithms for computational problems that arise in practice.
--InteriorSeparator--
easy
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the alternative approaches to solving NP-complete problems when a polynomial-time algorithm is unlikely to exist?
--InteriorSeparator--
(right) Accept using a less efficient algorithm in the worst-case scenario.
(right) Use an approximation algorithm.
(wrong) Always use a brute-force approach.
(wrong) Ignore the problem and hope it goes away.
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What distinguishes a decision problem from an optimization problem?
--InteriorSeparator--
A decision problem has a yes/no (true/false) output, while an optimization problem seeks the best solution from a solution space.
--InteriorSeparator--
easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the context of NP-completeness, why can we focus on decision problems without loss of generality?
--InteriorSeparator--
(right) Any optimization problem has an equivalent decision problem.
(wrong) Decision problems are inherently easier to solve.
(right) There's a polynomial-time transformation between optimization and decision problems.
(wrong) Optimization problems are not well-defined.
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Describe the key characteristic of a non-deterministic algorithm.
--InteriorSeparator--
It uses a "choose" instruction, allowing it to explore multiple execution paths simultaneously.
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the possible outcomes of an execution in a non-deterministic algorithm?
--InteriorSeparator--
(right) Success
(right) Failure
(wrong) Loop
(wrong) Warning
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the significance of the asymmetry in the non-deterministic computation model?
--InteriorSeparator--
It prioritizes executions that end in success.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the two main stages into which any polynomial non-deterministic algorithm can be reorganized?
--InteriorSeparator--
(right) Guessing
(right) Verification
(wrong) Optimization
(wrong) Simplification
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Define a Karp reduction from problem X to problem Y.
--InteriorSeparator--
An algorithm that transforms an input for problem X into an input for problem Y, such that solving Y will solve X.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the existence of an efficient Karp reduction from problem X to problem Y imply?
--InteriorSeparator--
(right) Problem X is not computationally harder than problem Y.
(wrong) Problem Y is easier to solve than problem X.
(wrong) Problem X is in P.
(wrong) Problem Y is NP-complete.
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the definition of the complexity class P?
--InteriorSeparator--
The class of decision problems that can be solved by a deterministic algorithm in polynomial time.
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following problems belong to the complexity class P?
--InteriorSeparator--
(right) 2-SAT
(right) Bipartite Graph Testing
(wrong) 3-SAT
(wrong) Hamiltonian Circuit
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the definition of the complexity class NP?
--InteriorSeparator--
The class of decision problems that can be solved by a non-deterministic algorithm in polynomial time.
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Why is it believed that P is a subset of NP?
--InteriorSeparator--
(right) Every problem in P can be solved by a non-deterministic algorithm in polynomial time.
(wrong) NP stands for Non-Polynomial.
(wrong) Problems in P cannot be solved deterministically.
(wrong) There is no known relationship between P and NP.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a common misconception about the abbreviation "NP"?
--InteriorSeparator--
It is often mistaken to mean "Non-Polynomial," but it actually stands for "Non-deterministic Polynomial."
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
According to the provided information, what is the nature of the relationship between P and NP?
--InteriorSeparator--
(right) It is suspected that P is a strict subset of NP.
(wrong) It has been proven that P equals NP.
(wrong) There is no overlap between P and NP.
(wrong) P is a superset of NP.
--InteriorSeparator--
hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Define an NP-complete problem.
--InteriorSeparator--
A problem X is NP-complete if it is in NP, and every other problem in NP can be reduced to X in polynomial time.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does it mean if a problem is NP-hard?
--InteriorSeparator--
(right) Every problem in NP can be reduced to it in polynomial time.
(wrong) The problem is in NP.
(wrong) The problem can be solved in polynomial time.
(wrong) The problem is not solvable.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What theorem is attributed to Cook (1971) regarding NP-completeness?
--InteriorSeparator--
The problem 3-SAT is NP-complete.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Why is proving that every problem in NP can be reduced to 3-SAT a difficult task when establishing the NP-completeness of 3-SAT?
--InteriorSeparator--
(right) Because there are infinitely many problems in NP.
(wrong) 3-SAT is trivially in P.
(wrong) The reduction requires exponential time.
(wrong) It's not difficult; the reduction is straightforward.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Explain the strategy used to demonstrate that 3-COL is NP-complete, given that 3-SAT is already known to be NP-complete.
--InteriorSeparator--
Show that 3-COL is in NP and that 3-SAT can be reduced to 3-COL in polynomial time.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the significance of proving that a problem is NP-complete?
--InteriorSeparator--
(wrong) It indicates that the problem can be solved efficiently.
(right) It suggests that finding a polynomial-time algorithm for the problem is unlikely.
(right) It prompts the exploration of alternative solution approaches.
(wrong) It guarantees that the problem is unsolvable.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the "truth gadget" in the reduction from 3-SAT to 3-COL?
--InteriorSeparator--
To establish three distinct colors (T, F, and O) representing true, false, and other, respectively.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the 3-SAT to 3-COL reduction, what role does the "variable gadget" serve?
--InteriorSeparator--
(wrong) Represents the variables in a graph.
(right) To ensure that a variable and its negation are assigned opposite truth values.
(wrong) To calculate the truth values.
(right) Connects each variable to the "other" node.
--InteriorSeparator--
hard
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the function of the "clause gadget" in the 3-SAT to 3-COL reduction?
--InteriorSeparator--
To compute the truth value of each clause and ensure that all clauses are satisfied.
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is simulated by a triangle in the clause gadget?
--InteriorSeparator--
(right) An OR gate
(wrong) An AND gate
(wrong) A NOT gate
(wrong) A XOR gate
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the conclusion drawn from the fact that many combinatorial optimization problems are NP-complete?
--InteriorSeparator--
It is unlikely that polynomial-time algorithms exist for them, and alternative approaches should be considered.
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are some strategies to address NP-complete problems in practice?
--InteriorSeparator--
(right) Approximation algorithms
(right) Heuristics
(wrong) Exhaustive search in polynomial time
(wrong) Ignoring the problem
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Provide an example of two problems that are apparently similar but belong to different complexity classes (one in P and one NP-complete).
--InteriorSeparator--
SHORTEST-PATH (in P) vs. LONGEST-PATH (NP-complete).
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following pairs consist of a problem in P and a similar NP-complete problem?
--InteriorSeparator--
(right) 2-SAT vs 3-SAT
(wrong) Hamiltonian Tour vs. Shortest Path
(right) 2-COL vs 3-COL
(wrong) 3-SAT vs. Longest Path
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What makes the Graph Isomorphism (GI) problem unique in the context of NP-completeness?
--InteriorSeparator--
It is one of the few problems for which no polynomial-time algorithm has been found, nor has it been proven to be NP-complete.
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.15722759756008958}]