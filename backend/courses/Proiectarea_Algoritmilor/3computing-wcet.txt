***************Beginning Page***************
***************page number:1**************
Computing the worst case time complexity I

Dorel Lucanu

Faculty of Computer Science
Alexandru loan Cuza University, lasi, Romania
dlucaaninfo . uaic . ro

PA 2021/2022
m r51 - '= :E QQO
Computing the worst case time complexity PA 2021/2022 1/15

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
These notes includes some hints on how to compute the worst case
execution time for algorithms written in Alk.
El 5' i E :5 QQG
Computing the worst case time complexity PA 2021/2022 2/15

***************Ending Page***************


***************Beginning Page***************
***************page number:3**************
—
Computing the worst case time complexity 1/3
0 A is an expression E Without function (algorithm) calls:
TAG/(n) : max{timed(|[E]|(0)) l sized(a|va,(x)) : n} (a kind of)
o A is an assignment X : E;
TA7d(n) I TE7d(n)
0 A is if (E) 51 else 52:
TA,d(n) = max{ T51,d(n), T52,d(n)} —l— TE,d(n)
o A is a sequential composition 51 52:
TA,d(") I T51,d(") + T52,d(")
i:| r51 2 E :5 {JQCV
Computing the worst case time complexity PA 2021/2022 3/15

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
—
Computing the worst case time complexity 2/3
0 A is an iterative instruction (e.g.,while, for): only an
approximation can be computed
o solution 1 (better approximation):
o compute the maximum number of iterations nMax
0 compute the worst case time complexity for each iteration, say
T1, . . ., TnMaX
o take TA,d(n) : T1 + . - - + TnMaX
o solution 2 (coarser approximation):
0 compute the maximum number of iterations nMax
0 find the worst case iteration and compute the worst case time
complexity for this iteration, say Tim/13X
o take TA,d(n) I nMax >< Tit/Wax
Computing the worst case time complexity PA 2021/2022 4/15

***************Ending Page***************


***************Beginning Page***************
***************page number:5**************
Computing the worst case time complexity 3/3
o Atention to the cases of lists, sets, ... :
s = O;
for(i = O; i < 1.size(); ++i) // 1 is a linear list
s = s + l.at(i);
s = emptySet;
forall X in a // a is a set
if (X Z 2 == O) s = s U singletonSet(X);
You have to mention the complexity of each operation.
o Function (algorithm) calls:
o estimate the size of arguments as a function depending on the size of
instance n
o use the worst case time of the called algorithm computed for the
estimated size of the arguments
Computing the worst case time complexity PA 2021/2022 5/15

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
—
Computing the worst case time complexity in practice
o usually the uniform case is used
o only a part of operations are analysed (e.g., comparisons,
assignments)
0 the function classes O(f(n)), Q(f(n)),9(f(n)) are used to give
approximations for TAO/(n)
Recall:
0(f(")) I {g(") l (3C > OM10 2 OXV" 2 "0)lg(")l S C‘ lf(")l}
90%)) : {g(") | (36 > Omo Z 0W" Z "0)lg(")l Z C - lf(")l}
90%)) I {g(") l (561,62 > OM10 Z 0)(V" 2 no)¢1~lf(")l S |g(")l S (12- |f(")l}
Computing the worst case time complexity PA 2021/2022 6/15

***************Ending Page***************


***************Beginning Page***************
***************page number:7**************
Example 1 1/2
input: n, (ao, . . . , a,,_1),z integers.
mini a-:z ifia-Iz Q)
output: poz: { I I } { I _' }7é ’
—1 0therw1se.
i = O;
While (a[i] != z) and (i < n-1)
i = 1+1;
if (a[i] == z) poz = i;
else poz = —1;
El 5' i E :5 QQG
Computing the worst case time complexity PA 2021/2022 7/15

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
—
Analysis Example 1 2/2
0 type of cost: uniform
o size of an instance: n
o analysed operations: comparisons involving array elements
o the worst case: z occurs ﬁrst time on position n — 1 or does not occur
in a
0 a while loop: 1 comparison
0 the number of iterations for the worst case: n — 1
o execution time for the worst case: TA(n) : (n — l) + 1 : n
cl 51 2 E :2 Q1\Qv
Computing the worst case time complexity PA 2021/2022 8/15

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
Example 2 1/2
input: n, (a0, . . . , an_1) integers.
output: max = max{a,- IO g i g n — 1}.
max = a[0];
for (i = 1; i < n; i++)
if (a[i] > max)
max = a[i];
El r51 i E :5 QQQ
Computing the worst case time complexity PA 2021/2022 9/15

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
—
Analysis Example 2 2/2
o type of cost: uniform
o size of an instance: n
o analysed operations: assignments involving array elements
o the worst case: a is increasing
0 a while loop: 1 assignment (always a[i] > max)
0 the number of iterations for the worst case: n — 1
0 execution time for the worst case: TA(n) : (n — 1) + 1 : n
cl 51 t E :2 QQCV
Computing the worst case time complexity PA 2021/2022 10/15

***************Ending Page***************


***************Beginning Page***************
***************page number:11**************
Analysis Example 3 1/3
input: n Z O integers.
,, .
output: sum : 2,21 I
sum = O;
for (i = 1; i <= n; ++i)
sum = sum + i;
El i5‘ ' _= IE ‘)QG
Computing the worst case time complexity PA 2021/2022 11/15

***************Ending Page***************


***************Beginning Page***************
***************page number:12**************
—
Analysis Example 3 2/3
0 type of cost: uniform
o size of an instance: n
o analysed operations: assignments involving sum
o the worst case: there is only one case, which is the worst and the
most favorable
0 a for loop: 1 assignment
0 the number of iterations for the worst case: n
o execution time for the worst case: TA(n) : n
cl 51 2 E :2 oqo
Computing the worst case time complexity PA 2021/2022 12/15

***************Ending Page***************


***************Beginning Page***************
***************page number:13**************
—
Analysis Example 3 3/3
o type of cost: logarithmic for problem size, uniform for operations
o size of an instance: m I log n
o analysed operations: assignments involving sum
o the worst case: n : 2"Pl (the biggest natural number that can be
binarily represented on m bits)
o a for loop: 1 assignment
o the number of iterations for the worst case: n : 2m
o execution time for the worst case: TA(m) I 2m
Exercise: Compute TA(m) taking into account the logarithmic time for the
operations.
Computing the worst case time complexity PA 2021/2022 13/15

***************Ending Page***************


***************Beginning Page***************
***************page number:14**************
Analysis Example 4 1/2
input: D a digraf, i0 a vertex
output: S I the set of vertices reachable from i0
P : emptyMap;
foreach i from D.V
Pli] : DAll];
SB : <i0>;
S I {i0};
while (SB.size() > O)
{ i = SB.topFront();
if (p[i]1size() I O){
SB.popFront();
ilse {
j = p[i].topFront();
Plil-POPFrontO;
if (In in S>>{
// visit j
s : s u {J};
SB.pushFront(j);
}
}
}
El 5' i E :5 ‘)QG
Computing the worst case time complexity PA 2021/2022 14/15

***************Ending Page***************


***************Beginning Page***************
***************page number:15**************
—
Analysis Example 4 2/2
o type of cost: uniform
0 size of an instance: n I D.V.size()
0 assumptions: time(B.popFront()) I 0(1), time(B.topFr0nt()) I 0(1),
time(B.pushFront(j)) I 0(1), time(5 U {j}) I 0(1) 1
o analysed operations: all those involving vertices
o the worst case: D.a[i].size() I n — 1 for each i (a complete digraph)
O foreach: 0(n), assuming that the time for p[i] I D.a[i]; is 0(1)
O while: the number of iterations for the worst case is
Z,- D.a[i].size() I n - (n I 1)
the time for while-body is 0(1) since all operations inside have the
execution time 0(1)
o execution time for the worst case:
TA(n) I 0(1) + 0(n) + n - (n — 1) - 0(1) I 0(n2)
1It must be an implementations with these execution times.
Computing the worst case time complexity PA 2021/2022 15/15

***************Ending Page***************

