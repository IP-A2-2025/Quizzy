[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is a key characteristic of NP-complete problems that motivates the use of backtracking and branch & bound?
--InteriorSeparator--
No one knows polynomial solutions for them.
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the fundamental approach used by exhaustive search?
--InteriorSeparator--
Enumerating or generating all possible solutions.
--InteriorSeparator--
easy
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a significant drawback of exhaustive search?
--InteriorSeparator--
Combinatorial explosion
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are common examples of combinatorial explosion in exhaustive search?
--InteriorSeparator--
(right) Permutations, orderings
(right) Binary assignments and subsets
(wrong) Linear assignments
(wrong) Integer assignments
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the generic iterative implementation of exhaustive search, what is the purpose of the `validSolution` function?
--InteriorSeparator--
To filter out solutions that do not meet the problem's criteria.
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What key improvement does backtracking offer over exhaustive search?
--InteriorSeparator--
It checks the validity of partial solutions to prune branches.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the context of the N-Queens problem, which of the following conditions indicates that two queens are attacking each other?
--InteriorSeparator--
(right) They are on the same diagonal.
(right) They are on the same column.
(wrong) They are on different rows and columns.
(wrong) They are on adjacent squares.
--InteriorSeparator--
medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the N-Queens problem, if we sort the x values of the placed queens, what permutation do we get?
--InteriorSeparator--
The identity permutation.
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the `underAttack` function in the N-Queens solution check?
--InteriorSeparator--
Whether a square is attacked by a queen from higher rows.
--InteriorSeparator--
medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the significance of "undoing the choice" when backtracking in the N-Queens problem?
--InteriorSeparator--
It allows exploration of other possible placements on the same level after a recursive call returns.
--InteriorSeparator--
hard
--InteriorSeparator--
20
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the goal of the SAT problem?
--InteriorSeparator--
To find a {true, false} assignment to variables that makes the formula true.
--InteriorSeparator--
easy
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the CNF form of a SAT problem, what are clauses composed of?
--InteriorSeparator--
(right) Disjunctions of literals
(wrong) Conjunctions of variables
(wrong) Disjunctions of variables
(right) Literals
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How are literals represented in an array for SAT problems, and what does the sign indicate?
--InteriorSeparator--
By the indices of the variables, with a negative sign indicating negation.
--InteriorSeparator--
hard
--InteriorSeparator--
22
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the SAT exhaustive search approach, when can the search stop if a satisfying assignment is found?
--InteriorSeparator--
At the first satisfying assignment.
--InteriorSeparator--
medium
--InteriorSeparator--
24
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the primary goal of backtracking in solving SAT problems?
--InteriorSeparator--
To prune branches of the search tree that cannot lead to a solution.
--InteriorSeparator--
medium
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In SAT backtracking, what condition makes a clause "unsatisfied regardless of yet-unassigned variables"?
--InteriorSeparator--
When the clause contains only assigned variables, and all are assigned to the opposite value.
--InteriorSeparator--
hard
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the `possiblySatisfying` function for SAT backtracking, what does `unSATLit` represent?
--InteriorSeparator--
(right) The number of unsatisfied literals
(wrong) The number of unassigned literals
(wrong) The number of satisfied clauses
(right) Number of unsatisfied literals in a clause
--InteriorSeparator--
medium
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of setting `val[level] = ?` after a recursive call in the SAT backtracking implementation?
--InteriorSeparator--
To undo the choice made and explore other possible values for the current level.
--InteriorSeparator--
hard
--InteriorSeparator--
33
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main characteristic that differentiates Branch & Bound from Backtracking?
--InteriorSeparator--
Branch & Bound is used for optimization problems
--InteriorSeparator--
medium
--InteriorSeparator--
38
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does Branch & Bound utilize 'bestSoFar' and 'maxRest' to potentially prune branches in a maximization problem?
--InteriorSeparator--
If `partialProfit + maxRest` is less than or equal to `bestSoFar`, the branch is pruned.
--InteriorSeparator--
hard
--InteriorSeparator--
39
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the Discrete Knapsack problem, what are the constraints on selecting an object?
--InteriorSeparator--
Each object can be taken as a whole or not at all.
--InteriorSeparator--
easy
--InteriorSeparator--
40
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the Knapsack problem, how is 'use[i]' defined in a partial solution?
--InteriorSeparator--
(right) 'use[i] = 1' if object 'i' is included in the knapsack
(wrong) 'use[i] = 0' if the object's value equals zero
(wrong) 'use[i] = -1' if the object should be excluded
(right) 'use[i] = 0' if object 'i' is not included in the knapsack
--InteriorSeparator--
medium
--InteriorSeparator--
41
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is `maxRest` computed in the Knapsack problem, and why is it considered an optimistic estimate?
--InteriorSeparator--
It's computed as the sum of values of the remaining objects, assuming the capacity restriction will have no effect.
--InteriorSeparator--
hard
--InteriorSeparator--
42
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the Knapsack implementation, what two conditions must be met to continue branching in the `branchAndBound` method?
--InteriorSeparator--
`partialWeight <= W` and `partialProfit + maxRest[level+1] > bestSoFar`.
--InteriorSeparator--
hard
--InteriorSeparator--
46
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which improvements can be made to the Branch & Bound solution for the knapsack problem?
--InteriorSeparator--
(right) Initialize bestSoFar with the greedy strategy for the discrete knapsack.
(wrong) Compute maxRest by using dynamic programming for continuous knapsack.
(right) Compute maxRest by running the greedy strategy for the continuous version of the knapsack
(wrong) Initialize bestSoFar to 0
--InteriorSeparator--
hard
--InteriorSeparator--
47
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a Hamiltonian Cycle in an undirected graph?
--InteriorSeparator--
A closed loop in which every node is visited exactly once, and consecutive nodes are connected by an edge.
--InteriorSeparator--
medium
--InteriorSeparator--
49
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What distinguishes the Traveling Salesperson Problem (TSP) from finding a Hamiltonian Cycle?
--InteriorSeparator--
TSP seeks the minimum cost Hamiltonian Cycle.
--InteriorSeparator--
medium
--InteriorSeparator--
51
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In TSP, if inexistent edges are assigned infinite costs, what is the implication for cycles containing such edges?
--InteriorSeparator--
Invalid cycles effectively become suboptimal.
--InteriorSeparator--
hard
--InteriorSeparator--
54
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How can the minRest be computed for TSP using the cheapest edges, and what does it represent?
--InteriorSeparator--
It represents a lower bound on the cost of completing the cycle. It consists of the minimum cost of n-level-2 edges, the min edge from h[level] to rest, and the min edge from rest to h[0].
--InteriorSeparator--
hard
--InteriorSeparator--
57
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.181116779134533}]