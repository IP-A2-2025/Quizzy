[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is a paradigm in the context of algorithm design?
--InteriorSeparator--
A general method to solve a class of problems.
--InteriorSeparator--
easy
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are paradigms of algorithm design?
--InteriorSeparator--
(right) Greedy
(right) Divide et Impera
(wrong) Artificial Intelligence
(wrong) Quantum Computing
--InteriorSeparator--
medium
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What type of problems is the greedy paradigm primarily used to solve?
--InteriorSeparator--
Optimization problems
--InteriorSeparator--
easy
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does solving an optimization problem correctly with an algorithm entail?
--InteriorSeparator--
Producing an optimal solution in all cases.
--InteriorSeparator--
medium
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens if a greedy algorithm does *not* produce the optimal solution for an optimization problem?
--InteriorSeparator--
(right) Look for another method like backtracking or dynamic programming.
(right) Accept an approximate solution if the difference is tolerable.
(wrong) Discard the problem.
(wrong) Always use brute force.
--InteriorSeparator--
medium
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the context of the bin-packing problem, what is the goal?
--InteriorSeparator--
To arrange objects in a container using minimal space.
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main reason for using sprite-packing in 2D games?
--InteriorSeparator--
To increase game performance by reducing the number of textures.
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
For what systems of banknotes, does the strategy of always paying with the largest possible banknote lead to an optimal solution (fewest banknotes)?
--InteriorSeparator--
(right) The current Romanian banknote system.
(wrong) Any banknote system
(wrong) Banknote systems without a 1-unit denomination.
(wrong) All countries of the European Union.
--InteriorSeparator--
hard
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the activity selection problem, what is the goal?
--InteriorSeparator--
To select a maximum number of non-overlapping activities.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the activity selection problem, what condition must activities i and j satisfy to be compatible (non-overlapping)?
--InteriorSeparator--
(right) si >= fj
(right) sj >= fi
(wrong) si = sj
(wrong) fi = fj
--InteriorSeparator--
medium
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the "greedy choice property" in the context of activity selection?
--InteriorSeparator--
There exists an optimal solution that includes the activity that finishes earliest.
--InteriorSeparator--
hard
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In activity selection, what is a subproblem?
--InteriorSeparator--
A subset of activities.
--InteriorSeparator--
easy
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Define the optimal substructure property in the context of activity selection
--InteriorSeparator--
Subsolutions of an optimal solution are optimal solutions for subproblems.
--InteriorSeparator--
hard
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the key characteristics of greedy algorithms?
--InteriorSeparator--
(right) They make a sequence of local choices.
(right) Once a choice is made, it cannot be reconsidered.
(wrong) They always lead to a global optimum.
(wrong) They use dynamic programming.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the goal in the continuous knapsack problem?
--InteriorSeparator--
To maximize the value of items placed in a knapsack, allowing fractional amounts of items.
--InteriorSeparator--
easy
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the greedy approach that leads to the optimal solution in the continuous knapsack problem?
--InteriorSeparator--
Choose as much as possible from the item with the highest value per unit weight.
--InteriorSeparator--
medium
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What makes the discrete knapsack problem different from the continuous knapsack problem?
--InteriorSeparator--
Items cannot be fractioned; they must be taken entirely or not at all.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why do greedy approaches fail to produce an optimal solution for the discrete knapsack problem?
--InteriorSeparator--
Because taking the locally optimal choice at each step does not guarantee a globally optimal selection of whole items.
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the motivation for using Huffman codes?
--InteriorSeparator--
To compress data by assigning shorter codes to more frequent characters.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a prefix code?
--InteriorSeparator--
(right) A code where no codeword is a prefix of another codeword.
(wrong) A code with a fixed length.
(wrong) A code with variable-length characters.
(wrong) A code always starting with '1'.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the greedy algorithm for generating prefix codes?
--InteriorSeparator--
Combine the characters with the lowest frequencies.
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a Matroid?
--InteriorSeparator--
A pair (S, I) where S is a finite set and I is a non-empty set of subsets of S, satisfying the heredity and exchange properties.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the properties that a matroid must satisfy?
--InteriorSeparator--
(right) Heredity
(right) Exchange
(wrong) Optimality
(wrong) Recursion
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the heredity property of a matroid?
--InteriorSeparator--
If B is in I, and A is a subset of B, then A is also in I.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the exchange property of a matroid?
--InteriorSeparator--
If A and B are in I, and |A| < |B|, then there exists x in B \ A such that A U {x} is in I.
--InteriorSeparator--
hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the function w: S -> N do in the context of a weighted matroid?
--InteriorSeparator--
It assigns a weight to each element in S.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the goal of the Minimum Spanning Tree (MST) problem?
--InteriorSeparator--
To find a tree connecting all vertices of a graph with the minimum total edge cost.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Kruskal's algorithm for finding an MST is an instance of what type of algorithm?
--InteriorSeparator--
Greedy algorithm
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does Kruskal's algorithm work?
--InteriorSeparator--
It starts with an empty set of edges and adds edges in increasing order of cost, as long as adding an edge does not create a cycle.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
The edge set of a graph is an independent set in the matroid associated with the graph if and only if...
--InteriorSeparator--
... it does not contain a cycle.
--InteriorSeparator--
hard
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the advantages of using matroids to solve optimization problems?
--InteriorSeparator--
(right) It guarantees that the greedy algorithm produces the optimal solution.
(right) It is only necessary to demonstrate that the problem can be modeled as a matroid.
(wrong) The implementation is always simpler.
(wrong) Matroids can solve all optimization problems.
--InteriorSeparator--
hard
--InteriorSeparator--
13
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.1787459690101578}]