[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main topic of the provided material?
--InteriorSeparator--
Examples of Nondeterministic Algorithms
--InteriorSeparator--
easy
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following problems are discussed in the provided material?
--InteriorSeparator--
(right) N Queens Problem
(right) Subset Sum Problem (SSP)
(wrong) Traveling Salesperson Problem
(wrong) Tower of Hanoi
--InteriorSeparator--
medium
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the `nqueens` algorithm presented?
--InteriorSeparator--
O(n^2)
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the N Queens Problem algorithm, what does the `attacked(i, j, b)` function check?
--InteriorSeparator--
(right) If placing a queen at position (i, j) on board 'b' will result in an attack.
(wrong) If the board 'b' is a valid solution to the N Queens problem.
(wrong) If position (i, j) is already occupied by a queen.
(wrong) The total number of attacked positions.
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the goal of the Subset Sum Problem (SSP)?
--InteriorSeparator--
To find a subset of a given set of integers that sums to a target value.
--InteriorSeparator--
easy
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the SSP algorithm, what does `PM` represent?
--InteriorSeparator--
The partial sum of the chosen subset.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the time complexity of the SSP algorithm, assuming T(S \ singletonSet(x)) is O(1)?
--InteriorSeparator--
(right) O(n)
(wrong) O(n^2)
(wrong) O(log n)
(wrong) O(n log n)
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the difference between SSP and SSP3, according to the material provided?
--InteriorSeparator--
The material does not explicitly state a difference between the two problems.
--InteriorSeparator--
hard
--InteriorSeparator--
2, 9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `isPrime(x)` function in the "Get a Prime" algorithm?
--InteriorSeparator--
To determine if a given number 'x' is a prime number.
--InteriorSeparator--
easy
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the "Get a Prime" algorithm, what range of numbers is searched for a prime number?
--InteriorSeparator--
(right) 2 to n
(wrong) 0 to n
(wrong) 1 to n
(wrong) 2 to n-1
--InteriorSeparator--
easy
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why might the initial "Get a prime" algorithm fail?
--InteriorSeparator--
Because the chosen 'x' might not be prime.
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What makes the "Get a prime: a Non-Failing Algorithm" non-failing?
--InteriorSeparator--
(right) It explores all possibilities by removing non-prime numbers from the set `s`.
(wrong) It uses a more efficient primality test.
(wrong) It guesses prime numbers until it finds one.
(wrong) It always starts with the smallest possible prime number.
--InteriorSeparator--
hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the variable 'found' indicate in the non-failing "Get a prime" algorithm?
--InteriorSeparator--
Whether a prime number has been found.
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a key characteristic of the algorithms discussed in the provided text?
--InteriorSeparator--
(right) They are nondeterministic
(wrong) They are always efficient
(wrong) They guarantee a solution in polynomial time
(wrong) They are deterministic
--InteriorSeparator--
easy
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the input to the N Queens Problem?
--InteriorSeparator--
A chessboard of size n x n.
--InteriorSeparator--
easy
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the output of the N Queens Problem?
--InteriorSeparator--
(right) A placement of n chess queens on the board where no two queens attack each other.
(wrong) The number of possible solutions for placing the queens.
(wrong) A list of all attacked positions on the board.
(wrong) The total number of queens that can be placed on the board.
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the SSP algorithm, what does `S \ singletonSet(x)` do?
--InteriorSeparator--
Removes element 'x' from the set 'S'.
--InteriorSeparator--
medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What condition must be met for the SSP algorithm to consider choosing the k-th element?
--InteriorSeparator--
(right) PM != M
(wrong) PM == M
(wrong) PM > M
(wrong) PM < M
--InteriorSeparator--
hard
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the SSP3 algorithm, what is the role of 'k'?
--InteriorSeparator--
It is a chosen value from 1 to the size of the set S, representing the number of elements to choose.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens if `PM = M` in the SSP3 algorithm?
--InteriorSeparator--
(right) The algorithm succeeds.
(wrong) The algorithm fails.
(wrong) The algorithm restarts with a different 'k' value.
(wrong) The algorithm prints an error message.
--InteriorSeparator--
medium
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
In the "Get a Prime" algorithm, what is the input 'n'?
--InteriorSeparator--
An integer greater than or equal to 2.
--InteriorSeparator--
easy
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the output of the "Get a Prime" algorithm?
--InteriorSeparator--
(right) An arbitrary prime number x in the range 2..n.
(wrong) All prime numbers in the range 2..n.
(wrong) The smallest prime number in the range 2..n.
(wrong) A list of factors for the number n.
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `s :{ 2 .. n };` line in the non-failing "Get a prime" algorithm?
--InteriorSeparator--
It initializes a set 's' with all integers from 2 to n.
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What condition is checked in the while loop of the non-failing "Get a prime" algorithm?
--InteriorSeparator--
(right) !found
(wrong) found
(wrong) isPrime(x)
(wrong) x < n
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why is the non-failing "Get a prime" algorithm considered deterministic in practice?
--InteriorSeparator--
Because it explores all possible choices, guaranteeing a correct answer, even though it uses a "choose" operation.
--InteriorSeparator--
hard
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens to 'x' if it's *not* a prime number in the non-failing "Get a Prime" algorithm?
--InteriorSeparator--
(right) It's removed from the set 'S'.
(wrong) It's incremented by 1.
(wrong) The algorithm restarts.
(wrong) It is ignored, and the next number is checked.
--InteriorSeparator--
medium
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does the non-failing "Get a prime" algorithm handle failure scenarios?
--InteriorSeparator--
Instead of failing, it removes the non-prime element and continues searching for a prime number.
--InteriorSeparator--
hard
--InteriorSeparator--
15, 16
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following is a characteristic of nondeterministic algorithms as presented in the document?
--InteriorSeparator--
(right) They involve a "choose" operation, which can lead to different execution paths.
(wrong) They always find the optimal solution.
(wrong) They are always faster than deterministic algorithms.
(wrong) They do not require any input.
--InteriorSeparator--
medium
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the statement `$ alki -a nqueens.a1k -m` likely represent?
--InteriorSeparator--
It's a command to execute the `nqueens.a1k` algorithm using the `alki` tool.
--InteriorSeparator--
medium
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the notation `S |â€”> 1, 3, 4, 7, 9` represent in the examples?
--InteriorSeparator--
(right) The set S contains the elements 1, 3, 4, 7, and 9.
(wrong) The sum of the elements in set S is 1+3+4+7+9.
(wrong) The set S maps to the numbers 1, 3, 4, 7, and 9.
(wrong) S is being assigned to the power of 9.
--InteriorSeparator--
medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why is the initial "Get a prime" algorithm considered nondeterministic?
--InteriorSeparator--
Because it involves choosing a value 'x' from a range, and different choices may lead to success or failure.
--InteriorSeparator--
hard
--InteriorSeparator--
13, 14
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the meaning of `failure` in the demo examples?
--InteriorSeparator--
(right) The algorithm did not find a solution in that particular execution.
(wrong) The algorithm has crashed.
(wrong) The input was invalid.
(wrong) A bug was found in the algorithm.
--InteriorSeparator--
medium
--InteriorSeparator--
5, 8, 11, 14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the significance of the `choose` keyword in the presented algorithms?
--InteriorSeparator--
It indicates a non-deterministic step where the algorithm arbitrarily selects a value from a set of options.
--InteriorSeparator--
hard
--InteriorSeparator--
4, 7, 10, 13, 15
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What happens when the `isPrime(x)` function returns false in the Get a prime algorithm?
--InteriorSeparator--
(right) The algorithm may fail and terminate, or choose a different `x` in the next execution (original algorithm).
(right) The non-failing algorithm removes x from set 's' and chooses a new x.
(wrong) The algorithm immediately terminates with a success message.
(wrong) The algorithm prints an error message and exits.
--InteriorSeparator--
hard
--InteriorSeparator--
13, 14, 15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Explain why the non-failing "Get a prime" algorithm is considered an exploration of all non-deterministic executions?
--InteriorSeparator--
Because the while loop continues as long as a prime is not found, and it systematically eliminates non-prime numbers, essentially trying all possible choices of 'x' until a prime is found.
--InteriorSeparator--
hard
--InteriorSeparator--
15, 16
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which aspects of a non-deterministic algorithm are demonstrated in the provided material?
--InteriorSeparator--
(right) The use of the `choose` operation
(right) The potential for multiple execution paths.
(wrong) The guaranteed efficiency in all cases.
(wrong) Deterministic behavior.
--InteriorSeparator--
hard
--InteriorSeparator--
4, 7, 10, 13, 15
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.19317945543226306}]