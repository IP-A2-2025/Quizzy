[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the Boyer-Moore algorithm known for?
--InteriorSeparator--
Being one of the most efficient algorithms in practice.
--InteriorSeparator--
Easy
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In what applications is the Boyer-Moore algorithm implemented?
--InteriorSeparator--
(right) Text editors for find and replace
(right) Tools like grep
(wrong) Image processing software
(wrong) Database management systems
--InteriorSeparator--
Easy
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What makes the Boyer-Moore algorithm potentially faster with increasing input size?
--InteriorSeparator--
Comparisons allow skipping some characters in the text.
--InteriorSeparator--
Medium
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How does the Boyer-Moore algorithm differ from the naive and KMP algorithms in testing for a match?
--InteriorSeparator--
It traverses the pattern from right to left.
--InteriorSeparator--
Medium
--InteriorSeparator--
1
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What two pieces of information does the Boyer-Moore algorithm use to increment the shift upon a mismatch?
--InteriorSeparator--
(right) The bad character
(right) The good suffix
(wrong) The pattern length
(wrong) The text length
--InteriorSeparator--
Easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the two rules for calculating new shifts in the Boyer-Moore algorithm?
--InteriorSeparator--
The bad character rule and the good suffix rule.
--InteriorSeparator--
Easy
--InteriorSeparator--
2
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
According to the bad character rule, how should the pattern be shifted to potentially find a match?
--InteriorSeparator--
So that the rightmost occurrence of the bad character in the pattern is aligned with the position of the bad character in the text.
--InteriorSeparator--
Medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if the bad character does not appear in the pattern?
--InteriorSeparator--
The pattern is shifted past the bad character in the text.
--InteriorSeparator--
Medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What adjustment is made if the bad character rule suggests a shift backward?
--InteriorSeparator--
Increment the shift by one or use the good suffix rule.
--InteriorSeparator--
Hard
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
According to the good suffix rule, how should the pattern be shifted if the good suffix appears elsewhere in the pattern?
--InteriorSeparator--
So that the rightmost occurrence of the good suffix (excluding the current one) in the pattern is aligned with the good suffix in the text.
--InteriorSeparator--
Medium
--InteriorSeparator--
7
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens if the good suffix doesn't appear elsewhere in the pattern?
--InteriorSeparator--
Align the largest prefix of the pattern that is also a suffix with the good suffix.
--InteriorSeparator--
Medium
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Does the good suffix rule guarantee progress (no shift backward)?
--InteriorSeparator--
Yes.
--InteriorSeparator--
Medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What two queries need to be answered efficiently during the preprocessing stage for the Boyer-Moore algorithm?
--InteriorSeparator--
Finding the last position of a character in the pattern and finding the last occurrence of a suffix in the pattern.
--InteriorSeparator--
Hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the BC table store for the bad character rule?
--InteriorSeparator--
The position of the last occurrence of each character in the pattern.
--InteriorSeparator--
Medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the value of BC[c] if the character 'c' does not appear in the pattern?
--InteriorSeparator--
-1
--InteriorSeparator--
Medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the GS table store for the good suffix rule?
--InteriorSeparator--
The last position at which a substring P[i..m-1] appears in the pattern, excluding position i.
--InteriorSeparator--
Hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is the GS table populated when the suffix doesn't appear elsewhere in the pattern?
--InteriorSeparator--
With a negative number indicating the position if the pattern were imaginarily extended to the left.
--InteriorSeparator--
Hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is used to calculate the GS table?
--InteriorSeparator--
The prefix function from the KMP algorithm applied to the pattern and its reverse.
--InteriorSeparator--
Hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does the variable 'i' represent in the implementation of the Boyer-Moore algorithm?
--InteriorSeparator--
(right) The shift (position) from which the pattern starts to compare with the text
(wrong) The length of the matching suffix
(wrong) The current character being compared
(right) The number of characters in the text
--InteriorSeparator--
Medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the variable 'k' in the Boyer-Moore algorithm implementation?
--InteriorSeparator--
To track the number of characters that have matched in the current alignment.
--InteriorSeparator--
Medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How are shiftbc and shiftgs combined to determine the actual shift?
--InteriorSeparator--
The maximum of shiftbc and shiftgs is chosen.
--InteriorSeparator--
Medium
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is shiftbc calculated?
--InteriorSeparator--
m - k - 1 - BC[T[i + m - 1 - k]]
--InteriorSeparator--
Hard
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
How is shiftgs calculated?
--InteriorSeparator--
m - k - GS[m - k]
--InteriorSeparator--
Hard
--InteriorSeparator--
15
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the Boyer-Moore-Horspool algorithm?
--InteriorSeparator--
A simplified version of Boyer-Moore that only uses the bad character heuristic.
--InteriorSeparator--
Medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is one possible improvement to the bad character rule mentioned in the conclusion?
--InteriorSeparator--
(right) Calculating the last occurrence of the bad character before the current position
(wrong) Calculating the first occurrence of the bad character after the current position
(right) Only consider occurrences of the suffix that are not proceeded by the bad character
(wrong) Ignoring the existence of bad character all together
--InteriorSeparator--
Hard
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why might more precise but complex rule calculations not lead to significant practical advantages?
--InteriorSeparator--
The gain from increased precision is offset by the time needed for the more sophisticated calculation.
--InteriorSeparator--
Medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the Galil rule?
--InteriorSeparator--
An improvement to the Boyer-Moore algorithm that ensures linear time execution in general.
--InteriorSeparator--
Hard
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a key characteristic of the Boyer-Moore algorithm's efficiency in best and average cases?
--InteriorSeparator--
It doesn't necessarily need to process all elements of the input.
--InteriorSeparator--
Hard
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Why is the Boyer-Moore algorithm so efficient?
--InteriorSeparator--
Execution time reduces with larger input sizes.
--InteriorSeparator--
Medium
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the role of characters added to the beginning of a pattern?
--InteriorSeparator--
(wrong) Extend search to the right
(right) Align sufix in cases where sufix doesn't appear at the end
(wrong) Improve search performance
(wrong) Make search results simpler
--InteriorSeparator--
Hard
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Why are imaginary characters added to the left of the Pattern P?
--InteriorSeparator--
(right) Help to complete the pattern's sufix
(wrong) Increase number of characters
(right) Improve alignment for better visualisation
(wrong) Improve search accuracy
--InteriorSeparator--
Hard
--InteriorSeparator--
8
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How is h[i] connected to GS?
--InteriorSeparator--
(wrong) Last appereance h is not a pattern sufix
(right) h[i] is length of the longest prefix of P[i..m-1]
(wrong) The smallest prefix of string P[i..m-1] which is the sufix
(right) h[j] = m -1 - i
--InteriorSeparator--
Hard
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does "j" represent?
--InteriorSeparator--
The beginning position of the last appearance of a sufix.
--InteriorSeparator--
Hard
--InteriorSeparator--
11
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the function of BC table?
--InteriorSeparator--
(right) Stores last appereance position
(wrong) Stores the first position where an element occur
(wrong) Calculate the next position to search
(right) Helps to improve preprocesing
--InteriorSeparator--
Hard
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What cases exist when pattern is not appearing in TEXT?
--InteriorSeparator--
(right) Favorable
(wrong) None
(right) Most unfavorable case
(wrong) The algorithm runs with constant speed
--InteriorSeparator--
Hard
--InteriorSeparator--
17
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.26062283190609686}]