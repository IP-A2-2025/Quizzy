***************Beginning Page***************
***************page number:1**************
December 20, 2024
—

***************Ending Page***************

***************Beginning Page***************
***************page number:2**************
a Polynomial-time reductions for graph problems
o Hamiltonian problems
o ‘Traveling salesman problem
a Approaching NP-hard graph problems
o Metric TSP
o Vertex coloring: Greedy-color algorithm
a Exercises for the 12th seminar (january 8 - 10 week)
a Annex: Christoﬁdes Algorithm (proof of correctness)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:3**************
(Karp, 1972) SM <1: CH. ‘
Proof. Let G : (V, E) and j E N an instance for the problem SM.
We Will build in polynomial time (W.r.t. n : |V|) a graph H such that
there is a stable set S in G with [Si 2 j if and only if H is Hamiltonian.
Let k : n — j. Suppose that k; > 0 (to avoid trivial cases).
(i) Let A : {0,1, a2, . . . , ak} be a set of k distinct vertices.
(ii) For each edge e : uv E E(G), consider the graph
G2 : (Val, Eé) with V5’ : {(w, e, i) : 'w € {u,v},'i : li6}
and Eé : {(w,e,z')(w,e,z'+1) : w €{u,v},i:ﬁ} U
{(u, e, 1)('u, e, 3), (u, e, 3)(v, e, 1), (u, e,4)('u, e, 6), (u, e, 6)(v, e,4)}
—

***************Ending Page***************

***************Beginning Page***************
***************page number:4**************
Proof cont’d.

1, ('v,e.1) (they?) (v.03) ('vyeA) (016,5) (U,e.6)

u (in, e, 1) (u, e. 2) (u, e. 3) (u.e14) (11.5,5) (ui, e, 6)
The graph has the property that, if it is an induced subgraph of a Hamil-
tonian graph H, and no one of the vertices (w, e,'i) with 'w G {u,'u}
and i : 2,? has another neighbor in H, then the only possibilities of
traversing G; by a Hamiltonian cycle are:

—

***************Ending Page***************

***************Beginning Page***************
***************page number:5**************
a b c
g g ﬁ
Proof cont’d. Hence, if the Hamiltonian cycle “enters” in G; by a vertex
corresponding to u ((u, e, 1) or (u, e, 6)) then it “leaves” the graph G;

also by a vertex corresponding to u.

(iii) For each vertex u E V, consider (in an arbitrary order) the edges
incident in G With u: e1‘ : u'ul,e2“ : uvg,...,e;‘ : u'up (p :
dG('u,)). Let E1’; : {(u, ef,6)('u,, efﬂ, 1) : 1:1,p — 1} and E5’ :
{ai(u, ef, 1), a¢(u, e;,6) : i: 1,7}

—

***************Ending Page***************

***************Beginning Page***************
***************page number:6**************
Proof cont’d. The graph H has V(H) : A U (U Vé) and E(H) :
eEE
(U Eé) U < U (Eff U E1”). Clearly, it can be constructed from G
eEE uEV
in polynomial (in n) time complexity.
(me/{,l) (uwﬂ'iyﬁ) (I!,e;,l) (me/Z'ﬁ) (71,651) (1L,B;,6)
v‘ A.A ‘.4
\_
a1 H/c H
—

***************Ending Page***************

***************Beginning Page***************
***************page number:7**************
Proof cont’d. Now we show that there exists a stable set in G with at
least j vertices if and only if H is Hamiltonian.
“<:” If H is Hamiltonian, then there exists a Hamiltonian cycle, C, in
H. Since A is a stable set in H, A decomposes the cycle C in exactly k:
internally disjoint paths: Da,l (11-2, Da,2 (1,3, . . . , Daik an.
Let Dag ,1,le be such a path (j +1 : 1 + (j (mod k))). By the construc-
tion of H, it follows that the ﬁrst vertex after aij on this path will be
('uij, elm’, 1) 0r (11,], 55,6), where p : dg('u,-j), vi]- E V.
After that, Dal-,- dig-+1 will enter the component G21 or Gép that will be
leaved also by a vertex corresponding to 11,5. If the next vertex is not
aij +1, it will enter into the component corresponding to the next edge
incident with 111,-, that will be leaved also by a vertex corresponding to
‘Ul'j.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:8**************
Proof cont’d. It follows that each path Dal-j @in corresponds t0 an unique

vertex 'ui]. E V, such that the ﬁrst and the last edge of Dal-jaw are

a¢j(v¢J-,e:1j,:z:), a¢j+1(vZ-j,e;1j,:1:’), with t : 1 and t’ : dg('Uz'J-), a: : 1,

w’:6ort:dG('z/Z~J), t’:1,:r::6, m’:1.

It follows that the vertices vi]. are distinct.

Let V* : {v¢l,v¢2,...,'uik}. Since C is a Hamiltonian cycle in H, it

follows that, Ve E E, there is a path Dal-jawl traversing G2, hence there

exists a vertex v E V* adjacent with e.

Therefore S : V \ V* is a stable set in G and |S| : j.

We proved that if H is Hamiltonian, then in G there is a stable set with

j vertices, i. e., the answer to SM for the instance (G,j) is yes.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:9**************
—
Li 1???“
‘(*3

***************Ending Page***************

***************Beginning Page***************
***************page number:10**************
Proof cont’d. “ 2 “ Suppose that the answer to the SM’s question for
the instance (G, j) is affirmative, hence there exists SO a stable set in G
with [SO] 2 j. There exists S Q SO with ‘SI : j. Let V* : V \ S :
{111,112, . . . ,vk}.
Consider in H for each e : u'u € E:
o the two paths from case (c) in G; (depicted on one of the above
slides) if u, 'u E V*.
0 the path from case (b) in Gé (depicted above) if u G V* and 'u ¢
V*.

o the path from case (a) in Gé (depicted above) ifu eé V* and v 6 V*.
To the union of all these paths we add the edges a,('u,, e1”, 1),
(11,-, efi,6)('u,-, 851,1), . ..,(v,-, eZL1,6)('u,-, e13”, 1), (11,-, e51, 6)a,-+1, ( with
p : dg('u,-)), for 2' : 1,k.

It’s easy to check that we obtain, in this way, a Hamiltonian cycle in H.
D
—

***************Ending Page***************

***************Beginning Page***************
***************page number:11**************
TSP Given G : (V, E) a graph and d : E —> 1R+ a non-negative weight

function on its edges, ﬁnd a Hamiltonian cycle, HO, s.t. the sum of the

weights of the edges of H0 is minimum (over all Hamiltonian cycles of

G).

Let the graph G be a network consisting of a set, V, of cities together

with a set, E, of direct routes between cities and the weight function d

giving, for each edge u'u € E, d(u'u) :the distance on the direct route

between cities u and v. Fixing a starting city '00, the Hamiltonian cycle

H0 represents the shortest way of visiting all the cities exactly once

(except 'uo) by a traveling salesman starting from v0 and returning to

'UO.

This is probably, the most studied NP-hard optimization problem! J

—

***************Ending Page***************

***************Beginning Page***************
***************page number:12**************
We consider the following equivalent formulation of this problem.
TSP Given n € N (n Z 3) and d : E(Kn) —> Rim ﬁnd H0, Hamiltonian
cycle in Kn, with d(H0) minimum over all Hamiltonian cycles of Kn,
where
d(HO) I Z d(e).
e€E(H0)
If the graph G, on which it is required to solve TSP, is not the complete
graph Kn, then we can introduce the missing edges with a very large
weight, M € R+7 where M > |V|~ max d(e).
e€E(G)
Note that we are limited here only to the symmetric TSP, a similar
(asymmetric) problem can be be considered for the case when G is a
digraph.
In the study of the time complexity of this problem, we will take d(e) E
N, for each edge e.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:13**************
The associated decision problem is

DTSP

Instance: n E N (n Z 3), d : E(Kn) —> N and B E N.

Question: Is there H0, Hamiltonian cycle in Kn, s. t. d(HO) g B?

CH gp DTSP.

Proof. Let G : (V,E) (|V| : n) be an instance of the problem CH.

We construct in polynomial time an instance of the problem DTSP,

d : E(Kn) —> N and B E N, such that there exists a Hamiltonian cycle

in Kn of total weight not greater than B if and only if G is a Hamiltonian

graph.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:14**************
Let .
_ 1, 1f'uw€E(G) _
d('u'w) _ { 2, if 'uw G E(@) and B _ n.
Then, there is in Kn a Hamiltonian cycle of weight g 'n, if and only if
there is a Hamiltonian cycle C‘ in Kn such that Ve E E(C'), d(e) : 1,
that is, if and only if G has a Hamiltonian cycle:
v/{Ay
AM‘.
nnﬂb\
" v ~
‘9%?
A“!
Weight 2
C Weight 1
It follows that TSP is NP-hard problem. D
—

***************Ending Page***************

***************Beginning Page***************
***************page number:15**************
A possible approach is to consider approximation algorithms A, which
build, in polynomial time, for each instance of TSP, a Hamiltonian cycle
H A of Kn, approximating the optimal solution HO.
The quality of the approximation can be expressed using the following
ratios: d(H )
A
R A n : sup i
( ) d;E(K,,)_>R+,d(HO)¢o d(H0)
RA : sup RAUL).
n23
Obviously, the approximation algorithm A is useful only if R A is ﬁnite.
Unfortunately, if the weight function d is arbitrary, ﬁnding an algorithm
A such that R A is ﬁnite is as hard as solving exactly TSP. More precisely,
we have the following result: ,
—

***************Ending Page***************

***************Beginning Page***************
***************page number:16**************
If there is a polynomial time approximation algorithm A for TSP s.t.
R A < oo, then the problem CH can be solved in polynomial time. ,
Proof. Let A be a polynomial time approximation algorithm with R A <
oo. Hence there exists k; E N such that RA g kz.
Let G : (V, E) be an arbitrary graph, instance of CH. If n : lV|, then
we consider d : E(Kn) —> N deﬁned by
1 if u'u E E(G)
d : ' _ .

(WU) { km, 1f 'U/U Q E(G)
Obviously, G is Hamiltonian if and only if H0, the optimal solution of
this instance of TSP, satisﬁes d(H0) : n.

—

***************Ending Page***************


***************Beginning Page***************
***************page number:17**************
Apply A to solve approximately this instance of TSP.
o If d(HA) g kn, then d(HA) : n and HA is optimal.
o If d(HA) > kn, then d(H0) > n. Indeed, assuming that d(HO) : n,
d H
we have ‘1((HA; g k, therefore d(HA) g kd(H0) : kn, contradic-
tion. 0
It follows that G is Hamiltonian if and only if d(HA) g kn, and, since A
runs in polynomial time, it follows that CH can be solved in polynomial
time. U
‘111k
)WAW
Ad."
A i.\
\M'i
A!
weight 7L’
G Weight 1
—

***************Ending Page***************

***************Beginning Page***************
***************page number:18**************
The Theorem 3 can be formulated equivalently: i

If P 75 NP, then there is no polynomial time approximation algorithm

A for TSP With RA < oo.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:19**************
If in TSP the weight function d satisﬁes
Vu,v,'w E V(Kn) distinct, d(u'u) g d(uw) + d(w'u),

then there is a polynomial time approximation algorithm A with R A :
2.
The idea is to compute a minimum cost spanning tree of Kn and then
create a hamiltonian cycle based on this tree:

COmpute To a. MST Of (Kn, d); // using Prim’s algorithm.

dfs(T°, 'ul) and let 1/1,v2,...,'un be the dfs order; // v1 could be any vertex;

return the cycle {v1,112,...,11n,111};

—

***************Ending Page***************

***************Beginning Page***************
***************page number:20**************
Proof.

o Let HO be a minimum cost hamiltonian cycle in (Kn, d); by remov-
ing an edge e from H0 one gets a spanning tree T : H0 — e, hence
d(T) z d<H0 - e) < dwa-

o Consider the walk, P, of T0 which traverse each edge exactly twice:
d(P) I 2d(T°).

o By keeping only the ﬁrst occurrence of each vertex, except 'ul for
which we keep the last occurrence also, we get the hamiltonian cycle
H.

o On the other hand,

(*)
d(H) s d(P) I 2d<T°> < MT) < Mme)-
o (*) comes from the triangle inequality. /
—

***************Ending Page***************

***************Beginning Page***************
***************page number:21**************
6
9
0 ®
° o a #9 w
0 Q
6 ® 9
The walk P: I
v1,122,113,112,114,112,115,v6,v5,u2,v1,v7,1J3,117,119,117,111,11“),1111,1112,v11,v13,v11,v10,v14,v10,01
—

***************Ending Page***************

***************Beginning Page***************
***************page number:22**************
r/a
,6 @
e e a I‘ (a e)
7 ﬁ' a ll

G! @ ®
The hamiltonian cycle H:
v1,v2,v3,}12/,v4,}*2/1"5,v6’%}2<}>ﬂv7,va,%v9,%yﬂvlo,v11,v12,%v13,%%v14,%v1

—

***************Ending Page***************

***************Beginning Page***************
***************page number:23**************
(Christoﬁdes,1976) If in TSP the weight function d satisﬁes
Vu,v,'w E V(Kn) distinct, d('u,'u) g d(u'w) + d(w'u),
then there is a polynomial time approximation algorithm A with RA :
3/2.
The proof is given in the Annex. |
—

***************Ending Page***************

***************Beginning Page***************
***************page number:24**************
Let G = (V, E) be a graph, V = {1, 2, . . . , n} and let 1r be a permutation of
V. We construct a vertex-coloring c : V —> {1, . . . ,X(G,1r)}.
0(1r1) <— 1; x(G,1r) <— 1; Sl P {r1};
for (z : 2,7) do
j <— 0;
repeat
j + +; v <— ﬁrst vertex (in 1r), from Sj s. t. 7m) E E(G);
if (Elv) then
ﬁrst(1rZ-,j) <— v;
else
ﬁrst(1ri,j) <— 0; C(m) <— j; Sj <— SJ- U {1n};
end if
until (ﬁrstﬁrhj) : 0 orj : x(G,1r))
if (ﬁrstﬁrhj) 75 0) then
c(7rZ-) <—j + 1; Sj+1 <- {7n}; x(G,7r) <—j + 1;
end if
end for
—

***************Ending Page***************


***************Beginning Page***************
***************page number:25**************
Note that the number of colors used by the greedy algorithm is not
greater than 1+ A(G). It follows that 9((G) g 1 + A(G).
x(G,1r) the number of colors returned by the Greedy-color algorithm,
can be arbitrarily larger than x(G). For example, let G be the
graph obtained from the complete bipartite graph Km”, with vertex set
{1,2, . . . , n} U {1', 2’, . . . , n’}, by removing the edges 11’, 22', . . . , nn’.
l l’
\\,// , \\,//
4 \\V/) 4 \M»
@M 9w
\,/§,A/ \,4,»/
M's , We‘
44 1w
5 //\\ //\\ ,
—

***************Ending Page***************

***************Beginning Page***************
***************page number:26**************
If 1r : (1,1’,2,2’,...,n,n’), then the Greedy-color algorithm returns

c(1) : c(1’), c(2) : c(2’) : 2, c(n) : C(n’) : n. Therefore, x(G,1r) :

n, While x(G) : 2.

On the other hand, for any graph G, there is a permutation 1r of its

vertices such that x(G,1r) : 9((G).

Indeed, let $1, $2, . . . 15340) be the coloring classes of an optimal col-

oring, such that each S, is a maximal (W. r. t. inclusion) stable
iil

set in G — U Sj. Let 1r be a permutation which induces an ordering
‘:1

s.t. verticesj occurs in the non-decreasing order of their colors. Then,

X(G,1r) I x(G)-

A sufficient condition for the correctness of the Greedy-color algorithmzj

—

***************Ending Page***************

***************Beginning Page***************
***************page number:27**************
If, V'u'w G E and Vj < min{c('u), c('w)} such that ﬁrst('u,j) <
ﬁrst(w,j) in the ordering given by 7r, we have ﬁrst(w,j)v 6 E, then
X(G,1T) I X(G)-
:
Proof. Omitted (and left as an exercise).
—

***************Ending Page***************

***************Beginning Page***************
***************page number:28**************
The above condition can be tested in (9(m) as a last step in the algo-

rithm. If it is fulﬁlled, then we have a certiﬁcate for the optimality of
the number of color found.

The above theorem follows by proving that if the condition stated holds,

then x(G,1r) : w(G) g 9((G). On the other hand, it is well known that

there are graphs G for which 3((G) — w(G) is arbitrarily large; for such

a graph G no permutation 1r satisﬁes the condition in the theorem. ,

—

***************Ending Page***************

***************Beginning Page***************
***************page number:29**************
Exercise 1. The regions (including the inﬁnite region) formed by n

circles in the plane can be colored with two colors such that any two

regions that share a common boundary arc should be colored differently.

Exercise 2. Let G : (V, E) be a graph having no disjoint odd cycles.

Prove that G is 5-colorable.

Exercise 3. For a given graph H we deﬁne the average degree as ad(H) :

2]E(H)] . .

i. For a graph G, the max1mum average degree IS

lV(H)l

mad(G) : max{ad(H) : H induced subgraph of G}

Let k: 2 3 an integer. Prove that, if a graph G has its cromatic number

strictly greater than k and its maximum average degree at most k, then

G contains an induced k-regular subgraph. ,
—

***************Ending Page***************

***************Beginning Page***************
***************page number:30**************
Exercise 4.
(a) Prove that any graph can be vertex-colored with A(G) + 1 colors.
(b) Consider the following recursive algorithm for coloring the vertices
of a given 3-colorable graph with n vertices:
color(G) {
if (A(G) g ﬂ) then
color all the vertices of G with A(G) + 1 new colors;
else
let 0:0 6 V(G) s. t. dg($g) : A(G);
color m0 with a new color;
color the vertices of [NG(2:0)]G with two new colors;
G <— G — ({130} U NG($0));
color(G);
end if }
Prove that the above algorithm uses O(\/H) colors.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:31**************
Exercise 5. Consider the following problem:
Set Cover
Instance: A non empty set X, a family of subsets of X: f :
{X1,...,Xp} and k: G N*.
Question: X can be covered with at most k; subsets of F?
Let us consider the following heuristic (a greedy type algorithm) for
solving this problem
F’ P Q;
While (Elm E X uncovered by F’) do
let X1- a subset in F with the largest number of uncovered elements;
.Fl <- f/ U {Xi};
end While
return F’;
Prove that if m is the minimum cardinality of an optimal subfamily of
F, then the above algorithm has gives a subfamily of at most mlnn
subsets (n : |X|)
—

***************Ending Page***************

***************Beginning Page***************
***************page number:32**************
Exercise 6. Let G : (V, E) be a graph with n vertices and m edges.
An ordering {1:1, m2, . . . , an} of the vertices of G is called k-bounded if
in the digraph G, obtained from G by replacing the edge xiwj with an
arc $min{t,j}a xmax{i,j}a we have dam) g k,V a: 6 V.
(a) Devise an algorithm to test in (9(1), + m) time complexity if G, has
a k-bounded order, where k E N.
(b) Use the above algorithm in order to determine in 0((n + m) log n)
time the number
0(G) : min{k G N : G has a k-bounded order.}
(c) Prove that any graph G has a vertex coloring Which uses 0(G) + 1
colors.
—

***************Ending Page***************


***************Beginning Page***************
***************page number:33**************
Exercise 7. A greedy algorithm for vertex coloring of a graph G =

(V,E) is the following: ﬁrst, choose an D-ordering of vertices V :

{v1,v2,...,vn}, i. e., dg(’l)1) 2 dg(’Ug) 2 2 dg(’Un), second 211- gets

the smallest color unused by any of its already colored neighbors. Now

consider the following decision problem

BGCOL

instance: G : (V, E) a graph.

question: Has G a D-ordering s. t. the above heuristic uses at most 3

colors?

Prove that 3COL <1: 3GCOL. J
—

***************Ending Page***************

***************Beginning Page***************
***************page number:34**************
Exercise 8. Let G : (V,E) be a graph with V : {1,2,...,n} and

w(G) : 2. We deﬁne a new graph M (G) by considering the disjoint

union of G and K1,” (whose bipartition is ({0},{1’,2’,...,n’})) and

adding all the edges {i’j, ij’ : ij 6 E(G)}.

(a) Prove that w(M(G)) : 2 and x(M(G)) I 9((G) + 1.

(b) Show that, for every p E N*, there exists a K3-free graph having

cromatic number p.

Exercise 9. Let S be a society formed with n individuals. Each person,

z' 6 S, knows a subset c(1L) Q 5 \ {i} of other persons. ‘Two different

persons 1,2" G 5 cannot be part of the same jury if one knows the other

(we can have single member juries).

Prove that if each person knows at most k other persons (|c(z')| g k,

Vi G S), then there exists a family of at most (2k + 1) disjoint juries

that cover together the entire society.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:35**************
(Christoﬁdes,1976) If in TSP the weight function d satisﬁes

Vu,v,'w E V(Kn) distinct, d(u'u) g d(uw) + d(w'u),
then there is a polynomial time approximation algorithm A with R A :
3/2. ,
Proof. Let A be the following algorithm:

o Find T0 the edge set of MST in Kn (the cost of each edge e is d(e))
(this takes polynomial time using any MST algorithms).

o Find M 0 a minimum weight perfect matching in the subgraph in-
duced in Kn by the set of vertices of odd degrees of T0 (this takes
polynomial time using any maximum matching algorithm). ,

—

***************Ending Page***************

***************Beginning Page***************
***************page number:36**************
Proof cont’d.

o In the multi-graph obtained from (To U M 0) K", by duplicating the
edges from T0 O M 0 (it is connected and all vertices have even
degree) ﬁnd a closed Euler trail, (ml, viz, . . . , '01”)- Eliminate all the
multiple occurrences of the internal vertices to obtain a Hamiltonian
cycle HA in Kn with the edge set HA : {01'1ngijij . . .,v]~nv]~l}
(both constructions need (9(n2) time, the closed Euler trail can be
found with Hierholzer’s algorithm).

H A is an approximative solution of TSP given by Christofides. Let
m : {rt/2] and H0 be the optimal solution. We prove (after Cornuejols
& Nemhauser) that
3m — 1
Vn Z 31d(HA)< deol ,
—

***************Ending Page***************

***************Beginning Page***************
***************page number:37**************
TU A10
9 5 3
1 1
8
(i
7
1

10 4

Eulerian graph 2 HA

***************Ending Page***************

***************Beginning Page***************
***************page number:38**************
Proof cont’d. Let H0 : {111122,112113, . . . ,vn'ul} (if necessary, we can re-
name the nodes).
Let W : {11¢1,vi2,...,'u¢2k} the set of odd degree vertices in (T0)Kn,
1L1 < i2 < < 12k. Let H I{v¢1v¢2,11¢211¢3,---,11¢2k_111¢2k,11¢2k11¢1}bEthe
cycle generated by W in Kn. Applying repeatedly the triangle inequal-
ity, we obtain d(H) g d(HO), (the weight of each chord, d(vZ-j'uZ-Hl) is
upper bounded by the sum of the weights of the edges on H0 joining the
extremities of the chord viii/13H).
Since H is an even cycle, it is the union of two perfect matchings in
[W]Kn, M1 U M2. Suppose that d(Ml) g d(M2).
By the choosing of M0, we have d(MO) g d(Ml) g (1/2)[d(M1) +
d(M2)] I (1/2)d(H) g (1/2)d(HO). Let a e R+ s. t. d(MO) z
ad(H0). Obviously, 0 < a é 1/2.
—

***************Ending Page***************

***************Beginning Page***************
***************page number:39**************
Proof cont’d.
Q
Decompose HO into H1 LJ H2 by taking into Hi the edges of HO
connecting the extremities of each chord in M ZI: (111-1-111-1- +1 E M i :>
Uijvij+la"'vij+1ilvij+1 E H1).
—

***************Ending Page***************

***************Beginning Page***************
***************page number:40**************
Proof cont’d. By the triangle inequality, d(Hi) 2 d(Mi), 2' : 1, 2.
At least one of H1 or H2 has at most m : Ln/Zj edges. Suppose that
H1 has this property. Since d(H1) 2 d(M1) 2 d(MO) : ad(H0), it
follows that there exists e E H1 such that d(e) 2 (a/m)d(H0).
Let T be the spanning tree obtained from H0 by deleting an edge of
maximum weight. We have d(T) : d(H0) — ngaicl)d(e) g d(H0) —
BE a

(oz/m)d(Ho).
Since TO is MST in Kn it follows that d(T0) g d(H0)(1— a/m).
Using the triangle inequality, we have

d<HA) < d(T°) + d<M°> < due) (1 — %) +ad(Ho> z

am—1 “<1/23m—1
z (1 + (7,1)) d(HO) g WMHOLW > 3. D y
—

***************Ending Page***************

