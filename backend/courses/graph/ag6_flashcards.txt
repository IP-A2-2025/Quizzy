[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is the cost function denoted by in the MST problem?
--InteriorSeparator--
c(e)
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the general MST method, what is the initial family 7-0 comprised of?
--InteriorSeparator--
(right) n disjoint trees
(wrong) a single connected tree
(right) each tree contains a single vertex
(wrong) a set of disconnected vertices
--InteriorSeparator--
medium
--InteriorSeparator--
4
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What happens in the MST general method if there's no edge with one extremity in V(Tf) and the other in V \ V(Tf)?
--InteriorSeparator--
G is not connected, and there is no MST in G.
--InteriorSeparator--
hard
--InteriorSeparator--
5
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does the notation c(T) represent in the context of MST?
--InteriorSeparator--
The sum of the costs of all edges in tree T.
--InteriorSeparator--
easy
--InteriorSeparator--
3
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the key idea behind the proof that the MST general method works?
--InteriorSeparator--
(right) Maintain a MST that contains all edges of the current family of trees.
(wrong) Iteratively select edges with maximum cost.
(right) Use induction on the number of steps in the algorithm.
(wrong) Assume connectivity of the graph is not needed
--InteriorSeparator--
hard
--InteriorSeparator--
6
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What are the two classical strategies for choosing the tree Tsk in the general MST method?
--InteriorSeparator--
Maximum order tree and tree connected by minimum cost edge.
--InteriorSeparator--
medium
--InteriorSeparator--
9
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the meaning of the elements in the beta vector in Prim's algorithm?
--InteriorSeparator--
c(u,j) = min {c(u,v)}
--InteriorSeparator--
hard
--InteriorSeparator--
10
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of Prim's algorithm?
--InteriorSeparator--
Θ(n^2)
--InteriorSeparator--
easy
--InteriorSeparator--
12
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
How does Kruskal's algorithm select edges to add to the MST?
--InteriorSeparator--
(right) By non-decreasing order of cost.
(wrong) By selecting edges that create cycles.
(right) Only if adding the edge doesn't create a cycle.
(wrong) By randomly selecting edges.
--InteriorSeparator--
medium
--InteriorSeparator--
13
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What data structure is used to efficiently implement the cycle detection in Kruskal's algorithm?
--InteriorSeparator--
Trees (disjoint set data structure)
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the find(v) function in Kruskal's algorithm?
--InteriorSeparator--
Finds the root of the tree storing the set to which vertex 'v' belongs.
--InteriorSeparator--
medium
--InteriorSeparator--
14
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the find function used in Kruskal's algorithm when implemented with path compression?
--InteriorSeparator--
O(1)
--InteriorSeparator--
easy
--InteriorSeparator--
16
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the time complexity of Kruskal's algorithm, considering the sorting of edges and the use of disjoint sets?
--InteriorSeparator--
(right) O(max(mlogn, n^2))
(wrong) O(mlogn)
(wrong) O(n^2)
(right) Θ(mlogm) where m is the number of edges
--InteriorSeparator--
hard
--InteriorSeparator--
17
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the meaning of pred[v] in the improved implementation of Kruskal's algorithm (using path compression)?
--InteriorSeparator--
The vertex before v on the unique path to v from the root of the tree
--InteriorSeparator--
medium
--InteriorSeparator--
18
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the time complexity of the while loop when using the basic find and union methods (without size-based union)?
--InteriorSeparator--
(wrong) O(mlogn)
(right) Θ(n^2)
(wrong) O(m)
(wrong) O(n)
--InteriorSeparator--
hard
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What does pred['u] < 0 signify when 'u' is a root in the cardinality-based union implementation?
--InteriorSeparator--
'u' is the root of the tree, and -pred['u'] is the number of vertices in the tree.
--InteriorSeparator--
medium
--InteriorSeparator--
21
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity for Kruskal's algorithm using the cardinality-based union and find?
--InteriorSeparator--
O(mlogn)
--InteriorSeparator--
medium
--InteriorSeparator--
25
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What optimization does Tarjan's algorithm (1976) introduce to Kruskal's algorithm?
--InteriorSeparator--
Path compression during the 'find' operation.
--InteriorSeparator--
hard
--InteriorSeparator--
26
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What function describes time complexity of Kruskal's algorithm when using Tarjan's algorithm?
--InteriorSeparator--
Θ(m * α(m, n)).
--InteriorSeparator--
hard
--InteriorSeparator--
27
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
Define dM(u) in the context of matchings.
--InteriorSeparator--
The degree of vertex 'u' in the subgraph spanned by the matching M.
--InteriorSeparator--
easy
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is a vertex called if dM(u) = 0?
--InteriorSeparator--
Exposed with respect to M (or unsaturated by M).
--InteriorSeparator--
medium
--InteriorSeparator--
29
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the definition of MG in the context of graph matchings?
--InteriorSeparator--
(right) The family of all matchings in graph G.
(wrong) A single maximum matching in G.
(wrong) All possible subsets of edges in G
(right) {M : M ⊆ E, M matching in G}
--InteriorSeparator--
easy
--InteriorSeparator--
28
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the relationship between maximum matching and minimum edge cover in a graph without isolated vertices?
--InteriorSeparator--
|M*| + |F*| = n, where n is the number of vertices.
--InteriorSeparator--
medium
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What is the definition of an edge-cover in a graph G?
--InteriorSeparator--
A set of edges F such that every vertex in G is incident to at least one edge in F.
--InteriorSeparator--
medium
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
What property must be met for a graph to have an edge cover?
--InteriorSeparator--
(right) The graph has no isolated vertices.
(wrong) The graph is bipartite.
(wrong) The graph has a perfect matching.
(wrong) The graph must be connected.
--InteriorSeparator--
easy
--InteriorSeparator--
31
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
According to Norman-Rabin theorem, what is the relationship between the cardinality of a maximum matching (M*) and a minimum edge-cover (F*) in a graph G of order n without isolated vertices?
--InteriorSeparator--
|M*| + |F*| = n
--InteriorSeparator--
medium
--InteriorSeparator--
32
--FlashCardSeparator--

--FlashCardSeparator--
Single
--InteriorSeparator--
What makes P1 (maximum matching problem) "easy" in the context of graphs?
--InteriorSeparator--
If the graph is bipartite.
--InteriorSeparator--
medium
--InteriorSeparator--
36
--FlashCardSeparator--

--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which algorithm led to the solution for P1 in bipartite graphs?
--InteriorSeparator--
(right) Combinatorial adaptation of the simplex algorithm.
(wrong) Kruskal’s algorithm.
(right) Hungarian Method
(wrong) Prim’s algorithm.
--InteriorSeparator--
medium
--InteriorSeparator--
36
--FlashCardSeparator--
}], role=model}, finishReason=STOP, avgLogprobs=-0.20682403470221522}]