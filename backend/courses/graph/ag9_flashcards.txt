[{content={parts=[{text=--FlashCardSeparator--
Single
--InteriorSeparator--
What is a preflow in a flow network R = (G, s, t, c)?
--InteriorSeparator--
A function a: E(G) -> R such that:
(i) 0 <= a_ij <= c_ij for all ij in E(G);
(ii) For all i != s, t: sum(a_ji) - sum(a_ij) >= 0, where the sums are over all j such that ji, ij in E(G).
--InteriorSeparator--
Medium
--InteriorSeparator--
3
--FlashCardSeparator--
Multiple
--InteriorSeparator--
Which of the following are characteristics of an active node 'i' in a preflow algorithm?
--InteriorSeparator--
(right) i is not the source or sink node
(right) the excess e_i > 0
(wrong) the excess e_i < 0
(wrong) i is the source node
--InteriorSeparator--
Easy
--InteriorSeparator--
3
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the residual capacity r_ij of an arc ij in a flow network with preflow a?
--InteriorSeparator--
r_ij = c_ij - a_ij + a_ji
--InteriorSeparator--
Medium
--InteriorSeparator--
4
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What does "sending flow from i to j" mean in the context of preflow algorithms?
--InteriorSeparator--
(right) Increasing the flow on the arc ij
(right) Decreasing the flow on the arc ji
(wrong) Increasing the flow on the arc ji
(wrong) Decreasing the flow on the arc ij
--InteriorSeparator--
Easy
--InteriorSeparator--
5
--FlashCardSeparator--
Single
--InteriorSeparator--
What is an A-path (augmenting path) in R with respect to preflow 'x'?
--InteriorSeparator--
Any path in G having all arcs with strictly positive residual capacity.
--InteriorSeparator--
Medium
--InteriorSeparator--
5
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is a distance function d in R with respect to preflow 'x'?
--InteriorSeparator--
(right) d: V -> Z+ (non-negative integers)
(right) d(i) <= d(j) + 1 for all ij in E with r_ij > 0
(wrong) d(i) >= d(j) + 1 for all ij in E with r_ij > 0
(wrong) d: V -> R
--InteriorSeparator--
Medium
--InteriorSeparator--
5
--FlashCardSeparator--
Single
--InteriorSeparator--
If P is an A-path w.r.t. preflow x in R from i to t, what is the relationship between d(i) and the length of P?
--InteriorSeparator--
d(i) <= length(P)
--InteriorSeparator--
Medium
--InteriorSeparator--
5
--FlashCardSeparator--
Single
--InteriorSeparator--
What is an admissible arc ij in a preflow algorithm?
--InteriorSeparator--
An arc ij in E is called admissible if r_ij > 0 and d(i) = d(j) + 1.
--InteriorSeparator--
Medium
--InteriorSeparator--
6
--FlashCardSeparator--
Multiple
--InteriorSeparator--
In the initialization procedure for preflow algorithms, what are the initial values for flows on arcs leaving the source node 's'?
--InteriorSeparator--
(right) Flow from source i to j, x_ij = c_ij
(wrong) Flow from source i to j, x_ij = 0
(wrong) Flow from source i to j, x_ij = infinity
(wrong) Flow from source i to j, x_ij = -c_ij
--InteriorSeparator--
Medium
--InteriorSeparator--
7
--FlashCardSeparator--
Single
--InteriorSeparator--
In the initialization procedure, what is the initial distance assigned to the source node 's'?
--InteriorSeparator--
d[s] = n, where n is the number of nodes in the graph.
--InteriorSeparator--
Easy
--InteriorSeparator--
7
--FlashCardSeparator--
Single
--InteriorSeparator--
Why is d(s) set to n in the initialization procedure?
--InteriorSeparator--
To ensure that there are no A-paths from s to t w.r.t. x initially.
--InteriorSeparator--
Hard
--InteriorSeparator--
9
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the purpose of the `push(i)` operation in a preflow algorithm?
--InteriorSeparator--
(right) To "send" flow from node i to an adjacent node j along an admissible arc.
(wrong) To increase the distance label of node i.
(wrong) To create an admissible arc.
(wrong) To remove excess from node i
--InteriorSeparator--
Easy
--InteriorSeparator--
9
--FlashCardSeparator--
Single
--InteriorSeparator--
What distinguishes a saturated push from an unsaturated push?
--InteriorSeparator--
In a saturated push, the residual capacity r_ij becomes 0, while in an unsaturated push, the excess e_i becomes 0.
--InteriorSeparator--
Medium
--InteriorSeparator--
9
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of the `relabel(i)` operation in a preflow algorithm?
--InteriorSeparator--
To update the distance label d[i] to the minimum value that satisfies the distance function property.
--InteriorSeparator--
Easy
--InteriorSeparator--
9
--FlashCardSeparator--
Single
--InteriorSeparator--
What condition must be met for the `relabel(i)` operation to be called?
--InteriorSeparator--
There must be no admissible arcs in A(i).
--InteriorSeparator--
Medium
--InteriorSeparator--
10
--FlashCardSeparator--
Single
--InteriorSeparator--
What is an invariant of the preflow algorithm (general scheme)?
--InteriorSeparator--
"d is a distance function W.r.t. preflow x" is an invariant of the algorithm.
--InteriorSeparator--
Medium
--InteriorSeparator--
10
--FlashCardSeparator--
Single
--InteriorSeparator--
If node i is active in R, what does Lemma 2 state?
--InteriorSeparator--
There is an is A-path w.r.t. x.
--InteriorSeparator--
Hard
--InteriorSeparator--
12
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the possible properties of Ak = {ij: ij in E, x_ij != 0}?
--InteriorSeparator--
(right) the set of the arcs of a path from s to t
(right) the set of arcs of a path from s to an active node
(right) the set of arcs of a cycle
(wrong) empty set
--InteriorSeparator--
Medium
--InteriorSeparator--
12
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the upper bound for d(i) during the execution of the preflow algorithm?
--InteriorSeparator--
d(i) < 2n
--InteriorSeparator--
Hard
--InteriorSeparator--
14
--FlashCardSeparator--
Single
--InteriorSeparator--
How many times can a node be relabeled during the execution of the preflow algorithm?
--InteriorSeparator--
At most 2n - 1 times
--InteriorSeparator--
Hard
--InteriorSeparator--
15
--FlashCardSeparator--
Single
--InteriorSeparator--
How much does d(j) increase before flow can be sent back on arc i j after it becomes saturated?
--InteriorSeparator--
d(j) increases with 2.
--InteriorSeparator--
Hard
--InteriorSeparator--
15
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the Goldberg and Tarjan preflow algorithm?
--InteriorSeparator--
O(n^2m)
--InteriorSeparator--
Hard
--InteriorSeparator--
17
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the main idea behind the Ahuja-Orlin algorithm?
--InteriorSeparator--
It uses a scaling method to reduce the number of unsaturated pushes.
--InteriorSeparator--
Medium
--InteriorSeparator--
17
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What are the two conditions maintained during each stage 'p' of the Ahuja-Orlin algorithm?
--InteriorSeparator--
(right) At the beginning of stage p, e_i <= 2^p, for all i in V\{s,t}.
(right) During the stage p, the procedures push-relabel are used in order to eliminate the active nodes, i, with e_i in {2^(p-1) + 1, ..., 2^p}.
(wrong) At the beginning of stage p, e_i >= 2^p, for all i in V\{s,t}.
(wrong) During the stage p, the procedures push-relabel are used in order to eliminate the active nodes, i, with e_i in {2^(p-1) + 1, ..., infinity}.
--InteriorSeparator--
Hard
--InteriorSeparator--
18
--FlashCardSeparator--
Single
--InteriorSeparator--
What limits the flow sent from i to j by push(i) in Ahuja-Orlin algorithm?
--InteriorSeparator--
min(e_i, r_ij, A - e_j), where A = 2^(p+1)
--InteriorSeparator--
Hard
--InteriorSeparator--
19
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the purpose of constructing the list L(p) in each stage p of the Ahuja-Orlin algorithm?
--InteriorSeparator--
To efficiently select active nodes for push-relabel operations, sorted by distance.
--InteriorSeparator--
Medium
--InteriorSeparator--
19
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of the Ahuja-Orlin preflow algorithm?
--InteriorSeparator--
O(nm + n^2 log U)
--InteriorSeparator--
Hard
--InteriorSeparator--
24
--FlashCardSeparator--
Multiple
--InteriorSeparator--
How can maximum cardinality matching in a bipartite graph be found using network flows?
--InteriorSeparator--
(right) By constructing a flow network with unit capacities on edges from source to V1 and V2 to sink.
(wrong) By constructing a flow network with capacities of infinity on edges from source to V1 and V2 to sink.
(right) The maximum flow value equals the cardinality of the maximum matching.
(wrong) The minimum flow value equals the cardinality of the maximum matching.
--InteriorSeparator--
Medium
--InteriorSeparator--
25
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of finding a maximum cardinality matching in a bipartite graph using network flows?
--InteriorSeparator--
O(nm + n^2 log n)
--InteriorSeparator--
Medium
--InteriorSeparator--
27
--FlashCardSeparator--
Single
--InteriorSeparator--
How are digraphic degree sequences recognized using network flow?
--InteriorSeparator--
By constructing a bipartite flow network and checking if the maximum flow equals the sum of out-degrees (or in-degrees).
--InteriorSeparator--
Medium
--InteriorSeparator--
28
--FlashCardSeparator--
Multiple
--InteriorSeparator--
What is the time complexity for deciding digraphic degree sequences and digraph realization?
--InteriorSeparator--
(right) O(nm + n^2 log n)
(wrong) O(n + m)
(wrong) O(n log n)
(wrong) O(n^2)
--InteriorSeparator--
Medium
--InteriorSeparator--
30
--FlashCardSeparator--
Single
--InteriorSeparator--
How is edge connectivity number of a graph calculated?
--InteriorSeparator--
By finding the minimum number of edges that need to be removed to disconnect the graph, calculated by solving n-1 maximum flow problems
--InteriorSeparator--
Medium
--InteriorSeparator--
31
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity of calculating edge connectivity in a graph?
--InteriorSeparator--
O(n^2m)
--InteriorSeparator--
Hard
--InteriorSeparator--
34
--FlashCardSeparator--
Single
--InteriorSeparator--
How is the vertex connectivity number of a graph defined when G is not a complete graph?
--InteriorSeparator--
k(G) = min c(s,t), for all s,t in V(G) where s!=t, and s,t is not in E(G). Where c(s,t) is the min cardinality of a st-separating set of vertices in G.
--InteriorSeparator--
Medium
--InteriorSeparator--
35
--FlashCardSeparator--
Single
--InteriorSeparator--
What graph transformation is needed to find vertex connectivity via Max-Flow Min-Cut?
--InteriorSeparator--
Each vertex 'v' is split into two vertices 'av' and 'bv', with an edge of capacity 1 between them. Original edges 'vw' become edges 'bv' to 'aw' and 'bw' to 'av' with infinite capacity.
--InteriorSeparator--
Hard
--InteriorSeparator--
36
--FlashCardSeparator--
Single
--InteriorSeparator--
What is the time complexity for finding vertex connectivity using the method described?
--InteriorSeparator--
O(m(nm + n^2 log n))
--InteriorSeparator--
Hard
--InteriorSeparator--
40
}], role=model}, finishReason=STOP, avgLogprobs=-0.14541521389970802}]