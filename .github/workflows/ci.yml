name: Build and Test

permissions:
  contents: read
  checks: write
  id-token: write

on:
  push:
    branches: [ test-coverage ]
  pull_request:
    branches: [ test-coverage ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set environment variables
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/mydb" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=myuser" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=mypass" >> $GITHUB_ENV

      - name: Set up Docker Compose
        run: docker compose -f docker-compose.override.yml up -d --build

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Run Maven tests with coverage
        working-directory: ./backend
        run: mvn test jacoco:report

      - name: Publish Test Results (JUnit)
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: './backend/target/surefire-reports/TEST-*.xml'
          require_tests: true

      - name: Upload JaCoCo coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./backend/target/site/jacoco

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Extract JaCoCo Coverage
        if: success()
        run: |
         REPORT_FILE="./backend/target/site/jacoco/jacoco.xml"

         get_coverage_data() {
         TYPE=$1
         MISSED=$(xmllint --xpath "string(//counter[@type='$TYPE']/@missed)" "$REPORT_FILE")
         COVERED=$(xmllint --xpath "string(//counter[@type='$TYPE']/@covered)" "$REPORT_FILE")
         TOTAL=$((MISSED + COVERED))
         if [ "$TOTAL" -eq 0 ]; then
          echo 0
         else
          echo $((100 * COVERED / TOTAL))
         fi
         }

         LINE_COVERAGE=$(get_coverage_data "LINE")
         BRANCH_COVERAGE=$(get_coverage_data "BRANCH")
         METHOD_COVERAGE=$(get_coverage_data "METHOD") 

         echo "### âœ… Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
         echo "" >> $GITHUB_STEP_SUMMARY
         echo "| Metric           | Coverage     |" >> $GITHUB_STEP_SUMMARY
         echo "|------------------|--------------|" >> $GITHUB_STEP_SUMMARY
         echo "| Function (Method)| **${METHOD_COVERAGE}%** |" >> $GITHUB_STEP_SUMMARY
         echo "| Line             | **${LINE_COVERAGE}%**   |" >> $GITHUB_STEP_SUMMARY
         echo "| Branch           | **${BRANCH_COVERAGE}%** |" >> $GITHUB_STEP_SUMMARY


      - name: Stop Docker Compose
        if: always()
        run: docker compose -f docker-compose.override.yml down
